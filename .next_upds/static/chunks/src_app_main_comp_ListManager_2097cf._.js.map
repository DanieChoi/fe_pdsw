{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/app/main/comp/ListManager/SenderList.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\n// 공통 컴포넌트\r\nimport TitleWrap from \"@/components/shared/TitleWrap\";\r\n// 데이터그리드\r\nimport DataGrid, { Column, CellClickArgs } from \"react-data-grid\";\r\n\r\ninterface SendRow {\r\n  id: string;    \r\n  fileId: number;\r\n  CSKE: string;\r\n  CSK2: string;\r\n  CSK3: string;\r\n  CSNA: string;\r\n  TNO1: string;\r\n  TNO2: string;\r\n  TNO3: string;\r\n  TNO4: string;\r\n  TNO5: string;\r\n  CSC1: string;\r\n  CSC2: string;\r\n  CSC3: string;\r\n  CSC4: string;\r\n  CSC5: string;\r\n  CSC6: string;\r\n  EMPLOYEEID: string;\r\n  TKDA: string;\r\n}\r\n\r\nconst HeaderColumn : Column<SendRow>[] = [\r\n  { key: 'CSKE', name: '고객키(1)'},\r\n  { key: 'CSK2', name: '고객키(2)'},\r\n  { key: 'CSK3', name: '고객키(3)'},\r\n  { key: 'CSNA', name: '고객이름'},\r\n  { key: 'TNO1', name: '고객 전화번호(1)'},\r\n  { key: 'TNO2', name: '고객 전화번호(2)'},\r\n  { key: 'TNO3', name: '고객 전화번호(3)'},\r\n  { key: 'TNO4', name: '고객 전화번호(4)'},\r\n  { key: 'TNO5', name: '고객 전화번호(5)'},\r\n  { key: 'CSC1', name: '고객성향[1]'},\r\n  { key: 'CSC2', name: '고객성향[2]'},\r\n  { key: 'CSC3', name: '고객성향[3]'},\r\n  { key: 'CSC4', name: '고객성향[4]'},\r\n  { key: 'CSC5', name: '고객성향[5]'},\r\n  { key: 'CSC6', name: '고객성향[6]'},\r\n  { key: 'EMPLOYEEID', name: '상담사 아이디'},\r\n  { key: 'TKDA', name: '토큰데이터'},\r\n];\r\n\r\ninterface DataProps {\r\n  no: number;\r\n  division: number;\r\n  startTime: string;\r\n  endTime: string;\r\n}\r\n\r\ninterface SenderListProps {\r\n  headerData: Column<SendRow>[];\r\n  _sendList: SendRow[];\r\n}\r\n\r\nconst SenderList: React.FC<SenderListProps> = ({ headerData, _sendList }) => {\r\n  \r\n  // 그리드 선택 상태\r\n  const [selectedSendRow, setSelectedSendRow] = useState<SendRow | null>(null);\r\n\r\n  // 목록 데이터 상태\r\n  const [sendList, setSendList] = useState<SendRow[]>([]);\r\n\r\n  const [sendColumns, setSendColumns] = useState<Column<SendRow>[]>(HeaderColumn);\r\n  \r\n  // 행 클릭 핸들러\r\n  const handleSendRowClick = ({ row }: CellClickArgs<SendRow>) => {\r\n    setSelectedSendRow(row);\r\n  };\r\n\r\n  const getSendRowClass = (row: SendRow) => {\r\n    return selectedSendRow?.id === row.id ? 'bg-[#FFFAEE]' : '';\r\n  };\r\n  \r\n  useEffect(() => {\r\n    if( headerData.length > 0 ) {     \r\n      // setSendColumns(headerData);   \r\n    }\r\n    setSendList(_sendList);\r\n  }, [headerData, _sendList]);\r\n  \r\n  return (\r\n        <div className=\"w-1/2\">\r\n          <TitleWrap\r\n            title=\"발신 목록\"\r\n            totalCount={sendList.length}\r\n          />\r\n          <div className=\"h-[300px] grid-custom-wrap\">\r\n            <DataGrid<SendRow>\r\n              columns={sendColumns}\r\n              rows={sendList}\r\n              className=\"grid-custom cursor-pointer\"\r\n              rowHeight={30}\r\n              headerRowHeight={30}\r\n              rowKeyGetter={(row) => row.id}\r\n              rowClass={getSendRowClass}\r\n              onCellClick={handleSendRowClick}\r\n              selectedRows={selectedSendRow ? new Set([selectedSendRow.id]) : new Set()}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n  );\r\n};\r\n\r\nexport default SenderList;"],"names":[],"mappings":";;;;AAAA;AAEA,UAAU;AACV;AACA,SAAS;AACT;;;;;;AAwBA,MAAM,eAAmC;IACvC;QAAE,KAAK;QAAQ,MAAM;IAAQ;IAC7B;QAAE,KAAK;QAAQ,MAAM;IAAQ;IAC7B;QAAE,KAAK;QAAQ,MAAM;IAAQ;IAC7B;QAAE,KAAK;QAAQ,MAAM;IAAM;IAC3B;QAAE,KAAK;QAAQ,MAAM;IAAY;IACjC;QAAE,KAAK;QAAQ,MAAM;IAAY;IACjC;QAAE,KAAK;QAAQ,MAAM;IAAY;IACjC;QAAE,KAAK;QAAQ,MAAM;IAAY;IACjC;QAAE,KAAK;QAAQ,MAAM;IAAY;IACjC;QAAE,KAAK;QAAQ,MAAM;IAAS;IAC9B;QAAE,KAAK;QAAQ,MAAM;IAAS;IAC9B;QAAE,KAAK;QAAQ,MAAM;IAAS;IAC9B;QAAE,KAAK;QAAQ,MAAM;IAAS;IAC9B;QAAE,KAAK;QAAQ,MAAM;IAAS;IAC9B;QAAE,KAAK;QAAQ,MAAM;IAAS;IAC9B;QAAE,KAAK;QAAc,MAAM;IAAS;IACpC;QAAE,KAAK;QAAQ,MAAM;IAAO;CAC7B;AAcD,MAAM,aAAwC,CAAC,EAAE,UAAU,EAAE,SAAS,EAAE;;IAEtE,YAAY;IACZ,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB;IAEvE,YAAY;IACZ,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IAEtD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAqB;IAElE,WAAW;IACX,MAAM,qBAAqB,CAAC,EAAE,GAAG,EAA0B;QACzD,mBAAmB;IACrB;IAEA,MAAM,kBAAkB,CAAC;QACvB,OAAO,iBAAiB,OAAO,IAAI,EAAE,GAAG,iBAAiB;IAC3D;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR,IAAI,WAAW,MAAM,GAAG,GAAI;YAC1B,iCAAiC;YACnC;YACA,YAAY;QACd;+BAAG;QAAC;QAAY;KAAU;IAE1B,qBACM,6LAAC;QAAI,WAAU;;0BACb,6LAAC,qJAAA,CAAA,UAAS;gBACR,OAAM;gBACN,YAAY,SAAS,MAAM;;;;;;0BAE7B,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,yJAAA,CAAA,UAAQ;oBACP,SAAS;oBACT,MAAM;oBACN,WAAU;oBACV,WAAW;oBACX,iBAAiB;oBACjB,cAAc,CAAC,MAAQ,IAAI,EAAE;oBAC7B,UAAU;oBACV,aAAa;oBACb,cAAc,kBAAkB,IAAI,IAAI;wBAAC,gBAAgB,EAAE;qBAAC,IAAI,IAAI;;;;;;;;;;;;;;;;;AAMlF;GAhDM;KAAA;uCAkDS"}},
    {"offset": {"line": 166, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/app/main/comp/ListManager/FileFormat.tsx"],"sourcesContent":["import React, { useState, useMemo } from 'react';\r\nimport { Tabs, TabsList, TabsTrigger, TabsContent } from \"@/components/ui/tabs\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { CustomCheckbox } from \"@/components/shared/CustomCheckbox\";\r\nimport CustomAlert, { CustomAlertRequest } from \"@/components/shared/layout/CustomAlert\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/shared/CustomSelect\";\r\n\r\ninterface FormatItem {\r\n  id: string;\r\n  name: string;\r\n  field: string;\r\n}\r\n\r\nexport interface FormatRow {\r\n  id?: string;\r\n  name: string;\r\n  start: number;\r\n  length: number;\r\n  field: string;\r\n}\r\n\r\nconst initData: FormatRow[] = [{\r\n  id: '1',\r\n  name: '고객키(1)',\r\n  start: 1,\r\n  length: 10,\r\n  field: 'CSKE'\r\n}]\r\n\r\nconst delimiterList: { id: string; name: string; }[] = [\r\n  {id:',',name:','}\r\n  ,{id:';',name:';'}\r\n  ,{id:'!',name:'!'}\r\n  ,{id:'\\\\',name:'\\\\'}\r\n  ,{id:'@',name:'@'}\r\n];\r\n\r\nexport interface FormatRowData {\r\n  delimiter: string;\r\n  originDataSaveYn: boolean;\r\n  datalist: FormatRow[];\r\n}\r\n\r\nconst errorMessage: CustomAlertRequest = {\r\n  isOpen: false,\r\n  message: '',\r\n  title: '캠페인',\r\n  type: '1',\r\n  onClose: () => {},\r\n  onCancle: () => {},\r\n};\r\n\r\ninterface FileFormatProps {\r\n  isOpen: boolean;\r\n  onConfirm: (data: FormatRowData) => void;\r\n  onClose: () => void;\r\n}\r\n\r\nconst FileFormat: React.FC<FileFormatProps> = ({ isOpen,onConfirm, onClose }) => {\r\n  const [delimiter, setDelimiter] = useState<string>(',');\r\n  const [originaldataYn, setOriginaldataYn] = useState<boolean>(true);\r\n  const [tabValue, setTabValue] = useState(\"format-field\");\r\n  const [alertState, setAlertState] = useState<CustomAlertRequest>(errorMessage);\r\n\r\n  //필드항목\r\n  const [formatRows, setFormatRows] = useState<FormatRow[]>(initData);\r\n\r\n   // 선택된 행의 인덱스를 추적하는 상태 추가\r\n   const [selectedRowIndex, setSelectedRowIndex] = useState<number | null>(null);\r\n\r\n   //탭변경함수.\r\n   const handleTabChange = (value:string) => {\r\n    setTabValue(value);\r\n  };\r\n\r\n   // 행 선택 핸들러\r\n   const handleRowSelect = (index: number) => {\r\n     setSelectedRowIndex(index);\r\n   };\r\n   // 그리드 행 삭제 keyUp 이벤트.\r\n   const handleKeyUp = (e:any, index: number) => {\r\n    if( e.key === 'Delete'){\r\n      const newRows = [...formatRows];\r\n      if( newRows[index].id === '1' ){\r\n        setAlertState({\r\n          ...errorMessage,\r\n          isOpen: true,\r\n          message: \"고객키[1]은 필수 항목입니다. 다시 확인하시고 설정해 주세요.\",\r\n          type: '2',\r\n          onClose: () => setAlertState((prev) => ({ ...prev, isOpen: false }))\r\n        });\r\n      }else{\r\n        newRows.splice(index, 1);\r\n        const cnt = newRows.length;\r\n        for( let i=0;i<cnt;i++){\r\n          if (i === 0) {\r\n            newRows[i]['start'] = 1;\r\n          } else {\r\n            newRows[i]['start'] = newRows[i - 1]['start'] + newRows[i - 1]['length'];\r\n          }\r\n        }\r\n        setFormatRows(newRows);\r\n      }\r\n    }\r\n   };\r\n\r\n  // 그리드 길이 항목 수정 이벤트.\r\n  const handleEditChange = (event: any, rowIndex: number, column: string) => {\r\n    const newRows = [...formatRows];\r\n    let tempLength = Number(event.target.value);\r\n    let _message = '';\r\n    if( newRows[rowIndex].field === 'CSKE' &&  tempLength > 30 ){\r\n      _message = '고객키[1] 사이즈는 최대 30byte 입니다.';\r\n      tempLength = 30;\r\n    }else if( newRows[rowIndex].field === 'CSK2' &&  tempLength > 30 ){\r\n      _message = '고객키[2] 사이즈는 최대 30byte 입니다.';\r\n      tempLength = 30;\r\n    }else if( newRows[rowIndex].field === 'CSK3' &&  tempLength > 30 ){\r\n      _message = '고객키[3] 사이즈는 최대 30byte 입니다.';\r\n      tempLength = 30;\r\n    }else if( newRows[rowIndex].field === 'CSNA' &&  tempLength > 50 ){\r\n      _message = '고객이름 사이즈는 최대 50byte 입니다.';\r\n      tempLength = 50;\r\n    }else if( newRows[rowIndex].field === 'TNO1' &&  tempLength > 20 ){\r\n      _message = '고객 전화번호[1] 사이즈는 최대 20byte 입니다.';\r\n      tempLength = 20;\r\n    }else if( newRows[rowIndex].field === 'TNO2' &&  tempLength > 20 ){\r\n      _message = '고객 전화번호[2] 사이즈는 최대 20byte 입니다.';\r\n      tempLength = 20;\r\n    }else if( newRows[rowIndex].field === 'TNO3' &&  tempLength > 20 ){\r\n      _message = '고객 전화번호[3] 사이즈는 최대 20byte 입니다.';\r\n      tempLength = 20;\r\n    }else if( newRows[rowIndex].field === 'TNO4' &&  tempLength > 20 ){\r\n      _message = '고객 전화번호[4] 사이즈는 최대 20byte 입니다.';\r\n      tempLength = 20;\r\n    }else if( newRows[rowIndex].field === 'TNO5' &&  tempLength > 20 ){\r\n      _message = '고객 전화번호[5] 사이즈는 최대 20byte 입니다.';\r\n      tempLength = 20;\r\n    }else if( newRows[rowIndex].field === 'CSC1' &&  tempLength > 20 ){\r\n      _message = '고객 성향[1] 사이즈는 최대 20byte 입니다.';\r\n      tempLength = 20;\r\n    }else if( newRows[rowIndex].field === 'CSC2' &&  tempLength > 20 ){\r\n      _message = '고객 성향[2] 사이즈는 최대 20byte 입니다.';\r\n      tempLength = 20;\r\n    }else if( newRows[rowIndex].field === 'CSC3' &&  tempLength > 20 ){\r\n      _message = '고객 성향[3] 사이즈는 최대 20byte 입니다.';\r\n      tempLength = 20;\r\n    }else if( newRows[rowIndex].field === 'CSC4' &&  tempLength > 20 ){\r\n      _message = '고객 성향[4] 사이즈는 최대 20byte 입니다.';\r\n      tempLength = 20;\r\n    }else if( newRows[rowIndex].field === 'CSC5' &&  tempLength > 20 ){\r\n      _message = '고객 성향[5] 사이즈는 최대 20byte 입니다.';\r\n      tempLength = 20;\r\n    }else if( newRows[rowIndex].field === 'EMPLOYEEID' &&  tempLength > 10 ){\r\n      _message = '상담사 ID 사이즈는 최대 20byte 입니다.';\r\n      tempLength = 10;\r\n    }else if( newRows[rowIndex].field === 'TKDA' &&  tempLength > 1024 ){\r\n      _message = '토큰데이터 사이즈는 최대 1024byte 입니다.';\r\n      tempLength = 1024;\r\n    }\r\n    if( _message !== ''){\r\n      setAlertState({\r\n        ...errorMessage,\r\n        isOpen: true,\r\n        message: _message,\r\n        type: '2',\r\n        onClose: () => setAlertState((prev) => ({ ...prev, isOpen: false }))\r\n      });\r\n    }\r\n    (newRows[rowIndex] as any)[column] = tempLength;\r\n    if( rowIndex < newRows.length-1){\r\n      for( let i=rowIndex;i<newRows.length-1;i++){\r\n        (newRows[i+1] as any)['start'] = newRows[i]['start'] + newRows[i]['length'];\r\n      }\r\n    }\r\n    setFormatRows(newRows);\r\n  };\r\n\r\n\r\n   // 위로 이동 핸들러\r\n  const handleMoveUp = () => {\r\n    if (selectedRowIndex === null || selectedRowIndex <= 0) return;\r\n\r\n    const newRows = [...formatRows];\r\n    // 선택된 행과 그 위의 행을 교환\r\n    [newRows[selectedRowIndex], newRows[selectedRowIndex - 1]] = \r\n    [newRows[selectedRowIndex - 1], newRows[selectedRowIndex]];\r\n\r\n    newRows[selectedRowIndex - 1]['start'] = newRows[selectedRowIndex]['start'];\r\n    newRows[selectedRowIndex]['start'] = newRows[selectedRowIndex - 1]['start'] + newRows[selectedRowIndex - 1]['length'];\r\n\r\n    // 선택된 행 인덱스도 함께 이동\r\n    setFormatRows(newRows);\r\n    setSelectedRowIndex(selectedRowIndex - 1);\r\n  };\r\n\r\n  // 아래로 이동 핸들러\r\n  const handleMoveDown = () => {\r\n    if (selectedRowIndex === null || selectedRowIndex >= formatRows.length - 1) return;\r\n\r\n    const newRows = [...formatRows];\r\n    // 선택된 행과 그 아래 행을 교환\r\n    [newRows[selectedRowIndex], newRows[selectedRowIndex + 1]] = \r\n    [newRows[selectedRowIndex + 1], newRows[selectedRowIndex]];\r\n\r\n    newRows[selectedRowIndex]['start'] = newRows[selectedRowIndex+1]['start']\r\n    newRows[selectedRowIndex+1]['start'] = newRows[selectedRowIndex]['start'] + newRows[selectedRowIndex]['length']\r\n\r\n    // 선택된 행 인덱스도 함께 이동\r\n    setFormatRows(newRows);\r\n    setSelectedRowIndex(selectedRowIndex + 1);\r\n  };\r\n\r\n\r\n  const leftItems = useMemo(() => [\r\n    { id: '1', name: '고객키(1)', field: 'CSKE' },\r\n    { id: '2', name: '고객키(2)', field: 'CSK2' },\r\n    { id: '3', name: '고객키(3)', field: 'CSK3' },\r\n    { id: '4', name: '고객이름', field: 'CSNA' },\r\n    { id: '5', name: '고객 전화번호(1)', field: 'TNO1' },\r\n    { id: '6', name: '고객 전화번호(2)', field: 'TNO2' },\r\n    { id: '7', name: '고객 전화번호(3)', field: 'TNO3' },\r\n    { id: '8', name: '고객 전화번호(4)', field: 'TNO4' },\r\n    { id: '9', name: '고객 전화번호(5)', field: 'TNO5' },\r\n  ], []);\r\n\r\n  const rightItems = useMemo(() => [\r\n    { id: '10', name: '고객성향[1]', field: 'CSC1' },\r\n    { id: '11', name: '고객성향[2]', field: 'CSC2' },\r\n    { id: '12', name: '고객성향[3]', field: 'CSC3' },\r\n    { id: '13', name: '고객성향[4]', field: 'CSC4' },\r\n    { id: '14', name: '고객성향[5]', field: 'CSC5' },\r\n    { id: '15', name: '고객성향[6]', field: 'CSC6' },\r\n    { id: '16', name: '상담사 아이디', field: 'EMPLOYEEID' },\r\n    { id: '17', name: '토큰데이터', field: 'TKDA' },\r\n  ], []);\r\n\r\n  // 더블 클릭 핸들러 추가\r\n  const handleItemDoubleClick = (item: FormatItem) => {\r\n    // 이미 추가된 항목인지 확인\r\n    const isAlreadyAdded = formatRows.some(row => row.name === item.name);\r\n    \r\n    if (!isAlreadyAdded) {\r\n      const newRow: FormatRow = {\r\n        id: item.id,\r\n        name: item.name,\r\n        start: formatRows.length > 0 \r\n          ? formatRows[formatRows.length - 1].start + formatRows[formatRows.length - 1].length \r\n          : 1,\r\n        length: 10, // 기본 길이, 필요에 따라 조정 가능\r\n        field: item.field, // 필드 값은 비워둠\r\n      };\r\n\r\n      setFormatRows([...formatRows, newRow]);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  // 필드항목 구분자\r\n  const [positionRows, setPositionRows] = useState<FormatRow[]>(initData);\r\n  const [selectedPositionRowIndex, setSelectedPositionRowIndex] = useState<number | null>(null);\r\n\r\n\r\n  const positionLeftItems = useMemo(() => [\r\n    { id: '1', name: '고객키(1)', field: 'CSKE' },\r\n    { id: '2', name: '고객키(2)', field: 'CSK2' },\r\n    { id: '3', name: '고객키(3)', field: 'CSK3' },\r\n    { id: '4', name: '고객이름', field: 'CSNA' },\r\n    { id: '5', name: '고객 전화번호(1)', field: 'TNO1' },\r\n    { id: '6', name: '고객 전화번호(2)', field: 'TNO2' },\r\n    { id: '7', name: '고객 전화번호(3)', field: 'TNO3' },\r\n    { id: '8', name: '고객 전화번호(4)', field: 'TNO4' },\r\n    { id: '9', name: '고객 전화번호(5)', field: 'TNO5' },\r\n  ], []);\r\n\r\n  const positionRightItems = useMemo(() => [\r\n    { id: '10', name: '고객성향[1]', field: 'CSC1' },\r\n    { id: '11', name: '고객성향[2]', field: 'CSC2' },\r\n    { id: '12', name: '고객성향[3]', field: 'CSC3' },\r\n    { id: '13', name: '고객성향[4]', field: 'CSC4' },\r\n    { id: '14', name: '고객성향[5]', field: 'CSC5' },\r\n    { id: '15', name: '고객성향[6]', field: 'CSC6' },\r\n    { id: '16', name: '상담사 아이디', field: 'EMPLOYEEID' },\r\n    { id: '17', name: '토큰데이터', field: 'TKDA' },\r\n  ], []);\r\n\r\n  const handlePositionItemDoubleClick = (item: FormatItem) => {\r\n    const isAlreadyAdded = positionRows.some(row => row.name === item.name);\r\n    \r\n    if (!isAlreadyAdded) {\r\n      const newRow: FormatRow = {\r\n        id: item.id,\r\n        name: item.name,\r\n        start: positionRows.length + 1,\r\n        length: 1,\r\n        field: item.field, \r\n      };\r\n  \r\n      setPositionRows([...positionRows, newRow]);\r\n    }\r\n  };\r\n\r\n  const handlePositionRowSelect = (index: number) => {\r\n    setSelectedPositionRowIndex(index);\r\n  };\r\n  \r\n  const handlePositionMoveUp = () => {\r\n    if (selectedPositionRowIndex === null || selectedPositionRowIndex <= 0) return;\r\n  \r\n    const newRows = [...positionRows];\r\n    [newRows[selectedPositionRowIndex], newRows[selectedPositionRowIndex - 1]] = \r\n    [newRows[selectedPositionRowIndex - 1], newRows[selectedPositionRowIndex]];\r\n  \r\n    setPositionRows(newRows);\r\n    setSelectedPositionRowIndex(selectedPositionRowIndex - 1);\r\n  };\r\n  \r\n  const handlePositionMoveDown = () => {\r\n    if (selectedPositionRowIndex === null || selectedPositionRowIndex >= positionRows.length - 1) return;\r\n  \r\n    const newRows = [...positionRows];\r\n    [newRows[selectedPositionRowIndex], newRows[selectedPositionRowIndex + 1]] = \r\n    [newRows[selectedPositionRowIndex + 1], newRows[selectedPositionRowIndex]];\r\n  \r\n    setPositionRows(newRows);\r\n    setSelectedPositionRowIndex(selectedPositionRowIndex + 1);\r\n  };\r\n\r\n   // 그리드 행 삭제 keyUp 이벤트.\r\n  const handlePositionKeyUp = (e:any, index: number) => {\r\n    if( e.key === 'Delete'){\r\n      const newRows = [...positionRows];\r\n      if( newRows[index].id === '1' ){\r\n        setAlertState({\r\n          ...errorMessage,\r\n          isOpen: true,\r\n          message: \"고객키[1]은 필수 항목입니다. 다시 확인하시고 설정해 주세요.\",\r\n          type: '2',\r\n          onClose: () => setAlertState((prev) => ({ ...prev, isOpen: false }))\r\n        });\r\n      }else{\r\n        newRows.splice(index, 1);\r\n        const cnt = newRows.length;\r\n        for( let i=0;i<cnt;i++){\r\n          if (i === 0) {\r\n            newRows[i]['start'] = 1;\r\n          } else {\r\n            newRows[i]['start'] = newRows[i - 1]['start'] + newRows[i - 1]['length'];\r\n          }\r\n        }\r\n        setPositionRows(newRows);\r\n      }\r\n    }\r\n   };\r\n\r\n\r\n\r\n\r\n\r\n  const handleConfirm = () => {\r\n    // 상태 초기화\r\n    // setFormatRows([]);\r\n    setSelectedRowIndex(null);\r\n    setSelectedPositionRowIndex(null);\r\n    const data: FormatRowData = {\r\n      delimiter: '',\r\n      originDataSaveYn:originaldataYn,\r\n      datalist: []\r\n    };\r\n    let check = true;\r\n    if (tabValue === 'format-field') {\r\n      if( formatRows.length > 0 && formatRows.filter((temp) => temp.id === '1').length > 0 ){\r\n        data.datalist = formatRows;\r\n      }else{\r\n        check = false;\r\n        setAlertState({\r\n          ...errorMessage,\r\n          isOpen: true,\r\n          message: \"고객키[1]은 필수 항목입니다. 다시 확인하시고 설정해 주세요.\",\r\n          type: '2',\r\n          onClose: () => setAlertState((prev) => ({ ...prev, isOpen: false }))\r\n        });\r\n      }\r\n    } else {\r\n      if( positionRows.length > 0 && positionRows.filter((temp) => temp.id === '1').length > 0 ){\r\n        data.datalist = positionRows;\r\n      }else{\r\n        check = false;\r\n        setAlertState({\r\n          ...errorMessage,\r\n          isOpen: true,\r\n          message: \"고객키[1]은 필수 항목입니다. 다시 확인하시고 설정해 주세요.\",\r\n          type: '2',\r\n          onClose: () => setAlertState((prev) => ({ ...prev, isOpen: false }))\r\n        });\r\n      }\r\n      data.delimiter = delimiter;\r\n    }\r\n    if( check ){\r\n      onConfirm(data);\r\n    }\r\n  };\r\n\r\n  const handleCancle = () => {\r\n    // 상태 초기화\r\n    // setFormatRows([]);\r\n    setSelectedRowIndex(null);\r\n    setSelectedPositionRowIndex(null);\r\n    onClose();\r\n  };\r\n \r\n  const modalContent = (\r\n    <div className=\"w-full\">\r\n      {/* <div className=\"flex items-center gap-2 mb-1\">\r\n        <CustomCheckbox\r\n          id=\"originaldata\" checked={originaldataYn} onCheckedChange={(checked) => setOriginaldataYn(checked === true)}\r\n        />\r\n        <Label htmlFor=\"originaldata\" className=\"text-sm\">\r\n          원본 데이터를 서버전송 후 삭제합니다.\r\n        </Label>\r\n      </div> */}\r\n\r\n      <div className=\"mb-4\">\r\n        <p className=\"text-sm\">* 블랙리스트의 경우 고객키[1], 고객이름 항목만 사용 합니다.</p>\r\n        <p className=\"text-sm\">* 필드 항목은 키보드 Delete 키로 삭제가 가능합니다.</p>\r\n      </div>\r\n\r\n      <Tabs  value={tabValue} onValueChange={handleTabChange}>\r\n        <div className=\"tab-custom-wrap\">\r\n          <TabsList>\r\n            <TabsTrigger value=\"format-field\">필드항목 길이로 구분</TabsTrigger>\r\n            <TabsTrigger value=\"format-position\">필드항목 구분자로 구분</TabsTrigger>\r\n          </TabsList>\r\n        </div>\r\n        <TabsContent value=\"format-field\" className=\"mt-3\">\r\n          <div className='mb-2'>원하는 항목을 더블 클릭 하세요</div>\r\n          <div className=\"flex gap-4\">\r\n            <div className=\"w-1/2\">\r\n              <div className=\"border p-2 rounded h-40 overflow-y-auto\">\r\n                {leftItems.map(item => (\r\n                  <div \r\n                    key={item.id} \r\n                    className={`py-1 px-2 hover:bg-[#FFFAEE] cursor-pointer ${\r\n                      formatRows.some(row => row.name === item.name) \r\n                        ? 'text-gray-300 hover:bg-transparent cursor-not-allowed' \r\n                        : ''\r\n                    }`}\r\n                    onDoubleClick={() => handleItemDoubleClick(item)}\r\n                  >\r\n                    {item.name}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"w-1/2\">\r\n              <div className=\"border p-2 rounded h-40 overflow-y-auto\">\r\n                {rightItems.map(item => (\r\n                  <div \r\n                    key={item.id} \r\n                    className={`py-1 px-2 hover:bg-[#FFFAEE] cursor-pointer ${\r\n                      formatRows.some(row => row.name === item.name) \r\n                        ? 'text-gray-300 hover:bg-transparent cursor-not-allowed' \r\n                        : ''\r\n                    }`}\r\n                    onDoubleClick={() => handleItemDoubleClick(item)}\r\n                  >\r\n                    {item.name}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex gap-5 mt-5\">\r\n              <div className=\"border rounded h-[200px] overflow-y-auto w-full\">\r\n                <table className=\"w-full text-sm border-collapse\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"border-r border-b p-1 font-normal text-sm bg-[#F8F8F8]\">순서</th>\r\n                      <th className=\"border-r border-b p-1 font-normal text-sm bg-[#F8F8F8]\">항목</th>\r\n                      <th className=\"border-r border-b p-1 font-normal text-sm bg-[#F8F8F8]\">시작</th>\r\n                      <th className=\"border-r border-b p-1 font-normal text-sm bg-[#F8F8F8]\">길이</th>\r\n                      <th className=\"border-b p-1 font-normal text-sm bg-[#F8F8F8]\">필드</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                      {formatRows.map((row, index) => (\r\n                        <tr \r\n                          key={row.id || index}\r\n                          onClick={() => handleRowSelect(index)}\r\n                          className={`cursor-pointer ${\r\n                            selectedRowIndex === index ? 'bg-[#FFFAEE]' : ''\r\n                          }`}\r\n                          onKeyUp={(e) => handleKeyUp(e,index)}\r\n                          tabIndex={0}\r\n                        >\r\n                        <td className=\"border-b border-r p-1 text-center h-[26px]\">                          \r\n                          <input\r\n                            type=\"number\"\r\n                            value={index + 1}\r\n                            className=\"w-full p-1 text-center\"\r\n                            readOnly\r\n                          />\r\n                        </td>\r\n                        <td className=\"border-b border-r p-1 text-center h-[26px]\">              \r\n                          <input\r\n                            type=\"text\"\r\n                            value={row.name}  \r\n                            className=\"w-full p-1 text-center\"\r\n                            readOnly\r\n                          />\r\n                        </td>\r\n                        <td className=\"border-b border-r p-1 text-center h-[26px]\">                                 \r\n                          <input\r\n                            type=\"text\"\r\n                            value={row.start}  \r\n                            className=\"w-full p-1 text-center\"\r\n                            readOnly\r\n                          />\r\n                        </td>\r\n                        <td className=\"border-b border-r p-1 text-center h-[26px]\">\r\n                          <input\r\n                            type=\"number\"\r\n                            value={row.length}\r\n                            onChange={(e) => handleEditChange(e, index, 'length')}\r\n                            className=\"w-full p-1 text-center\"\r\n                          />\r\n                        </td>\r\n                        <td className=\"border-b p-1 text-center h-[26px]\">                                                      \r\n                          <input\r\n                            type=\"text\"\r\n                            value={row.field}  \r\n                            className=\"w-full p-1 text-center\"\r\n                            readOnly\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <div className=\"flex flex-col items-center gap-2 min-w-[22px] justify-center\">\r\n                    <button\r\n                      className=\"w-[22px] h-[22px] bg-[#60C3CD] text-white rounded-full flex items-center justify-center disabled:opacity-50\"\r\n                      onClick={handleMoveUp}\r\n                      disabled={selectedRowIndex === null || selectedRowIndex <= 0}\r\n                    >\r\n                    ↑\r\n                  </button>\r\n                  <button\r\n                      className=\"w-[22px] h-[22px] bg-[#60C3CD] text-white rounded-full flex items-center justify-center disabled:opacity-50\"\r\n                      onClick={handleMoveDown}\r\n                      disabled={selectedRowIndex === null || selectedRowIndex >= formatRows.length - 1}\r\n                    >\r\n                    ↓\r\n                  </button>\r\n                </div>\r\n          </div>\r\n        </TabsContent>\r\n\r\n        <TabsContent value=\"format-position\" className=\"mt-3\">\r\n          <div className='mb-2'>원하는 구분자를 더블 클릭 하세요</div>\r\n          <div className=\"flex gap-4\">\r\n            <div className=\"w-1/2\">\r\n              <div className=\"border p-2 rounded h-40 overflow-y-auto\">\r\n                {positionLeftItems.map(item => (\r\n                  <div \r\n                    key={item.id} \r\n                    className={`py-1 px-2 hover:bg-[#FFFAEE] cursor-pointer ${\r\n                      positionRows.some(row => row.name === item.name) \r\n                        ? 'text-gray-300 hover:bg-transparent cursor-not-allowed' \r\n                        : ''\r\n                    }`}\r\n                    onDoubleClick={() => handlePositionItemDoubleClick(item)}\r\n                  >\r\n                    {item.name}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"w-1/2\">\r\n              <div className=\"border p-2 rounded h-40 overflow-y-auto\">\r\n                {positionRightItems.map(item => (\r\n                  <div \r\n                    key={item.id} \r\n                    className={`py-1 px-2 hover:bg-[#FFFAEE] cursor-pointer ${\r\n                      positionRows.some(row => row.name === item.name) \r\n                        ? 'text-gray-300 hover:bg-transparent cursor-not-allowed' \r\n                        : ''\r\n                    }`}\r\n                    onDoubleClick={() => handlePositionItemDoubleClick(item)}\r\n                  >\r\n                    {item.name}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex gap-5 mt-5\">\r\n            <div className=\"border rounded h-[190px] overflow-y-auto w-full\">\r\n              <table className=\"w-full text-sm border-collapse\">\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"border-r border-b p-1 font-normal text-sm bg-[#F8F8F8]\">순서</th>\r\n                    <th className=\"border-r border-b p-1 font-normal text-sm bg-[#F8F8F8]\">항목</th>\r\n                    <th className=\"border-b p-1 font-normal text-sm bg-[#F8F8F8]\">필드</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {positionRows.map((row, index) => (\r\n                    <tr \r\n                      key={row.id || index}\r\n                      onClick={() => handlePositionRowSelect(index)}\r\n                      className={`cursor-pointer ${\r\n                        selectedPositionRowIndex === index ? 'bg-[#FFFAEE]' : ''\r\n                      }`}\r\n                      onKeyUp={(e) => handlePositionKeyUp(e, index)}\r\n                    >\r\n                      <td className=\"border-b border-r p-1 text-center h-[26px]\">\r\n                               \r\n                        <input\r\n                          type=\"text\"\r\n                          value={index + 1}\r\n                          className=\"w-full p-1 text-center\"\r\n                          readOnly\r\n                        />\r\n                      </td>\r\n                      <td className=\"border-b border-r p-1 text-center h-[26px]\">\r\n                        <input\r\n                          type=\"text\"\r\n                          value={row.name}  \r\n                          className=\"w-full p-1 text-center\"\r\n                          readOnly\r\n                        />\r\n                      </td>\r\n                      <td className=\"border-b p-1 text-center h-[26px]\">\r\n                        <input\r\n                          type=\"text\"\r\n                          value={row.field}  \r\n                          className=\"w-full p-1 text-center\"\r\n                          readOnly\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div className=\"flex flex-col items-center gap-2 min-w-[50px] justify-center\">\r\n              <button\r\n                className=\"w-[22px] h-[22px] bg-[#60C3CD] text-white rounded-full flex items-center justify-center disabled:opacity-50\"\r\n                onClick={handlePositionMoveUp}\r\n                disabled={selectedPositionRowIndex === null || selectedPositionRowIndex <= 0}\r\n              >\r\n                ↑\r\n              </button>\r\n              <button\r\n                className=\"w-[22px] h-[22px] bg-[#60C3CD] text-white rounded-full flex items-center justify-center disabled:opacity-50\"\r\n                onClick={handlePositionMoveDown}\r\n                disabled={selectedPositionRowIndex === null || selectedPositionRowIndex >= positionRows.length - 1}\r\n              >\r\n                ↓\r\n              </button>\r\n              <div>\r\n                구분자\r\n              </div>\r\n              <div>\r\n                <Select\r\n                  onValueChange={(value) => setDelimiter(value)}\r\n                  value={delimiter}\r\n                >\r\n                  <SelectTrigger className=\"w-full\">\r\n                    <SelectValue placeholder=\" \" />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    {delimiterList.map(option => (\r\n                      <SelectItem key={option.id} value={option.id.toString()}>\r\n                        {option.name}\r\n                      </SelectItem>\r\n                    ))}\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </TabsContent>\r\n      </Tabs>\r\n      <CustomAlert\r\n        message={alertState.message}\r\n        title={alertState.title}\r\n        type={alertState.type}\r\n        isOpen={alertState.isOpen}\r\n        onClose={() => {\r\n          alertState.onClose()\r\n        }}/>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <CustomAlert\r\n      isOpen={isOpen}\r\n      title=\"파일포맷설정\"\r\n      message={modalContent}\r\n      type=\"1\"\r\n      onClose={handleConfirm}\r\n      onCancle={handleCancle}\r\n      width=\"max-w-modal\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default FileFormat;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1399, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1405, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/app/main/comp/ListManager/LoadingModal.tsx"],"sourcesContent":["import React from 'react';\r\nimport CustomAlert from '@/components/shared/layout/CustomAlert';\r\n\r\ninterface LoadingModalProps {\r\n  isLoading: boolean;\r\n  totalCount: number;\r\n  completedCount: number;\r\n  outboundProgress: number;\r\n  onClose: () => void;\r\n}\r\n\r\nconst LoadingModal: React.FC<LoadingModalProps> = ({  isLoading, totalCount = 0, completedCount = 0, outboundProgress, onClose }) => {\r\n  const totalProgress = totalCount > 0 ? (completedCount / totalCount) * 100 : 0;\r\n  const outboundProgressValue = isFinite(outboundProgress) ? outboundProgress : 0;\r\n\r\n  return (\r\n    <CustomAlert\r\n      title=\"데이터전송\"\r\n      isOpen={isLoading}\r\n      message={<div className=\"flex flex-col h-full gap-5\">\r\n        <div>고객 데이터 파일을 서버로 전송 중입니다. 잠시만 기다려 주세요.</div>\r\n        <div className=\"border rounded w-full px-[40px] py-[20px]\">\r\n          <div>\r\n            <div className=\"text-gray-700\">\r\n              발신비율(%)\r\n            </div>\r\n            <div className=\"mt-3 w-full h-[20px] bg-gray-200 rounded-full relative\">\r\n              <div\r\n                className=\"h-full bg-primary-500 rounded-full transition-all bg-[#4EE781]\"\r\n                style={{ width: `${outboundProgressValue}%` }}\r\n              ></div>\r\n              <div className=\"absolute top-[1px] left-[50%] transform -translate-x-1/2\">{outboundProgressValue.toFixed(2)}%</div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div className=\"mt-4 text-gray-700\">\r\n              전체 전송현황 ({completedCount}/{totalCount})\r\n            </div>\r\n            <div className=\"mt-3 w-full h-[20px] bg-gray-200 rounded-full relative\">\r\n              <div\r\n                className=\"h-full bg-primary-500 rounded-full transition-all bg-[#4EE781]\"\r\n                style={{ width: `${totalProgress}%` }}\r\n              ></div>\r\n              <div className=\"absolute top-[1px] left-[50%] transform -translate-x-1/2\">{totalProgress.toFixed(2)}%</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>}\r\n      width=\"max-w-modal\"\r\n      onClose={onClose}\r\n      showButtons={false} type={''}    />\r\n  );\r\n};\r\n\r\nexport default LoadingModal;"],"names":[],"mappings":";;;;AACA;;;AAUA,MAAM,eAA4C,CAAC,EAAG,SAAS,EAAE,aAAa,CAAC,EAAE,iBAAiB,CAAC,EAAE,gBAAgB,EAAE,OAAO,EAAE;IAC9H,MAAM,gBAAgB,aAAa,IAAI,AAAC,iBAAiB,aAAc,MAAM;IAC7E,MAAM,wBAAwB,SAAS,oBAAoB,mBAAmB;IAE9E,qBACE,6LAAC,wJAAA,CAAA,UAAW;QACV,OAAM;QACN,QAAQ;QACR,uBAAS,6LAAC;YAAI,WAAU;;8BACtB,6LAAC;8BAAI;;;;;;8BACL,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;;8CACC,6LAAC;oCAAI,WAAU;8CAAgB;;;;;;8CAG/B,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CACC,WAAU;4CACV,OAAO;gDAAE,OAAO,GAAG,sBAAsB,CAAC,CAAC;4CAAC;;;;;;sDAE9C,6LAAC;4CAAI,WAAU;;gDAA4D,sBAAsB,OAAO,CAAC;gDAAG;;;;;;;;;;;;;;;;;;;sCAGhH,6LAAC;;8CACC,6LAAC;oCAAI,WAAU;;wCAAqB;wCACxB;wCAAe;wCAAE;wCAAW;;;;;;;8CAExC,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CACC,WAAU;4CACV,OAAO;gDAAE,OAAO,GAAG,cAAc,CAAC,CAAC;4CAAC;;;;;;sDAEtC,6LAAC;4CAAI,WAAU;;gDAA4D,cAAc,OAAO,CAAC;gDAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAK5G,OAAM;QACN,SAAS;QACT,aAAa;QAAO,MAAM;;;;;;AAEhC;KAzCM;uCA2CS"}},
    {"offset": {"line": 1558, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1564, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/app/main/comp/ListManager/index.tsx"],"sourcesContent":["import React, { useState, useMemo, useEffect } from \"react\";\r\nimport * as XLSX from 'xlsx';\r\n\r\n// 공통 컴포넌트\r\nimport TitleWrap from \"@/components/shared/TitleWrap\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { CustomInput } from \"@/components/shared/CustomInput\";\r\nimport { CustomCheckbox } from \"@/components/shared/CustomCheckbox\";\r\nimport CustomAlert,{CustomAlertRequest} from \"@/components/shared/layout/CustomAlert\";\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/shared/CustomSelect\";\r\nimport {\r\n  CommonRadio,\r\n  CommonRadioItem,\r\n} from \"@/components/shared/CommonRadio\";\r\nimport SenderList from './SenderList';\r\nimport { useMainStore, useTabStore } from '@/store';\r\nimport { CallingListInsertDataType\r\n  , CallingListInsertRequest\r\n} from '@/features/listManager/types/listManagerIndex';\r\nimport { useApiForCallingListInsert } from '@/features/listManager/hooks/useApiForCallingListInsert';\r\nimport { useApiForBlacklistInsert } from '@/features/listManager/hooks/useApiForBlacklistInsert';\r\nimport { useApiForBlacklistDelete } from '@/features/listManager/hooks/useApiForBlacklistDelete';\r\n\r\n// 데이터그리드\r\nimport DataGrid, { Column, CellClickArgs } from \"react-data-grid\";\r\n\r\n// 모달\r\nimport FileFormat,{FormatRowData, FormatRow} from './FileFormat';\r\nimport LoadingModal from './LoadingModal';\r\nimport Cookies from 'js-cookie';\r\nimport { useRouter } from 'next/navigation';\r\n\r\n\r\n// 인터페이스\r\ninterface FileRow {\r\n  id: number;\r\n  fileName: string;\r\n  campaignId: string;\r\n  fileSize: string;\r\n  deletable: boolean;\r\n  listFlag: string;\r\n}\r\n\r\ninterface SendRow {\r\n  id: string;    \r\n  fileId: number;\r\n  CSKE: string;\r\n  CSK2: string;\r\n  CSK3: string;\r\n  CSNA: string;\r\n  TNO1: string;\r\n  TNO2: string;\r\n  TNO3: string;\r\n  TNO4: string;\r\n  TNO5: string;\r\n  CSC1: string;\r\n  CSC2: string;\r\n  CSC3: string;\r\n  CSC4: string;\r\n  CSC5: string;\r\n  CSC6: string;\r\n  EMPLOYEEID: string;\r\n  TKDA: string;\r\n}\r\n\r\n// 발신 리스트 추가 요청 데이터 타입\r\nconst callListInsertDataType: CallingListInsertDataType = {\r\n  customer_key: '',\r\n  sequence_number: 0,\r\n  customer_name: '',\r\n  phone_number1: '',\r\n  phone_number2: '',\r\n  phone_number3: '',\r\n  phone_number4: '',\r\n  phone_number5: '',\r\n  reserved_time: '',\r\n  token_data: ''\r\n};\r\n\r\n// 발신 리스트 추가 요청 \r\nconst callListInsertData: CallingListInsertRequest = {\r\n  campaign_id: 0,\r\n  list_flag: 'I',\r\n  calling_list: [] as CallingListInsertDataType[]\r\n};\r\n\r\nconst progressListData: ProgressRow = \r\n  {\r\n    id: 1,\r\n    datetime: \"10:54:28\",\r\n    message: \"현재 작업을 진행 하겠습니다. 진행하겠습니다. [ 1 ]\",\r\n  }\r\n;\r\n\r\nconst errorMessage: CustomAlertRequest = {\r\n  isOpen: false,\r\n  message: '',\r\n  title: '캠페인',\r\n  type: '1',\r\n  onClose: () => {},\r\n  onCancle: () => {},\r\n};\r\n\r\ninterface ProgressRow {\r\n  id: number;\r\n  datetime: string;\r\n  message: string;\r\n}\r\n\r\nconst ListManager: React.FC = () => {\r\n  const router = useRouter();\r\n  const { campaigns } = useMainStore();\r\n  const { activeTabId, openedTabs } = useTabStore();\r\n  const [delimiter, setDelimiter] = useState<string>('');\r\n  const [_callListInsertData, setCallListInsertData] = useState<CallingListInsertRequest>(callListInsertData);\r\n  const [fileFormat,setFileFormat ] = useState<string>('excel');\r\n  const [deleteData, setDeleteData] = useState(true);  // 기존 캠페인 데이터 삭제.\r\n  const [campaignIdDisabled,setCampaignIdDisabled] = useState<boolean>(false);\r\n  const [alertState, setAlertState] = useState<CustomAlertRequest>(errorMessage);\r\n  const [headerColumnData,setHeaderColumnData] = useState<FormatRow[]>([]);\r\n  const [originaldataYn, setOriginaldataYn] = useState<boolean>(false);\r\n  const [campaignId, setCampaignId] = useState<number>(0);\r\n  const [listFlag, setListFlag] = useState<string>('I');\r\n  const [workFileIndex, setWorkFileIndex ] = useState<number>(-1);\r\n  const [listTotalCount, setListTotalCount] = useState<number>(0);\r\n  const [listSuccessCount,setListSuccessCount] = useState<number>(0);\r\n  // 아이디 생성용 카운터\r\n  const [nextId, setNextId] = useState(1);\r\n  \r\n  // 모달 상태\r\n  const [isFileFormatOpen, setIsFileFormatOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  \r\n  // 파일 관련 상태\r\n  const [targetType, setTargetType] = useState<\"general\" | \"blacklist\">(\"general\");\r\n  const [uploadedFiles, setUploadedFiles] = useState<FileRow[]>([]);\r\n  const [selectedFileName, setSelectedFileName] = useState<string>(\"\");\r\n  \r\n  // 그리드 선택 상태\r\n  const [selectedSendRow, setSelectedSendRow] = useState<SendRow | null>(null);\r\n  const [selectedProgressRow, setSelectedProgressRow] = useState<ProgressRow | null>(null);\r\n  const [selectedFile, setSelectedFile] = useState<FileRow | null>(null);\r\n\r\n  //캠페인 발신번호 추가 api 호출\r\n  const { mutate: fetchCallingListInsert } = useApiForCallingListInsert({\r\n    onSuccess: (data) => {   \r\n      if( workFileIndex < uploadedFiles.length-1 ){\r\n        setWorkFileIndex(prevIndex => prevIndex + 1);\r\n        setListTotalCount(listTotalCount+data.request_count);\r\n        setListSuccessCount(listSuccessCount+data.result_count);\r\n      }else{\r\n        const now = new Date();\r\n        const hours = now.getHours().toString().padStart(2, '0');\r\n        const minutes = now.getMinutes().toString().padStart(2, '0');\r\n        const seconds = now.getSeconds().toString().padStart(2, '0');\r\n        if( data.result_code === 0){\r\n          const newProgressListData = { ...progressListData\r\n            , id: progressList.length+1\r\n            , datetime: hours + ':' + minutes + ':' + seconds\r\n            , message: '서버에 리스트 파일 등록 완료 : 총 ' + (listTotalCount+data.request_count) + '건, 성공 ' + (listSuccessCount+data.result_count) + '건'\r\n          };\r\n          setProgressList(prev => [newProgressListData, ...prev]);\r\n        }else{\r\n          const newProgressListData = { ...progressListData\r\n            , id: progressList.length+1\r\n            , datetime: hours + ':' + minutes + ':' + seconds\r\n            , message: '서버에 리스트 파일 등록 에러 : ' + data.result_msg\r\n          };\r\n          setProgressList(prev => [newProgressListData, ...prev]);\r\n        }\r\n        setUploadedFiles([]);\r\n        setSendList([]);\r\n      }\r\n    }\r\n    , onError: (data) => {  \r\n      if (data.message.split('||')[0] === '5') {\r\n        setAlertState({\r\n          ...errorMessage,\r\n          isOpen: true,\r\n          message: 'API 연결 세션이 만료되었습니다. 로그인을 다시 하셔야합니다.',\r\n          type: '2',\r\n          onClose: () => goLogin(),\r\n        });\r\n      } else {\r\n        const now = new Date();\r\n        const hours = now.getHours().toString().padStart(2, '0');\r\n        const minutes = now.getMinutes().toString().padStart(2, '0');\r\n        const seconds = now.getSeconds().toString().padStart(2, '0');\r\n        const newProgressListData = { ...progressListData\r\n          , id: progressList.length+1\r\n          , datetime: hours + ':' + minutes + ':' + seconds\r\n          , message: '파일 전송 도중 에러 : ' + data.message\r\n        };\r\n        setProgressList(prev => [newProgressListData, ...prev]);\r\n      } \r\n    }\r\n  });\r\n  const goLogin = () => {\r\n    Cookies.remove('session_key');\r\n    router.push('/login');\r\n  }\r\n  \r\n  // 블랙리스트 추가 api 호출\r\n  const { mutate: fetchBlacklistInsert } = useApiForBlacklistInsert({\r\n    onSuccess: (data) => {   \r\n      if( workFileIndex < uploadedFiles.length-1 ){\r\n        setWorkFileIndex(prevIndex => prevIndex + 1);\r\n        setListTotalCount(listTotalCount+data.request_count);\r\n        setListSuccessCount(listSuccessCount+data.result_count);\r\n      }else{\r\n        const now = new Date();\r\n        const hours = now.getHours().toString().padStart(2, '0');\r\n        const minutes = now.getMinutes().toString().padStart(2, '0');\r\n        const seconds = now.getSeconds().toString().padStart(2, '0');\r\n        if( data.result_code === 0){\r\n          const newProgressListData = { ...progressListData\r\n            , id: progressList.length+1\r\n            , datetime: hours + ':' + minutes + ':' + seconds\r\n            , message: '서버에 리스트 파일 등록 완료 : 총 ' + (listTotalCount+data.request_count) + '건, 성공 ' + (listSuccessCount+data.result_count) + '건'\r\n          };\r\n          setProgressList(prev => [newProgressListData, ...prev]);\r\n        }else{\r\n          const newProgressListData = { ...progressListData\r\n            , id: progressList.length+1\r\n            , datetime: hours + ':' + minutes + ':' + seconds\r\n            , message: '서버에 리스트 파일 등록 에러 : ' + data.result_msg\r\n          };\r\n          setProgressList(prev => [newProgressListData, ...prev]);\r\n        }\r\n        setUploadedFiles([]);\r\n        setSendList([]);\r\n      }\r\n    }\r\n    , onError: (data) => {\r\n      if (data.message.split('||')[0] === '5') {\r\n        setAlertState({\r\n          ...errorMessage,\r\n          isOpen: true,\r\n          message: 'API 연결 세션이 만료되었습니다. 로그인을 다시 하셔야합니다.',\r\n          type: '2',\r\n          onClose: () => goLogin(),\r\n        });\r\n      } else {\r\n        const now = new Date();\r\n        const hours = now.getHours().toString().padStart(2, '0');\r\n        const minutes = now.getMinutes().toString().padStart(2, '0');\r\n        const seconds = now.getSeconds().toString().padStart(2, '0');\r\n        const newProgressListData = { ...progressListData\r\n          , id: progressList.length+1\r\n          , datetime: hours + ':' + minutes + ':' + seconds\r\n          , message: '파일 전송 도중 에러 : ' + data.message\r\n        };\r\n        setProgressList(prev => [newProgressListData, ...prev]);\r\n      }\r\n    }\r\n  });\r\n\r\n  // 블랙리스트 업로드 취소 api 호출\r\n  const { mutate: fetchBlacklistDelete } = useApiForBlacklistDelete({\r\n    onSuccess: (data) => {   \r\n      if( workFileIndex < uploadedFiles.length-1 ){\r\n        setWorkFileIndex(prevIndex => prevIndex + 1);\r\n      }else{\r\n        const now = new Date();\r\n        const hours = now.getHours().toString().padStart(2, '0');\r\n        const minutes = now.getMinutes().toString().padStart(2, '0');\r\n        const seconds = now.getSeconds().toString().padStart(2, '0');\r\n        if( data.result_code === 0){\r\n          const newProgressListData = { ...progressListData\r\n            , id: progressList.length+1\r\n            , datetime: hours + ':' + minutes + ':' + seconds\r\n            , message: '서버에 리스트 파일 등록 완료'\r\n          };\r\n          setProgressList(prev => [newProgressListData, ...prev]);\r\n        }else{\r\n          const newProgressListData = { ...progressListData\r\n            , id: progressList.length+1\r\n            , datetime: hours + ':' + minutes + ':' + seconds\r\n            , message: '서버에 리스트 파일 등록 에러 : ' + data.result_msg\r\n          };\r\n          setProgressList(prev => [newProgressListData, ...prev]);\r\n        }\r\n        setUploadedFiles([]);\r\n        setSendList([]);\r\n      }\r\n    }\r\n    , onError: (data) => {    \r\n      if (data.message.split('||')[0] === '5') {\r\n        setAlertState({\r\n          ...errorMessage,\r\n          isOpen: true,\r\n          message: 'API 연결 세션이 만료되었습니다. 로그인을 다시 하셔야합니다.',\r\n          type: '2',\r\n          onClose: () => goLogin(),\r\n        });\r\n      } else {\r\n        const now = new Date();\r\n        const hours = now.getHours().toString().padStart(2, '0');\r\n        const minutes = now.getMinutes().toString().padStart(2, '0');\r\n        const seconds = now.getSeconds().toString().padStart(2, '0');\r\n        const newProgressListData = { ...progressListData\r\n          , id: progressList.length+1\r\n          , datetime: hours + ':' + minutes + ':' + seconds\r\n          , message: '파일 전송 도중 에러 : ' + data.message\r\n        };\r\n        setProgressList(prev => [newProgressListData, ...prev]);\r\n      }\r\n    }\r\n  });\r\n\r\n  const [progressList, setProgressList] = useState<ProgressRow[]>([]);\r\n\r\n  // 모달 핸들러\r\n  const handleFileFormatOpen = () => {    \r\n    // setUploadedFiles([]);\r\n    // setSendList([]);\r\n    setIsFileFormatOpen(true);\r\n  } \r\n  const handleFileFormatClose = () => setIsFileFormatOpen(false);\r\n\r\n  const [sendColumns, setSendColumns] = useState<Column<SendRow>[]>([]);\r\n  const [sendList, setSendList] = useState<SendRow[]>([]);\r\n  \r\n  //파일포맷설정 확인 이벤트.\r\n  const handleFileFormatConfirm = (data:FormatRowData) => {\r\n    setIsFileFormatOpen(false);\r\n    setDelimiter(data.delimiter);\r\n    setOriginaldataYn(data.originDataSaveYn);\r\n    setHeaderColumnData(data.datalist);\r\n    const tempList: Column<SendRow>[] = data.datalist.map((tempData) => ({\r\n      key: tempData.field,\r\n      name: tempData.name\r\n    }));  \r\n    setSendColumns(tempList);\r\n  };\r\n\r\n  // 파일 관련 핸들러\r\n  const handleTargetTypeChange = (value: string) => {\r\n    setTargetType(value as \"general\" | \"blacklist\");\r\n    setListFlag('I');\r\n    setCallListInsertData({\r\n      ..._callListInsertData,\r\n      list_flag: 'I'\r\n    });\r\n  };\r\n\r\n  const handleFileUpload = (e: React.ChangeEvent<HTMLInputElement>) => {   \r\n    setCampaignIdDisabled(true);\r\n    const files = e.target.files;\r\n    if (files && files.length > 0) {\r\n      try{\r\n        setIsLoading(true);\r\n        const file = files[0];\r\n        if( fileFormat === 'excel' && file.name.indexOf('.xls') === -1 ){              \r\n          setAlertState({\r\n            ...errorMessage,\r\n            isOpen: true,\r\n            message: \"파일 포맷 형식과 다른 형식의 파일입니다. 파일 또는 포맷 형식을 확인해 주세요.\",\r\n            type: '2',\r\n            onClose: () => setAlertState((prev) => ({ ...prev, isOpen: false }))\r\n          });\r\n        }else if( fileFormat === 'txt' && file.name.indexOf('.xls') > -1 ){    \r\n          setAlertState({\r\n            ...errorMessage,\r\n            isOpen: true,\r\n            message: \"파일 포맷 형식과 다른 형식의 파일입니다. 파일 또는 포맷 형식을 확인해 주세요.\",\r\n            type: '2',\r\n            onClose: () => setAlertState((prev) => ({ ...prev, isOpen: false }))\r\n          });\r\n        }else{          \r\n          const newFileData: FileRow = {\r\n            id: nextId,\r\n            fileName: file.name,\r\n            campaignId: campaignId+'',\r\n            fileSize: (file.size / 1024).toFixed(2) + \" KB\",\r\n            deletable: false,\r\n            listFlag: listFlag\r\n          };\r\n          setUploadedFiles((prev) => [...prev, newFileData]);\r\n          setSelectedFileName(file.name);\r\n          \r\n          const now = new Date();\r\n          const hours = now.getHours().toString().padStart(2, '0');\r\n          const minutes = now.getMinutes().toString().padStart(2, '0');\r\n          const seconds = now.getSeconds().toString().padStart(2, '0');\r\n          const newProgressListData = { ...progressListData\r\n            , id: progressList.length+1\r\n            , datetime: hours + ':' + minutes + ':' + seconds\r\n            , message: '현재 로드된 파일 갯수 : ' + (uploadedFiles.length+1)\r\n          };\r\n          setProgressList(prev => [newProgressListData, ...prev]);\r\n          \r\n          const reader = new FileReader();\r\n          if( fileFormat === 'excel' && file.name.indexOf('.xls') > -1 ){\r\n            reader.onload = (event) => {\r\n              const fileContent = event.target?.result;\r\n              \r\n              if (fileContent) {\r\n                const workbook = XLSX.read(fileContent, { type: 'array' });\r\n        \r\n                const sheetName = workbook.SheetNames[0];\r\n                const worksheet = workbook.Sheets[sheetName];\r\n        \r\n                const data = XLSX.utils.sheet_to_json(worksheet, { header: 1 }); \r\n        \r\n                if( data.length > 0 ){\r\n                  let index = 0;\r\n                  const tempSendList: SendRow[] = [];\r\n                  for(let i=0; i< data.length;i++){\r\n                    const row = data[i] as unknown[];\r\n                    index = index+1;\r\n\r\n                    const tempData: SendRow = {\r\n                      id: nextId+'::'+index,\r\n                      fileId: nextId,\r\n                      CSKE: '',\r\n                      CSK2: '',\r\n                      CSK3: '',\r\n                      CSNA: '',\r\n                      TNO1: '',\r\n                      TNO2: '',\r\n                      TNO3: '',\r\n                      TNO4: '',\r\n                      TNO5: '',\r\n                      CSC1: '',\r\n                      CSC2: '',\r\n                      CSC3: '',\r\n                      CSC4: '',\r\n                      CSC5: '',\r\n                      CSC6: '',\r\n                      EMPLOYEEID: '',\r\n                      TKDA: '',\r\n                    };\r\n                    if( row.length > 0){\r\n                      let _length = row.length;\r\n                      if( _length > sendColumns.length){\r\n                        _length = sendColumns.length;\r\n                      }\r\n                      for (let j = 0; j < _length; j++) {\r\n                        const key = sendColumns[j].key as keyof SendRow;\r\n                        if (key in tempData) {\r\n                          if (typeof key === 'string' && key in tempData) {\r\n                            if (typeof key === 'string' && key in tempData) {\r\n                              (tempData as any)[key] = row[j] as string || '';\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                      tempSendList.push(tempData);\r\n                    }\r\n                    \r\n                  }\r\n                  setSendList(prev => [...prev, ...tempSendList]);\r\n                }\r\n\r\n              }\r\n\r\n            };\r\n            reader.readAsArrayBuffer(file);\r\n          }else if( fileFormat === 'txt' && file.name.indexOf('.xls') == -1 ){\r\n            reader.onload = (event) => {\r\n              const fileContent = event.target?.result;       \r\n              console.log(\"File content:\", fileContent);\r\n              if( fileContent != null && fileContent !== '' ){\r\n                let tempdata = [];\r\n                if( (fileContent+'').indexOf('\\r\\n') > -1){\r\n                  tempdata = (fileContent+'').split('\\r\\n');\r\n                }else{\r\n                  tempdata = (fileContent+'').split('\\n');\r\n                }\r\n                let index = 0;\r\n                const tempSendList: SendRow[] = [];\r\n                for( let i=0;i<tempdata.length;i++){\r\n                  // const row = tempdata[i].split(delimiter) as unknown[];\r\n                  index = index+1;\r\n\r\n                  const tempData: SendRow = {\r\n                    id: nextId+'::'+index,\r\n                    fileId: nextId,\r\n                    CSKE: '',\r\n                    CSK2: '',\r\n                    CSK3: '',\r\n                    CSNA: '',\r\n                    TNO1: '',\r\n                    TNO2: '',\r\n                    TNO3: '',\r\n                    TNO4: '',\r\n                    TNO5: '',\r\n                    CSC1: '',\r\n                    CSC2: '',\r\n                    CSC3: '',\r\n                    CSC4: '',\r\n                    CSC5: '',\r\n                    CSC6: '',\r\n                    EMPLOYEEID: '',\r\n                    TKDA: '',\r\n                  };\r\n                  //길이체크인 경우 \r\n                  if( delimiter === '' ){\r\n                    for(let k=0;k<headerColumnData.length;k++){\r\n                      const key = headerColumnData[k].field as keyof SendRow;\r\n                      // if (key in tempData) {\r\n                      //   if (typeof key === 'string' && key in tempData) {\r\n                      //     if (typeof key === 'string' && key in tempData) {\r\n                      //       (tempData as any)[key] = tempdata[i].substring(headerColumnData[k].start-1, headerColumnData[k].start + headerColumnData[k].length -1) as string || '';\r\n                      //     }\r\n                      //   }\r\n                      // }\r\n                      if (key in tempData) {\r\n                        // Calculate the byte length of the extracted substring\r\n                        const extractedSubstring = tempdata[i].substring(headerColumnData[k].start - 1, headerColumnData[k].start + headerColumnData[k].length - 1);\r\n                        \r\n                        if (typeof key === 'string' && key in tempData) {\r\n                          const byteLength = getByteLength(extractedSubstring);\r\n                          \r\n                          // Ensure that the extracted substring fits within the specified byte length\r\n                          if (byteLength <= headerColumnData[k].length) {\r\n                            (tempData as any)[key] = extractedSubstring || '';  // If it's within the byte size limit, assign it\r\n                          } else {\r\n                            // Handle case where the byte length exceeds the specified limit, truncating if necessary\r\n                            (tempData as any)[key] = extractedSubstring.slice(0, headerColumnData[k].length);\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                    tempSendList.push(tempData);                  \r\n                    \r\n                    //구분자인 경우\r\n                  }else{ \r\n                    const row = tempdata[i].split(delimiter) as unknown[];\r\n                    if( row.length > 0){\r\n                      let _length = row.length;\r\n                      if( _length > sendColumns.length){\r\n                        _length = sendColumns.length;\r\n                      }\r\n                      for (let j = 0; j < _length; j++) {\r\n                        const key = sendColumns[j].key as keyof SendRow;\r\n                        if (key in tempData) {\r\n                          if (typeof key === 'string' && key in tempData) {\r\n                            if (typeof key === 'string' && key in tempData) {\r\n                              (tempData as any)[key] = row[j] as string || '';\r\n                            }\r\n                          }\r\n                        }\r\n                      }\r\n                      tempSendList.push(tempData);\r\n                    }\r\n                  }\r\n                }\r\n                setSendList(prev => [...prev, ...tempSendList]);\r\n              }\r\n              // Now, you can process fileContent here\r\n            };\r\n            reader.readAsText(file);\r\n          }else{          \r\n            setAlertState({\r\n              ...errorMessage,\r\n              isOpen: true,\r\n              message: \"파일 포맷 형식과 다른 형식의 파일입니다. 파일 또는 포맷 형식을 확인해 주세요.\",\r\n              type: '2',\r\n              onClose: () => setAlertState((prev) => ({ ...prev, isOpen: false }))\r\n            });\r\n          }\r\n          // Handle file reading errors\r\n          reader.onerror = (error) => {\r\n            console.error(\"Error reading file:\", error);\r\n          };\r\n        }\r\n      } catch (e) {\r\n        console.error(\"Error processing file:\", e);\r\n  \r\n      }finally{\r\n        setNextId(nextId + 1);\r\n        setIsLoading(false);\r\n      }\r\n    }// 파일 업로드 후 input 값 초기화\r\n    e.target.value = '';\r\n  };\r\n  \r\n  const getByteLength = (str: string) => {\r\n    const encoder = new TextEncoder();\r\n    const encoded = encoder.encode(str);\r\n    return encoded.length;\r\n  }\r\n \r\n  // 새 작업대상 핸들러\r\n  const handleNewTarget = () => {\r\n    setSelectedFileName(\"\");\r\n    setTargetType(\"general\");\r\n    setSelectedFile(null);\r\n    // setUploadedFiles([]);\r\n    // setSendList([]);\r\n    setCampaignIdDisabled(false);\r\n  };\r\n\r\n  // 작업대상 올리기\r\n  const triggerFileInput = () => {\r\n    if( sendColumns.length === 0 ){\r\n      setAlertState({\r\n        ...errorMessage,\r\n        isOpen: true,\r\n        message: \"파일 포맷이 설정되어 있지 않습니다. 파일 포맷을 설정해 주세요.\",\r\n        type: '2',\r\n        onClose: () => setAlertState((prev) => ({ ...prev, isOpen: false }))\r\n      });\r\n    }else if( campaignId === 0){\r\n      setAlertState({\r\n        ...errorMessage,\r\n        isOpen: true,\r\n        message: \"캠페인을 선택해야 합니다.\",\r\n        type: '2',\r\n        onClose: () => setAlertState((prev) => ({ ...prev, isOpen: false }))\r\n      });\r\n    }else{\r\n      const fileInput = document.getElementById(\"fileInput\") as HTMLInputElement;\r\n      if (fileInput){\r\n        if( fileFormat === 'excel'){\r\n          fileInput.accept = \".xlsx, .xls\";\r\n        }else{\r\n          fileInput.accept = \".txt\";\r\n        }\r\n        fileInput.click();\r\n      } \r\n    }\r\n  };\r\n\r\n  // 삭제 핸들러\r\n  const handleDeleteFile = () => {\r\n    if (selectedFile) {\r\n      setUploadedFiles(prev => prev.filter(file => file.id !== selectedFile.id));\r\n      setSendList(prev => prev.filter(data => data.fileId !== selectedFile.id));\r\n      setSelectedFile(null);\r\n      setSelectedFileName(\"\");\r\n    }\r\n  };\r\n\r\n  // 행 클릭 핸들러\r\n  const handleProgressRowClick = ({ row }: CellClickArgs<ProgressRow>) => {\r\n    setSelectedProgressRow(row);\r\n  };\r\n\r\n  const handleFileRowClick = ({ row }: CellClickArgs<FileRow>) => {\r\n    setSelectedFile(row);\r\n    setSelectedFileName(row.fileName);\r\n    setTargetType(row.campaignId.startsWith('G') ? 'general' : 'blacklist');\r\n  };\r\n\r\n  // rowClass 함수들\r\n  const getFileRowClass = (row: FileRow) => {\r\n    return selectedFile?.id === row.id ? 'bg-[#FFFAEE]' : '';\r\n  };\r\n  \r\n  const getProgressRowClass = (row: ProgressRow) => {\r\n    return selectedProgressRow?.id === row.id ? 'bg-[#FFFAEE]' : '';\r\n  };\r\n\r\n  // 데이터그리드 컬럼 정의\r\n  const columns = useMemo<Column<FileRow>[]>(() => [\r\n    { key: \"fileName\", name: \"파일 이름\" },\r\n    { key: \"campaignId\", name: \"캠페인 ID\" },\r\n    { key: \"fileSize\", name: \"파일 크기\" },\r\n    {\r\n      key: \"deletable\",\r\n      name: \"삭제 여부\",\r\n      formatter: ({ row }: { row: FileRow }) => (\r\n        <CustomCheckbox\r\n          checked={row.deletable}\r\n          onChange={() =>\r\n            setUploadedFiles((prev) =>\r\n              prev.map((file) =>\r\n                file.id === row.id\r\n                  ? { ...file, deletable: !file.deletable }\r\n                  : file\r\n              )\r\n            )\r\n          }\r\n        />\r\n      ),\r\n    },\r\n  ], []);\r\n\r\n  const progressColumns = useMemo<Column<ProgressRow>[]>(() => [\r\n    { key: \"datetime\", name: \"시간\" },\r\n    { key: \"message\", name: \"처리내용\" },\r\n  ], []);\r\n\r\n  // selectedRows 메모이제이션\r\n  const selectedFileRows = useMemo<Set<number>>(() => \r\n    selectedFile ? new Set([selectedFile.id]) : new Set()\r\n  , [selectedFile]);\r\n\r\n  const selectedSendRows = useMemo(() => \r\n    selectedSendRow ? new Set([selectedSendRow.id]) : new Set()\r\n  , [selectedSendRow]);\r\n\r\n  const selectedProgressRows = useMemo(() => \r\n    selectedProgressRow ? new Set([selectedProgressRow.id]) : new Set()\r\n  , [selectedProgressRow]);\r\n\r\n  // 작업시작 버튼 클릭 시\r\n  const handleWorkStart = () => {\r\n    if (uploadedFiles.length === 0) {\r\n      // 작업대상이 선택되지 않은 경우 경고 알림창 표시\r\n      // showAlert('작업 지정 대상을 선택해주세요.');\r\n      setAlertState({\r\n        ...errorMessage,\r\n        isOpen: true,\r\n        message: \"발신목록이 없습니다.\",\r\n        type: '2',\r\n        onClose: () => setAlertState((prev) => ({ ...prev, isOpen: false }))\r\n      });\r\n    } else if ( _callListInsertData.campaign_id === 0) {\r\n      setAlertState({\r\n        ...errorMessage,\r\n        isOpen: true,\r\n        message: \"대상 캠페인을 선택해 주세요.\",\r\n        type: '2',\r\n        onClose: () => setAlertState((prev) => ({ ...prev, isOpen: false }))\r\n      });\r\n    } else {\r\n      // 작업대상이 선택된 경우 로딩 창 표시\r\n      //setIsLoading(true);\r\n      const now = new Date();\r\n      const hours = now.getHours().toString().padStart(2, '0');\r\n      const minutes = now.getMinutes().toString().padStart(2, '0');\r\n      const seconds = now.getSeconds().toString().padStart(2, '0');\r\n      const newProgressListData = { ...progressListData\r\n        , id: progressList.length+1\r\n        , datetime: hours + ':' + minutes + ':' + seconds\r\n        , message: '서버에 리스트 파일 등록 시작'\r\n      };\r\n      setProgressList(prev => [newProgressListData, ...prev]);\r\n\r\n      setWorkFileIndex(0);\r\n\r\n    }\r\n  };\r\n\r\n  //select data change\r\n  const handleSelectChange = (value: string, type: string) => {\r\n    if( type === 'campaignId' ){\r\n      setCampaignId(Number(value));\r\n      setCallListInsertData({\r\n        ..._callListInsertData,\r\n        campaign_id: Number(value)\r\n      });\r\n    }  \r\n    if( type === 'listFlag'){\r\n      setListFlag(value);\r\n      setCallListInsertData({\r\n        ..._callListInsertData,\r\n        list_flag: value\r\n      });\r\n    }\r\n  }\r\n\r\n  //checkbox checked change\r\n  const handleCheckbox = (checked:boolean, type:string) => {\r\n    if( type === 'deleteData' ){  //체크 I 안하면 A\r\n      setDeleteData(checked);\r\n      if( checked ){\r\n        setListFlag('I');\r\n        setCallListInsertData({\r\n          ..._callListInsertData,\r\n          list_flag: 'I'\r\n        });\r\n      }else{\r\n        setListFlag('A');\r\n        setCallListInsertData({\r\n          ..._callListInsertData,\r\n          list_flag: 'A'\r\n        });\r\n      }\r\n    }  \r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activeTabId === 7) {\r\n      const tempData = openedTabs.filter(tab => tab.id === 7);\r\n      if( tempData.length > 0 && tempData[0].campaignId && tempData[0].campaignName) {\r\n        const _campaignId = Number(tempData[0].campaignId);\r\n        setCampaignId(_campaignId);\r\n        setCallListInsertData({\r\n          ..._callListInsertData,\r\n          campaign_id: _campaignId\r\n        });\r\n        setCampaignIdDisabled(true);\r\n      }\r\n    }\r\n  }, [activeTabId, openedTabs]);\r\n   \r\n  useEffect(() => {\r\n    if (workFileIndex > -1) {\r\n      \r\n      const now = new Date();\r\n      const hours = now.getHours().toString().padStart(2, '0');\r\n      const minutes = now.getMinutes().toString().padStart(2, '0');\r\n      const seconds = now.getSeconds().toString().padStart(2, '0');\r\n      const newProgressListData = { ...progressListData\r\n        , id: progressList.length+1\r\n        , datetime: hours + ':' + minutes + ':' + seconds\r\n        , message: (workFileIndex+1)+' 번 파일 리스트 등록 시작'\r\n      };\r\n      setProgressList(prev => [newProgressListData, ...prev]);\r\n\r\n      const dataList:CallingListInsertDataType[] = [];\r\n      let sequenceIndex = 1;\r\n      for( let j=0;j<sendList.length;j++){\r\n        if( uploadedFiles[workFileIndex].id === sendList[j].fileId ){\r\n          dataList.push({\r\n            customer_key: sendList[j].CSNA+''\r\n            , sequence_number: sequenceIndex++,\r\n            customer_name: sendList[j].CSNA+'',\r\n            phone_number1: sendList[j].TNO1+'',\r\n            phone_number2: sendList[j].TNO2+'',\r\n            phone_number3: sendList[j].TNO3+'',\r\n            phone_number4: sendList[j].TNO4+'',\r\n            phone_number5: sendList[j].TNO5+'',\r\n            reserved_time: sendList[j].TKDA+'',\r\n            token_data: sendList[j].CSC1+''\r\n          });\r\n        }\r\n      }\r\n      const callingListInsertData: CallingListInsertRequest = {\r\n        ..._callListInsertData\r\n        , campaign_id: Number(uploadedFiles[workFileIndex].campaignId)\r\n        , list_flag: uploadedFiles[workFileIndex].listFlag+''\r\n        , calling_list: dataList\r\n      };\r\n\r\n      if( uploadedFiles[workFileIndex].listFlag === 'T'){\r\n        fetchBlacklistDelete(Number(uploadedFiles[workFileIndex].campaignId));\r\n      }else if( targetType === 'general' ){\r\n        fetchCallingListInsert(callingListInsertData);\r\n      }else{\r\n        fetchBlacklistInsert(callingListInsertData);\r\n      }\r\n    }\r\n  }, [workFileIndex]);\r\n   \r\n  return (\r\n    <div className=\"flex flex-col gap-5 limit-width\">\r\n      <div className=\"flex gap-5\">\r\n        {/* 작업대상목록 */}\r\n        <div className=\"w-1/2 flex-1 flex flex-col gap-5\">\r\n          <div className=\"flex flex-col gap-2\">\r\n            <TitleWrap\r\n              title=\"작업대상목록\"\r\n              className=\"border-b border-gray-300 pb-1\"\r\n              buttons={[\r\n                { label: \"파일 포맷 설정\", onClick: handleFileFormatOpen },\r\n                { label: \"작업시작\" , onClick: handleWorkStart},\r\n              ]}\r\n            />\r\n            <div className=\"h-[200px] grid-custom-wrap\">\r\n              <div className=\"grid-top-subject h-[26px]\">\r\n                Loading File(s)\r\n              </div>\r\n              <DataGrid<FileRow>\r\n                columns={columns}\r\n                rows={uploadedFiles}\r\n                className=\"grid-custom cursor-pointer h-custom-important\"\r\n                rowHeight={30}\r\n                headerRowHeight={30}\r\n                rowClass={getFileRowClass}\r\n                rowKeyGetter={(row) => row.id}\r\n                onCellClick={handleFileRowClick}\r\n                selectedRows={selectedFileRows}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 작업대상 내역 */}\r\n        <div className=\"w-1/2 flex-1 flex flex-col gap-5\">\r\n          <div className=\"flex flex-col gap-2\">\r\n            <TitleWrap\r\n              title=\"작업대상 내역\"\r\n              className=\"border-b border-gray-300 pb-1\"\r\n              buttons={[\r\n                { label: \"새 작업대상\", onClick: handleNewTarget},\r\n                { label: \"작업대상 올리기\", onClick: triggerFileInput },\r\n                { label: \"작업대상 삭제\" ,  onClick: handleDeleteFile, disabled: !selectedFile},\r\n              ]}\r\n            />\r\n            <div className=\"flex flex-col gap-2\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <Label className=\"w-[100px] min-w-[100px]\">대상캠페인</Label>\r\n                <Select value={_callListInsertData.campaign_id+''} \r\n                onValueChange={(value) => handleSelectChange(value, 'campaignId')}\r\n                defaultValue=\"0\" disabled={campaignIdDisabled}\r\n                >\r\n                  <SelectTrigger className=\"w-[300px]\">\r\n                    <SelectValue placeholder=\"대상캠페인\" />\r\n                  </SelectTrigger>\r\n                  <SelectContent  style={{ maxHeight: '300px', overflowY: 'auto' }}>\r\n                    <SelectItem key='0' value='0'>-선택-</SelectItem>\r\n                    {campaigns.map(option => (\r\n                      <SelectItem key={option.campaign_id} value={option.campaign_id.toString()}>\r\n                        [{option.campaign_id}]{option.campaign_name}\r\n                      </SelectItem>\r\n                    ))}\r\n                  </SelectContent>\r\n                </Select>\r\n                <CustomInput\r\n                  className=\"w-full\"\r\n                  value={selectedFileName}\r\n                  disabled\r\n                />\r\n              </div>\r\n              <div className=\"flex items-center gap-1 h-[26px]\">\r\n                <Label className=\"w-[100px] min-w-[100px]\">파일형식</Label>\r\n                <CommonRadio\r\n                  defaultValue=\"auto\"\r\n                  className=\"flex gap-8\"\r\n                  value={fileFormat}\r\n                  onValueChange={(value) => setFileFormat(value)}\r\n                >\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <CommonRadioItem value=\"excel\" id=\"excel\" />\r\n                    <Label htmlFor=\"excel\">EXCEL</Label>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <CommonRadioItem value=\"txt\" id=\"txt\" />\r\n                    <Label htmlFor=\"txt\">TXT</Label>\r\n                  </div>\r\n                </CommonRadio>\r\n              </div>\r\n              <div className=\"flex items-center gap-1 h-[26px]\">\r\n                <Label className=\"w-[100px] min-w-[100px]\">작업대상 구분</Label>\r\n                <CommonRadio\r\n                  defaultValue=\"general\"\r\n                  className=\"flex gap-8 w-[200px] min-w-[200px]\"\r\n                  onValueChange={handleTargetTypeChange}\r\n                >\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <CommonRadioItem value=\"general\" id=\"general\" />\r\n                    <Label htmlFor=\"general\">일반</Label>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <CommonRadioItem value=\"blacklist\" id=\"blacklist\" />\r\n                    <Label htmlFor=\"blacklist\">블랙리스트</Label>\r\n                  </div>\r\n                </CommonRadio>\r\n\r\n                {targetType === \"general\" ? (\r\n                  <div className=\"flex gap-2\">\r\n                    <CustomCheckbox id=\"deleteData\" checked={deleteData}\r\n                      onCheckedChange={(checked) => handleCheckbox(checked === true, 'deleteData')} />\r\n                    <Label htmlFor=\"deleteData\" className=\"text-sm\">\r\n                      기존 캠페인 데이터 삭제\r\n                    </Label>\r\n                  </div>\r\n                ) : (\r\n                  <Select value={_callListInsertData.list_flag} \r\n                  onValueChange={(value) => handleSelectChange(value, 'listFlag')}\r\n                  defaultValue=\"I\"\r\n                  >\r\n                    <SelectTrigger>\r\n                      <SelectValue placeholder=\"Insert: 기존리스트 삭제 후 등록\" />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"I\">Insert : 기존리스트 삭제 후 등록</SelectItem>\r\n                      <SelectItem value=\"D\">Delete : 특정리스트 삭제</SelectItem>\r\n                      <SelectItem value=\"A\">Append : 발신리스트 추가</SelectItem>\r\n                      <SelectItem value=\"T\">블랙리스트 전체 삭제</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex gap-5\">\r\n      <SenderList headerData={sendColumns} _sendList={sendList} />\r\n        <div className=\"w-1/2\">\r\n          <div className=\"h-[300px] grid-custom-wrap mt-[28px]\">\r\n            <div className=\"grid-top-subject h-[26px]\">\r\n              Progress Status\r\n            </div>\r\n            <DataGrid<ProgressRow>\r\n              columns={progressColumns}\r\n              rows={progressList}\r\n              className=\"grid-custom cursor-pointer h-custom-important\"\r\n              rowHeight={30}\r\n              headerRowHeight={30}\r\n              rowKeyGetter={(row) => row.id}\r\n              rowClass={getProgressRowClass}\r\n              onCellClick={handleProgressRowClick}\r\n              selectedRows={selectedProgressRow ? new Set([selectedProgressRow.id]) : new Set()}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Hidden File Input */}\r\n      <input\r\n        type=\"file\"\r\n        id=\"fileInput\"\r\n        className=\"hidden\"\r\n        onChange={handleFileUpload}\r\n      />\r\n\r\n       {/* 파일포맷모달 */}\r\n       <FileFormat \r\n        isOpen={isFileFormatOpen}\r\n        onConfirm={handleFileFormatConfirm}\r\n        onClose={handleFileFormatClose}\r\n      />\r\n\r\n      {/* 얼럿 창 */}\r\n      <CustomAlert\r\n        message={alertState.message}\r\n        title={alertState.title}\r\n        type={alertState.type}\r\n        isOpen={alertState.isOpen}\r\n        onClose={() => {\r\n          alertState.onClose()\r\n        }}\r\n        onCancle={() => setAlertState((prev) => ({ ...prev, isOpen: false }))}/>\r\n      \r\n      {/* 로딩 모달 */}\r\n       <LoadingModal \r\n       isLoading={isLoading} \r\n       onClose={() => setIsLoading(false)} \r\n       totalCount={100} \r\n       completedCount={50} \r\n       outboundProgress={75} \r\n       />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListManager;"],"names":[],"mappings":";;;;AAAA;AAGA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AAOA;AAIA;AACA;AAIA;AACA;AACA;AAKA,KAAK;AACL;AACA;AACA;AACA;AAfA;AAAA;AApBA;AA4BA,SAAS;AACT;;;;;;;;;;;;;;;;;;;;;;AAyCA,sBAAsB;AACtB,MAAM,yBAAoD;IACxD,cAAc;IACd,iBAAiB;IACjB,eAAe;IACf,eAAe;IACf,eAAe;IACf,eAAe;IACf,eAAe;IACf,eAAe;IACf,eAAe;IACf,YAAY;AACd;AAEA,gBAAgB;AAChB,MAAM,qBAA+C;IACnD,aAAa;IACb,WAAW;IACX,cAAc,EAAE;AAClB;AAEA,MAAM,mBACJ;IACE,IAAI;IACJ,UAAU;IACV,SAAS;AACX;AAGF,MAAM,eAAmC;IACvC,QAAQ;IACR,SAAS;IACT,OAAO;IACP,MAAM;IACN,SAAS,KAAO;IAChB,UAAU,KAAO;AACnB;AAQA,MAAM,cAAwB;;IAC5B,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,eAAY,AAAD;IACjC,MAAM,EAAE,WAAW,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,2HAAA,CAAA,cAAW,AAAD;IAC9C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACnD,MAAM,CAAC,qBAAqB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA4B;IACxF,MAAM,CAAC,YAAW,cAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACrD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,OAAQ,iBAAiB;IACtE,MAAM,CAAC,oBAAmB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IACrE,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAsB;IACjE,MAAM,CAAC,kBAAiB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe,EAAE;IACvE,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAC9D,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACrD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACjD,MAAM,CAAC,eAAe,iBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU,CAAC;IAC7D,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAC7D,MAAM,CAAC,kBAAiB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAChE,cAAc;IACd,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,QAAQ;IACR,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAEpD,WAAW;IACX,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA2B;IACtE,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IAChE,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAEjE,YAAY;IACZ,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB;IACvE,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAsB;IACnF,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB;IAEjE,oBAAoB;IACpB,MAAM,EAAE,QAAQ,sBAAsB,EAAE,GAAG,CAAA,GAAA,wKAAA,CAAA,6BAA0B,AAAD,EAAE;QACpE,SAAS;sDAAE,CAAC;gBACV,IAAI,gBAAgB,cAAc,MAAM,GAAC,GAAG;oBAC1C;kEAAiB,CAAA,YAAa,YAAY;;oBAC1C,kBAAkB,iBAAe,KAAK,aAAa;oBACnD,oBAAoB,mBAAiB,KAAK,YAAY;gBACxD,OAAK;oBACH,MAAM,MAAM,IAAI;oBAChB,MAAM,QAAQ,IAAI,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;oBACpD,MAAM,UAAU,IAAI,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;oBACxD,MAAM,UAAU,IAAI,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;oBACxD,IAAI,KAAK,WAAW,KAAK,GAAE;wBACzB,MAAM,sBAAsB;4BAAE,GAAG,gBAAgB;4BAC7C,IAAI,aAAa,MAAM,GAAC;4BACxB,UAAU,QAAQ,MAAM,UAAU,MAAM;4BACxC,SAAS,0BAA0B,CAAC,iBAAe,KAAK,aAAa,IAAI,WAAW,CAAC,mBAAiB,KAAK,YAAY,IAAI;wBAC/H;wBACA;sEAAgB,CAAA,OAAQ;oCAAC;uCAAwB;iCAAK;;oBACxD,OAAK;wBACH,MAAM,sBAAsB;4BAAE,GAAG,gBAAgB;4BAC7C,IAAI,aAAa,MAAM,GAAC;4BACxB,UAAU,QAAQ,MAAM,UAAU,MAAM;4BACxC,SAAS,wBAAwB,KAAK,UAAU;wBACpD;wBACA;sEAAgB,CAAA,OAAQ;oCAAC;uCAAwB;iCAAK;;oBACxD;oBACA,iBAAiB,EAAE;oBACnB,YAAY,EAAE;gBAChB;YACF;;QACE,OAAO;sDAAE,CAAC;gBACV,IAAI,KAAK,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,KAAK,KAAK;oBACvC,cAAc;wBACZ,GAAG,YAAY;wBACf,QAAQ;wBACR,SAAS;wBACT,MAAM;wBACN,OAAO;sEAAE,IAAM;;oBACjB;gBACF,OAAO;oBACL,MAAM,MAAM,IAAI;oBAChB,MAAM,QAAQ,IAAI,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;oBACpD,MAAM,UAAU,IAAI,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;oBACxD,MAAM,UAAU,IAAI,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;oBACxD,MAAM,sBAAsB;wBAAE,GAAG,gBAAgB;wBAC7C,IAAI,aAAa,MAAM,GAAC;wBACxB,UAAU,QAAQ,MAAM,UAAU,MAAM;wBACxC,SAAS,mBAAmB,KAAK,OAAO;oBAC5C;oBACA;kEAAgB,CAAA,OAAQ;gCAAC;mCAAwB;6BAAK;;gBACxD;YACF;;IACF;IACA,MAAM,UAAU;QACd,wJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;QACf,OAAO,IAAI,CAAC;IACd;IAEA,kBAAkB;IAClB,MAAM,EAAE,QAAQ,oBAAoB,EAAE,GAAG,CAAA,GAAA,sKAAA,CAAA,2BAAwB,AAAD,EAAE;QAChE,SAAS;oDAAE,CAAC;gBACV,IAAI,gBAAgB,cAAc,MAAM,GAAC,GAAG;oBAC1C;gEAAiB,CAAA,YAAa,YAAY;;oBAC1C,kBAAkB,iBAAe,KAAK,aAAa;oBACnD,oBAAoB,mBAAiB,KAAK,YAAY;gBACxD,OAAK;oBACH,MAAM,MAAM,IAAI;oBAChB,MAAM,QAAQ,IAAI,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;oBACpD,MAAM,UAAU,IAAI,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;oBACxD,MAAM,UAAU,IAAI,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;oBACxD,IAAI,KAAK,WAAW,KAAK,GAAE;wBACzB,MAAM,sBAAsB;4BAAE,GAAG,gBAAgB;4BAC7C,IAAI,aAAa,MAAM,GAAC;4BACxB,UAAU,QAAQ,MAAM,UAAU,MAAM;4BACxC,SAAS,0BAA0B,CAAC,iBAAe,KAAK,aAAa,IAAI,WAAW,CAAC,mBAAiB,KAAK,YAAY,IAAI;wBAC/H;wBACA;oEAAgB,CAAA,OAAQ;oCAAC;uCAAwB;iCAAK;;oBACxD,OAAK;wBACH,MAAM,sBAAsB;4BAAE,GAAG,gBAAgB;4BAC7C,IAAI,aAAa,MAAM,GAAC;4BACxB,UAAU,QAAQ,MAAM,UAAU,MAAM;4BACxC,SAAS,wBAAwB,KAAK,UAAU;wBACpD;wBACA;oEAAgB,CAAA,OAAQ;oCAAC;uCAAwB;iCAAK;;oBACxD;oBACA,iBAAiB,EAAE;oBACnB,YAAY,EAAE;gBAChB;YACF;;QACE,OAAO;oDAAE,CAAC;gBACV,IAAI,KAAK,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,KAAK,KAAK;oBACvC,cAAc;wBACZ,GAAG,YAAY;wBACf,QAAQ;wBACR,SAAS;wBACT,MAAM;wBACN,OAAO;oEAAE,IAAM;;oBACjB;gBACF,OAAO;oBACL,MAAM,MAAM,IAAI;oBAChB,MAAM,QAAQ,IAAI,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;oBACpD,MAAM,UAAU,IAAI,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;oBACxD,MAAM,UAAU,IAAI,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;oBACxD,MAAM,sBAAsB;wBAAE,GAAG,gBAAgB;wBAC7C,IAAI,aAAa,MAAM,GAAC;wBACxB,UAAU,QAAQ,MAAM,UAAU,MAAM;wBACxC,SAAS,mBAAmB,KAAK,OAAO;oBAC5C;oBACA;gEAAgB,CAAA,OAAQ;gCAAC;mCAAwB;6BAAK;;gBACxD;YACF;;IACF;IAEA,sBAAsB;IACtB,MAAM,EAAE,QAAQ,oBAAoB,EAAE,GAAG,CAAA,GAAA,sKAAA,CAAA,2BAAwB,AAAD,EAAE;QAChE,SAAS;oDAAE,CAAC;gBACV,IAAI,gBAAgB,cAAc,MAAM,GAAC,GAAG;oBAC1C;gEAAiB,CAAA,YAAa,YAAY;;gBAC5C,OAAK;oBACH,MAAM,MAAM,IAAI;oBAChB,MAAM,QAAQ,IAAI,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;oBACpD,MAAM,UAAU,IAAI,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;oBACxD,MAAM,UAAU,IAAI,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;oBACxD,IAAI,KAAK,WAAW,KAAK,GAAE;wBACzB,MAAM,sBAAsB;4BAAE,GAAG,gBAAgB;4BAC7C,IAAI,aAAa,MAAM,GAAC;4BACxB,UAAU,QAAQ,MAAM,UAAU,MAAM;4BACxC,SAAS;wBACb;wBACA;oEAAgB,CAAA,OAAQ;oCAAC;uCAAwB;iCAAK;;oBACxD,OAAK;wBACH,MAAM,sBAAsB;4BAAE,GAAG,gBAAgB;4BAC7C,IAAI,aAAa,MAAM,GAAC;4BACxB,UAAU,QAAQ,MAAM,UAAU,MAAM;4BACxC,SAAS,wBAAwB,KAAK,UAAU;wBACpD;wBACA;oEAAgB,CAAA,OAAQ;oCAAC;uCAAwB;iCAAK;;oBACxD;oBACA,iBAAiB,EAAE;oBACnB,YAAY,EAAE;gBAChB;YACF;;QACE,OAAO;oDAAE,CAAC;gBACV,IAAI,KAAK,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,KAAK,KAAK;oBACvC,cAAc;wBACZ,GAAG,YAAY;wBACf,QAAQ;wBACR,SAAS;wBACT,MAAM;wBACN,OAAO;oEAAE,IAAM;;oBACjB;gBACF,OAAO;oBACL,MAAM,MAAM,IAAI;oBAChB,MAAM,QAAQ,IAAI,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;oBACpD,MAAM,UAAU,IAAI,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;oBACxD,MAAM,UAAU,IAAI,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;oBACxD,MAAM,sBAAsB;wBAAE,GAAG,gBAAgB;wBAC7C,IAAI,aAAa,MAAM,GAAC;wBACxB,UAAU,QAAQ,MAAM,UAAU,MAAM;wBACxC,SAAS,mBAAmB,KAAK,OAAO;oBAC5C;oBACA;gEAAgB,CAAA,OAAQ;gCAAC;mCAAwB;6BAAK;;gBACxD;YACF;;IACF;IAEA,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB,EAAE;IAElE,SAAS;IACT,MAAM,uBAAuB;QAC3B,wBAAwB;QACxB,mBAAmB;QACnB,oBAAoB;IACtB;IACA,MAAM,wBAAwB,IAAM,oBAAoB;IAExD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAqB,EAAE;IACpE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IAEtD,gBAAgB;IAChB,MAAM,0BAA0B,CAAC;QAC/B,oBAAoB;QACpB,aAAa,KAAK,SAAS;QAC3B,kBAAkB,KAAK,gBAAgB;QACvC,oBAAoB,KAAK,QAAQ;QACjC,MAAM,WAA8B,KAAK,QAAQ,CAAC,GAAG,CAAC,CAAC,WAAa,CAAC;gBACnE,KAAK,SAAS,KAAK;gBACnB,MAAM,SAAS,IAAI;YACrB,CAAC;QACD,eAAe;IACjB;IAEA,YAAY;IACZ,MAAM,yBAAyB,CAAC;QAC9B,cAAc;QACd,YAAY;QACZ,sBAAsB;YACpB,GAAG,mBAAmB;YACtB,WAAW;QACb;IACF;IAEA,MAAM,mBAAmB,CAAC;QACxB,sBAAsB;QACtB,MAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;QAC5B,IAAI,SAAS,MAAM,MAAM,GAAG,GAAG;YAC7B,IAAG;gBACD,aAAa;gBACb,MAAM,OAAO,KAAK,CAAC,EAAE;gBACrB,IAAI,eAAe,WAAW,KAAK,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG;oBAC9D,cAAc;wBACZ,GAAG,YAAY;wBACf,QAAQ;wBACR,SAAS;wBACT,MAAM;wBACN,SAAS,IAAM,cAAc,CAAC,OAAS,CAAC;oCAAE,GAAG,IAAI;oCAAE,QAAQ;gCAAM,CAAC;oBACpE;gBACF,OAAM,IAAI,eAAe,SAAS,KAAK,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG;oBAChE,cAAc;wBACZ,GAAG,YAAY;wBACf,QAAQ;wBACR,SAAS;wBACT,MAAM;wBACN,SAAS,IAAM,cAAc,CAAC,OAAS,CAAC;oCAAE,GAAG,IAAI;oCAAE,QAAQ;gCAAM,CAAC;oBACpE;gBACF,OAAK;oBACH,MAAM,cAAuB;wBAC3B,IAAI;wBACJ,UAAU,KAAK,IAAI;wBACnB,YAAY,aAAW;wBACvB,UAAU,CAAC,KAAK,IAAI,GAAG,IAAI,EAAE,OAAO,CAAC,KAAK;wBAC1C,WAAW;wBACX,UAAU;oBACZ;oBACA,iBAAiB,CAAC,OAAS;+BAAI;4BAAM;yBAAY;oBACjD,oBAAoB,KAAK,IAAI;oBAE7B,MAAM,MAAM,IAAI;oBAChB,MAAM,QAAQ,IAAI,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;oBACpD,MAAM,UAAU,IAAI,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;oBACxD,MAAM,UAAU,IAAI,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;oBACxD,MAAM,sBAAsB;wBAAE,GAAG,gBAAgB;wBAC7C,IAAI,aAAa,MAAM,GAAC;wBACxB,UAAU,QAAQ,MAAM,UAAU,MAAM;wBACxC,SAAS,oBAAoB,CAAC,cAAc,MAAM,GAAC,CAAC;oBACxD;oBACA,gBAAgB,CAAA,OAAQ;4BAAC;+BAAwB;yBAAK;oBAEtD,MAAM,SAAS,IAAI;oBACnB,IAAI,eAAe,WAAW,KAAK,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG;wBAC5D,OAAO,MAAM,GAAG,CAAC;4BACf,MAAM,cAAc,MAAM,MAAM,EAAE;4BAElC,IAAI,aAAa;gCACf,MAAM,WAAW,iIAAK,IAAI,CAAC,aAAa;oCAAE,MAAM;gCAAQ;gCAExD,MAAM,YAAY,SAAS,UAAU,CAAC,EAAE;gCACxC,MAAM,YAAY,SAAS,MAAM,CAAC,UAAU;gCAE5C,MAAM,OAAO,iIAAK,KAAK,CAAC,aAAa,CAAC,WAAW;oCAAE,QAAQ;gCAAE;gCAE7D,IAAI,KAAK,MAAM,GAAG,GAAG;oCACnB,IAAI,QAAQ;oCACZ,MAAM,eAA0B,EAAE;oCAClC,IAAI,IAAI,IAAE,GAAG,IAAG,KAAK,MAAM,EAAC,IAAI;wCAC9B,MAAM,MAAM,IAAI,CAAC,EAAE;wCACnB,QAAQ,QAAM;wCAEd,MAAM,WAAoB;4CACxB,IAAI,SAAO,OAAK;4CAChB,QAAQ;4CACR,MAAM;4CACN,MAAM;4CACN,MAAM;4CACN,MAAM;4CACN,MAAM;4CACN,MAAM;4CACN,MAAM;4CACN,MAAM;4CACN,MAAM;4CACN,MAAM;4CACN,MAAM;4CACN,MAAM;4CACN,MAAM;4CACN,MAAM;4CACN,MAAM;4CACN,YAAY;4CACZ,MAAM;wCACR;wCACA,IAAI,IAAI,MAAM,GAAG,GAAE;4CACjB,IAAI,UAAU,IAAI,MAAM;4CACxB,IAAI,UAAU,YAAY,MAAM,EAAC;gDAC/B,UAAU,YAAY,MAAM;4CAC9B;4CACA,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,IAAK;gDAChC,MAAM,MAAM,WAAW,CAAC,EAAE,CAAC,GAAG;gDAC9B,IAAI,OAAO,UAAU;oDACnB,IAAI,OAAO,QAAQ,YAAY,OAAO,UAAU;wDAC9C,IAAI,OAAO,QAAQ,YAAY,OAAO,UAAU;4DAC7C,QAAgB,CAAC,IAAI,GAAG,GAAG,CAAC,EAAE,IAAc;wDAC/C;oDACF;gDACF;4CACF;4CACA,aAAa,IAAI,CAAC;wCACpB;oCAEF;oCACA,YAAY,CAAA,OAAQ;+CAAI;+CAAS;yCAAa;gCAChD;4BAEF;wBAEF;wBACA,OAAO,iBAAiB,CAAC;oBAC3B,OAAM,IAAI,eAAe,SAAS,KAAK,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG;wBACjE,OAAO,MAAM,GAAG,CAAC;4BACf,MAAM,cAAc,MAAM,MAAM,EAAE;4BAClC,QAAQ,GAAG,CAAC,iBAAiB;4BAC7B,IAAI,eAAe,QAAQ,gBAAgB,IAAI;gCAC7C,IAAI,WAAW,EAAE;gCACjB,IAAI,CAAC,cAAY,EAAE,EAAE,OAAO,CAAC,UAAU,CAAC,GAAE;oCACxC,WAAW,CAAC,cAAY,EAAE,EAAE,KAAK,CAAC;gCACpC,OAAK;oCACH,WAAW,CAAC,cAAY,EAAE,EAAE,KAAK,CAAC;gCACpC;gCACA,IAAI,QAAQ;gCACZ,MAAM,eAA0B,EAAE;gCAClC,IAAK,IAAI,IAAE,GAAE,IAAE,SAAS,MAAM,EAAC,IAAI;oCACjC,yDAAyD;oCACzD,QAAQ,QAAM;oCAEd,MAAM,WAAoB;wCACxB,IAAI,SAAO,OAAK;wCAChB,QAAQ;wCACR,MAAM;wCACN,MAAM;wCACN,MAAM;wCACN,MAAM;wCACN,MAAM;wCACN,MAAM;wCACN,MAAM;wCACN,MAAM;wCACN,MAAM;wCACN,MAAM;wCACN,MAAM;wCACN,MAAM;wCACN,MAAM;wCACN,MAAM;wCACN,MAAM;wCACN,YAAY;wCACZ,MAAM;oCACR;oCACA,WAAW;oCACX,IAAI,cAAc,IAAI;wCACpB,IAAI,IAAI,IAAE,GAAE,IAAE,iBAAiB,MAAM,EAAC,IAAI;4CACxC,MAAM,MAAM,gBAAgB,CAAC,EAAE,CAAC,KAAK;4CACrC,yBAAyB;4CACzB,sDAAsD;4CACtD,wDAAwD;4CACxD,gKAAgK;4CAChK,QAAQ;4CACR,MAAM;4CACN,IAAI;4CACJ,IAAI,OAAO,UAAU;gDACnB,uDAAuD;gDACvD,MAAM,qBAAqB,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,gBAAgB,CAAC,EAAE,CAAC,KAAK,GAAG,GAAG,gBAAgB,CAAC,EAAE,CAAC,KAAK,GAAG,gBAAgB,CAAC,EAAE,CAAC,MAAM,GAAG;gDAEzI,IAAI,OAAO,QAAQ,YAAY,OAAO,UAAU;oDAC9C,MAAM,aAAa,cAAc;oDAEjC,4EAA4E;oDAC5E,IAAI,cAAc,gBAAgB,CAAC,EAAE,CAAC,MAAM,EAAE;wDAC3C,QAAgB,CAAC,IAAI,GAAG,sBAAsB,IAAK,gDAAgD;oDACtG,OAAO;wDACL,yFAAyF;wDACxF,QAAgB,CAAC,IAAI,GAAG,mBAAmB,KAAK,CAAC,GAAG,gBAAgB,CAAC,EAAE,CAAC,MAAM;oDACjF;gDACF;4CACF;wCACF;wCACA,aAAa,IAAI,CAAC;oCAElB,SAAS;oCACX,OAAK;wCACH,MAAM,MAAM,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;wCAC9B,IAAI,IAAI,MAAM,GAAG,GAAE;4CACjB,IAAI,UAAU,IAAI,MAAM;4CACxB,IAAI,UAAU,YAAY,MAAM,EAAC;gDAC/B,UAAU,YAAY,MAAM;4CAC9B;4CACA,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,IAAK;gDAChC,MAAM,MAAM,WAAW,CAAC,EAAE,CAAC,GAAG;gDAC9B,IAAI,OAAO,UAAU;oDACnB,IAAI,OAAO,QAAQ,YAAY,OAAO,UAAU;wDAC9C,IAAI,OAAO,QAAQ,YAAY,OAAO,UAAU;4DAC7C,QAAgB,CAAC,IAAI,GAAG,GAAG,CAAC,EAAE,IAAc;wDAC/C;oDACF;gDACF;4CACF;4CACA,aAAa,IAAI,CAAC;wCACpB;oCACF;gCACF;gCACA,YAAY,CAAA,OAAQ;2CAAI;2CAAS;qCAAa;4BAChD;wBACA,wCAAwC;wBAC1C;wBACA,OAAO,UAAU,CAAC;oBACpB,OAAK;wBACH,cAAc;4BACZ,GAAG,YAAY;4BACf,QAAQ;4BACR,SAAS;4BACT,MAAM;4BACN,SAAS,IAAM,cAAc,CAAC,OAAS,CAAC;wCAAE,GAAG,IAAI;wCAAE,QAAQ;oCAAM,CAAC;wBACpE;oBACF;oBACA,6BAA6B;oBAC7B,OAAO,OAAO,GAAG,CAAC;wBAChB,QAAQ,KAAK,CAAC,uBAAuB;oBACvC;gBACF;YACF,EAAE,OAAO,GAAG;gBACV,QAAQ,KAAK,CAAC,0BAA0B;YAE1C,SAAQ;gBACN,UAAU,SAAS;gBACnB,aAAa;YACf;QACF,EAAC,uBAAuB;QACxB,EAAE,MAAM,CAAC,KAAK,GAAG;IACnB;IAEA,MAAM,gBAAgB,CAAC;QACrB,MAAM,UAAU,IAAI;QACpB,MAAM,UAAU,QAAQ,MAAM,CAAC;QAC/B,OAAO,QAAQ,MAAM;IACvB;IAEA,aAAa;IACb,MAAM,kBAAkB;QACtB,oBAAoB;QACpB,cAAc;QACd,gBAAgB;QAChB,wBAAwB;QACxB,mBAAmB;QACnB,sBAAsB;IACxB;IAEA,WAAW;IACX,MAAM,mBAAmB;QACvB,IAAI,YAAY,MAAM,KAAK,GAAG;YAC5B,cAAc;gBACZ,GAAG,YAAY;gBACf,QAAQ;gBACR,SAAS;gBACT,MAAM;gBACN,SAAS,IAAM,cAAc,CAAC,OAAS,CAAC;4BAAE,GAAG,IAAI;4BAAE,QAAQ;wBAAM,CAAC;YACpE;QACF,OAAM,IAAI,eAAe,GAAE;YACzB,cAAc;gBACZ,GAAG,YAAY;gBACf,QAAQ;gBACR,SAAS;gBACT,MAAM;gBACN,SAAS,IAAM,cAAc,CAAC,OAAS,CAAC;4BAAE,GAAG,IAAI;4BAAE,QAAQ;wBAAM,CAAC;YACpE;QACF,OAAK;YACH,MAAM,YAAY,SAAS,cAAc,CAAC;YAC1C,IAAI,WAAU;gBACZ,IAAI,eAAe,SAAQ;oBACzB,UAAU,MAAM,GAAG;gBACrB,OAAK;oBACH,UAAU,MAAM,GAAG;gBACrB;gBACA,UAAU,KAAK;YACjB;QACF;IACF;IAEA,SAAS;IACT,MAAM,mBAAmB;QACvB,IAAI,cAAc;YAChB,iBAAiB,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAA,OAAQ,KAAK,EAAE,KAAK,aAAa,EAAE;YACxE,YAAY,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAA,OAAQ,KAAK,MAAM,KAAK,aAAa,EAAE;YACvE,gBAAgB;YAChB,oBAAoB;QACtB;IACF;IAEA,WAAW;IACX,MAAM,yBAAyB,CAAC,EAAE,GAAG,EAA8B;QACjE,uBAAuB;IACzB;IAEA,MAAM,qBAAqB,CAAC,EAAE,GAAG,EAA0B;QACzD,gBAAgB;QAChB,oBAAoB,IAAI,QAAQ;QAChC,cAAc,IAAI,UAAU,CAAC,UAAU,CAAC,OAAO,YAAY;IAC7D;IAEA,eAAe;IACf,MAAM,kBAAkB,CAAC;QACvB,OAAO,cAAc,OAAO,IAAI,EAAE,GAAG,iBAAiB;IACxD;IAEA,MAAM,sBAAsB,CAAC;QAC3B,OAAO,qBAAqB,OAAO,IAAI,EAAE,GAAG,iBAAiB;IAC/D;IAEA,eAAe;IACf,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;wCAAqB,IAAM;gBAC/C;oBAAE,KAAK;oBAAY,MAAM;gBAAQ;gBACjC;oBAAE,KAAK;oBAAc,MAAM;gBAAS;gBACpC;oBAAE,KAAK;oBAAY,MAAM;gBAAQ;gBACjC;oBACE,KAAK;oBACL,MAAM;oBACN,SAAS;wDAAE,CAAC,EAAE,GAAG,EAAoB,iBACnC,6LAAC,0JAAA,CAAA,iBAAc;gCACb,SAAS,IAAI,SAAS;gCACtB,QAAQ;oEAAE,IACR;4EAAiB,CAAC,OAChB,KAAK,GAAG;oFAAC,CAAC,OACR,KAAK,EAAE,KAAK,IAAI,EAAE,GACd;4DAAE,GAAG,IAAI;4DAAE,WAAW,CAAC,KAAK,SAAS;wDAAC,IACtC;;;;;;;;;;gBAMhB;aACD;uCAAE,EAAE;IAEL,MAAM,kBAAkB,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;gDAAyB,IAAM;gBAC3D;oBAAE,KAAK;oBAAY,MAAM;gBAAK;gBAC9B;oBAAE,KAAK;oBAAW,MAAM;gBAAO;aAChC;+CAAE,EAAE;IAEL,sBAAsB;IACtB,MAAM,mBAAmB,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;iDAAe,IAC5C,eAAe,IAAI,IAAI;gBAAC,aAAa,EAAE;aAAC,IAAI,IAAI;gDAChD;QAAC;KAAa;IAEhB,MAAM,mBAAmB,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;iDAAE,IAC/B,kBAAkB,IAAI,IAAI;gBAAC,gBAAgB,EAAE;aAAC,IAAI,IAAI;gDACtD;QAAC;KAAgB;IAEnB,MAAM,uBAAuB,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;qDAAE,IACnC,sBAAsB,IAAI,IAAI;gBAAC,oBAAoB,EAAE;aAAC,IAAI,IAAI;oDAC9D;QAAC;KAAoB;IAEvB,eAAe;IACf,MAAM,kBAAkB;QACtB,IAAI,cAAc,MAAM,KAAK,GAAG;YAC9B,6BAA6B;YAC7B,kCAAkC;YAClC,cAAc;gBACZ,GAAG,YAAY;gBACf,QAAQ;gBACR,SAAS;gBACT,MAAM;gBACN,SAAS,IAAM,cAAc,CAAC,OAAS,CAAC;4BAAE,GAAG,IAAI;4BAAE,QAAQ;wBAAM,CAAC;YACpE;QACF,OAAO,IAAK,oBAAoB,WAAW,KAAK,GAAG;YACjD,cAAc;gBACZ,GAAG,YAAY;gBACf,QAAQ;gBACR,SAAS;gBACT,MAAM;gBACN,SAAS,IAAM,cAAc,CAAC,OAAS,CAAC;4BAAE,GAAG,IAAI;4BAAE,QAAQ;wBAAM,CAAC;YACpE;QACF,OAAO;YACL,uBAAuB;YACvB,qBAAqB;YACrB,MAAM,MAAM,IAAI;YAChB,MAAM,QAAQ,IAAI,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;YACpD,MAAM,UAAU,IAAI,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;YACxD,MAAM,UAAU,IAAI,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;YACxD,MAAM,sBAAsB;gBAAE,GAAG,gBAAgB;gBAC7C,IAAI,aAAa,MAAM,GAAC;gBACxB,UAAU,QAAQ,MAAM,UAAU,MAAM;gBACxC,SAAS;YACb;YACA,gBAAgB,CAAA,OAAQ;oBAAC;uBAAwB;iBAAK;YAEtD,iBAAiB;QAEnB;IACF;IAEA,oBAAoB;IACpB,MAAM,qBAAqB,CAAC,OAAe;QACzC,IAAI,SAAS,cAAc;YACzB,cAAc,OAAO;YACrB,sBAAsB;gBACpB,GAAG,mBAAmB;gBACtB,aAAa,OAAO;YACtB;QACF;QACA,IAAI,SAAS,YAAW;YACtB,YAAY;YACZ,sBAAsB;gBACpB,GAAG,mBAAmB;gBACtB,WAAW;YACb;QACF;IACF;IAEA,yBAAyB;IACzB,MAAM,iBAAiB,CAAC,SAAiB;QACvC,IAAI,SAAS,cAAc;YACzB,cAAc;YACd,IAAI,SAAS;gBACX,YAAY;gBACZ,sBAAsB;oBACpB,GAAG,mBAAmB;oBACtB,WAAW;gBACb;YACF,OAAK;gBACH,YAAY;gBACZ,sBAAsB;oBACpB,GAAG,mBAAmB;oBACtB,WAAW;gBACb;YACF;QACF;IACF;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR,IAAI,gBAAgB,GAAG;gBACrB,MAAM,WAAW,WAAW,MAAM;sDAAC,CAAA,MAAO,IAAI,EAAE,KAAK;;gBACrD,IAAI,SAAS,MAAM,GAAG,KAAK,QAAQ,CAAC,EAAE,CAAC,UAAU,IAAI,QAAQ,CAAC,EAAE,CAAC,YAAY,EAAE;oBAC7E,MAAM,cAAc,OAAO,QAAQ,CAAC,EAAE,CAAC,UAAU;oBACjD,cAAc;oBACd,sBAAsB;wBACpB,GAAG,mBAAmB;wBACtB,aAAa;oBACf;oBACA,sBAAsB;gBACxB;YACF;QACF;gCAAG;QAAC;QAAa;KAAW;IAE5B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR,IAAI,gBAAgB,CAAC,GAAG;gBAEtB,MAAM,MAAM,IAAI;gBAChB,MAAM,QAAQ,IAAI,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;gBACpD,MAAM,UAAU,IAAI,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;gBACxD,MAAM,UAAU,IAAI,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;gBACxD,MAAM,sBAAsB;oBAAE,GAAG,gBAAgB;oBAC7C,IAAI,aAAa,MAAM,GAAC;oBACxB,UAAU,QAAQ,MAAM,UAAU,MAAM;oBACxC,SAAS,AAAC,gBAAc,IAAG;gBAC/B;gBACA;6CAAgB,CAAA,OAAQ;4BAAC;+BAAwB;yBAAK;;gBAEtD,MAAM,WAAuC,EAAE;gBAC/C,IAAI,gBAAgB;gBACpB,IAAK,IAAI,IAAE,GAAE,IAAE,SAAS,MAAM,EAAC,IAAI;oBACjC,IAAI,aAAa,CAAC,cAAc,CAAC,EAAE,KAAK,QAAQ,CAAC,EAAE,CAAC,MAAM,EAAE;wBAC1D,SAAS,IAAI,CAAC;4BACZ,cAAc,QAAQ,CAAC,EAAE,CAAC,IAAI,GAAC;4BAC7B,iBAAiB;4BACnB,eAAe,QAAQ,CAAC,EAAE,CAAC,IAAI,GAAC;4BAChC,eAAe,QAAQ,CAAC,EAAE,CAAC,IAAI,GAAC;4BAChC,eAAe,QAAQ,CAAC,EAAE,CAAC,IAAI,GAAC;4BAChC,eAAe,QAAQ,CAAC,EAAE,CAAC,IAAI,GAAC;4BAChC,eAAe,QAAQ,CAAC,EAAE,CAAC,IAAI,GAAC;4BAChC,eAAe,QAAQ,CAAC,EAAE,CAAC,IAAI,GAAC;4BAChC,eAAe,QAAQ,CAAC,EAAE,CAAC,IAAI,GAAC;4BAChC,YAAY,QAAQ,CAAC,EAAE,CAAC,IAAI,GAAC;wBAC/B;oBACF;gBACF;gBACA,MAAM,wBAAkD;oBACtD,GAAG,mBAAmB;oBACpB,aAAa,OAAO,aAAa,CAAC,cAAc,CAAC,UAAU;oBAC3D,WAAW,aAAa,CAAC,cAAc,CAAC,QAAQ,GAAC;oBACjD,cAAc;gBAClB;gBAEA,IAAI,aAAa,CAAC,cAAc,CAAC,QAAQ,KAAK,KAAI;oBAChD,qBAAqB,OAAO,aAAa,CAAC,cAAc,CAAC,UAAU;gBACrE,OAAM,IAAI,eAAe,WAAW;oBAClC,uBAAuB;gBACzB,OAAK;oBACH,qBAAqB;gBACvB;YACF;QACF;gCAAG;QAAC;KAAc;IAElB,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,qJAAA,CAAA,UAAS;oCACR,OAAM;oCACN,WAAU;oCACV,SAAS;wCACP;4CAAE,OAAO;4CAAY,SAAS;wCAAqB;wCACnD;4CAAE,OAAO;4CAAS,SAAS;wCAAe;qCAC3C;;;;;;8CAEH,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;sDAA4B;;;;;;sDAG3C,6LAAC,yJAAA,CAAA,UAAQ;4CACP,SAAS;4CACT,MAAM;4CACN,WAAU;4CACV,WAAW;4CACX,iBAAiB;4CACjB,UAAU;4CACV,cAAc,CAAC,MAAQ,IAAI,EAAE;4CAC7B,aAAa;4CACb,cAAc;;;;;;;;;;;;;;;;;;;;;;;kCAOtB,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,qJAAA,CAAA,UAAS;oCACR,OAAM;oCACN,WAAU;oCACV,SAAS;wCACP;4CAAE,OAAO;4CAAU,SAAS;wCAAe;wCAC3C;4CAAE,OAAO;4CAAY,SAAS;wCAAiB;wCAC/C;4CAAE,OAAO;4CAAa,SAAS;4CAAkB,UAAU,CAAC;wCAAY;qCACzE;;;;;;8CAEH,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;;8DACb,6LAAC,oIAAA,CAAA,QAAK;oDAAC,WAAU;8DAA0B;;;;;;8DAC3C,6LAAC,wJAAA,CAAA,SAAM;oDAAC,OAAO,oBAAoB,WAAW,GAAC;oDAC/C,eAAe,CAAC,QAAU,mBAAmB,OAAO;oDACpD,cAAa;oDAAI,UAAU;;sEAEzB,6LAAC,wJAAA,CAAA,gBAAa;4DAAC,WAAU;sEACvB,cAAA,6LAAC,wJAAA,CAAA,cAAW;gEAAC,aAAY;;;;;;;;;;;sEAE3B,6LAAC,wJAAA,CAAA,gBAAa;4DAAE,OAAO;gEAAE,WAAW;gEAAS,WAAW;4DAAO;;8EAC7D,6LAAC,wJAAA,CAAA,aAAU;oEAAS,OAAM;8EAAI;mEAAd;;;;;gEACf,UAAU,GAAG,CAAC,CAAA,uBACb,6LAAC,wJAAA,CAAA,aAAU;wEAA0B,OAAO,OAAO,WAAW,CAAC,QAAQ;;4EAAI;4EACvE,OAAO,WAAW;4EAAC;4EAAE,OAAO,aAAa;;uEAD5B,OAAO,WAAW;;;;;;;;;;;;;;;;;8DAMzC,6LAAC,uJAAA,CAAA,cAAW;oDACV,WAAU;oDACV,OAAO;oDACP,QAAQ;;;;;;;;;;;;sDAGZ,6LAAC;4CAAI,WAAU;;8DACb,6LAAC,oIAAA,CAAA,QAAK;oDAAC,WAAU;8DAA0B;;;;;;8DAC3C,6LAAC,uJAAA,CAAA,cAAW;oDACV,cAAa;oDACb,WAAU;oDACV,OAAO;oDACP,eAAe,CAAC,QAAU,cAAc;;sEAExC,6LAAC;4DAAI,WAAU;;8EACb,6LAAC,uJAAA,CAAA,kBAAe;oEAAC,OAAM;oEAAQ,IAAG;;;;;;8EAClC,6LAAC,oIAAA,CAAA,QAAK;oEAAC,SAAQ;8EAAQ;;;;;;;;;;;;sEAEzB,6LAAC;4DAAI,WAAU;;8EACb,6LAAC,uJAAA,CAAA,kBAAe;oEAAC,OAAM;oEAAM,IAAG;;;;;;8EAChC,6LAAC,oIAAA,CAAA,QAAK;oEAAC,SAAQ;8EAAM;;;;;;;;;;;;;;;;;;;;;;;;sDAI3B,6LAAC;4CAAI,WAAU;;8DACb,6LAAC,oIAAA,CAAA,QAAK;oDAAC,WAAU;8DAA0B;;;;;;8DAC3C,6LAAC,uJAAA,CAAA,cAAW;oDACV,cAAa;oDACb,WAAU;oDACV,eAAe;;sEAEf,6LAAC;4DAAI,WAAU;;8EACb,6LAAC,uJAAA,CAAA,kBAAe;oEAAC,OAAM;oEAAU,IAAG;;;;;;8EACpC,6LAAC,oIAAA,CAAA,QAAK;oEAAC,SAAQ;8EAAU;;;;;;;;;;;;sEAE3B,6LAAC;4DAAI,WAAU;;8EACb,6LAAC,uJAAA,CAAA,kBAAe;oEAAC,OAAM;oEAAY,IAAG;;;;;;8EACtC,6LAAC,oIAAA,CAAA,QAAK;oEAAC,SAAQ;8EAAY;;;;;;;;;;;;;;;;;;gDAI9B,eAAe,0BACd,6LAAC;oDAAI,WAAU;;sEACb,6LAAC,0JAAA,CAAA,iBAAc;4DAAC,IAAG;4DAAa,SAAS;4DACvC,iBAAiB,CAAC,UAAY,eAAe,YAAY,MAAM;;;;;;sEACjE,6LAAC,oIAAA,CAAA,QAAK;4DAAC,SAAQ;4DAAa,WAAU;sEAAU;;;;;;;;;;;yEAKlD,6LAAC,wJAAA,CAAA,SAAM;oDAAC,OAAO,oBAAoB,SAAS;oDAC5C,eAAe,CAAC,QAAU,mBAAmB,OAAO;oDACpD,cAAa;;sEAEX,6LAAC,wJAAA,CAAA,gBAAa;sEACZ,cAAA,6LAAC,wJAAA,CAAA,cAAW;gEAAC,aAAY;;;;;;;;;;;sEAE3B,6LAAC,wJAAA,CAAA,gBAAa;;8EACZ,6LAAC,wJAAA,CAAA,aAAU;oEAAC,OAAM;8EAAI;;;;;;8EACtB,6LAAC,wJAAA,CAAA,aAAU;oEAAC,OAAM;8EAAI;;;;;;8EACtB,6LAAC,wJAAA,CAAA,aAAU;oEAAC,OAAM;8EAAI;;;;;;8EACtB,6LAAC,wJAAA,CAAA,aAAU;oEAAC,OAAM;8EAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAUtC,6LAAC;gBAAI,WAAU;;kCACf,6LAAC,2JAAA,CAAA,UAAU;wBAAC,YAAY;wBAAa,WAAW;;;;;;kCAC9C,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;8CAA4B;;;;;;8CAG3C,6LAAC,yJAAA,CAAA,UAAQ;oCACP,SAAS;oCACT,MAAM;oCACN,WAAU;oCACV,WAAW;oCACX,iBAAiB;oCACjB,cAAc,CAAC,MAAQ,IAAI,EAAE;oCAC7B,UAAU;oCACV,aAAa;oCACb,cAAc,sBAAsB,IAAI,IAAI;wCAAC,oBAAoB,EAAE;qCAAC,IAAI,IAAI;;;;;;;;;;;;;;;;;;;;;;;0BAOpF,6LAAC;gBACC,MAAK;gBACL,IAAG;gBACH,WAAU;gBACV,UAAU;;;;;;0BAIX,6LAAC,2JAAA,CAAA,UAAU;gBACV,QAAQ;gBACR,WAAW;gBACX,SAAS;;;;;;0BAIX,6LAAC,wJAAA,CAAA,UAAW;gBACV,SAAS,WAAW,OAAO;gBAC3B,OAAO,WAAW,KAAK;gBACvB,MAAM,WAAW,IAAI;gBACrB,QAAQ,WAAW,MAAM;gBACzB,SAAS;oBACP,WAAW,OAAO;gBACpB;gBACA,UAAU,IAAM,cAAc,CAAC,OAAS,CAAC;4BAAE,GAAG,IAAI;4BAAE,QAAQ;wBAAM,CAAC;;;;;;0BAGpE,6LAAC,6JAAA,CAAA,UAAY;gBACb,WAAW;gBACX,SAAS,IAAM,aAAa;gBAC5B,YAAY;gBACZ,gBAAgB;gBAChB,kBAAkB;;;;;;;;;;;;AAIzB;GA55BM;;QACW,qIAAA,CAAA,YAAS;QACF,4HAAA,CAAA,eAAY;QACE,2HAAA,CAAA,cAAW;QAgCJ,wKAAA,CAAA,6BAA0B;QA2D5B,sKAAA,CAAA,2BAAwB;QAuDxB,sKAAA,CAAA,2BAAwB;;;KArJ7D;uCA85BS"}},
    {"offset": {"line": 3086, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}