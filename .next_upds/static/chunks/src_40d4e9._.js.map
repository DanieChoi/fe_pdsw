{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/widgets/header/model/menuItems.ts"],"sourcesContent":["// src/widgets/header/model/menuItems.ts\r\nexport interface MenuItem {\r\n  id: number;\r\n  menuId: number;\r\n  title: string;\r\n  icon: string;\r\n  href: string;\r\n  content?: null;\r\n  uniqueKey?: string;\r\n}\r\n\r\nexport const menuItems: MenuItem[] = [\r\n  { \r\n    id: 1,\r\n    menuId: 1,\r\n    title: '캠페인 그룹관리', \r\n    icon: '/header-menu/캠페인그룹관리.svg', \r\n    href: '/main',\r\n    content: null\r\n  },\r\n  { \r\n    id: 2,\r\n    menuId: 2,\r\n    title: '캠페인 관리', \r\n    icon: '/header-menu/캠페인관리.svg', \r\n    href: '/campaign',\r\n    content: null\r\n  },\r\n  { \r\n    id: 3,\r\n    menuId: 3,\r\n    title: '통합모니터', \r\n    icon: '/header-menu/통합모니터.svg', \r\n    href: '/monitor',\r\n    content: null\r\n  },\r\n  { \r\n    id: 4,\r\n    menuId: 4,\r\n    title: '총진행상황', \r\n    icon: '/header-menu/총진행상황.svg', \r\n    href: '/status',\r\n    content: null\r\n  },\r\n  { \r\n    id: 5,\r\n    menuId: 5,\r\n    title: '발신진행상태', \r\n    icon: '/header-menu/발신진행상태.svg', \r\n    href: '/call',\r\n    content: null\r\n  },\r\n  { \r\n    id: 14,\r\n    menuId: 6,\r\n    title: '캠페인별상태', \r\n    icon: '/header-menu/캠페인별상태.svg', \r\n    href: '/chartCampaign',\r\n    content: null\r\n  },\r\n  { \r\n    id: 6,\r\n    menuId: 7,\r\n    title: '채널 모니터', \r\n    icon: '/header-menu/채널모니터.svg', \r\n    href: '/channel',\r\n    content: null\r\n  },\r\n  { \r\n    id: 23,\r\n    menuId: 8,\r\n    title: '시스템모니터링', \r\n    icon: '/header-menu/시스템모니터링.svg', \r\n    href: '/settings',\r\n    content: null\r\n  },\r\n  { \r\n    id: 7,\r\n    menuId: 9,\r\n    title: '리스트 매니저', \r\n    icon: '/header-menu/리스트매니저.svg', \r\n    href: '/list',\r\n    content: null\r\n  },\r\n  { \r\n    id: 8,\r\n    menuId: 10,\r\n    title: '예약콜 제한 설정', \r\n    icon: '/header-menu/예약콜제한설정.svg', \r\n    href: '/reserve',\r\n    content: null\r\n  },\r\n  { \r\n    id: 9,\r\n    menuId: 11,\r\n    title: '분배호수 제한 설정', \r\n    icon: '/header-menu/분배호수제한설정.svg', \r\n    href: '/distribute',\r\n    content: null\r\n  },\r\n  { \r\n    id: 10,\r\n    menuId: 12,\r\n    title: '시스템 설정', \r\n    icon: '/header-menu/시스템설정.svg', \r\n    href: '/system',\r\n    content: null\r\n  },\r\n  { \r\n    id: 11,\r\n    menuId: 13,\r\n    title: '운영 설정', \r\n    icon: '/header-menu/운영설정.svg', \r\n    href: '/operation',\r\n    content: null\r\n  },\r\n  { \r\n    id: 12,\r\n    menuId: 14,\r\n    title: '환경 설정', \r\n    icon: '/header-menu/환경설정.svg', \r\n    href: '/settings',\r\n    content: null\r\n  },\r\n];"],"names":[],"mappings":"AAAA,wCAAwC;;;;AAWjC,MAAM,YAAwB;IACnC;QACE,IAAI;QACJ,QAAQ;QACR,OAAO;QACP,MAAM;QACN,MAAM;QACN,SAAS;IACX;IACA;QACE,IAAI;QACJ,QAAQ;QACR,OAAO;QACP,MAAM;QACN,MAAM;QACN,SAAS;IACX;IACA;QACE,IAAI;QACJ,QAAQ;QACR,OAAO;QACP,MAAM;QACN,MAAM;QACN,SAAS;IACX;IACA;QACE,IAAI;QACJ,QAAQ;QACR,OAAO;QACP,MAAM;QACN,MAAM;QACN,SAAS;IACX;IACA;QACE,IAAI;QACJ,QAAQ;QACR,OAAO;QACP,MAAM;QACN,MAAM;QACN,SAAS;IACX;IACA;QACE,IAAI;QACJ,QAAQ;QACR,OAAO;QACP,MAAM;QACN,MAAM;QACN,SAAS;IACX;IACA;QACE,IAAI;QACJ,QAAQ;QACR,OAAO;QACP,MAAM;QACN,MAAM;QACN,SAAS;IACX;IACA;QACE,IAAI;QACJ,QAAQ;QACR,OAAO;QACP,MAAM;QACN,MAAM;QACN,SAAS;IACX;IACA;QACE,IAAI;QACJ,QAAQ;QACR,OAAO;QACP,MAAM;QACN,MAAM;QACN,SAAS;IACX;IACA;QACE,IAAI;QACJ,QAAQ;QACR,OAAO;QACP,MAAM;QACN,MAAM;QACN,SAAS;IACX;IACA;QACE,IAAI;QACJ,QAAQ;QACR,OAAO;QACP,MAAM;QACN,MAAM;QACN,SAAS;IACX;IACA;QACE,IAAI;QACJ,QAAQ;QACR,OAAO;QACP,MAAM;QACN,MAAM;QACN,SAAS;IACX;IACA;QACE,IAAI;QACJ,QAAQ;QACR,OAAO;QACP,MAAM;QACN,MAAM;QACN,SAAS;IACX;IACA;QACE,IAAI;QACJ,QAAQ;QACR,OAAO;QACP,MAAM;QACN,MAAM;QACN,SAAS;IACX;CACD"}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/widgets/header/model/contextMenuItems.ts"],"sourcesContent":["export const contextMenuItems = [\r\n    {\r\n      id: 20,\r\n      title: \"재발신 설정\",\r\n      icon: \"/header-menu/발신진행상태.svg\",\r\n      href: \"/rebroadcast\",\r\n      showInHeader: false\r\n    },\r\n    {\r\n      id: 21,\r\n      title: \"총진행상황\",\r\n      icon: \"/header-menu/총진행상황.svg\",\r\n      href: \"/status\",\r\n      showInHeader: false\r\n    },\r\n    {\r\n      id: 22,\r\n      title: \"상담사상태모니터링\",\r\n      icon: \"/header-menu/총진행상황.svg\",\r\n      href: \"/status\",\r\n      showInHeader: false\r\n    }\r\n  ];"],"names":[],"mappings":";;;AAAO,MAAM,mBAAmB;IAC5B;QACE,IAAI;QACJ,OAAO;QACP,MAAM;QACN,MAAM;QACN,cAAc;IAChB;IACA;QACE,IAAI;QACJ,OAAO;QACP,MAAM;QACN,MAAM;QACN,cAAc;IAChB;IACA;QACE,IAAI;QACJ,OAAO;QACP,MAAM;QACN,MAAM;QACN,cAAc;IAChB;CACD"}},
    {"offset": {"line": 163, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 169, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/widgets/sidebar/api/apiForAddCampaginForCampaignGroup.ts"],"sourcesContent":["import { axiosInstance } from \"@/lib/axios\";\r\nimport {\r\n  SkillListRequest,\r\n  SkillListResponse,\r\n  CampaignListRequest,\r\n  CampaignListResponse,\r\n  CampaignSkillsRequest,\r\n  CampaignSkillsResponse,\r\n  CampaignGroupSkillsResponse,\r\n  CampaignGroupSkillsRequest\r\n} from \"@/widgets/sidebar/api/type/typeForAddCampaignForCampaignGroup\";\r\n\r\n/**\r\n * 모든 스킬 정보를 가져오는 API 함수\r\n * @param request 스킬 조회 요청 정보\r\n * @returns Promise<SkillListResponse> 스킬 목록 응답 데이터\r\n */\r\nexport const apiForTotalSkillList = async (\r\n  request: SkillListRequest\r\n): Promise<SkillListResponse> => {\r\n  try {\r\n    const response = await axiosInstance.post<SkillListResponse>(\r\n      \"collections/skill\",\r\n      request\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error: any) {\r\n    console.error(\"Skill list API call failed:\", error);\r\n\r\n    // 에러 객체에 custom 속성 추가\r\n    const enhancedError = new Error(\r\n      error.message || \"스킬 정보를 가져오는데 실패했습니다.\"\r\n    );\r\n\r\n    // 원본 에러 정보 유지\r\n    (enhancedError as any).originalError = error;\r\n\r\n    throw enhancedError;\r\n  }\r\n};\r\n\r\n/**\r\n * 기본 요청으로 모든 스킬 목록을 가져오는 헬퍼 함수\r\n * @param tenantId 테넌트 ID (옵션)\r\n * @returns Promise<SkillListResponse> 스킬 목록 응답 데이터\r\n */\r\nexport const getTotalSkillList = async (tenantId?: number): Promise<SkillListResponse> => {\r\n  const defaultRequest: SkillListRequest = {\r\n    filter: {\r\n      skill_id: {\r\n        start: 1,\r\n        end: 9999\r\n      },\r\n      tenant_id: tenantId ? [tenantId] : [1] // 테넌트 ID가 제공되지 않으면 기본값 1 사용\r\n    },\r\n    sort: {\r\n      skill_id: 0,\r\n      tenant_id: 0\r\n    },\r\n    page: {\r\n      index: 0,\r\n      items: 100 // 더 많은 스킬 항목을 가져오기 위해 기본값보다 크게 설정\r\n    }\r\n  };\r\n\r\n  return apiForTotalSkillList(defaultRequest);\r\n};\r\n\r\n/**\r\n * 모든 캠페인 정보를 가져오는 API 함수\r\n * @param request 캠페인 조회 요청 정보\r\n * @returns Promise<CampaignListResponse> 캠페인 목록 응답 데이터\r\n */\r\nexport const apiForTotalCampaignList = async (\r\n  request: CampaignListRequest\r\n): Promise<CampaignListResponse> => {\r\n  try {\r\n    const response = await axiosInstance.post<CampaignListResponse>(\r\n      \"collections/campaign-list\",\r\n      request\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error: any) {\r\n    console.error(\"Campaign list API call failed:\", error);\r\n\r\n    // 에러 객체에 custom 속성 추가\r\n    const enhancedError = new Error(\r\n      error.message || \"캠페인 정보를 가져오는데 실패했습니다.\"\r\n    );\r\n\r\n    // 원본 에러 정보 유지\r\n    (enhancedError as any).originalError = error;\r\n\r\n    throw enhancedError;\r\n  }\r\n};\r\n\r\n/**\r\n * 기본 요청으로 모든 캠페인 목록을 가져오는 헬퍼 함수\r\n * @param tenantId 테넌트 ID (옵션)\r\n * @returns Promise<CampaignListResponse> 캠페인 목록 응답 데이터\r\n */\r\nexport const getTotalCampaignList = async (tenantId?: number): Promise<CampaignListResponse> => {\r\n  const defaultRequest: CampaignListRequest = {\r\n    filter: {\r\n      tenant_id: {\r\n        start: tenantId || 0, // 테넌트 ID가 제공되면 해당 ID만, 아니면 모든 테넌트\r\n        end: tenantId || 99\r\n      }\r\n    },\r\n    sort: {\r\n      tenant_id: 0\r\n    },\r\n    page: {\r\n      index: 0,\r\n      items: 9999 // 모든 캠페인 가져오기\r\n    }\r\n  };\r\n\r\n  return apiForTotalCampaignList(defaultRequest);\r\n};\r\n\r\n/**\r\n * 캠페인에 할당된 스킬 목록을 가져오는 API 함수\r\n * @param request 캠페인 스킬 조회 요청 정보\r\n * @returns Promise<CampaignSkillsResponse> 캠페인 스킬 목록 응답 데이터\r\n */\r\nexport const apiForFetchSkilsWithCampaigns = async (\r\n  request: CampaignSkillsRequest\r\n): Promise<CampaignSkillsResponse> => {\r\n  try {\r\n    const response = await axiosInstance.post<CampaignSkillsResponse>(\r\n      \"collections/campaign-skill\", // API 엔드포인트 확인 필요\r\n      request\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error: any) {\r\n    console.error(\"Campaign skills API call failed:\", error);\r\n\r\n    // 에러 객체에 custom 속성 추가\r\n    const enhancedError = new Error(\r\n      error.message || \"캠페인 스킬 정보를 가져오는데 실패했습니다.\"\r\n    );\r\n\r\n    // 원본 에러 정보 유지\r\n    (enhancedError as any).originalError = error;\r\n\r\n    throw enhancedError;\r\n  }\r\n};\r\n\r\n/**\r\n * 기본 요청으로 캠페인에 할당된 스킬 목록을 가져오는 헬퍼 함수\r\n * @param campaignId 캠페인 ID (옵션)\r\n * @returns Promise<CampaignSkillsResponse> 캠페인 스킬 목록 응답 데이터\r\n */\r\nexport const getSkilsWithCampaigns = async (campaignId?: number): Promise<CampaignSkillsResponse> => {\r\n  const defaultRequest: CampaignSkillsRequest = {\r\n    filter: {\r\n      skill_id: {\r\n        start: 1,\r\n        end: 99\r\n      }\r\n    },\r\n    sort: {\r\n      \r\n    },\r\n    page: {\r\n      index: 1,\r\n      items: 9999\r\n    }\r\n  };\r\n\r\n  // campaignId를 URL 파라미터나 요청 본문에 추가해야 할 수도 있습니다.\r\n  // API 명세에 따라 이 부분을 수정해야 할 수 있습니다.\r\n\r\n  return apiForFetchSkilsWithCampaigns(defaultRequest);\r\n};\r\n\r\n/**\r\n * 캠페인 그룹에 대한 캠페인 목록을 가져오는 API 함수\r\n * @param request 캠페인 그룹 스킬 조회 요청 정보\r\n * @returns Promise<CampaignGroupSkillsResponse> 캠페인 그룹 스킬 목록 응답 데이터\r\n */\r\nexport const apiForGetCampaignListForCampaignGroup = async (\r\n  request: CampaignGroupSkillsRequest\r\n): Promise<CampaignGroupSkillsResponse> => {\r\n  try {\r\n    const response = await axiosInstance.post<CampaignGroupSkillsResponse>(\r\n      \"collections/campaign-group-list\",\r\n      request\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error: any) {\r\n    console.error(\"Campaign Group skills API call failed:\", error);\r\n\r\n    // 에러 객체에 custom 속성 추가\r\n    const enhancedError = new Error(\r\n      error.message || \"캠페인 그룹 스킬 정보를 가져오는데 실패했습니다.\"\r\n    );\r\n\r\n    // 원본 에러 정보 유지\r\n    (enhancedError as any).originalError = error;\r\n\r\n    throw enhancedError;\r\n  }\r\n};\r\n\r\n/**\r\n * 기본 요청으로 캠페인 그룹에 대한 캠페인 목록을 가져오는 헬퍼 함수\r\n * @param groupId 캠페인 그룹 ID (필수)\r\n * @param campaignId 캠페인 ID (옵션)\r\n * @param tenantId 테넌트 ID (옵션)\r\n * @returns Promise<CampaignGroupSkillsResponse> 캠페인 그룹 스킬 목록 응답 데이터\r\n */\r\nexport const getCampaignListForCampaignGroup = async (\r\n  groupId: number,\r\n  campaignId?: number,\r\n  tenantId?: number\r\n): Promise<CampaignGroupSkillsResponse> => {\r\n  const defaultRequest: CampaignGroupSkillsRequest = {\r\n    filter: {\r\n      group_id: [groupId],\r\n      campaign_id: campaignId ? {\r\n        start: campaignId,\r\n        end: campaignId\r\n      } : {\r\n        start: 1,\r\n        end: 99\r\n      }\r\n    },\r\n    sort: {\r\n      // 필요 시 추가 정렬 조건을 넣으세요.\r\n    },\r\n    page: {\r\n      index: 0,\r\n      items: 9999\r\n    }\r\n  };\r\n\r\n  return apiForGetCampaignListForCampaignGroup(defaultRequest);\r\n};\r\n\r\n\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 319, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/widgets/sidebar/hooks/useApiForGetSkillsWithCampaigns.ts"],"sourcesContent":["// C:\\nproject\\fe_pdsw\\src\\widgets\\sidebar\\hooks\\useApiForGetSkillsWithCampaigns.ts\r\n\r\nimport { useQuery, UseQueryOptions } from '@tanstack/react-query';\r\nimport { \r\n  CampaignSkillsResponse \r\n} from '@/widgets/sidebar/api/type/typeForAddCampaignForCampaignGroup';\r\nimport { getSkilsWithCampaigns } from '@/widgets/sidebar/api/apiForAddCampaginForCampaignGroup';\r\n\r\n/**\r\n * 캠페인에 할당된 스킬 목록을 가져오는 React Query 훅\r\n * \r\n * @param campaignId 캠페인 ID (선택 사항)\r\n * @param isEnabled 쿼리 활성화 여부 (기본값: false)\r\n * @param options React Query 추가 옵션\r\n * @returns 캠페인 스킬 목록 쿼리 결과\r\n */\r\nexport const useApiForGetSkillsWithCampaigns = (\r\n  campaignId?: number,\r\n  isEnabled: boolean = false,\r\n  options?: UseQueryOptions<CampaignSkillsResponse, Error>\r\n) => {\r\n  return useQuery<CampaignSkillsResponse, Error>({\r\n    queryKey: ['skillsWithCampaigns', campaignId],\r\n    queryFn: () => getSkilsWithCampaigns(campaignId),\r\n    enabled: isEnabled, // 명시적으로 활성화될 때만 API 호출\r\n    refetchOnWindowFocus: false,\r\n    retry: 1,\r\n    staleTime: 5 * 60 * 1000, // 5분 캐시\r\n    ...options,\r\n  });\r\n};\r\n\r\n\r\nexport default useApiForGetSkillsWithCampaigns;"],"names":[],"mappings":"AAAA,mFAAmF;;;;;AAMnF;AAJA;;;;AAcO,MAAM,kCAAkC,CAC7C,YACA,YAAqB,KAAK,EAC1B;;IAEA,OAAO,CAAA,GAAA,8KAAA,CAAA,WAAQ,AAAD,EAAiC;QAC7C,UAAU;YAAC;YAAuB;SAAW;QAC7C,OAAO;wDAAE,IAAM,CAAA,GAAA,wKAAA,CAAA,wBAAqB,AAAD,EAAE;;QACrC,SAAS;QACT,sBAAsB;QACtB,OAAO;QACP,WAAW,IAAI,KAAK;QACpB,GAAG,OAAO;IACZ;AACF;GAda;;QAKJ,8KAAA,CAAA,WAAQ;;;uCAYF"}},
    {"offset": {"line": 361, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 367, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/widgets/sidebar/hooks/useTotalCampaignListForAddCampaignToCampaignGroup.ts"],"sourcesContent":["import { useQuery, UseQueryOptions } from '@tanstack/react-query';\r\nimport { CampaignListResponse } from '@/widgets/sidebar/api/type/typeForAddCampaignForCampaignGroup';\r\nimport { getTotalCampaignList } from '@/widgets/sidebar/api/apiForAddCampaginForCampaignGroup';\r\n\r\n/**\r\n * 캠페인 목록을 가져오는 React Query 훅\r\n * @param tenantId 테넌트 ID (선택 사항)\r\n * @param isOpen 팝업이 열려있는지 여부 (기본값: false)\r\n * @param options React Query 추가 옵션\r\n * @returns 캠페인 목록 쿼리 결과\r\n */\r\nexport const useTotalCampaignListForAddCampaignToCampaignGroup = (\r\n  tenantId?: number,\r\n  isOpen: boolean = false,\r\n  options?: UseQueryOptions<CampaignListResponse, Error>\r\n) => {\r\n  return useQuery<CampaignListResponse, Error>({\r\n    queryKey: ['campaigns', tenantId],\r\n    queryFn: () => getTotalCampaignList(tenantId),\r\n    staleTime: 5 * 60 * 1000, // 5분 캐시\r\n    enabled: isOpen, // 팝업이 열려 있을 때만 API 호출\r\n    refetchOnWindowFocus: false, // 창이 포커스될 때 자동으로 다시 가져오지 않음\r\n    retry: 1, // 실패 시 1번만 재시도\r\n    ...options,\r\n  });\r\n};\r\n"],"names":[],"mappings":";;;AAEA;AAFA;;;;AAWO,MAAM,oDAAoD,CAC/D,UACA,SAAkB,KAAK,EACvB;;IAEA,OAAO,CAAA,GAAA,8KAAA,CAAA,WAAQ,AAAD,EAA+B;QAC3C,UAAU;YAAC;YAAa;SAAS;QACjC,OAAO;0EAAE,IAAM,CAAA,GAAA,wKAAA,CAAA,uBAAoB,AAAD,EAAE;;QACpC,WAAW,IAAI,KAAK;QACpB,SAAS;QACT,sBAAsB;QACtB,OAAO;QACP,GAAG,OAAO;IACZ;AACF;GAda;;QAKJ,8KAAA,CAAA,WAAQ"}},
    {"offset": {"line": 400, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 406, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/widgets/sidebar/hooks/useTotalSkillListForAddCampaignToCampaignGroup.ts"],"sourcesContent":["import { useQuery, UseMutationOptions, UseQueryOptions } from '@tanstack/react-query';\r\nimport {\r\n  SkillListResponse,\r\n} from '@/widgets/sidebar/api/type/typeForAddCampaignForCampaignGroup';\r\nimport { getTotalSkillList } from '../api/apiForAddCampaginForCampaignGroup';\r\n\r\n/**\r\n * 스킬 목록을 가져오는 React Query 훅\r\n * @param tenantId 테넌트 ID (선택 사항)\r\n * @param isOpen 팝업이 열려있는지 여부 (기본값: false)\r\n * @param options React Query 추가 옵션\r\n * @returns 스킬 목록 쿼리 결과\r\n */\r\nexport const useTotalSkillListForAddCampaignToCampaignGroup = (\r\n  tenantId?: number,\r\n  isOpen: boolean = false,\r\n  options?: UseQueryOptions<SkillListResponse, Error>\r\n) => {\r\n  return useQuery<SkillListResponse, Error>({\r\n    queryKey: ['skills', tenantId],\r\n    queryFn: () => getTotalSkillList(tenantId),\r\n    staleTime: 5 * 60 * 1000, // 5분 캐시\r\n    enabled: isOpen, // 팝업이 열려 있을 때만 API 호출\r\n    refetchOnWindowFocus: false, // 창이 포커스될 때 자동으로 다시 가져오지 않음\r\n    retry: 1, // 실패 시 1번만 재시도\r\n    ...options,\r\n  });\r\n};"],"names":[],"mappings":";;;AAIA;AAJA;;;;AAaO,MAAM,iDAAiD,CAC5D,UACA,SAAkB,KAAK,EACvB;;IAEA,OAAO,CAAA,GAAA,8KAAA,CAAA,WAAQ,AAAD,EAA4B;QACxC,UAAU;YAAC;YAAU;SAAS;QAC9B,OAAO;uEAAE,IAAM,CAAA,GAAA,wKAAA,CAAA,oBAAiB,AAAD,EAAE;;QACjC,WAAW,IAAI,KAAK;QACpB,SAAS;QACT,sBAAsB;QACtB,OAAO;QACP,GAAG,OAAO;IACZ;AACF;GAda;;QAKJ,8KAAA,CAAA,WAAQ"}},
    {"offset": {"line": 439, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 445, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/widgets/sidebar/hooks/useApiForGetCampaignListForCampaignGroup.ts"],"sourcesContent":["import { useQuery, UseQueryOptions } from '@tanstack/react-query';\r\nimport { CampaignGroupSkillsResponse } from '@/widgets/sidebar/api/type/typeForAddCampaignForCampaignGroup';\r\nimport { getCampaignListForCampaignGroup } from '@/widgets/sidebar/api/apiForAddCampaginForCampaignGroup';\r\n\r\n/**\r\n * 캠페인 그룹에 대한 캠페인 목록을 가져오는 React Query 훅\r\n * @param groupId 캠페인 그룹 ID (필수)\r\n * @param campaignId 캠페인 ID (옵션)\r\n * @param tenantId 테넌트 ID (옵션)\r\n * @param isOpen 팝업이 열려있는지 여부 (기본값: false)\r\n * @param options React Query 추가 옵션\r\n * @returns 캠페인 그룹 스킬 목록 쿼리 결과\r\n */\r\nexport const useApiForGetCampaignListForCampaignGroup = (\r\n  groupId: number,\r\n  campaignId?: number,\r\n  tenantId?: number,\r\n  isOpen: boolean = false,\r\n  options?: UseQueryOptions<CampaignGroupSkillsResponse, Error>\r\n) => {\r\n  return useQuery<CampaignGroupSkillsResponse, Error>({\r\n    queryKey: ['campaignGroupSkills', groupId, campaignId, tenantId],\r\n    queryFn: () => getCampaignListForCampaignGroup(groupId, campaignId, tenantId),\r\n    staleTime: 5 * 60 * 1000, // 5분 캐시\r\n    enabled: isOpen, // 팝업이 열려 있을 때만 API 호출\r\n    refetchOnWindowFocus: false,\r\n    retry: 1,\r\n    ...options,\r\n  });\r\n};\r\n\r\nexport default useApiForGetCampaignListForCampaignGroup;\r\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;;AAaO,MAAM,2CAA2C,CACtD,SACA,YACA,UACA,SAAkB,KAAK,EACvB;;IAEA,OAAO,CAAA,GAAA,8KAAA,CAAA,WAAQ,AAAD,EAAsC;QAClD,UAAU;YAAC;YAAuB;YAAS;YAAY;SAAS;QAChE,OAAO;iEAAE,IAAM,CAAA,GAAA,wKAAA,CAAA,kCAA+B,AAAD,EAAE,SAAS,YAAY;;QACpE,WAAW,IAAI,KAAK;QACpB,SAAS;QACT,sBAAsB;QACtB,OAAO;QACP,GAAG,OAAO;IACZ;AACF;GAhBa;;QAOJ,8KAAA,CAAA,WAAQ;;;uCAWF"}},
    {"offset": {"line": 482, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 488, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/widgets/sidebar/dialogs/IDialogButtonForDeleteCampaignGroup.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from 'react';\r\nimport CustomAlert from '@/components/shared/layout/CustomAlert';\r\n\r\nexport interface IDialogButtonForDeleteCampaignGroupProps {\r\n  isOpen: boolean;\r\n  groupName: string;\r\n  onCancel: () => void;\r\n  onDelete: () => void;\r\n  isDeleting?: boolean;\r\n}\r\n\r\nconst IDialogButtonForDeleteCampaignGroup: React.FC<IDialogButtonForDeleteCampaignGroupProps> = ({\r\n  isOpen,\r\n  groupName,\r\n  onCancel,\r\n  onDelete,\r\n  isDeleting = false,\r\n}) => {\r\n  const message = (\r\n    <div className=\"space-y-4\">\r\n      <p className=\"text-sm\">정말로 캠페인 그룹 &apos;{groupName}&apos;을(를) 삭제하시겠습니까?</p>\r\n      <p className=\"text-destructive font-medium\">이 작업은 되돌릴 수 없습니다.</p>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <CustomAlert\r\n      isOpen={isOpen}\r\n      title=\"캠페인 그룹 삭제\"\r\n      message={message}\r\n      type=\"1\"\r\n      onClose={onDelete}\r\n      onCancle={onCancel}\r\n      width=\"max-w-md\"\r\n      confirmDisabled={isDeleting}\r\n    />\r\n  );\r\n};\r\n\r\nexport default IDialogButtonForDeleteCampaignGroup;\r\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAaA,MAAM,sCAA0F,CAAC,EAC/F,MAAM,EACN,SAAS,EACT,QAAQ,EACR,QAAQ,EACR,aAAa,KAAK,EACnB;IACC,MAAM,wBACJ,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAE,WAAU;;oBAAU;oBAAkB;oBAAU;;;;;;;0BACnD,6LAAC;gBAAE,WAAU;0BAA+B;;;;;;;;;;;;IAIhD,qBACE,6LAAC,wJAAA,CAAA,UAAW;QACV,QAAQ;QACR,OAAM;QACN,SAAS;QACT,MAAK;QACL,SAAS;QACT,UAAU;QACV,OAAM;QACN,iBAAiB;;;;;;AAGvB;KA1BM;uCA4BS"}},
    {"offset": {"line": 548, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 554, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/widgets/header/api/apiForHeader.ts"],"sourcesContent":["// src\\widgets\\header\\api\\apiForHeader.ts\r\n\r\nimport { axiosRedisInstance } from \"@/lib/axios\";\r\nimport { \r\n  IRequestTypeForGetAuthorizedMenusInfoForMenuRoleId,\r\n  IResponseTypeForGetAuthorizedMenusInfoForMenuRoleId \r\n} from \"./typeForMenusAuthorityInfo\";\r\nimport axios from \"axios\";\r\n// axiosRedisInstance\r\n/**\r\n * 사용자 권한에 따른 사용가능한 메뉴 리스트를 가져오는 API 함수\r\n * @param param0 roleId - 역할 ID (1: 시스템관리자, 2: 테넌트관리자01, 3: 테넌트관리자02)\r\n * @returns 사용가능한 메뉴 리스트 정보\r\n */\r\nexport async function apiForGetAuthorizedMenusInfoForMenuRoleId({\r\n  roleId\r\n}: IRequestTypeForGetAuthorizedMenusInfoForMenuRoleId): Promise<IResponseTypeForGetAuthorizedMenusInfoForMenuRoleId> {\r\n\r\n\r\n    const response = await axiosRedisInstance.get(\r\n    `/auth/availableMenuList?roleId=${roleId}`\r\n  );  \r\n  // console.log(\"Available menu list response:\", response.data);\r\n  return response.data;\r\n}"],"names":[],"mappings":"AAAA,yCAAyC;;;;AAEzC;;AAYO,eAAe,0CAA0C,EAC9D,MAAM,EAC6C;IAGjD,MAAM,WAAW,MAAM,sHAAA,CAAA,qBAAkB,CAAC,GAAG,CAC7C,CAAC,+BAA+B,EAAE,QAAQ;IAE5C,+DAA+D;IAC/D,OAAO,SAAS,IAAI;AACtB"}},
    {"offset": {"line": 568, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 574, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/widgets/header/hooks/useApiForGetAuthorizedMenusInfoForMenuRoleId.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { \r\n  apiForGetAuthorizedMenusInfoForMenuRoleId \r\n} from '../api/apiForHeader';\r\nimport { \r\n  IMenuInfo, \r\n  IResponseTypeForGetAuthorizedMenusInfoForMenuRoleId \r\n} from '../api/typeForMenusAuthorityInfo';\r\nimport { useAvailableMenuStore } from '@/store/useAvailableMenuStore';\r\n\r\ninterface UseApiForGetAuthorizedMenusInfoForMenuRoleIdProps {\r\n  roleId: number;\r\n  enabled?: boolean;\r\n}\r\n\r\ninterface UseApiForGetAuthorizedMenusInfoForMenuRoleIdReturn {\r\n  data: IResponseTypeForGetAuthorizedMenusInfoForMenuRoleId | null;\r\n  menuList: IMenuInfo[];\r\n  headerMenuList: IMenuInfo[];\r\n  headerMenuIds: number[];\r\n  campaignTenantContextMenuList: IMenuInfo[];\r\n  campaignTenantContextMenuIds: number[];\r\n  campaignTabCampaignContextMenuList: IMenuInfo[];\r\n  campaignTabCampaignContextMenuIds: number[];\r\n  skillAssignmentMenuList: IMenuInfo[];\r\n  skillAssignmentMenuIds: number[];\r\n  // 추가된 반환값\r\n  campaignGroupTabTenantMenuList: IMenuInfo[];\r\n  campaignGroupTabTenantMenuIds: number[];\r\n  campaignGroupTabCampaignGroupMenuList: IMenuInfo[];\r\n  campaignGroupTabCampaignGroupMenuIds: number[];\r\n  campaignGroupTabCampaignMenuList: IMenuInfo[];\r\n  campaignGroupTabCampaignMenuIds: number[];\r\n  isLoading: boolean;\r\n  isError: boolean;\r\n  error: unknown;\r\n  refetch: () => Promise<void>;\r\n}\r\n\r\n/**\r\n * 권한이 있는 메뉴 정보를 가져오는 custom hook\r\n * 메뉴 정보를 가져온 후 자동으로 useAvailableMenuStore에 저장합니다.\r\n * @param roleId 역할 ID (1: 시스템관리자, 2: 테넌트관리자01, 3: 테넌트관리자02)\r\n * @param enabled 자동으로 API 호출을 시작할지 여부 (기본값: true)\r\n * @returns 메뉴 데이터, 로딩 상태, 에러 상태, refetch 함수\r\n */\r\nexport const useApiForGetAuthorizedMenusInfoForMenuRoleId = ({\r\n  roleId,\r\n  enabled = true\r\n}: UseApiForGetAuthorizedMenusInfoForMenuRoleIdProps): UseApiForGetAuthorizedMenusInfoForMenuRoleIdReturn => {\r\n  const [data, setData] = useState<IResponseTypeForGetAuthorizedMenusInfoForMenuRoleId | null>(null);\r\n  const [menuList, setMenuList] = useState<IMenuInfo[]>([]);\r\n  const [headerMenuList, setHeaderMenuList] = useState<IMenuInfo[]>([]);\r\n  const [headerMenuIds, setHeaderMenuIds] = useState<number[]>([]);\r\n  const [campaignTenantContextMenuList, setCampaignTenantContextMenuList] = useState<IMenuInfo[]>([]);\r\n  const [campaignTenantContextMenuIds, setCampaignTenantContextMenuIds] = useState<number[]>([]);\r\n  const [campaignTabCampaignContextMenuList, setCampaignTabCampaignContextMenuList] = useState<IMenuInfo[]>([]);\r\n  const [campaignTabCampaignContextMenuIds, setCampaignTabCampaignContextMenuIds] = useState<number[]>([]);\r\n  const [skillAssignmentMenuList, setSkillAssignmentMenuList] = useState<IMenuInfo[]>([]);\r\n  const [skillAssignmentMenuIds, setSkillAssignmentMenuIds] = useState<number[]>([]);\r\n  \r\n  // 추가된 상태 변수들\r\n  const [campaignGroupTabTenantMenuList, setCampaignGroupTabTenantMenuList] = useState<IMenuInfo[]>([]);\r\n  const [campaignGroupTabTenantMenuIds, setCampaignGroupTabTenantMenuIds] = useState<number[]>([]);\r\n  const [campaignGroupTabCampaignGroupMenuList, setCampaignGroupTabCampaignGroupMenuList] = useState<IMenuInfo[]>([]);\r\n  const [campaignGroupTabCampaignGroupMenuIds, setCampaignGroupTabCampaignGroupMenuIds] = useState<number[]>([]);\r\n  const [campaignGroupTabCampaignMenuList, setCampaignGroupTabCampaignMenuList] = useState<IMenuInfo[]>([]);\r\n  const [campaignGroupTabCampaignMenuIds, setCampaignGroupTabCampaignMenuIds] = useState<number[]>([]);\r\n  \r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const [isError, setIsError] = useState<boolean>(false);\r\n  const [error, setError] = useState<unknown>(null);\r\n\r\n  // Zustand 스토어에서 필요한 함수들 가져오기\r\n  const { \r\n    setAvailableMenus, \r\n    setAvailableHeaderMenus,\r\n    setAvailableHeaderMenuIds,\r\n    setAvailableCampaignTenantContextMenus,\r\n    setAvailableCampaignTenantContextMenuIds,\r\n    setAvailableCampaignTabCampaignContextMenus,\r\n    setAvailableCampaignTabCampaignContextMenuIds,\r\n    setAvailableMenuIdsForSkilAssignment,\r\n    // 추가된 setter 함수들\r\n    setAvailableMenuIdsForCampaignGroupTabTenant,\r\n    setAvailableMenuIdsForCampaignGroupTabCampaignGroup,\r\n    setAvailableMenuIdsForCampaignGroupTabCampaign,\r\n    setLoading: setStoreLoading, \r\n    setError: setStoreError \r\n  } = useAvailableMenuStore();\r\n\r\n  const fetchData = async (): Promise<void> => {\r\n    setIsLoading(true);\r\n    setStoreLoading(true);\r\n    setIsError(false);\r\n    setStoreError(false);\r\n    setError(null);\r\n\r\n    try {\r\n      const response = await apiForGetAuthorizedMenusInfoForMenuRoleId({ roleId });\r\n      \r\n      // 전체 메뉴 리스트\r\n      const allMenus = response.availableMenuList || [];\r\n      \r\n      // TOP 코드를 가진 헤더용 메뉴 필터링\r\n      const headerMenus = allMenus.filter(menu => menu.locationDistinctionCode === 'TOP');\r\n      \r\n      // 헤더 메뉴 ID 배열 생성\r\n      const headerIds = headerMenus.map(menu => menu.menuId);\r\n      \r\n      // CTC 코드를 가진 캠페인 테넌트 컨텍스트 메뉴 필터링\r\n      const campaignTenantContextMenus = allMenus.filter(menu => menu.locationDistinctionCode === 'SCC');\r\n      \r\n      // 캠페인 테넌트 컨텍스트 메뉴 ID 배열 생성\r\n      const campaignTenantContextIds = campaignTenantContextMenus.map(menu => menu.menuId);\r\n      \r\n      // CCC 코드를 가진 캠페인 탭 캠페인 컨텍스트 메뉴 필터링\r\n      const campaignTabCampaignContextMenus = allMenus.filter(menu => menu.locationDistinctionCode === 'SCM');\r\n      \r\n      // 캠페인 탭 캠페인 컨텍스트 메뉴 ID 배열 생성\r\n      const campaignTabCampaignContextIds = campaignTabCampaignContextMenus.map(menu => menu.menuId);\r\n      \r\n      // SSG, SST, SSS 코드를 가진 스킬 할당 메뉴 필터링\r\n      const skillAssignmentMenus = allMenus.filter(menu => \r\n        menu.locationDistinctionCode === 'SSG' || \r\n        menu.locationDistinctionCode === 'SST' || \r\n        menu.locationDistinctionCode === 'SSS'\r\n      );\r\n      \r\n      // 스킬 할당 메뉴 ID 배열 생성\r\n      const skillAssignmentIds = skillAssignmentMenus.map(menu => menu.menuId);\r\n      \r\n      // SGT 코드를 가진 캠페인 그룹 탭 테넌트 메뉴 필터링\r\n      const campaignGroupTabTenantMenus = allMenus.filter(menu => menu.locationDistinctionCode === 'SGT');\r\n      \r\n      // 캠페인 그룹 탭 테넌트 메뉴 ID 배열 생성\r\n      const campaignGroupTabTenantIds = campaignGroupTabTenantMenus.map(menu => menu.menuId);\r\n      \r\n      // SGG 코드를 가진 캠페인 그룹 탭 캠페인 그룹 메뉴 필터링\r\n      const campaignGroupTabCampaignGroupMenus = allMenus.filter(menu => menu.locationDistinctionCode === 'SGG');\r\n      \r\n      // 캠페인 그룹 탭 캠페인 그룹 메뉴 ID 배열 생성\r\n      const campaignGroupTabCampaignGroupIds = campaignGroupTabCampaignGroupMenus.map(menu => menu.menuId);\r\n      \r\n      // SSS 코드를 가진 캠페인 그룹 탭 캠페인 메뉴 필터링\r\n      const campaignGroupTabCampaignMenus = allMenus.filter(menu => menu.locationDistinctionCode === 'SGC');\r\n      \r\n      // 캠페인 그룹 탭 캠페인 메뉴 ID 배열 생성\r\n      const campaignGroupTabCampaignIds = campaignGroupTabCampaignMenus.map(menu => menu.menuId);\r\n      \r\n      // 로컬 상태 업데이트\r\n      setData(response);\r\n      setMenuList(allMenus);\r\n      setHeaderMenuList(headerMenus);\r\n      setHeaderMenuIds(headerIds);\r\n      setCampaignTenantContextMenuList(campaignTenantContextMenus);\r\n      setCampaignTenantContextMenuIds(campaignTenantContextIds);\r\n      setCampaignTabCampaignContextMenuList(campaignTabCampaignContextMenus);\r\n      setCampaignTabCampaignContextMenuIds(campaignTabCampaignContextIds);\r\n      setSkillAssignmentMenuList(skillAssignmentMenus);\r\n      setSkillAssignmentMenuIds(skillAssignmentIds);\r\n      setCampaignGroupTabTenantMenuList(campaignGroupTabTenantMenus);\r\n      setCampaignGroupTabTenantMenuIds(campaignGroupTabTenantIds);\r\n      setCampaignGroupTabCampaignGroupMenuList(campaignGroupTabCampaignGroupMenus);\r\n      setCampaignGroupTabCampaignGroupMenuIds(campaignGroupTabCampaignGroupIds);\r\n      setCampaignGroupTabCampaignMenuList(campaignGroupTabCampaignMenus);\r\n      setCampaignGroupTabCampaignMenuIds(campaignGroupTabCampaignIds);\r\n      \r\n      // console.log(\"메뉴 권한 정보가 로컬 상태에 저장되었습니다:\", allMenus);\r\n      // console.log(\"헤더 메뉴 정보가 로컬 상태에 저장되었습니다:\", headerMenus);\r\n      // console.log(\"헤더 메뉴 ID가 로컬 상태에 저장되었습니다:\", headerIds);\r\n      // console.log(\"캠페인 테넌트 컨텍스트 메뉴가 로컬 상태에 저장되었습니다:\", campaignTenantContextMenus);\r\n      // console.log(\"캠페인 테넌트 컨텍스트 메뉴 ID가 로컬 상태에 저장되었습니다:\", campaignTenantContextIds);\r\n      // console.log(\"캠페인 탭 캠페인 컨텍스트 메뉴가 로컬 상태에 저장되었습니다:\", campaignTabCampaignContextMenus);\r\n      // console.log(\"캠페인 탭 캠페인 컨텍스트 메뉴 ID가 로컬 상태에 저장되었습니다:\", campaignTabCampaignContextIds);\r\n      // console.log(\"스킬 할당 메뉴가 로컬 상태에 저장되었습니다:\", skillAssignmentMenus);\r\n      // console.log(\"스킬 할당 메뉴 ID가 로컬 상태에 저장되었습니다:\", skillAssignmentIds);\r\n      // console.log(\"캠페인 그룹 탭 테넌트 메뉴가 로컬 상태에 저장되었습니다:\", campaignGroupTabTenantMenus);\r\n      // console.log(\"캠페인 그룹 탭 테넌트 메뉴 ID가 로컬 상태에 저장되었습니다:\", campaignGroupTabTenantIds);\r\n      // console.log(\"캠페인 그룹 탭 캠페인 그룹 메뉴가 로컬 상태에 저장되었습니다:\", campaignGroupTabCampaignGroupMenus);\r\n      // console.log(\"캠페인 그룹 탭 캠페인 그룹 메뉴 ID가 로컬 상태에 저장되었습니다:\", campaignGroupTabCampaignGroupIds);\r\n      // console.log(\"캠페인 그룹 탭 캠페인 메뉴가 로컬 상태에 저장되었습니다:\", campaignGroupTabCampaignMenus);\r\n      // console.log(\"캠페인 그룹 탭 캠페인 메뉴 ID가 로컬 상태에 저장되었습니다:\", campaignGroupTabCampaignIds);\r\n\r\n      // Zustand 스토어 업데이트\r\n      setAvailableMenus(allMenus);\r\n      setAvailableHeaderMenus(headerMenus);\r\n      setAvailableHeaderMenuIds(headerIds);\r\n      setAvailableCampaignTenantContextMenus(campaignTenantContextMenus);\r\n      setAvailableCampaignTenantContextMenuIds(campaignTenantContextIds);\r\n      setAvailableCampaignTabCampaignContextMenus(campaignTabCampaignContextMenus);\r\n      setAvailableCampaignTabCampaignContextMenuIds(campaignTabCampaignContextIds);\r\n      setAvailableMenuIdsForSkilAssignment(skillAssignmentIds);\r\n      setAvailableMenuIdsForCampaignGroupTabTenant(campaignGroupTabTenantIds);\r\n      setAvailableMenuIdsForCampaignGroupTabCampaignGroup(campaignGroupTabCampaignGroupIds);\r\n      setAvailableMenuIdsForCampaignGroupTabCampaign(campaignGroupTabCampaignIds);\r\n      \r\n    } catch (err) {\r\n      console.error('Error fetching authorized menus:', err);\r\n      \r\n      // 로컬 상태 업데이트\r\n      setIsError(true);\r\n      setError(err);\r\n      \r\n      // Zustand 스토어 업데이트\r\n      setStoreError(true);\r\n    } finally {\r\n      // 로컬 상태 업데이트\r\n      setIsLoading(false);\r\n      \r\n      // Zustand 스토어 업데이트\r\n      setStoreLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (enabled) {\r\n      fetchData();\r\n    }\r\n  }, [roleId, enabled]);\r\n\r\n  return {\r\n    data,\r\n    menuList,\r\n    headerMenuList,\r\n    headerMenuIds,\r\n    campaignTenantContextMenuList,\r\n    campaignTenantContextMenuIds,\r\n    campaignTabCampaignContextMenuList,\r\n    campaignTabCampaignContextMenuIds,\r\n    skillAssignmentMenuList,\r\n    skillAssignmentMenuIds,\r\n    // 추가된 반환값\r\n    campaignGroupTabTenantMenuList,\r\n    campaignGroupTabTenantMenuIds,\r\n    campaignGroupTabCampaignGroupMenuList,\r\n    campaignGroupTabCampaignGroupMenuIds,\r\n    campaignGroupTabCampaignMenuList,\r\n    campaignGroupTabCampaignMenuIds,\r\n    isLoading,\r\n    isError,\r\n    error,\r\n    refetch: fetchData\r\n  };\r\n};"],"names":[],"mappings":";;;AAAA;AACA;AAOA;;;;;AAsCO,MAAM,+CAA+C,CAAC,EAC3D,MAAM,EACN,UAAU,IAAI,EACoC;;IAClD,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA8D;IAC7F,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe,EAAE;IACxD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe,EAAE;IACpE,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAC/D,MAAM,CAAC,+BAA+B,iCAAiC,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe,EAAE;IAClG,MAAM,CAAC,8BAA8B,gCAAgC,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAC7F,MAAM,CAAC,oCAAoC,sCAAsC,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe,EAAE;IAC5G,MAAM,CAAC,mCAAmC,qCAAqC,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACvG,MAAM,CAAC,yBAAyB,2BAA2B,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe,EAAE;IACtF,MAAM,CAAC,wBAAwB,0BAA0B,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAEjF,aAAa;IACb,MAAM,CAAC,gCAAgC,kCAAkC,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe,EAAE;IACpG,MAAM,CAAC,+BAA+B,iCAAiC,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAC/F,MAAM,CAAC,uCAAuC,yCAAyC,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe,EAAE;IAClH,MAAM,CAAC,sCAAsC,wCAAwC,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAC7G,MAAM,CAAC,kCAAkC,oCAAoC,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe,EAAE;IACxG,MAAM,CAAC,iCAAiC,mCAAmC,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAEnG,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IACpD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAChD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAE5C,6BAA6B;IAC7B,MAAM,EACJ,iBAAiB,EACjB,uBAAuB,EACvB,yBAAyB,EACzB,sCAAsC,EACtC,wCAAwC,EACxC,2CAA2C,EAC3C,6CAA6C,EAC7C,oCAAoC,EACpC,iBAAiB;IACjB,4CAA4C,EAC5C,mDAAmD,EACnD,8CAA8C,EAC9C,YAAY,eAAe,EAC3B,UAAU,aAAa,EACxB,GAAG,CAAA,GAAA,wIAAA,CAAA,wBAAqB,AAAD;IAExB,MAAM,YAAY;QAChB,aAAa;QACb,gBAAgB;QAChB,WAAW;QACX,cAAc;QACd,SAAS;QAET,IAAI;YACF,MAAM,WAAW,MAAM,CAAA,GAAA,kJAAA,CAAA,4CAAyC,AAAD,EAAE;gBAAE;YAAO;YAE1E,YAAY;YACZ,MAAM,WAAW,SAAS,iBAAiB,IAAI,EAAE;YAEjD,wBAAwB;YACxB,MAAM,cAAc,SAAS,MAAM,CAAC,CAAA,OAAQ,KAAK,uBAAuB,KAAK;YAE7E,iBAAiB;YACjB,MAAM,YAAY,YAAY,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM;YAErD,iCAAiC;YACjC,MAAM,6BAA6B,SAAS,MAAM,CAAC,CAAA,OAAQ,KAAK,uBAAuB,KAAK;YAE5F,2BAA2B;YAC3B,MAAM,2BAA2B,2BAA2B,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM;YAEnF,mCAAmC;YACnC,MAAM,kCAAkC,SAAS,MAAM,CAAC,CAAA,OAAQ,KAAK,uBAAuB,KAAK;YAEjG,6BAA6B;YAC7B,MAAM,gCAAgC,gCAAgC,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM;YAE7F,oCAAoC;YACpC,MAAM,uBAAuB,SAAS,MAAM,CAAC,CAAA,OAC3C,KAAK,uBAAuB,KAAK,SACjC,KAAK,uBAAuB,KAAK,SACjC,KAAK,uBAAuB,KAAK;YAGnC,oBAAoB;YACpB,MAAM,qBAAqB,qBAAqB,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM;YAEvE,iCAAiC;YACjC,MAAM,8BAA8B,SAAS,MAAM,CAAC,CAAA,OAAQ,KAAK,uBAAuB,KAAK;YAE7F,2BAA2B;YAC3B,MAAM,4BAA4B,4BAA4B,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM;YAErF,oCAAoC;YACpC,MAAM,qCAAqC,SAAS,MAAM,CAAC,CAAA,OAAQ,KAAK,uBAAuB,KAAK;YAEpG,8BAA8B;YAC9B,MAAM,mCAAmC,mCAAmC,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM;YAEnG,iCAAiC;YACjC,MAAM,gCAAgC,SAAS,MAAM,CAAC,CAAA,OAAQ,KAAK,uBAAuB,KAAK;YAE/F,2BAA2B;YAC3B,MAAM,8BAA8B,8BAA8B,GAAG,CAAC,CAAA,OAAQ,KAAK,MAAM;YAEzF,aAAa;YACb,QAAQ;YACR,YAAY;YACZ,kBAAkB;YAClB,iBAAiB;YACjB,iCAAiC;YACjC,gCAAgC;YAChC,sCAAsC;YACtC,qCAAqC;YACrC,2BAA2B;YAC3B,0BAA0B;YAC1B,kCAAkC;YAClC,iCAAiC;YACjC,yCAAyC;YACzC,wCAAwC;YACxC,oCAAoC;YACpC,mCAAmC;YAEnC,sDAAsD;YACtD,yDAAyD;YACzD,uDAAuD;YACvD,+EAA+E;YAC/E,gFAAgF;YAChF,sFAAsF;YACtF,uFAAuF;YACvF,kEAAkE;YAClE,mEAAmE;YACnE,gFAAgF;YAChF,iFAAiF;YACjF,0FAA0F;YAC1F,2FAA2F;YAC3F,kFAAkF;YAClF,mFAAmF;YAEnF,mBAAmB;YACnB,kBAAkB;YAClB,wBAAwB;YACxB,0BAA0B;YAC1B,uCAAuC;YACvC,yCAAyC;YACzC,4CAA4C;YAC5C,8CAA8C;YAC9C,qCAAqC;YACrC,6CAA6C;YAC7C,oDAAoD;YACpD,+CAA+C;QAEjD,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,oCAAoC;YAElD,aAAa;YACb,WAAW;YACX,SAAS;YAET,mBAAmB;YACnB,cAAc;QAChB,SAAU;YACR,aAAa;YACb,aAAa;YAEb,mBAAmB;YACnB,gBAAgB;QAClB;IACF;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kEAAE;YACR,IAAI,SAAS;gBACX;YACF;QACF;iEAAG;QAAC;QAAQ;KAAQ;IAEpB,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,UAAU;QACV;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,SAAS;IACX;AACF;GAtMa;;QA2CP,wIAAA,CAAA,wBAAqB"}},
    {"offset": {"line": 749, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 755, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/widgets/header/index.tsx"],"sourcesContent":["import { CommonButton } from \"@/components/shared/CommonButton\";\r\nimport Image from 'next/image'\r\nimport { useRouter } from 'next/navigation'\r\nimport { useTabStore } from '@/store/tabStore'\r\nimport Cookies from 'js-cookie'\r\nimport { MenuItem, menuItems } from '@/widgets/header/model/menuItems'\r\nimport React, { useState, useEffect, useRef } from 'react'\r\nimport { useAuthStore, useMainStore } from '@/store';\r\nimport { useApiForMain } from '@/features/auth/hooks/useApiForMain';\r\nimport { useApiForTenants } from '@/features/auth/hooks/useApiForTenants';\r\nimport useApiForFetchCounselorList from '@/features/campaignManager/hooks/useApiForFetchCounselorList';\r\nimport CustomAlert from '@/components/shared/layout/CustomAlert';\r\nimport { useApiForGetAuthorizedMenusInfoForMenuRoleId } from \"./hooks/useApiForGetAuthorizedMenusInfoForMenuRoleId\";\r\nimport { useAvailableMenuStore } from \"@/store/useAvailableMenuStore\";\r\nimport { useEnvironmentStore } from \"@/store/environmentStore\";\r\nimport { Button } from \"@/components/ui/button\";\r\n\r\nconst errorMessage = {\r\n  isOpen: false,\r\n  message: '',\r\n  title: '로그인',\r\n  type: '1',\r\n  onClose: () => { },\r\n  onCancle: () => { },\r\n};\r\n\r\nexport default function Header() {\r\n  const router = useRouter();\r\n  const _tenantId = Number(Cookies.get('tenant_id'));\r\n  const { id, tenant_id, session_key: _sessionKey, role_id, menu_role_id } = useAuthStore();\r\n\r\n  const [alertState, setAlertState] = useState(errorMessage);\r\n  const [shouldFetchCounselors, setShouldFetchCounselors] = useState(false);\r\n  const [isSplitDialogOpen, setIsSplitDialogOpen] = useState(false);\r\n\r\n  const {\r\n    availableMenus,\r\n    availableHeaderMenus,\r\n    availableHeaderMenuIds,\r\n    setAvailableMenus,\r\n    setLoading,\r\n    setError\r\n  } = useAvailableMenuStore();\r\n\r\n\r\n  const popupRef = useRef<Window | null>(null);\r\n\r\n  const openInNewWindow = () => {\r\n    // 현재 화면의 크기를 가져옵니다\r\n    const width = window.screen.width;\r\n    const height = window.screen.height;\r\n\r\n    // 창을 화면 중앙에 위치시킵니다\r\n    const left = 0;  // 전체 화면이므로 0으로 설정\r\n    const top = 0;   // 전체 화면이므로 0으로 설정\r\n\r\n    const newWindow = window.open(\r\n      '/monitor',\r\n      'monitor-window',\r\n      `width=${width},height=${height},left=${left},top=${top},menubar=no,toolbar=no,location=no,status=no`\r\n    );\r\n\r\n    if (newWindow) {\r\n      newWindow.focus();\r\n      // popup 창이 열려있다면 useRef에 연결 (로그아웃시 팝업창 닫히게 하기 위함)\r\n      popupRef.current = newWindow;\r\n    }\r\n  };\r\n  const {\r\n    tenants,\r\n    setCampaigns,\r\n    setTenants,\r\n    setCounselers,\r\n  } = useMainStore();\r\n\r\n  const {\r\n    addTab,\r\n    removeTab,\r\n    openedTabs,\r\n    duplicateTab,\r\n    activeTabId,\r\n    activeTabKey,\r\n    getTabCountById,\r\n    rows,\r\n    tabGroups,\r\n    setActiveTab,\r\n    openCampaignManagerForUpdate,\r\n    setCampaignIdForUpdateFromSideMenu\r\n  } = useTabStore();\r\n\r\n  const {\r\n    campaignListAlram,     // 알람 다이어로그 출력 여부\r\n    useAlramPopup,         // 알람 팝업 사용 여부\r\n    personalCampaignAlertOnly, // 개인 캠페인 알림만 표시\r\n    environmentData,\r\n    // setEnvironmentData,\r\n  } = useEnvironmentStore();\r\n\r\n  const handleMenuClick = (item: MenuItem, event: React.MouseEvent<HTMLButtonElement>) => {\r\n    if (item.id === 3) {\r\n      openInNewWindow();\r\n      return;\r\n    }\r\n\r\n    if (event.ctrlKey) {\r\n      duplicateTab(item.id);\r\n    } else {\r\n      // 해당 아이템의 이전 탭들을 모두 찾아서 제거\r\n      const existingTabs = openedTabs.filter(tab => tab.id === item.id);\r\n      existingTabs.forEach(tab => {\r\n        removeTab(tab.id, tab.uniqueKey);\r\n      });\r\n\r\n      // 새로운 탭 추가\r\n      const newTabKey = `${item.id}-${Date.now()}`;\r\n      const newTab = {\r\n        ...item,\r\n        uniqueKey: newTabKey,\r\n        content: item.content || null\r\n      };\r\n      addTab(newTab);\r\n\r\n      // 탭을 추가한 후 활성 탭 설정\r\n      setActiveTab(item.id, newTabKey);\r\n    }\r\n\r\n    setCampaignIdForUpdateFromSideMenu(null);\r\n  };\r\n\r\n\r\n  const isTabOpened = (itemId: number) => {\r\n    const existingTabs = openedTabs.filter(tab => tab.id === itemId);\r\n    return existingTabs.length > 0;\r\n  };\r\n\r\n  const isActiveTab = (itemId: number) => {\r\n    return openedTabs.some(\r\n      tab => tab.id === itemId && tab.id === activeTabId && tab.uniqueKey === activeTabKey\r\n    );\r\n  };\r\n\r\n  const handleLoginOut = () => {\r\n    // 쿠키 제거\r\n    Cookies.remove('session_key');\r\n\r\n    // AuthStore의 상태를 초기화\r\n    useAuthStore.getState().clearAuth();\r\n\r\n    // 통합모니터창이 열려있다면 popup close\r\n    if (popupRef.current && !popupRef.current.closed) {\r\n      popupRef.current.close();\r\n    }\r\n\r\n    // 홈 또는 로그인 페이지로 리다이렉트\r\n    router.push('/login');\r\n  }\r\n\r\n  // tofix  로그인 안했을때 미리 실행되서 에러 발생\r\n  const { mutate: fetchTenants } = useApiForTenants({\r\n    onSuccess: (data) => {\r\n      if (data.result_code === 5) {\r\n        setAlertState({\r\n          ...errorMessage,\r\n          isOpen: true,\r\n          message: '로그인 정보가 없습니다.',\r\n          type: '2',\r\n          onClose: () => goLogin(),\r\n        });\r\n      } else {\r\n        if (tenant_id === 0) {\r\n          setTenants(data.result_data);\r\n        } else {\r\n          setTenants(data.result_data.filter(data => data.tenant_id === tenant_id));\r\n        }\r\n      }\r\n    },\r\n    onError: (error) => {\r\n      // tofix 로그인 에러 발생\r\n      // console.error('Tenants API error:', error);\r\n      // alert(\"에러 발생 여기!\")\r\n      console.log(\"error 에러 발생 여기 !!!!!! : \", error);\r\n\r\n      if (error.message.split('||')[0] === '5') {\r\n        setAlertState({\r\n          ...errorMessage,\r\n          isOpen: true,\r\n          message: '로그인 정보가 없습니다.',\r\n          type: '2',\r\n          onClose: () => goLogin(),\r\n        });\r\n      }\r\n    }\r\n  });\r\n  const goLogin = () => {\r\n    Cookies.remove('session_key');\r\n    router.push('/login');\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (tenants.length > 0) {\r\n      fetchMain({\r\n        session_key: _sessionKey,\r\n        tenant_id: _tenantId\r\n      });\r\n    }\r\n  }, [tenants]);\r\n\r\n  useEffect(() => {\r\n    fetchTenants({\r\n      session_key: _sessionKey,\r\n      tenant_id: _tenantId,\r\n    });\r\n  }, [fetchTenants, _sessionKey, _tenantId]);\r\n\r\n  const { mutate: fetchMain } = useApiForMain({\r\n    onSuccess: (data) => {\r\n      if (tenant_id === 0) {\r\n        setCampaigns(data.result_data);\r\n      } else {\r\n        setCampaigns(data.result_data.filter(data => data.tenant_id === tenant_id));\r\n      }\r\n      setShouldFetchCounselors(true);  // 이 시점에 상담사 목록 조회 활성화\r\n    }\r\n  });\r\n\r\n  // 훅 관리\r\n  const { data: dataForMenusInfoForRoleId, menuList, headerMenuIds, isLoading: isLoadingMenuInfo } =\r\n    useApiForGetAuthorizedMenusInfoForMenuRoleId({\r\n      roleId: menu_role_id || 1, // menu_role_id가 없을 경우 기본값 1\r\n      enabled: !!menu_role_id // menu_role_id가 있을 때만 활성화\r\n    });\r\n  // console.log(\"dataForMenusInfoForRoleId : \", dataForMenusInfoForRoleId);\r\n\r\n  const { data: counselorListData } = useApiForFetchCounselorList({\r\n    credentials: {\r\n      // 필요한 credentials 정보\r\n      session_key: _sessionKey,\r\n      tenant_id: tenant_id,\r\n      roleId: menu_role_id\r\n    },\r\n    // enabled: shouldFetchCounselors,  // fetchMain 완료 후에만 실행\r\n  });\r\n\r\n  // console.log('counselorListData at header :', counselorListData);\r\n\r\n  useEffect(() => {\r\n    if (counselorListData) {\r\n      setCounselers(counselorListData.result_data);\r\n    }\r\n  }, [counselorListData]);\r\n\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n\r\n      <div className=\"header-top h-[28px] flex items-center\">\r\n        <div className=\"flex justify-between items-center w-full\">\r\n          <div className=\"flex items-center\">\r\n            <Image\r\n              src=\"/header-menu/header-logo.svg\"\r\n              alt=\"UPDS\"\r\n              width={54}\r\n              height={18}\r\n              priority\r\n            />\r\n          </div>\r\n          <div className=\"flex items-center space-x-4 text-white text-sm\">\r\n\r\n            <div className='flex items-center space-x-1'>\r\n\r\n              <div className='flex items-center space-x-1'>\r\n                {tenant_id === 0 && (\r\n                  <div>\r\n                    {/* s 글자의 outline button 으로 시스템 관리자임을 알림 shadcn ui button */}\r\n                    <Button variant=\"outline\" className=\"text-xs px-1 py-0 mr-1 bg-[#56CAD6]/20 text-[#56CAD6] rounded-full\">\r\n                      S\r\n                    </Button>\r\n                  </div>\r\n                )}\r\n              </div> \r\n\r\n\r\n              <Image\r\n                src=\"/header-menu/top_pic.svg\"\r\n                alt=\"사용자\"\r\n                width={14}\r\n                height={14}\r\n                priority\r\n              />\r\n              <span>{id}</span>\r\n            </div>\r\n            <CommonButton\r\n              variant=\"ghost\"\r\n              className=\"flex items-center space-x-1 text-sm text-white hover:bg-[#56CAD6]/20\"\r\n              onClick={handleLoginOut}\r\n            >\r\n              <Image\r\n                src=\"/header-menu/log-out.svg\"\r\n                alt=\"로그아웃\"\r\n                width={11}\r\n                height={12}\r\n                priority\r\n              />\r\n            </CommonButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <header className=\"bg-white border-b\">\r\n        {/* menu_role_id : {menu_role_id} */}\r\n        {/* tentant_id : {_tenantId} */}\r\n        {/* useAlramPopup: {useAlramPopup} */}\r\n        <div className=\"flex flex-col gap-4\">\r\n          <div className=\"flex items-center justify-between header-padding\">\r\n            <nav className=\"flex overflow-x-auto gap-3\">\r\n              {menuItems\r\n                // availableHeaderMenuIds에 있는 메뉴만 필터링\r\n                .filter(item => availableHeaderMenuIds?.includes(item.menuId))\r\n                .map((item) => {\r\n                  const count = getTabCountById(item.id);\r\n                  const isActive = isActiveTab(item.id);\r\n                  const isOpened = isTabOpened(item.id);\r\n\r\n                  return (\r\n                    <div key={`menu-${item.id}`} className=\"menu-item\">\r\n                      <CommonButton\r\n                        variant={isActive ? 'menuActive' : (isOpened ? 'menuOpened' : 'menu')}\r\n                        size=\"default\"\r\n                        onClick={(e) => handleMenuClick(item, e)}\r\n                        className=\"relative py-1.5 px-2\"\r\n                      >\r\n                        <div className=\"flex items-center justify-center\">\r\n                          <Image\r\n                            src={item.icon}\r\n                            alt={item.title}\r\n                            width={32}\r\n                            height={32}\r\n                            className=\"object-contain\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"flex items-center\">\r\n                          <span className={`text-xs whitespace-nowrap ${isActive ? 'text-white' : 'text-[#333]'}`}>{item.title}</span>\r\n                          {count > 1 && (\r\n                            <span className=\"ml-1 px-1.5 py-0.5 text-[10px] leading-none bg-[#E5F3F3] text-[#5BC2C1] rounded-full min-w-[16px] text-center\">\r\n                              {count}\r\n                            </span>\r\n                          )}\r\n                        </div>\r\n                      </CommonButton>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </nav>\r\n            <div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <CustomAlert\r\n        message={alertState.message}\r\n        title={alertState.title}\r\n        type={alertState.type}\r\n        isOpen={alertState.isOpen}\r\n        onClose={() => {\r\n          alertState.onClose()\r\n        }}\r\n        onCancle={() => setAlertState((prev) => ({ ...prev, isOpen: false }))} />\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1248, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1254, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/lib/cookies.ts"],"sourcesContent":["// src/lib/cookies.ts\r\nimport Cookies from 'js-cookie';\r\n\r\nexport const getCookie = (name: string): string | undefined => {\r\n  return Cookies.get(name);\r\n};\r\n\r\nexport const setCookie = (name: string, value: string, options?: Cookies.CookieAttributes) => {\r\n  Cookies.set(name, value, options);\r\n};\r\n\r\nexport const removeCookie = (name: string) => {\r\n  Cookies.remove(name);\r\n};"],"names":[],"mappings":"AAAA,qBAAqB;;;;;;AACrB;;AAEO,MAAM,YAAY,CAAC;IACxB,OAAO,wJAAA,CAAA,UAAO,CAAC,GAAG,CAAC;AACrB;AAEO,MAAM,YAAY,CAAC,MAAc,OAAe;IACrD,wJAAA,CAAA,UAAO,CAAC,GAAG,CAAC,MAAM,OAAO;AAC3B;AAEO,MAAM,eAAe,CAAC;IAC3B,wJAAA,CAAA,UAAO,CAAC,MAAM,CAAC;AACjB"}},
    {"offset": {"line": 1274, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1280, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 1293, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1299, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/lib/axios.ts"],"sourcesContent":["// src/lib/axios.ts\r\nimport axios from 'axios';\r\nimport { getCookie } from './cookies';\r\nimport { customAlertService } from '@/components/shared/layout/utils/CustomAlertService';\r\nimport { log } from 'console';\r\n\r\nexport const axiosInstance = axios.create({\r\n  baseURL: '/pds',\r\n  withCredentials: true\r\n});\r\n\r\nexport const axiosRedisInstance = axios.create({\r\n  baseURL: '/api_upds/v1',\r\n  withCredentials: true\r\n});\r\n\r\nexport const externalAxiosInstance = axios.create({\r\n  withCredentials: true\r\n});\r\n\r\n// 요청 인터셉터 추가\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    \r\n    const sessionKey = getCookie('session_key');\r\n\r\n    if (sessionKey && config.headers) {\r\n      // Session-Cookie가 아닌 Session-Key로 변경\r\n      config.headers['Session-Key'] = sessionKey;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n\r\n    // console.log(\"error ???????????????\", error);\r\n\r\n    if (error.response.data.result_code === 5) {\r\n      // 세션 만료 시 알럿 표시 후 로그인 페이지로 리다이렉트\r\n      customAlertService.error('로그인 세션이 만료되었습니다. 다시 로그인 해주세요.', '세션 만료', () => {\r\n        window.location.href = '/login';\r\n      });\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 응답 인터셉터\r\naxiosInstance.interceptors.response.use(\r\n  async (response) => {\r\n    // console.log(\"here 8888888888888 response\", response);\r\n    \r\n    const url = response.config.url || '';\r\n    const userId = getCookie('id');\r\n    if( url !== '/login' && userId != null && userId != '' ) {\r\n      let activation = '';\r\n      let eventName = '';\r\n      let queryType = 'R';\r\n      let description = '';\r\n      if( url === '/login' ) {\r\n        activation = '로그인';\r\n        eventName = 'login';\r\n      } else if( url === '/collections/tenant' ) {\r\n        activation = '테넌트정보조회';\r\n        eventName = 'tenants';\r\n      } else if( url === '/collections/phone-description' ) {\r\n        activation = '전화번호설명템플릿조회';\r\n        eventName = 'phone-description';\r\n      } else if( url === '/phone-description' ) {\r\n        if( response.config.method === 'post' ) {\r\n          activation = '전화번호설명템플릿생성';\r\n          eventName = 'description';\r\n          queryType = 'C';\r\n        }else if( response.config.method === 'put' ) {\r\n          activation = '전화번호설명템플릿수정';\r\n          eventName = 'description';\r\n          queryType = 'U';\r\n        }else if( response.config.method === 'delete' ) {\r\n          activation = '전화번호설명템플릿삭제';\r\n          eventName = 'description';\r\n          queryType = 'D';\r\n        }\r\n      } else if( url === '/collections/dialing-device' ) {\r\n        activation = '다이얼링장비조회';\r\n        eventName = 'dialing-device';\r\n      } else if( url === '/dialing-device' ) {\r\n        if( response.config.method === 'post' ) {\r\n          activation = '다이얼링장비생성';\r\n          eventName = 'dialing-device';\r\n          queryType = 'C';\r\n        }else if( response.config.method === 'put' ) {\r\n          activation = '다이얼링장비수정';\r\n          eventName = 'dialing-device';\r\n          queryType = 'U';\r\n        }else if( response.config.method === 'delete' ) {\r\n          activation = '다이얼링장비삭제';\r\n          eventName = 'dialing-device';\r\n          queryType = 'D';\r\n        }\r\n      } else if( url === '/collections/channel-group' ) {\r\n        activation = '채널그룹조회';\r\n        eventName = 'channel-group';\r\n      } else if( url === '/channel-group' ) {\r\n        if( response.config.method === 'post' ) {\r\n          activation = '채널그룹생성';\r\n          eventName = 'channel-group';\r\n          queryType = 'C';\r\n        }else if( response.config.method === 'put' ) {\r\n          activation = '채널그룹수정';\r\n          eventName = 'channel-group';\r\n          queryType = 'U';\r\n        }else if( response.config.method === 'delete' ) {\r\n          activation = '채널그룹삭제';\r\n          eventName = 'channel-group';\r\n          queryType = 'D';\r\n        }\r\n      } else if( url === '/collections/channel-assign' ) {\r\n        activation = '채널할당조회';\r\n        eventName = 'channel-assign';\r\n      } else if( url === '/channel-assign' ) {\r\n        if( response.config.method === 'put' ) {\r\n          activation = '채널할당수정';\r\n          eventName = 'channel-assign';\r\n          queryType = 'U';\r\n        }\r\n      } else if( url === '/collections/skill' || url === 'collections/skill' ) {\r\n        activation = '스킬마스터목록조회';\r\n        eventName = 'skills';\r\n      } else if( url.indexOf('skills') > -1 && url.indexOf('/agent-list') == -1 ) {\r\n        if( response.config.method === 'post' ) {\r\n          activation = '스킬마스터생성';\r\n          eventName = 'skills';\r\n          queryType = 'C';\r\n        } else if( response.config.method === 'put' ) {\r\n          activation = '스킬마스터수정';\r\n          eventName = 'skills';\r\n          queryType = 'U';\r\n        } else if( response.config.method === 'delete' ) {\r\n          activation = '스킬마스터삭제';\r\n          eventName = 'skills';\r\n          queryType = 'D';\r\n        }\r\n      } else if( url === '/collections/skill-agent' ) {\r\n        activation = '스킬할당상담사';\r\n        eventName = 'skill-agent';\r\n      } else if( url.indexOf('skills') > -1 && url.indexOf('/agent-list') > -1 ) {\r\n        if( response.config.method === 'post' ) {\r\n          activation = '스킬할당상담사생성';\r\n          eventName = 'skill-agent';\r\n          queryType = 'C';\r\n        } else if( response.config.method === 'delete' ) {\r\n          activation = '스킬할당상담사삭제';\r\n          eventName = 'skill-agent';\r\n          queryType = 'D';\r\n        }\r\n      } else if( url === '/collections/skill-campaign' ) {\r\n        activation = '스킬할당캠페인';\r\n        eventName = 'skill-campaign';\r\n      } else if( url === '/collections/agent-skill' ) {\r\n        activation = '상담사보유스킬';\r\n        eventName = 'agent-skill';\r\n      } else if( url === '/collections/campaign-skill' || url === 'collections/campaign-skill' ) {\r\n        activation = '캠페인요구스킬조회';\r\n        eventName = 'skill';\r\n      } else if( url.indexOf('/campaigns') > -1 && url.indexOf('/skill') > -1 ) {\r\n        if( response.config.method === 'put' ) {\r\n          activation = '캠페인요구스킬수정';\r\n          eventName = 'campaign-skill';\r\n          queryType = 'U';\r\n        }\r\n      } else if( url === '/collections/maxcall-init-time' ) {\r\n        activation = '분배제한초기화시각조회';\r\n        eventName = 'maxcall-init-time';\r\n      } else if( url === '/maxcall-init-time' ) {\r\n        activation = '분배제한초기화시각수정';\r\n        eventName = 'maxcall-init-time';\r\n        queryType = 'U';\r\n      } else if( url === '/collections/suspended-skill' ) {\r\n        activation = '일지중지캠페인조회';\r\n        eventName = 'suspended-skill';\r\n      } else if( url === '/suspended-skill' ) {\r\n        activation = '일지중지캠페인삭제';\r\n        eventName = 'suspended-skill';\r\n        queryType = 'D';\r\n      } else if( url === 'collections/campaign-list' ) {\r\n        activation = '캠페인리스트조회';\r\n        eventName = 'campaign-list';\r\n      } else if( url === '/collections/campaign' ) {\r\n        activation = '캠페인마스터목록조회';\r\n        eventName = 'campaigns';\r\n      } else if( url.indexOf('/collections') > -1 && url.split('/').length === 2 ) {\r\n        if( response.config.method === 'post' ) {\r\n          activation = '캠페인마스터생성';\r\n          eventName = 'campaigns';\r\n          queryType = 'C';\r\n        }else if( response.config.method === 'put' ) {\r\n          activation = '캠페인마스터수정';\r\n          eventName = 'campaigns';\r\n          queryType = 'U';\r\n        }else if( response.config.method === 'delete' ) {\r\n          activation = '캠페인마스터삭제';\r\n          eventName = 'campaigns';\r\n          queryType = 'D';\r\n        }\r\n      } else if( url.indexOf('/status') > -1 ) {\r\n        const status = JSON.parse(response.config.data).request_data.campaign_status === 1 ? '시작': \r\n          JSON.parse(response.config.data).request_data.campaign_status === 2 ?'멈춤':'중지';\r\n        activation = '캠페인상태변경';\r\n        eventName = 'updateStatus';\r\n        queryType = 'U';\r\n        description = '캠페인 상태를 \"' + status + '\"으로 변경';\r\n      } else if( url === '/collections/campaign-reserved-call' ) {\r\n        activation = '예약호마스터조회';\r\n        eventName = 'campaign-reserved-call';\r\n      } else if( url.indexOf('/campaigns') > -1 && url.indexOf('/reserved-call') > -1 ) {\r\n        if( response.config.method === 'post' ) {\r\n          activation = '예약호마스터생성';\r\n          eventName = 'campaign-reserved-call';\r\n          queryType = 'C';\r\n        } else if( response.config.method === 'put' ) {\r\n          activation = '예약호마스터수정';\r\n          eventName = 'campaign-reserved-call';\r\n          queryType = 'U';\r\n        } else if( response.config.method === 'delete' ) {\r\n          activation = '예약호마스터삭제';\r\n          eventName = 'campaign-reserved-call';\r\n          queryType = 'D';\r\n        }\r\n      } else if( url === '/collections/campaign-scheduled-redial' ) {\r\n        activation = '캠페인예약재발신정보조회';\r\n        eventName = 'campaign-scheduled-redial';\r\n      } else if( url.indexOf('/campaigns') > -1 && url.indexOf('/scheduled-redial') > -1 ) {\r\n        if( response.config.method === 'post' ) {\r\n          activation = '캠페인예약재발신정보생성';\r\n          eventName = 'campaign-scheduled-redial';\r\n          queryType = 'C';\r\n        } else if( response.config.method === 'put' ) {\r\n          activation = '캠페인예약재발신정보수정';\r\n          eventName = 'campaign-scheduled-redial';\r\n          queryType = 'U';\r\n        } else if( response.config.method === 'delete' ) {\r\n          activation = '캠페인예약재발신정보삭제';\r\n          eventName = 'campaign-scheduled-redial';\r\n          queryType = 'D';\r\n        }\r\n      } else if( url.indexOf('/campaigns') > -1 && url.indexOf('/current-redial') > -1 ) {\r\n        activation = '캠페인재발신추출수정';\r\n        eventName = 'campaign-current-redial';\r\n        queryType = 'U';\r\n      } else if( url === '/collections/campaign-redial-preview' ) {\r\n        activation = '캠페인재발신미리보기';\r\n        eventName = 'campaign-redial-preview';\r\n      } else if( url === '/collections/campaign-schedule' ) {\r\n        activation = '캠페인스케줄정보조회';\r\n        eventName = 'campaign-schedule';\r\n      } else if( url.indexOf('/schedule') > -1 ) {\r\n        if( response.config.method === 'post' ) {\r\n          activation = '캠페인스케줄정보생성';\r\n          eventName = 'campaign-schedule';\r\n          queryType = 'C';\r\n        }else if( response.config.method === 'put' ) {\r\n          activation = '캠페인스케줄정보수정';\r\n          eventName = 'campaign-schedule';\r\n          queryType = 'U';\r\n        }else if( response.config.method === 'delete' ) {\r\n          activation = '캠페인스케줄정보삭제';\r\n          eventName = 'campaign-schedule';\r\n          queryType = 'D';\r\n        }\r\n      } else if( url === '/collections/campaign-calling-number' ) {\r\n        activation = '캠페인발신번호조회';\r\n        eventName = 'campaign-calling-number';\r\n      } else if( url.indexOf('/campaigns') > -1 && url.indexOf('/calling-number') > -1 ) {\r\n        if( response.config.method === 'post' ) {\r\n          activation = '캠페인발신번호생성';\r\n          eventName = 'campaign-calling-number';\r\n          queryType = 'C';\r\n        } else if( response.config.method === 'put' ) {\r\n          activation = '캠페인발신번호수정';\r\n          eventName = 'campaign-calling-number';\r\n          queryType = 'U';\r\n        } else if( response.config.method === 'delete' ) {\r\n          activation = '캠페인발신번호삭제';\r\n          eventName = 'campaign-calling-number';\r\n          queryType = 'D';\r\n        }\r\n      } else if( url === '/collections/maxcall-ext' ) {\r\n        activation = '캠페인분배제한조회';\r\n        eventName = 'maxcall-ext';\r\n      } else if( url.indexOf('/campaigns') > -1 && url.indexOf('/maxcall-ext') > -1 ) {\r\n        if( response.config.method === 'post' ) {\r\n          activation = '캠페인분배제한생성';\r\n          eventName = 'maxcall-ext';\r\n          queryType = 'C';\r\n        } else if( response.config.method === 'put' ) {\r\n          activation = '캠페인분배제한수정';\r\n          eventName = 'maxcall-ext';\r\n          queryType = 'U';\r\n        } else if( response.config.method === 'delete' ) {\r\n          activation = '캠페인분배제한삭제';\r\n          eventName = 'maxcall-ext';\r\n          queryType = 'D';\r\n        }\r\n      } else if( url.indexOf('/campaigns') > -1 && url.indexOf('/calling-list') > -1 ) {\r\n        if( response.config.method === 'post' ) {\r\n          activation = '발신리스트업로드추가';\r\n          eventName = 'campaign-calling-list';\r\n          queryType = 'C';\r\n        } else if( response.config.method === 'delete' ) {\r\n          activation = '발신리스트업로드삭제';\r\n          eventName = 'campaign-calling-list';\r\n          queryType = 'D';\r\n        }\r\n      } else if( url.indexOf('/campaigns') > -1 && url.indexOf('/black-list') > -1 ) {\r\n        if( response.config.method === 'post' ) {\r\n          activation = '블랙리스트업로드추가';\r\n          eventName = 'campaign-black-list';\r\n          queryType = 'C';\r\n        } else if( response.config.method === 'delete' ) {\r\n          activation = '블랙리스트업로드삭제';\r\n          eventName = 'campaign-black-list';\r\n          queryType = 'D';\r\n        }\r\n      } else if( url === '/collections/campaign-blacklist-max' ) {\r\n        activation = '블랙리스트최대수량조회';\r\n        eventName = 'campaign-blacklist-max';\r\n      } else if( url === '/collections/campaign-blacklist-count' ) {\r\n        activation = '블랙리스트수량조회';\r\n        eventName = 'campaign-blacklist-count';\r\n      } else if( url.indexOf('/campaigns') > -1 && url.indexOf('/dial-speed') > -1 ) {\r\n        activation = '캠페인발신속도수정';\r\n        eventName = 'campaign-black-list';\r\n        queryType = 'U';\r\n      } else if( url.indexOf('/campaigns') > -1 && url.indexOf('/callback-list') > -1 ) {\r\n        activation = '캠페인콜백리스트추가';\r\n        eventName = 'campaign-callback-list';\r\n        queryType = 'C';\r\n      } else if( url === '/collections/campaign-agent' ) {\r\n        activation = '캠페인소속상담사조회';\r\n        eventName = 'campaignAgents';\r\n      } else if( url === '/collections/agent-campaign' ) {\r\n        activation = '상담사소속캠페인조회';\r\n        eventName = 'agentCampaigns';\r\n      } else if( url === '/collections/callback-campaign' ) {\r\n        activation = '콜백캠페인조회';\r\n        eventName = 'callback-campaign';\r\n      } else if( url === '/collections/campaign-history' ) {\r\n        activation = '캠페인운영이력조회';\r\n        eventName = 'campaign-history';\r\n      } else if( url === '/collections/dial-result' ) {\r\n        activation = '캠페인발신결과조회';\r\n        eventName = 'dial-result';\r\n      } else if( url === '/collections/agent-ready-count' ) {\r\n        activation = '캠페인대기상담사수조회';\r\n        eventName = 'agent-ready-count';\r\n      } else if( url === '/collections/suspended-campaign' ) {\r\n        activation = '일지중지캠페인조회';\r\n        eventName = 'suspended-campaign';\r\n      } else if( url === '/suspended-campaign' ) {\r\n        activation = '일지중지캠페인삭제';\r\n        eventName = 'suspended-campaign';\r\n        queryType = 'D';\r\n      } else if( url === '/collections/campaign-group' || url === 'collections/campaign-group' ) {\r\n        activation = '캠페인그룹정보조회';\r\n        eventName = 'campaignGroups';\r\n      } else if( url.split('/')[0] === 'campaign-groups' ) {\r\n        if( response.config.method === 'post' ) {\r\n          activation = '캠페인그룹정보생성';\r\n          eventName = 'campaignGroup';\r\n          queryType = 'C';\r\n        } else if( response.config.method === 'put' ) {\r\n          activation = '캠페인그룹정보수정';\r\n          eventName = 'campaignGroup';\r\n          queryType = 'U';\r\n        } else if( response.config.method === 'delete' ) {\r\n          activation = '캠페인그룹정보삭제';\r\n          eventName = 'campaignGroup';\r\n          queryType = 'D';\r\n          description = '캠페인 그룹 아이디 : \"' + url.split('/')[1] + '\"번 삭제';\r\n        }\r\n      } else if( url === '/collections/campaign-group-list' || url === 'collections/campaign-group-list' ) {\r\n        activation = '캠페인그룹소속캠페인조회';\r\n        eventName = 'campaignGroupCampaigns';\r\n      } else if( url.split('/')[0] === 'campaign-group' && url.indexOf('/list') > -1 ) {\r\n        if( response.config.method === 'post' ) {\r\n          activation = '캠페인그룹소속캠페인생성';\r\n          eventName = 'campaignGroupCampaign';\r\n          queryType = 'C';\r\n        } else if( response.config.method === 'delete' ) {\r\n          activation = '캠페인그룹소속캠페인삭제';\r\n          eventName = 'campaignGroupCampaign';\r\n          queryType = 'D';\r\n          description = '캠페인 그룹 아이디 : \"' + url.split('/')[1] + '\"번 소속캠페인 삭제';\r\n        }\r\n      }\r\n      const logData = {\r\n          \"tenantId\": Number(getCookie('tenant_id')),\r\n          \"employeeId\": userId,\r\n          \"userHost\": getCookie('userHost'),\r\n          \"queryId\": response.config.url,\r\n          \"queryType\": queryType,\r\n          \"activation\": activation,\r\n          \"description\": description,\r\n          \"successFlag\": 1,\r\n          \"eventName\": eventName,\r\n          \"queryRows\": typeof response.data.result_data === 'undefined' ? 1 : response.data.result_data.length,\r\n          \"targetId\": response.config.url,\r\n          \"userSessionType\": 0,\r\n          \"exportFlag\": 1,\r\n          \"memo\": \"\",\r\n          \"updateEmployeeId\": userId\r\n      };\r\n      const { data } = await axiosRedisInstance.post<{code:string;message:string;}>(\r\n        `/log/save`,\r\n        logData \r\n      );\r\n    }\r\n    return response;\r\n  },\r\n  async (error) => {\r\n\r\n    if (error.response.data.result_code === 5) {\r\n      // 세션 만료 시 알럿 표시 후 로그인 페이지로 리다이렉트\r\n      customAlertService.error('로그인 세션이 만료되었습니다. 다시 로그인 해주세요.', '세션 만료', () => {\r\n        window.location.href = '/login';\r\n      });\r\n    }\r\n\r\n    const url = error.config.url || '';\r\n    const userId = getCookie('id');\r\n    if( url !== '/login' && userId != null && userId != '' ) {\r\n      let activation = '';\r\n      let eventName = '';\r\n      let queryType = 'R';\r\n      // let description = '';\r\n      if( url === '/login' ) {\r\n        activation = '로그인';\r\n        eventName = 'login';\r\n      } else if( url === '/collections/tenant' ) {\r\n        activation = '테넌트정보조회';\r\n        eventName = 'tenants';\r\n      } else if( url === '/collections/phone-description' ) {\r\n        activation = '전화번호설명템플릿조회';\r\n        eventName = 'phone-description';\r\n      } else if( url === '/phone-description' ) {\r\n        if( error.config.method === 'post' ) {\r\n          activation = '전화번호설명템플릿생성';\r\n          eventName = 'description';\r\n          queryType = 'C';\r\n        }else if( error.config.method === 'put' ) {\r\n          activation = '전화번호설명템플릿수정';\r\n          eventName = 'description';\r\n          queryType = 'U';\r\n        }else if( error.config.method === 'delete' ) {\r\n          activation = '전화번호설명템플릿삭제';\r\n          eventName = 'description';\r\n          queryType = 'D';\r\n        }\r\n      } else if( url === '/collections/dialing-device' ) {\r\n        activation = '다이얼링장비조회';\r\n        eventName = 'dialing-device';\r\n      } else if( url === '/dialing-device' ) {\r\n        if( error.config.method === 'post' ) {\r\n          activation = '다이얼링장비생성';\r\n          eventName = 'dialing-device';\r\n          queryType = 'C';\r\n        }else if( error.config.method === 'put' ) {\r\n          activation = '다이얼링장비수정';\r\n          eventName = 'dialing-device';\r\n          queryType = 'U';\r\n        }else if( error.config.method === 'delete' ) {\r\n          activation = '다이얼링장비삭제';\r\n          eventName = 'dialing-device';\r\n          queryType = 'D';\r\n        }\r\n      } else if( url === '/collections/channel-group' ) {\r\n        activation = '채널그룹조회';\r\n        eventName = 'channel-group';\r\n      } else if( url === '/channel-group' ) {\r\n        if( error.config.method === 'post' ) {\r\n          activation = '채널그룹생성';\r\n          eventName = 'channel-group';\r\n          queryType = 'C';\r\n        }else if( error.config.method === 'put' ) {\r\n          activation = '채널그룹수정';\r\n          eventName = 'channel-group';\r\n          queryType = 'U';\r\n        }else if( error.config.method === 'delete' ) {\r\n          activation = '채널그룹삭제';\r\n          eventName = 'channel-group';\r\n          queryType = 'D';\r\n        }\r\n      } else if( url === '/collections/channel-assign' ) {\r\n        activation = '채널할당조회';\r\n        eventName = 'channel-assign';\r\n      } else if( url === '/channel-assign' ) {\r\n        if( error.config.method === 'put' ) {\r\n          activation = '채널할당수정';\r\n          eventName = 'channel-assign';\r\n          queryType = 'U';\r\n        }\r\n      } else if( url === '/collections/skill' || url === 'collections/skill' ) {\r\n        activation = '스킬마스터목록조회';\r\n        eventName = 'skills';\r\n      } else if( url.indexOf('skills') > -1 && url.indexOf('/agent-list') == -1 ) {\r\n        if( error.config.method === 'post' ) {\r\n          activation = '스킬마스터생성';\r\n          eventName = 'skills';\r\n          queryType = 'C';\r\n        } else if( error.config.method === 'put' ) {\r\n          activation = '스킬마스터수정';\r\n          eventName = 'skills';\r\n          queryType = 'U';\r\n        } else if( error.config.method === 'delete' ) {\r\n          activation = '스킬마스터삭제';\r\n          eventName = 'skills';\r\n          queryType = 'D';\r\n        }\r\n      } else if( url === '/collections/skill-agent' ) {\r\n        activation = '스킬할당상담사';\r\n        eventName = 'skill-agent';\r\n      } else if( url.indexOf('skills') > -1 && url.indexOf('/agent-list') > -1 ) {\r\n        if( error.config.method === 'post' ) {\r\n          activation = '스킬할당상담사생성';\r\n          eventName = 'skill-agent';\r\n          queryType = 'C';\r\n        } else if( error.config.method === 'delete' ) {\r\n          activation = '스킬할당상담사삭제';\r\n          eventName = 'skill-agent';\r\n          queryType = 'D';\r\n        }\r\n      } else if( url === '/collections/skill-campaign' ) {\r\n        activation = '스킬할당캠페인';\r\n        eventName = 'skill-campaign';\r\n      } else if( url === '/collections/agent-skill' ) {\r\n        activation = '상담사보유스킬';\r\n        eventName = 'agent-skill';\r\n      } else if( url === '/collections/campaign-skill' || url === 'collections/campaign-skill' ) {\r\n        activation = '캠페인요구스킬조회';\r\n        eventName = 'skill';\r\n      } else if( url.indexOf('/campaigns') > -1 && url.indexOf('/skill') > -1 ) {\r\n        if( error.config.method === 'put' ) {\r\n          activation = '캠페인요구스킬수정';\r\n          eventName = 'campaign-skill';\r\n          queryType = 'U';\r\n        }\r\n      } else if( url === '/collections/maxcall-init-time' ) {\r\n        activation = '분배제한초기화시각조회';\r\n        eventName = 'maxcall-init-time';\r\n      } else if( url === '/maxcall-init-time' ) {\r\n        activation = '분배제한초기화시각수정';\r\n        eventName = 'maxcall-init-time';\r\n        queryType = 'U';\r\n      } else if( url === '/collections/suspended-skill' ) {\r\n        activation = '일지중지스킬조회';\r\n        eventName = 'suspended-skill';\r\n      } else if( url === '/suspended-skill' ) {\r\n        activation = '일지중지스킬삭제';\r\n        eventName = 'suspended-skill';\r\n        queryType = 'D';\r\n      } else if( url === 'collections/campaign-list' ) {\r\n        activation = '캠페인리스트조회';\r\n        eventName = 'campaign-list';\r\n      } else if( url === '/collections/campaign' ) {\r\n        activation = '캠페인마스터목록조회';\r\n        eventName = 'campaigns';\r\n      } else if( url.indexOf('/collections') > -1 && url.split('/').length === 2 ) {\r\n        if( error.config.method === 'post' ) {\r\n          activation = '캠페인마스터생성';\r\n          eventName = 'campaigns';\r\n          queryType = 'C';\r\n        }else if( error.config.method === 'put' ) {\r\n          activation = '캠페인마스터수정';\r\n          eventName = 'campaigns';\r\n          queryType = 'U';\r\n        }else if( error.config.method === 'delete' ) {\r\n          activation = '캠페인마스터삭제';\r\n          eventName = 'campaigns';\r\n          queryType = 'D';\r\n        }\r\n      } else if( url.indexOf('/status') > -1 ) {\r\n        const status = JSON.parse(error.config.data).request_data.campaign_status === 1 ? '시작': \r\n          JSON.parse(error.config.data).request_data.campaign_status === 2 ?'멈춤':'중지';\r\n        activation = '캠페인상태변경';\r\n        eventName = 'updateStatus';\r\n        queryType = 'U';\r\n        // description = '캠페인 상태를 \"' + status + '\"으로 변경';\r\n      } else if( url === '/collections/campaign-reserved-call' ) {\r\n        activation = '예약호마스터조회';\r\n        eventName = 'campaign-reserved-call';\r\n      } else if( url.indexOf('/campaigns') > -1 && url.indexOf('/reserved-call') > -1 ) {\r\n        if( error.config.method === 'post' ) {\r\n          activation = '예약호마스터생성';\r\n          eventName = 'campaign-reserved-call';\r\n          queryType = 'C';\r\n        } else if( error.config.method === 'put' ) {\r\n          activation = '예약호마스터수정';\r\n          eventName = 'campaign-reserved-call';\r\n          queryType = 'U';\r\n        } else if( error.config.method === 'delete' ) {\r\n          activation = '예약호마스터삭제';\r\n          eventName = 'campaign-reserved-call';\r\n          queryType = 'D';\r\n        }\r\n      } else if( url === '/collections/campaign-scheduled-redial' ) {\r\n        activation = '캠페인예약재발신정보조회';\r\n        eventName = 'campaign-scheduled-redial';\r\n      } else if( url.indexOf('/campaigns') > -1 && url.indexOf('/scheduled-redial') > -1 ) {\r\n        if( error.config.method === 'post' ) {\r\n          activation = '캠페인예약재발신정보생성';\r\n          eventName = 'campaign-scheduled-redial';\r\n          queryType = 'C';\r\n        } else if( error.config.method === 'put' ) {\r\n          activation = '캠페인예약재발신정보수정';\r\n          eventName = 'campaign-scheduled-redial';\r\n          queryType = 'U';\r\n        } else if( error.config.method === 'delete' ) {\r\n          activation = '캠페인예약재발신정보삭제';\r\n          eventName = 'campaign-scheduled-redial';\r\n          queryType = 'D';\r\n        }\r\n      } else if( url.indexOf('/campaigns') > -1 && url.indexOf('/current-redial') > -1 ) {\r\n        activation = '캠페인재발신추출수정';\r\n        eventName = 'campaign-current-redial';\r\n        queryType = 'U';\r\n      } else if( url === '/collections/campaign-redial-preview' ) {\r\n        activation = '캠페인재발신미리보기';\r\n        eventName = 'campaign-redial-preview';\r\n      } else if( url === '/collections/campaign-schedule' ) {\r\n        activation = '캠페인스케줄정보조회';\r\n        eventName = 'campaign-schedule';\r\n      } else if( url.indexOf('/schedule') > -1 ) {\r\n        if( error.config.method === 'post' ) {\r\n          activation = '캠페인스케줄정보생성';\r\n          eventName = 'campaign-schedule';\r\n          queryType = 'C';\r\n        }else if( error.config.method === 'put' ) {\r\n          activation = '캠페인스케줄정보수정';\r\n          eventName = 'campaign-schedule';\r\n          queryType = 'U';\r\n        }else if( error.config.method === 'delete' ) {\r\n          activation = '캠페인스케줄정보삭제';\r\n          eventName = 'campaign-schedule';\r\n          queryType = 'D';\r\n        }\r\n      } else if( url === '/collections/campaign-calling-number' ) {\r\n        activation = '캠페인발신번호조회';\r\n        eventName = 'campaign-calling-number';\r\n      } else if( url.indexOf('/campaigns') > -1 && url.indexOf('/calling-number') > -1 ) {\r\n        if( error.config.method === 'post' ) {\r\n          activation = '캠페인발신번호생성';\r\n          eventName = 'campaign-calling-number';\r\n          queryType = 'C';\r\n        } else if( error.config.method === 'put' ) {\r\n          activation = '캠페인발신번호수정';\r\n          eventName = 'campaign-calling-number';\r\n          queryType = 'U';\r\n        } else if( error.config.method === 'delete' ) {\r\n          activation = '캠페인발신번호삭제';\r\n          eventName = 'campaign-calling-number';\r\n          queryType = 'D';\r\n        }\r\n      } else if( url === '/collections/maxcall-ext' ) {\r\n        activation = '캠페인분배제한조회';\r\n        eventName = 'maxcall-ext';\r\n      } else if( url.indexOf('/campaigns') > -1 && url.indexOf('/maxcall-ext') > -1 ) {\r\n        if( error.config.method === 'post' ) {\r\n          activation = '캠페인분배제한생성';\r\n          eventName = 'maxcall-ext';\r\n          queryType = 'C';\r\n        } else if( error.config.method === 'put' ) {\r\n          activation = '캠페인분배제한수정';\r\n          eventName = 'maxcall-ext';\r\n          queryType = 'U';\r\n        } else if( error.config.method === 'delete' ) {\r\n          activation = '캠페인분배제한삭제';\r\n          eventName = 'maxcall-ext';\r\n          queryType = 'D';\r\n        }\r\n      } else if( url.indexOf('/campaigns') > -1 && url.indexOf('/calling-list') > -1 ) {\r\n        if( error.config.method === 'post' ) {\r\n          activation = '발신리스트업로드추가';\r\n          eventName = 'campaign-calling-list';\r\n          queryType = 'C';\r\n        } else if( error.config.method === 'delete' ) {\r\n          activation = '발신리스트업로드삭제';\r\n          eventName = 'campaign-calling-list';\r\n          queryType = 'D';\r\n        }\r\n      } else if( url.indexOf('/campaigns') > -1 && url.indexOf('/black-list') > -1 ) {\r\n        if( error.config.method === 'post' ) {\r\n          activation = '블랙리스트업로드추가';\r\n          eventName = 'campaign-black-list';\r\n          queryType = 'C';\r\n        } else if( error.config.method === 'delete' ) {\r\n          activation = '블랙리스트업로드삭제';\r\n          eventName = 'campaign-black-list';\r\n          queryType = 'D';\r\n        }\r\n      } else if( url === '/collections/campaign-blacklist-max' ) {\r\n        activation = '블랙리스트최대수량조회';\r\n        eventName = 'campaign-blacklist-max';\r\n      } else if( url === '/collections/campaign-blacklist-count' ) {\r\n        activation = '블랙리스트수량조회';\r\n        eventName = 'campaign-blacklist-count';\r\n      } else if( url.indexOf('/campaigns') > -1 && url.indexOf('/dial-speed') > -1 ) {\r\n        activation = '캠페인발신속도수정';\r\n        eventName = 'campaign-black-list';\r\n        queryType = 'U';\r\n      } else if( url.indexOf('/campaigns') > -1 && url.indexOf('/callback-list') > -1 ) {\r\n        activation = '캠페인콜백리스트추가';\r\n        eventName = 'campaign-callback-list';\r\n        queryType = 'C';\r\n      } else if( url === '/collections/campaign-agent' ) {\r\n        activation = '캠페인소속상담사조회';\r\n        eventName = 'campaignAgents';\r\n      } else if( url === '/collections/agent-campaign' ) {\r\n        activation = '상담사소속캠페인조회';\r\n        eventName = 'agentCampaigns';\r\n      } else if( url === '/collections/callback-campaign' ) {\r\n        activation = '콜백캠페인조회';\r\n        eventName = 'callback-campaign';\r\n      } else if( url === '/collections/campaign-history' ) {\r\n        activation = '캠페인운영이력조회';\r\n        eventName = 'campaign-history';\r\n      } else if( url === '/collections/dial-result' ) {\r\n        activation = '캠페인발신결과조회';\r\n        eventName = 'dial-result';\r\n      } else if( url === '/collections/agent-ready-count' ) {\r\n        activation = '캠페인대기상담사수조회';\r\n        eventName = 'agent-ready-count';\r\n      } else if( url === '/collections/suspended-campaign' ) {\r\n        activation = '일지중지캠페인조회';\r\n        eventName = 'suspended-campaign';\r\n      } else if( url === '/suspended-campaign' ) {\r\n        activation = '일지중지캠페인삭제';\r\n        eventName = 'suspended-campaign';\r\n        queryType = 'D';\r\n      } else if( url === '/collections/campaign-group' || url === 'collections/campaign-group' ) {\r\n        activation = '캠페인그룹정보조회';\r\n        eventName = 'campaignGroups';\r\n      } else if( url.split('/')[0] === 'campaign-groups' ) {\r\n        if( error.config.method === 'post' ) {\r\n          activation = '캠페인그룹정보생성';\r\n          eventName = 'campaignGroup';\r\n          queryType = 'C';\r\n        } else if( error.config.method === 'put' ) {\r\n          activation = '캠페인그룹정보수정';\r\n          eventName = 'campaignGroup';\r\n          queryType = 'U';\r\n        } else if( error.config.method === 'delete' ) {\r\n          activation = '캠페인그룹정보삭제';\r\n          eventName = 'campaignGroup';\r\n          queryType = 'D';\r\n        }\r\n      } else if( url === '/collections/campaign-group-list' || url === 'collections/campaign-group-list' ) {\r\n        activation = '캠페인그룹소속캠페인조회';\r\n        eventName = 'campaignGroupCampaigns';\r\n      } else if( url.split('/')[0] === 'campaign-group' && url.indexOf('/list') > -1 ) {\r\n        if( error.config.method === 'post' ) {\r\n          activation = '캠페인그룹소속캠페인생성';\r\n          eventName = 'campaignGroupCampaign';\r\n          queryType = 'C';\r\n        } else if( error.config.method === 'delete' ) {\r\n          activation = '캠페인그룹소속캠페인삭제';\r\n          eventName = 'campaignGroupCampaign';\r\n          queryType = 'D';\r\n        }\r\n      }\r\n      const logData = {\r\n          \"tenantId\": Number(getCookie('tenant_id')),\r\n          \"employeeId\": userId,\r\n          \"userHost\": getCookie('userHost'),\r\n          \"queryId\": error.config.url,\r\n          \"queryType\": queryType,\r\n          \"activation\": activation,\r\n          \"description\": error.message,\r\n          \"successFlag\": 0,\r\n          \"eventName\": eventName,\r\n          \"queryRows\": 0,\r\n          \"targetId\": error.config.url||0,\r\n          \"userSessionType\": 0,\r\n          \"exportFlag\": 1,\r\n          \"memo\": \"\",\r\n          \"updateEmployeeId\": userId\r\n      };\r\n      const { data } = await axiosRedisInstance.post<{code:string;message:string;}>(\r\n        `/log/save`,\r\n        logData \r\n      );\r\n    }\r\n    if (error.response?.status === 401) {\r\n      window.location.href = '/login';\r\n      return Promise.reject(new Error('세션이 만료되었습니다. 다시 로그인해주세요.'));\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n// 응답 인터셉터\r\naxiosRedisInstance.interceptors.response.use(\r\n  async (response) => {\r\n\r\n    // console.log(\"here 9999999999999999999999999999999999\", response);\r\n    \r\n\r\n    const url = response.config.url || '';\r\n    const userId = getCookie('id');\r\n    if( url !== '/log/save' && userId != null && userId != '' ) {\r\n      let activation = '';\r\n      let eventName = '';\r\n      let queryType = 'R';\r\n      let description = '';\r\n      if( url === '/auth/environment' ) {\r\n        activation = '사용자별 환경설정 가져오기';\r\n        eventName = 'environment';\r\n      } else if( url.indexOf('/auth/availableMenuList') > -1 ) {\r\n        activation = '사용가능한 메뉴 리스트 가져오기';\r\n        eventName = 'availableMenuList';\r\n      } else if( url.indexOf('/auth/environment') > -1 ) {\r\n        activation = '사용자별 환경설정 가져오기';\r\n        eventName = 'environment';\r\n      } else if( url.indexOf('/auth/environment/save') > -1 ) {\r\n        activation = '사용자별 환경설정 저장하기';\r\n        eventName = 'environment-save';\r\n        queryType = 'C';\r\n      } else if( url.indexOf('/counselor/list') > -1 ) {\r\n        activation = '상담사 리스트 가져오기';\r\n        eventName = 'counselor-list';\r\n      } else if( url.indexOf('/counselor/state') > -1 ) {\r\n        activation = '상담사 상태정보 가져오기';\r\n        eventName = 'counselor-state';\r\n      } else if( url.indexOf('/counselor/counselorInfo') > -1 ) {\r\n        activation = '캠페인 할당 상담사정보 가져오기';\r\n        eventName = 'counselor-state';\r\n      } else if( url.indexOf('/counselor/sillAssigned/list') > -1 ) {\r\n        activation = '스킬 할당 상담사 목록 가져오기';\r\n        eventName = 'counselor-sillAssigned-list';\r\n      } else if( url.indexOf('/notification') > -1 && url.indexOf('/subscribe') > -1 ) {\r\n        activation = '실시간 이벤트 구독';\r\n        eventName = 'notification-subscribe';\r\n      } else if( url.indexOf('/notification/publish') > -1 ) {\r\n        activation = '실시간 이벤트 발행';\r\n        eventName = 'notification-publish';\r\n      } else if( url === '/monitor/process' ) {\r\n        activation = '타 시스템 프로세스 상태정보 가져오기';\r\n        eventName = 'process';\r\n      } else if( url === '/monitor/dialer/channel' ) {\r\n        activation = '채널 상태 정보 가져오기';\r\n        eventName = 'channel';\r\n      } else if( url.indexOf('/statistics') > -1 ) {\r\n        activation = '캠페인별 진행정보 가져오기';\r\n        eventName = 'statistics';\r\n        description = '캠페인 아이디 : ' + url.split('/')[5] + '번 진행정보 가져오기';\r\n      } else if( url === '/monitor/tenant/campaign/dial' ) {\r\n        activation = '발신진행상태조회';\r\n        eventName = 'dial';\r\n      }\r\n      const logData = {\r\n          \"tenantId\": Number(getCookie('tenant_id')),\r\n          \"employeeId\": userId,\r\n          \"userHost\": getCookie('userHost'),\r\n          \"queryId\": response.config.url,\r\n          \"queryType\": queryType,\r\n          \"activation\": activation,\r\n          \"description\": description,\r\n          \"successFlag\": 1,\r\n          \"eventName\": eventName,\r\n          \"queryRows\": typeof response.data.result_data === 'undefined' ? 1 : response.data.result_data.length,\r\n          \"targetId\": response.config.url,\r\n          \"userSessionType\": 0,\r\n          \"exportFlag\": 1,\r\n          \"memo\": \"\",\r\n          \"updateEmployeeId\": userId\r\n      };\r\n      const { data } = await axiosRedisInstance.post<{code:string;message:string;}>(\r\n        `/log/save`,\r\n        logData \r\n      );\r\n    }\r\n    return response;\r\n  },\r\n  async (error) => {\r\n\r\n    console.log(\"axios에서 result code 확인 1111111 : \", error.response.data.result_code);\r\n    \r\n\r\n    // result_code 5 일 경우 axiosInstance 와 동일하게 로그인 페이지로 이동\r\n    if (error.response.data.result_code === 5) {\r\n      customAlertService.error('로그인 세션이 만료되었습니다. 다시 로그인 해주세요.', '세션 만료', () => {\r\n        window.location.href = '/login';\r\n      });\r\n    }\r\n\r\n    if (error.response?.status === 401) {\r\n      window.location.href = '/login';\r\n      return Promise.reject(new Error('세션이 만료되었습니다. 다시 로그인해주세요.'));\r\n    }\r\n\r\n    const url = error.config.url || '';\r\n    const userId = getCookie('id');\r\n    if( url !== '/log/save' && userId != null && userId != '' ) {\r\n      let activation = '';\r\n      let eventName = '';\r\n      let queryType = 'R';\r\n      let description = '';\r\n      if( url === '/auth/environment' ) {\r\n        activation = '사용자별 환경설정 가져오기';\r\n        eventName = 'environment';\r\n      } else if( url.indexOf('/auth/availableMenuList') > -1 ) {\r\n        activation = '사용가능한 메뉴 리스트 가져오기';\r\n        eventName = 'availableMenuList';\r\n      } else if( url.indexOf('/auth/environment') > -1 ) {\r\n        activation = '사용자별 환경설정 가져오기';\r\n        eventName = 'environment';\r\n      } else if( url.indexOf('/auth/environment/save') > -1 ) {\r\n        activation = '사용자별 환경설정 저장하기';\r\n        eventName = 'environment-save';\r\n        queryType = 'C';\r\n      } else if( url.indexOf('/counselor/list') > -1 ) {\r\n        activation = '상담사 리스트 가져오기';\r\n        eventName = 'counselor-list';\r\n      } else if( url.indexOf('/counselor/state') > -1 ) {\r\n        activation = '상담사 상태정보 가져오기';\r\n        eventName = 'counselor-state';\r\n      } else if( url.indexOf('/counselor/counselorInfo') > -1 ) {\r\n        activation = '캠페인 할당 상담사정보 가져오기';\r\n        eventName = 'counselor-state';\r\n      } else if( url.indexOf('/counselor/sillAssigned/list') > -1 ) {\r\n        activation = '스킬 할당 상담사 목록 가져오기';\r\n        eventName = 'counselor-sillAssigned-list';\r\n      } else if( url.indexOf('/notification') > -1 && url.indexOf('/subscribe') > -1 ) {\r\n        activation = '실시간 이벤트 구독';\r\n        eventName = 'notification-subscribe';\r\n      } else if( url.indexOf('/notification/publish') > -1 ) {\r\n        activation = '실시간 이벤트 발행';\r\n        eventName = 'notification-publish';\r\n      } else if( url === '/monitor/process' ) {\r\n        activation = '타 시스템 프로세스 상태정보 가져오기';\r\n        eventName = 'process';\r\n      } else if( url === '/monitor/dialer/channel' ) {\r\n        activation = '채널 상태 정보 가져오기';\r\n        eventName = 'channel';\r\n      } else if( url.indexOf('/statistics') > -1 ) {\r\n        activation = '캠페인별 진행정보 가져오기';\r\n        eventName = 'statistics';\r\n        description = '캠페인 아이디 : ' + url.split('/')[5] + '번 진행정보 가져오기';\r\n      } else if( url === '/monitor/tenant/campaign/dial' ) {\r\n        activation = '발신진행상태조회';\r\n        eventName = 'dial';\r\n      }\r\n      const logData = {\r\n          \"tenantId\": Number(getCookie('tenant_id')),\r\n          \"employeeId\": userId,\r\n          \"userHost\": getCookie('userHost'),\r\n          \"queryId\": error.config.url,\r\n          \"queryType\": queryType,\r\n          \"activation\": activation,\r\n          \"description\": description,          \r\n          \"successFlag\": 0,\r\n          \"eventName\": eventName,\r\n          \"queryRows\": 0,\r\n          \"targetId\": error.config.url||0,\r\n          \"userSessionType\": 0,\r\n          \"exportFlag\": 1,\r\n          \"memo\": \"\",\r\n          \"updateEmployeeId\": userId\r\n      };\r\n      const { data } = await axiosRedisInstance.post<{code:string;message:string;}>(\r\n        `/log/save`,\r\n        logData \r\n      );\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2240, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2246, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/lib/error_message.ts"],"sourcesContent":["// C:\\nproject\\fe_pdsw\\src\\lib\\error_message.ts\r\n\r\nexport const getCampaignErrorMessage = (returnCode: number) => {\r\n    if (returnCode === -1) {\r\n        return 'DataBase 데이터 처리 중 문제가 발생 하였습니다.';\r\n    } else if (returnCode === -3) {\r\n        return '상담사과 고객이 통화 중이라 캠페인 통계가 완료되지 않았습니다. \\n잠시만 기다려주세요.';\r\n    } else if (returnCode === -10) {\r\n        return '에러사항에 대해서 관리자에게 문의 하세요.';\r\n    } else if (returnCode === -15) {\r\n        return '업무 외 시간으로 캠페인을 시작 할 수 없습니다. 캠페인 시작을 원하시면 발신 업무 시간을 변경 하십시오.';\r\n    } else if (returnCode === -16) {\r\n        return '상담사과 고객이 통화 중이라 캠페인 통계가 완료되지 않았습니다. \\n잠시만 기다려주세요.';\r\n    } else if (returnCode === -7770) {\r\n        return '리스트 파일이 존재 하지 않습니다.';\r\n    } else if (returnCode === -7771) {\r\n        return '발신 할 레코드가 존재 하지 않습니다.';\r\n    } else if (returnCode === -7772) {\r\n        return '발신 순서가 없습니다.';\r\n    } else if (returnCode === -7773) {\r\n        return '캠페인 시작/종료 날짜를 확인해 주시기 바랍니다.';\r\n    } else if (returnCode === -7774) {\r\n        return '응대할 상담사가 없으므로 시작이 취소되었습니다.';\r\n    } else if (returnCode === -7775) {\r\n        return '발신 할 트렁크가 없습니다.';\r\n    } else if (returnCode === -7776) {\r\n        return '캠페인에 할당된 상담사가 없습니다.';\r\n    } else if (returnCode === -7777) {\r\n        return 'CIDS가 작동중 인지 확인 하세요.에러사항에 대해서 관리자에게 문의 하세요.';\r\n    } else if (returnCode === -7778) {\r\n        return '발신할 채널이 할당이 되어 있지 않습니다.';\r\n    } else if (returnCode === -8000) {\r\n        return '캠페인이 상태 변경 중이므로, 캠페인을 시작할 수 없습니다.';\r\n    } else if (returnCode === -8001) {\r\n        return '무한콜백 캠페인에서만 발생. UserOption Data(limit)가 있다.';\r\n    } else if (returnCode === -10001) {\r\n        return '캠페인 데이터 저장 공간이 남아 있지 않습니다. 관리자에게 문의 하세요.';\r\n    }\r\n};\r\n\r\n// C:\\nproject\\fe_pdsw\\src\\lib\\error_message.ts\r\n\r\nexport const getCampaignErrorMessage2 = (returnCode: number): string => {\r\n    if (returnCode === -1) {\r\n        return 'DataBase 데이터 처리 중 문제가 발생 하였습니다.';\r\n    } else if (returnCode === -3) {\r\n        return '상담사와 고객이 통화 중이라 캠페인 통계가 완료되지 않았습니다. \\n잠시만 기다려주세요.';\r\n    } else if (returnCode === -10) {\r\n        return '에러 사항에 대해서 관리자에게 문의 하세요.';\r\n    } else if (returnCode === -15) {\r\n        return '업무 외 시간으로 캠페인을 시작 할 수 없습니다. 캠페인 시작을 원하시면 발신 업무 시간을 변경 하십시오.';\r\n    } else if (returnCode === -16) {\r\n        return '상담사과 고객이 통화 중이라 캠페인 통계가 완료되지 않았습니다. \\n잠시만 기다려주세요.';\r\n    } else if (returnCode === -7770) {\r\n        return '리스트 파일이 존재 하지 않습니다.';\r\n    } else if (returnCode === -7771) {\r\n        return '발신 할 레코드가 존재 하지 않습니다.';\r\n    } else if (returnCode === -7772) {\r\n        return '발신 순서가 없습니다.';\r\n    } else if (returnCode === -7773) {\r\n        return '캠페인 시작/종료 날짜를 확인해 주시기 바랍니다.';\r\n    } else if (returnCode === -7774) {\r\n        return '응대할 상담사가 없으므로 시작이 취소되었습니다.';\r\n    } else if (returnCode === -7775) {\r\n        return '발신 할 트렁크가 없습니다.';\r\n    } else if (returnCode === -7776) {\r\n        return '캠페인에 할당된 상담사가 없습니다.';\r\n    } else if (returnCode === -7777) {\r\n        return 'CIDS가 작동중 인지 확인 하세요.에러사항에 대해서 관리자에게 문의 하세요.';\r\n    } else if (returnCode === -7778) {\r\n        return '발신할 채널이 할당이 되어 있지 않습니다.';\r\n    } else if (returnCode === -8000) {\r\n        return '캠페인이 상태 변경 중이므로, 캠페인을 시작할 수 없습니다.';\r\n    } else if (returnCode === -8001) {\r\n        return '무한콜백 캠페인에서만 발생. UserOption Data(limit)가 있다.';\r\n    } else if (returnCode === -10001) {\r\n        return '캠페인 데이터 저장공간이 남아 있지 않습니다. 관리자에게 문의 하세요.';\r\n    }\r\n    \r\n    // 기본 에러 메시지 추가\r\n    return `알 수 없는 오류가 발생했습니다. (코드: ${returnCode})`;\r\n};"],"names":[],"mappings":"AAAA,+CAA+C;;;;;AAExC,MAAM,0BAA0B,CAAC;IACpC,IAAI,eAAe,CAAC,GAAG;QACnB,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,GAAG;QAC1B,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,IAAI;QAC3B,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,IAAI;QAC3B,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,IAAI;QAC3B,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,MAAM;QAC7B,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,MAAM;QAC7B,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,MAAM;QAC7B,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,MAAM;QAC7B,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,MAAM;QAC7B,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,MAAM;QAC7B,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,MAAM;QAC7B,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,MAAM;QAC7B,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,MAAM;QAC7B,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,MAAM;QAC7B,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,MAAM;QAC7B,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,OAAO;QAC9B,OAAO;IACX;AACJ;AAIO,MAAM,2BAA2B,CAAC;IACrC,IAAI,eAAe,CAAC,GAAG;QACnB,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,GAAG;QAC1B,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,IAAI;QAC3B,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,IAAI;QAC3B,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,IAAI;QAC3B,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,MAAM;QAC7B,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,MAAM;QAC7B,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,MAAM;QAC7B,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,MAAM;QAC7B,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,MAAM;QAC7B,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,MAAM;QAC7B,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,MAAM;QAC7B,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,MAAM;QAC7B,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,MAAM;QAC7B,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,MAAM;QAC7B,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,MAAM;QAC7B,OAAO;IACX,OAAO,IAAI,eAAe,CAAC,OAAO;QAC9B,OAAO;IACX;IAEA,eAAe;IACf,OAAO,CAAC,wBAAwB,EAAE,WAAW,CAAC,CAAC;AACnD"}},
    {"offset": {"line": 2330, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2336, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/app/main/layout.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { Inter } from 'next/font/google';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport Footer from '@/components/shared/layout/Footer';\r\nimport Sidebar2 from '@/components/shared/layout/Sidebar2';\r\nimport '@/app/globals.css';\r\nimport Header from '@/widgets/header';\r\nimport { useSidebarWidthStore } from '@/store/useSidebarWidthStore';\r\nimport Footer2 from '@/components/shared/layout/Footer3';\r\n\r\nconst inter = Inter({ subsets: ['latin'] });\r\n\r\nexport default function MainLayout({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) {\r\n  const width = useSidebarWidthStore((state) => state.width);\r\n  const isOpen = useSidebarWidthStore((state) => state.isOpen);\r\n\r\n  // 푸터 관련 상태\r\n  const [footerHeight, setFooterHeight] = useState(111);\r\n  const [isFooterOpen, setIsFooterOpen] = useState(true);\r\n  const [isFooterResizing, setIsFooterResizing] = useState(false);\r\n\r\n  // 컨텐츠 영역 참조\r\n  const contentRef = useRef<HTMLDivElement>(null);\r\n\r\n  // 푸터 토글 함수\r\n  const toggleFooter = (isOpen: boolean) => {\r\n    setIsFooterOpen(isOpen);\r\n  };\r\n\r\n  // 푸터 리사이징 관련 함수들\r\n  const handleResizeStart = () => {\r\n    setIsFooterResizing(true);\r\n  };\r\n\r\n  const handleResize = (height: number) => {\r\n    if (contentRef.current) {\r\n      contentRef.current.style.height = `calc(100% - ${height}px)`;\r\n    }\r\n  };\r\n\r\n  // 수정: height 매개변수를 받도록 변경\r\n  const handleResizeEnd = (height: number) => {\r\n    setFooterHeight(height);\r\n    setIsFooterResizing(false);\r\n  };\r\n\r\n  // 사이드바 상태에 따른 메인 영역 너비 계산\r\n  const getMainWidth = () => {\r\n    return isOpen ? `calc(100% - ${width}px)` : '100%';\r\n  };\r\n\r\n  // 실제 푸터 높이 (닫힌 경우 32px)\r\n  const actualFooterHeight = isFooterOpen ? footerHeight : 32;\r\n\r\n  return (\r\n    <div className={`${inter.className} h-screen`}>\r\n      <div className=\"flex flex-col h-full\">\r\n        <Header />\r\n        <div className=\"flex flex-1 min-h-0\">\r\n          <Sidebar2 />\r\n          {/* 메인 영역: 사이드바 너비에 따라 줄어들지만 내부 컨텐츠 영역은 최소 너비(800px)를 유지하여 가로 스크롤 발생 */}\r\n          <main\r\n            className=\"flex flex-col h-full transition-all duration-300 overflow-x-auto\"\r\n            style={{ width: getMainWidth() }}\r\n          >\r\n            <div \r\n              ref={contentRef}\r\n              className=\"refined-scrollbar overflow-auto flex-shrink-0 min-w-[800px]\"\r\n              style={{\r\n                height: `calc(100% - ${actualFooterHeight}px)`,\r\n                transition: isFooterResizing ? 'none' : 'height 0.3s ease-in-out',\r\n                paddingTop: '0', // 상단 여백 제거\r\n                boxSizing: 'border-box',\r\n              }}\r\n            >\r\n              {children}\r\n            </div>\r\n            <div\r\n              style={{\r\n                height: 'auto',\r\n                maxHeight: `${actualFooterHeight}px`,\r\n              }}\r\n            >\r\n              <Footer\r\n                footerHeight={footerHeight}\r\n                onToggleDrawer={toggleFooter}\r\n                onResizeHeight={handleResize}\r\n                onResizeStart={handleResizeStart}\r\n                onResizeEnd={handleResizeEnd}\r\n              />\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AAEA;AACA;;;AARA;;;;;;;;AAae,SAAS,WAAW,EACjC,QAAQ,EAGT;;IACC,MAAM,QAAQ,CAAA,GAAA,wIAAA,CAAA,uBAAoB,AAAD;kDAAE,CAAC,QAAU,MAAM,KAAK;;IACzD,MAAM,SAAS,CAAA,GAAA,wIAAA,CAAA,uBAAoB,AAAD;mDAAE,CAAC,QAAU,MAAM,MAAM;;IAE3D,WAAW;IACX,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEzD,YAAY;IACZ,MAAM,aAAa,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAkB;IAE1C,WAAW;IACX,MAAM,eAAe,CAAC;QACpB,gBAAgB;IAClB;IAEA,iBAAiB;IACjB,MAAM,oBAAoB;QACxB,oBAAoB;IACtB;IAEA,MAAM,eAAe,CAAC;QACpB,IAAI,WAAW,OAAO,EAAE;YACtB,WAAW,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,YAAY,EAAE,OAAO,GAAG,CAAC;QAC9D;IACF;IAEA,0BAA0B;IAC1B,MAAM,kBAAkB,CAAC;QACvB,gBAAgB;QAChB,oBAAoB;IACtB;IAEA,0BAA0B;IAC1B,MAAM,eAAe;QACnB,OAAO,SAAS,CAAC,YAAY,EAAE,MAAM,GAAG,CAAC,GAAG;IAC9C;IAEA,wBAAwB;IACxB,MAAM,qBAAqB,eAAe,eAAe;IAEzD,qBACE,6LAAC;QAAI,WAAW,GAAG,4IAAA,CAAA,UAAK,CAAC,SAAS,CAAC,SAAS,CAAC;kBAC3C,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC,qIAAA,CAAA,UAAM;;;;;8BACP,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,qJAAA,CAAA,UAAQ;;;;;sCAET,6LAAC;4BACC,WAAU;4BACV,OAAO;gCAAE,OAAO;4BAAe;;8CAE/B,6LAAC;oCACC,KAAK;oCACL,WAAU;oCACV,OAAO;wCACL,QAAQ,CAAC,YAAY,EAAE,mBAAmB,GAAG,CAAC;wCAC9C,YAAY,mBAAmB,SAAS;wCACxC,YAAY;wCACZ,WAAW;oCACb;8CAEC;;;;;;8CAEH,6LAAC;oCACC,OAAO;wCACL,QAAQ;wCACR,WAAW,GAAG,mBAAmB,EAAE,CAAC;oCACtC;8CAEA,cAAA,6LAAC,mJAAA,CAAA,UAAM;wCACL,cAAc;wCACd,gBAAgB;wCAChB,gBAAgB;wCAChB,eAAe;wCACf,aAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ7B;GAxFwB;;QAKR,wIAAA,CAAA,uBAAoB;QACnB,wIAAA,CAAA,uBAAoB;;;KANb"}},
    {"offset": {"line": 2490, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}