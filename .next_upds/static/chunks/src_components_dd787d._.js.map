{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/components/ui/button.tsx"],"sourcesContent":["// src/components/ui/button.tsx\r\nimport * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n \"inline-flex items-center justify-center gap-2 whitespace-nowrap text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\",\r\n {\r\n   variants: {\r\n     variant: {\r\n       default:\r\n         \"rounded-[3px] bg-[#56CAD6] text-white text-[13px] hover:bg-[#56CAD6]/90\",\r\n       destructive:\r\n         \"rounded-md bg-destructive text-destructive-foreground hover:bg-destructive/90\",\r\n       outline:\r\n         \"rounded-[3px] border border-input bg-background hover:bg-accent hover:text-accent-foreground text-[#777] border-[#777]\",\r\n       secondary:\r\n         \" bg-[#B3B3B3] rounded-[3px] text-white items-center\",\r\n       ghost: \r\n         \"bg-transparent hover:bg-gray-100\",\r\n       link: \r\n         \"text-primary underline-offset-4 hover:underline\",\r\n       datapicker: \r\n         \"flex h-7 w-full items-center justify-between whitespace-nowrap rounded-[3px] border border-input bg-white px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:text-[#aaa] disabled:bg-[#F4F4F4] [&>span]:line-clamp-1 border-[#ebebeb]\",\r\n       menu:\r\n         \"bg-white hover:bg-gray-50 rounded-md min-w-[76px] py-1.5 h-auto flex flex-col items-center justify-center\",\r\n       menuActive:\r\n         \"relative bg-[#56CAD6] hover:bg-[#56CAD6] font-medium rounded-md min-w-[76px] py-1.5 h-auto flex flex-col items-center justify-center text-[#fff]\",\r\n       menuOpened:\r\n         \"bg-[#E5F3F3]/50 hover:bg-[#E5F3F3]/70 rounded-md min-w-[76px] py-1.5 h-auto flex flex-col items-center justify-center text-[#333]\",\r\n        login: \r\n         'w-full h-12 bg-[#55BEC8] hover:bg-[#009EAD] text-white text-sm rounded-none font-16',\r\n       customblue:\"rounded-[3px] bg-[#51ADD4] text-white text-[13px]\"\r\n     },\r\n     size: {\r\n        default: \"py-0.5 px-1.5\",\r\n       sm: \"h-8 px-3 text-xs\",\r\n       lg: \"h-10 px-8\",\r\n       icon: \"h-9 w-9\",\r\n       none: \"\",\r\n     },\r\n   },\r\n   defaultVariants: {\r\n     variant: \"default\",\r\n     size: \"default\",\r\n   },\r\n }\r\n)\r\n\r\n\r\nexport interface ButtonProps\r\n extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n   VariantProps<typeof buttonVariants> {\r\n asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n   const Comp = asChild ? Slot : \"button\"\r\n   return (\r\n     <Comp\r\n       className={cn(buttonVariants({ variant, size, className }))}\r\n       ref={ref}\r\n       {...props}\r\n\r\n       \r\n     />\r\n   )\r\n }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }"],"names":[],"mappings":"AAAA,+BAA+B;;;;;;AAC/B;AAEA;AACA;AAFA;;;;;;AAIA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACxB,kOACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MACE;YACF,YACE;YACF,MACE;YACF,YACE;YACF,YACE;YACD,OACC;YACF,YAAW;QACb;QACA,MAAM;YACH,SAAS;YACV,IAAI;YACJ,IAAI;YACJ,MAAM;YACN,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAUD,MAAM,uBAAS,8JAAM,UAAU,MAC9B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAKf;;AAED,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\nimport { buttonVariants } from \"@/components/ui/button\"\r\n\r\nconst AlertDialog = AlertDialogPrimitive.Root\r\n\r\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\r\n\r\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\r\n\r\nconst AlertDialogOverlay = React.forwardRef<\r\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <AlertDialogPrimitive.Overlay\r\n    className={cn(\r\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n    ref={ref}\r\n  />\r\n))\r\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\r\n\r\nconst AlertDialogContent = React.forwardRef<\r\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\r\n>(({ className, ...props }, ref) => (\r\n  <AlertDialogPortal>\r\n    <AlertDialogOverlay />\r\n    <AlertDialogPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </AlertDialogPortal>\r\n))\r\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\r\n\r\nconst AlertDialogHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col space-y-2 text-center sm:text-left\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\r\n\r\nconst AlertDialogFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\r\n\r\nconst AlertDialogTitle = React.forwardRef<\r\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <AlertDialogPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\"text-lg font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\r\n\r\nconst AlertDialogDescription = React.forwardRef<\r\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <AlertDialogPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nAlertDialogDescription.displayName =\r\n  AlertDialogPrimitive.Description.displayName\r\n\r\nconst AlertDialogAction = React.forwardRef<\r\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\r\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\r\n>(({ className, ...props }, ref) => (\r\n  <AlertDialogPrimitive.Action\r\n    ref={ref}\r\n    className={cn(buttonVariants(), className)}\r\n    {...props}\r\n  />\r\n))\r\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\r\n\r\nconst AlertDialogCancel = React.forwardRef<\r\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\r\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\r\n>(({ className, ...props }, ref) => (\r\n  <AlertDialogPrimitive.Cancel\r\n    ref={ref}\r\n    className={cn(\r\n      buttonVariants({ variant: \"outline\" }),\r\n      \"mt-2 sm:mt-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\r\n\r\nexport {\r\n  AlertDialog,\r\n  AlertDialogPortal,\r\n  AlertDialogOverlay,\r\n  AlertDialogTrigger,\r\n  AlertDialogContent,\r\n  AlertDialogHeader,\r\n  AlertDialogFooter,\r\n  AlertDialogTitle,\r\n  AlertDialogDescription,\r\n  AlertDialogAction,\r\n  AlertDialogCancel,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAEA;AAGA;AACA;AAHA;AAHA;;;;;;AAQA,MAAM,cAAc,+KAAqB,IAAI;AAE7C,MAAM,qBAAqB,+KAAqB,OAAO;AAEvD,MAAM,oBAAoB,+KAAqB,MAAM;AAErD,MAAM,mCAAqB,8JAAM,UAAU,CAGzC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,+KAAqB,OAAO;QAC3B,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;QACT,KAAK;;;;;;KAVH;AAaN,mBAAmB,WAAW,GAAG,+KAAqB,OAAO,CAAC,WAAW;AAEzE,MAAM,mCAAqB,8JAAM,UAAU,OAGzC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,+KAAqB,OAAO;gBAC3B,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;;;;;;;;;;;;AAIf,mBAAmB,WAAW,GAAG,+KAAqB,OAAO,CAAC,WAAW;AAEzE,MAAM,oBAAoB,CAAC,EACzB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,kBAAkB,WAAW,GAAG;AAEhC,MAAM,oBAAoB,CAAC,EACzB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,kBAAkB,WAAW,GAAG;AAEhC,MAAM,iCAAmB,8JAAM,UAAU,OAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,+KAAqB,KAAK;QACzB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG,+KAAqB,KAAK,CAAC,WAAW;AAErE,MAAM,uCAAyB,8JAAM,UAAU,OAG7C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,+KAAqB,WAAW;QAC/B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,uBAAuB,WAAW,GAChC,+KAAqB,WAAW,CAAC,WAAW;AAE9C,MAAM,kCAAoB,8JAAM,UAAU,OAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,+KAAqB,MAAM;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,KAAK;QAC/B,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,+KAAqB,MAAM,CAAC,WAAW;AAEvE,MAAM,kCAAoB,8JAAM,UAAU,QAGxC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,+KAAqB,MAAM;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,CAAA,GAAA,qIAAA,CAAA,iBAAc,AAAD,EAAE;YAAE,SAAS;QAAU,IACpC,gBACA;QAED,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,+KAAqB,MAAM,CAAC,WAAW"}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 234, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/components/shared/CommonButton/index.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { Slot } from \"@radix-ui/react-slot\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\n// buttonVariants 정의\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-1 whitespace-nowrap text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"rounded-[3px] bg-[#56CAD6] text-white text-[13px] hover:bg-[#56CAD6]/90\",\r\n        destructive: \"rounded-md bg-destructive text-destructive-foreground hover:bg-destructive/90\",\r\n        outline: \"rounded-[3px] border border-input bg-background  text-[#777] border-[#a0a0a0]\",\r\n        secondary: \"bg-[#B3B3B3] rounded-[3px] text-white items-center\",\r\n        ghost: \"bg-transparent hover:bg-[transparent]\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n        datapicker:\r\n          \"flex h-7 w-full items-center justify-between whitespace-nowrap rounded-[3px] border border-input bg-white px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:text-[#aaa] disabled:bg-[#F4F4F4] [&>span]:line-clamp-1 border-[#ebebeb]\",\r\n        menu: \"bg-white hover:bg-gray-50 rounded-md min-w-[76px] py-1.5 h-auto flex flex-col items-center justify-center\",\r\n        menuActive:\r\n          \"relative bg-[#56CAD6] hover:bg-[#56CAD6] font-medium rounded-md min-w-[76px] py-1.5 h-auto flex flex-col items-center justify-center text-[#fff]\",\r\n        menuOpened:\r\n          \"bg-[#E5F3F3]/50 hover:bg-[#E5F3F3]/70 rounded-md min-w-[76px] py-1.5 h-auto flex flex-col items-center justify-center text-[#333]\",\r\n        login: \"w-full h-12 bg-black hover:bg-[#55BEC8] text-white text-sm rounded-none font-16\",\r\n        customblue: \"rounded-[3px] bg-[#51ADD4] text-white text-[13px]\",\r\n        tabEtc: \"bg-transparent hover:bg-[transparent] border-r border-t border-l border-[#ebebeb] px-[6px] h-[30px]\",\r\n        tab: \"h-[30px] border-t border-l border-r border-[#ebebeb]\",\r\n      },\r\n      size: {\r\n        default: \"text-[13px] py-[3px] px-[6px]\",\r\n        sm: \"px-2 py-1 text-xs\",\r\n        lg: \"px-6 py-3 text-lg\",\r\n        icon: \"p-2\",\r\n      },\r\n      fullWidth: {\r\n        true: \"w-full\",\r\n        false: \"\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n      fullWidth: false,\r\n    },\r\n  }\r\n);\r\n\r\nexport interface CommonButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean;\r\n}\r\n\r\nconst CommonButton = React.forwardRef<HTMLButtonElement, CommonButtonProps>(\r\n  ({ children, className, variant, size, fullWidth, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\";\r\n\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, fullWidth, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      >\r\n        {children}\r\n      </Comp>\r\n    );\r\n  }\r\n);\r\n\r\nCommonButton.displayName = \"CommonButton\";\r\n\r\nexport { CommonButton, buttonVariants };\r\nexport default CommonButton;"],"names":[],"mappings":";;;;;;AAAA;AAEA;AACA;AAFA;;;;;;AAIA,oBAAoB;AACpB,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,kOACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aAAa;YACb,SAAS;YACT,WAAW;YACX,OAAO;YACP,MAAM;YACN,YACE;YACF,MAAM;YACN,YACE;YACF,YACE;YACF,OAAO;YACP,YAAY;YACZ,QAAQ;YACR,KAAK;QACP;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;QACA,WAAW;YACT,MAAM;YACN,OAAO;QACT;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;QACN,WAAW;IACb;AACF;AASF,MAAM,6BAAe,8JAAM,UAAU,MACnC,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IAC7E,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;YAAW;QAAU;QACnE,KAAK;QACJ,GAAG,KAAK;kBAER;;;;;;AAGP;;AAGF,aAAa,WAAW,GAAG;;uCAGZ"}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 319, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/components/shared/layout/utils/CustomAlertService.tsx"],"sourcesContent":["\r\n// src\\components\\shared\\layout\\utils\\CustomAlertService.tsx\r\nimport React, { ReactNode } from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { AlertDialog, AlertDialogContent, AlertDialogHeader, AlertDialogTitle } from \"@/components/ui/alert-dialog\";\r\nimport { CommonButton } from \"@/components/shared/CommonButton\";\r\n\r\n// CustomAlert와 동일한 인터페이스 사용\r\ninterface CustomAlertOptions {\r\n  message: ReactNode;\r\n  title: string;\r\n  type: string;\r\n  onClose?: () => void;\r\n  onCancle?: () => void;\r\n  width?: string;\r\n  showButtons?: boolean;\r\n  confirmDisabled?: boolean;\r\n}\r\n\r\nclass CustomAlertService {\r\n  private containerElement: HTMLDivElement | null = null;\r\n  private root: ReactDOM.Root | null = null;\r\n\r\n  constructor() {\r\n    // 싱글턴 패턴 - 서비스가 초기화될 때 컨테이너 생성\r\n    if (typeof window !== 'undefined') {\r\n      this.createContainer();\r\n    }\r\n  }\r\n\r\n  private createContainer() {\r\n    // 이미 컨테이너가 있다면 생성하지 않음\r\n    if (this.containerElement) return;\r\n\r\n    // 새 div 요소 생성\r\n    this.containerElement = document.createElement('div');\r\n    this.containerElement.id = 'custom-alert-container';\r\n    document.body.appendChild(this.containerElement);\r\n    this.root = ReactDOM.createRoot(this.containerElement);\r\n  }\r\n\r\n  // 다이얼로그 표시 메서드\r\n  show({\r\n    message,\r\n    title,\r\n    type,\r\n    onClose,\r\n    onCancle,\r\n    width = 'max-w-sm',\r\n    showButtons = true,\r\n    confirmDisabled = false\r\n  }: CustomAlertOptions) {\r\n    if (!this.containerElement || !this.root) {\r\n      this.createContainer();\r\n    }\r\n\r\n    // 내부적으로 사용할 닫기 함수\r\n    const handleClose = () => {\r\n      if (onClose) onClose();\r\n      this.hide();\r\n    };\r\n\r\n    // 내부적으로 사용할 취소 함수\r\n    const handleCancel = () => {\r\n      if (onCancle) onCancle();\r\n      this.hide();\r\n    };\r\n\r\n    // CustomAlert 컴포넌트와 동일한 JSX 구조 사용\r\n    const alertElement = (\r\n      <AlertDialog\r\n        open={true}\r\n        onOpenChange={(open) => {\r\n          // 다이얼로그가 닫힐 때(ESC키, 오버레이 클릭 등)는 취소 동작 호출\r\n          if (!open) {\r\n            if (onCancle) {\r\n              handleCancel();\r\n            } else {\r\n              handleClose();\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        <AlertDialogContent className={`p-0 ${width} rounded-none border shadow-sm`}>\r\n          <AlertDialogHeader className=\"bg-[#AAA] px-4 py-2 border-b rounded-tl-[.5rem] rounded-tr-[.5rem]\">\r\n            <AlertDialogTitle className=\"text-sm text-[#fff] font-normal\">\r\n              {title}\r\n            </AlertDialogTitle>\r\n          </AlertDialogHeader>\r\n          <div className=\"p-4 bg-white rounded-bl-[.5rem] rounded-br-[.5rem]\">\r\n            <div className=\"text-sm text-[#333]\">\r\n              {typeof message === 'string'\r\n                ? message.split('\\n').map((line, index) => (\r\n                  <React.Fragment key={index}>\r\n                    {line}\r\n                    <br />\r\n                  </React.Fragment>\r\n                ))\r\n                : message}\r\n            </div>\r\n            {showButtons && (\r\n              <div className=\"flex justify-end gap-1.5\">\r\n                {type === '1' ? (\r\n                  <>\r\n                    <CommonButton\r\n                      onClick={handleClose}\r\n                      disabled={confirmDisabled}\r\n                      className={confirmDisabled ? 'opacity-50 cursor-not-allowed' : ''}\r\n                    >\r\n                      확인\r\n                    </CommonButton>\r\n                    {onCancle && (\r\n                      <CommonButton variant=\"outline\" onClick={handleCancel}>\r\n                        닫기\r\n                      </CommonButton>\r\n                    )}\r\n                  </>\r\n                ) : type === '0' ? (\r\n                  <>\r\n                    <CommonButton\r\n                      onClick={handleClose}\r\n                      disabled={confirmDisabled}\r\n                      className={confirmDisabled ? 'opacity-50 cursor-not-allowed' : ''}\r\n                    >\r\n                      확인\r\n                    </CommonButton>\r\n                    <CommonButton variant=\"outline\" onClick={handleClose}>\r\n                      닫기\r\n                    </CommonButton>\r\n                  </>\r\n                ) : type === '3' ? (\r\n                  <>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <CommonButton\r\n                      onClick={handleClose}\r\n                      disabled={confirmDisabled}\r\n                      className={confirmDisabled ? 'opacity-50 cursor-not-allowed' : ''}\r\n                    >\r\n                      확인\r\n                    </CommonButton>\r\n                  </>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </AlertDialogContent>\r\n      </AlertDialog>\r\n    );\r\n\r\n    // 다이얼로그 렌더링\r\n    if (this.root) {\r\n      this.root.render(alertElement);\r\n    }\r\n  }\r\n\r\n  // 다이얼로그 숨기기\r\n  hide() {\r\n    if (this.root) {\r\n      this.root.render(null);\r\n    }\r\n  }\r\n\r\n  // 편의 메서드들\r\n  error(message: string, title: string = '오류', onClose?: () => void) {\r\n    this.show({ message, title, type: '2', onClose });\r\n  }\r\n\r\n  info(message: string, title: string = '안내', onClose?: () => void) {\r\n    this.show({ message, title, type: '2', onClose });\r\n  }\r\n\r\n  success(message: string, title: string = '성공', onClose?: () => void) {\r\n    this.show({ message, title, type: '2', onClose });\r\n  }\r\n\r\n  confirm(message: string, title: string = '확인', onConfirm?: () => void, onCancel?: () => void) {\r\n    this.show({\r\n      message,\r\n      title,\r\n      type: '1',\r\n      onClose: onConfirm,\r\n      onCancle: onCancel\r\n    });\r\n  }\r\n\r\n  yesNo(message: string, title: string = '선택', onYes?: () => void) {\r\n    this.show({\r\n      message,\r\n      title,\r\n      type: '0',\r\n      onClose: onYes\r\n    });\r\n  }\r\n}\r\n\r\n// 싱글턴 인스턴스 생성 및 내보내기\r\nexport const customAlertService = new CustomAlertService();"],"names":[],"mappings":"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"}},
    {"offset": {"line": 559, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 565, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/components/shared/layout/CustomToast.tsx"],"sourcesContent":["// CustomToast.tsx - 수정 버전\r\nimport React, { Fragment, useState, useEffect } from 'react';\r\nimport { Transition } from '@headlessui/react';\r\nimport { CheckCircle, AlertCircle, Info, AlertTriangle, X, User } from 'lucide-react';\r\nimport { createRoot } from 'react-dom/client';\r\n\r\n// 색상 타입 정의\r\nexport type ToastColors = {\r\n  bgColor?: string;\r\n  gradientFrom?: string;\r\n  gradientTo?: string;\r\n  textColor?: string;\r\n};\r\n\r\n// 토스트 타입 정의\r\nexport type ToastType = 'success' | 'error' | 'info' | 'warning' | 'event';\r\n\r\n// 토스트 메시지 타입 정의\r\nexport interface ToastMessage {\r\n  id: string;\r\n  type: ToastType;\r\n  message: string;\r\n  duration?: number;\r\n  // 색상 커스터마이징 추가\r\n  colors?: ToastColors;\r\n}\r\n\r\n// 커스텀 이벤트 인터페이스 정의\r\ninterface ToastEventDetail {\r\n  toast: ToastMessage;\r\n  action?: 'add' | 'remove';\r\n  id?: string;\r\n}\r\n\r\n// 토스트 이벤트를 위한 타입 정의\r\ninterface CustomToastEvent extends CustomEvent {\r\n  detail: ToastEventDetail;\r\n}\r\n\r\n// 토스트 컴포넌트 props\r\ninterface ToastProps {\r\n  toast: ToastMessage;\r\n  onClose: (id: string) => void;\r\n}\r\n\r\n// 기본 색상 설정\r\nconst defaultColors: Record<ToastType, ToastColors> = {\r\n  success: {\r\n    bgColor: 'bg-[#4A90E2]', // NEXPOS 테마 색상 (청록색)\r\n    textColor: 'text-white',\r\n  },\r\n  error: {\r\n    bgColor: 'bg-[#F86B68]', // 오류 메시지용 레드 계열\r\n    textColor: 'text-white',\r\n  },\r\n  info: {\r\n    bgColor: 'bg-[#3D8BF8]', // 정보 메시지용 블루 계열\r\n    textColor: 'text-white',\r\n  },\r\n  warning: {\r\n    bgColor: 'bg-[#F8B53D]', // 경고 메시지용 옐로우 계열\r\n    textColor: 'text-white',\r\n  },\r\n  event: {\r\n    // 보라색에서 푸른색 계열로 변경\r\n    bgColor: 'bg-[#4A90E2]',\r\n    gradientFrom: 'from-[#5A9FE8]',\r\n    gradientTo: 'to-[#3A80D2]',\r\n    textColor: 'text-white',\r\n  },\r\n};\r\n\r\n// 글로벌 토스트 상태 관리를 위한 콜백 함수들\r\nlet toastUpdateCallback: ((toast: ToastMessage) => void) | null = null;\r\nlet toastRemoveCallback: ((id: string) => void) | null = null;\r\n\r\n// 토스트 컴포넌트\r\nconst Toast: React.FC<ToastProps> = ({ toast, onClose }) => {\r\n  const { id, type, message, duration = 18000, colors } = toast;\r\n  const [isVisible, setIsVisible] = useState(true);\r\n\r\n  // 타입별 스타일 및 아이콘 설정\r\n  const config = {\r\n    success: {\r\n      icon: CheckCircle,\r\n      title: '성공'\r\n    },\r\n    error: {\r\n      icon: AlertCircle,\r\n      title: '오류'\r\n    },\r\n    info: {\r\n      icon: Info,\r\n      title: '안내'\r\n    },\r\n    warning: {\r\n      icon: AlertTriangle,\r\n      title: '주의'\r\n    },\r\n    event: {\r\n      icon: User, // 상담사 아이콘으로 사용\r\n      title: 'EVENT'\r\n    },\r\n  };\r\n\r\n  // 커스텀 색상 또는 기본 색상 사용\r\n  const typeColors = defaultColors[type];\r\n  const customColors = colors || {};\r\n  \r\n  const bgColor = customColors.bgColor || typeColors.bgColor;\r\n  const gradientFrom = customColors.gradientFrom || typeColors.gradientFrom;\r\n  const gradientTo = customColors.gradientTo || typeColors.gradientTo;\r\n  const textColor = customColors.textColor || typeColors.textColor;\r\n  \r\n  const { icon: Icon, title } = config[type];\r\n  \r\n  // 그라데이션 사용 여부에 따른 배경 클래스\r\n  let bgColorClass = bgColor;\r\n  if (gradientFrom && gradientTo) {\r\n    bgColorClass = `bg-gradient-to-br ${gradientFrom} ${gradientTo}`;\r\n  }\r\n\r\n  // 닫기 핸들러\r\n  const handleClose = (e: React.MouseEvent) => {\r\n    // 이벤트 버블링 방지\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    \r\n    setIsVisible(false);\r\n    \r\n    // 애니메이션 완료 후 onClose 호출\r\n    setTimeout(() => {\r\n      onClose(id);\r\n    }, 200); // 트랜지션 시간에 맞춰 설정\r\n  };\r\n\r\n  // 자동 닫힘 타이머\r\n  useEffect(() => {\r\n    if (duration) {\r\n      const timer = setTimeout(() => {\r\n        setIsVisible(false);\r\n        setTimeout(() => {\r\n          onClose(id);\r\n        }, 200);\r\n      }, duration);\r\n\r\n      return () => {\r\n        clearTimeout(timer);\r\n      };\r\n    }\r\n  }, [id, duration, onClose]);\r\n\r\n  return (\r\n    <Transition\r\n      appear\r\n      show={isVisible}\r\n      as={Fragment}\r\n      enter=\"transform ease-out duration-300 transition\"\r\n      enterFrom=\"translate-y-2 opacity-0\"\r\n      enterTo=\"translate-y-0 opacity-100\"\r\n      leave=\"transition ease-in duration-200\"\r\n      leaveFrom=\"opacity-100\"\r\n      leaveTo=\"opacity-0\"\r\n    >\r\n      <div \r\n        className={`\r\n          ${bgColorClass}\r\n          shadow-md rounded-lg max-w-xs w-56 mb-3\r\n          transform transition-all duration-300 ease-in-out\r\n          overflow-hidden pointer-events-auto\r\n        `}\r\n        style={{ height: 'auto', maxHeight: '6rem' }} // 높이 조절\r\n      >\r\n        {/* 헤더 */}\r\n        <div className=\"flex items-center justify-between p-1.5 border-b border-white/20\">\r\n          <div className=\"flex items-center\">\r\n            <div className={`flex-shrink-0 ${textColor} ml-1 mr-1.5`}>\r\n              <Icon size={14} />\r\n            </div>\r\n            <span className={`font-medium text-xs ${textColor}`}>\r\n              {title}\r\n            </span>\r\n          </div>\r\n          <button\r\n            onClick={handleClose}\r\n            className={`${textColor} hover:opacity-80 focus:outline-none mr-1 p-1 z-10`}\r\n            type=\"button\"\r\n            aria-label=\"Close notification\"\r\n          >\r\n            <X size={14} />\r\n          </button>\r\n        </div>\r\n        \r\n        {/* 컨텐츠 - 메시지가 있을 때만 렌더링 */}\r\n        {message && (\r\n          <div className=\"p-2 text-xs\">\r\n            <p className={`font-medium leading-5 whitespace-pre-line ${textColor} line-clamp-2`}>\r\n              {message}\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Transition>\r\n  );\r\n};\r\n\r\n// 토스트 컨테이너\r\nexport const ToastContainer: React.FC = () => {\r\n  const [toasts, setToasts] = useState<ToastMessage[]>([]);\r\n\r\n  const removeToast = (id: string) => {\r\n    setToasts((prev) => prev.filter((toast) => toast.id !== id));\r\n  };\r\n\r\n  // 토스트 추가 함수 - 중복 체크 및 빈 메시지 필터링 추가\r\n  const addToast = (toast: ToastMessage) => {\r\n    \r\n    // 빈 메시지가 아닌지 확인\r\n    if (!toast.message || toast.message.trim() === '') {\r\n      return;\r\n    }\r\n    \r\n    setToasts((prev) => {\r\n      // 중복 ID 확인\r\n      const exists = prev.some(t => t.id === toast.id);\r\n      if (exists) {\r\n        return prev; // 중복된 ID가 있으면 상태를 변경하지 않음\r\n      }\r\n      return [toast, ...prev.slice(0, 4)]; // 최대 5개만 표시\r\n    });\r\n  };\r\n\r\n  // 싱글톤 콜백 설정\r\n  useEffect(() => {\r\n    toastUpdateCallback = addToast;\r\n    toastRemoveCallback = removeToast;\r\n    \r\n    return () => {\r\n      toastUpdateCallback = null;\r\n      toastRemoveCallback = null;\r\n    };\r\n  }, []);\r\n\r\n  // 전역 토스트 이벤트 리스너\r\n  useEffect(() => {\r\n    const handleToast = (event: Event) => {\r\n      const customEvent = event as CustomToastEvent;\r\n      if (customEvent.detail) {\r\n        if (customEvent.detail.action === 'remove' && customEvent.detail.id) {\r\n          removeToast(customEvent.detail.id);\r\n        } else if (customEvent.detail.toast) {\r\n          addToast(customEvent.detail.toast);\r\n        }\r\n      }\r\n    };\r\n\r\n    // 커스텀 이벤트 리스너 등록\r\n    window.addEventListener('toast-message', handleToast);\r\n\r\n    return () => {\r\n      window.removeEventListener('toast-message', handleToast);\r\n    };\r\n  }, []);\r\n\r\n  if (toasts.length === 0) return null;\r\n\r\n  return (\r\n    <div\r\n      aria-live=\"assertive\"\r\n      className=\"fixed inset-0 flex items-end justify-end px-4 py-6 pointer-events-none sm:p-6 z-[9999]\"\r\n    >\r\n      <div className=\"flex flex-col items-end space-y-2\">\r\n        {toasts.map((toast) => (\r\n          <Toast key={toast.id} toast={toast} onClose={removeToast} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 토스트 생성 함수\r\ninterface CreateToastOptions {\r\n  duration?: number;\r\n  colors?: ToastColors;\r\n}\r\n\r\nconst createToast = (\r\n  type: ToastType, \r\n  message: string, \r\n  options: CreateToastOptions = {}\r\n) => {\r\n  // 메시지가 비어있는지 확인\r\n  if (!message || message.trim() === '') {\r\n    return null;\r\n  }\r\n  \r\n  // 고유한 ID 생성 - 타임스탬프와 랜덤 문자열 조합\r\n  const toast: ToastMessage = {\r\n    id: `toast-${Date.now()}-${Math.random().toString(36).substring(2, 9)}`,\r\n    type,\r\n    message,\r\n    duration: options.duration || 5000,\r\n    colors: options.colors\r\n  };\r\n\r\n  // 콜백 함수가 설정되어 있으면 직접 호출\r\n  if (toastUpdateCallback) {\r\n    toastUpdateCallback(toast);\r\n    return toast.id; // ID 반환\r\n  }\r\n\r\n  // 백업 방식: 커스텀 이벤트 발생시켜 토스트 생성\r\n  try {\r\n    const toastEvent = new CustomEvent('toast-message', {\r\n      detail: { toast, action: 'add' },\r\n      bubbles: true,\r\n      composed: true\r\n    });\r\n    window.dispatchEvent(toastEvent);\r\n    return toast.id; // ID 반환\r\n  } catch (err) {\r\n    console.error('Failed to dispatch toast event:', err);\r\n    return null;\r\n  }\r\n};\r\n\r\n// 수동으로 토스트 제거하는 함수\r\nconst removeToast = (id: string) => {\r\n  \r\n  // 콜백 함수가 있으면 직접 호출\r\n  if (toastRemoveCallback) {\r\n    toastRemoveCallback(id);\r\n    return;\r\n  }\r\n\r\n  // 백업 방식: 커스텀 이벤트 발생\r\n  try {\r\n    const toastEvent = new CustomEvent('toast-message', {\r\n      detail: { action: 'remove', id },\r\n      bubbles: true,\r\n      composed: true\r\n    });\r\n    window.dispatchEvent(toastEvent);\r\n  } catch (err) {\r\n    console.error('Failed to dispatch toast remove event:', err);\r\n  }\r\n};\r\n\r\n// 토스트 API\r\nexport const toast = {\r\n  success: (message: string, options?: CreateToastOptions) => \r\n    createToast('success', message, options),\r\n  error: (message: string, options?: CreateToastOptions) => \r\n    createToast('error', message, options),\r\n  info: (message: string, options?: CreateToastOptions) => \r\n    createToast('info', message, options),\r\n  warning: (message: string, options?: CreateToastOptions) => \r\n    createToast('warning', message, options),\r\n  event: (message: string, options?: CreateToastOptions) => \r\n    createToast('event', message, options),\r\n  remove: (id: string) => removeToast(id), // 수동 제거 메소드\r\n};\r\n\r\n// 앱 시작 시 토스트 컨테이너 생성\r\nexport const initToasts = () => {\r\n  // 이미 존재하는지 확인\r\n  if (document.getElementById('headless-toast-container')) return;\r\n  \r\n  // DOM에 토스트 컨테이너 요소 추가\r\n  const toastContainer = document.createElement('div');\r\n  toastContainer.id = 'headless-toast-container';\r\n  document.body.appendChild(toastContainer);\r\n\r\n  try {\r\n    // 컨테이너에 렌더링\r\n    const root = createRoot(toastContainer);\r\n    root.render(<ToastContainer />);\r\n  } catch (err) {\r\n    console.error('Failed to initialize toast container:', err);\r\n  }\r\n};"],"names":[],"mappings":"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"}},
    {"offset": {"line": 980, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 986, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/components/shared/layout/utils/scrollUtils.ts"],"sourcesContent":["// src/utils/scrollUtils.ts\r\n\r\n/**\r\n * Scrolls to and highlights a specific node in the tree\r\n * @param nodeId The ID of the node to scroll to\r\n */\r\n// export const scrollToNode = (nodeId: string): void => {\r\n//     // Small delay to ensure DOM is updated with expanded nodes\r\n//     setTimeout(() => {\r\n//       // Find the node element by its data attribute\r\n//       const nodeElement = document.querySelector(`[data-node-id=\"${nodeId}\"]`);\r\n      \r\n//       if (nodeElement) {\r\n//         // Scroll the node into view\r\n//         nodeElement.scrollIntoView({\r\n//           behavior: 'smooth',\r\n//           block: 'center'\r\n//         });\r\n        \r\n//         // Add a temporary highlight effect\r\n//         nodeElement.classList.add('highlight-found-node');\r\n        \r\n//         // Remove the highlight after 2 seconds\r\n//         setTimeout(() => {\r\n//           nodeElement.classList.remove('highlight-found-node');\r\n//         }, 2000);\r\n//       }\r\n//     }, 50);\r\n//   };\r\n\r\n// src/components/shared/layout/utils/scrollUtils.ts\r\n\r\n/**\r\n * Scrolls to and highlights a specific node in the tree\r\n * @param nodeId The ID of the node to scroll to\r\n */\r\nexport const scrollToNode = (nodeId: string): void => {\r\n    // Small delay to ensure DOM is updated with expanded nodes\r\n    setTimeout(() => {\r\n      // Find the node element by its data attribute\r\n      const nodeElement = document.querySelector(`[data-node-id=\"${nodeId}\"]`);\r\n      \r\n      if (nodeElement) {\r\n        // Scroll the node into view\r\n        nodeElement.scrollIntoView({\r\n          behavior: 'smooth',\r\n          block: 'center'\r\n        });\r\n        \r\n        // Add a temporary highlight effect\r\n        nodeElement.classList.add('highlight-found-node');\r\n        \r\n        // Remove the highlight after 2 seconds\r\n        setTimeout(() => {\r\n          nodeElement.classList.remove('highlight-found-node');\r\n        }, 2000);\r\n      }\r\n    }, 50);\r\n  };"],"names":[],"mappings":"AAAA,2BAA2B;AAE3B;;;CAGC,GACD,0DAA0D;AAC1D,kEAAkE;AAClE,yBAAyB;AACzB,uDAAuD;AACvD,kFAAkF;AAElF,2BAA2B;AAC3B,uCAAuC;AACvC,uCAAuC;AACvC,gCAAgC;AAChC,4BAA4B;AAC5B,cAAc;AAEd,8CAA8C;AAC9C,6DAA6D;AAE7D,kDAAkD;AAClD,6BAA6B;AAC7B,kEAAkE;AAClE,oBAAoB;AACpB,UAAU;AACV,cAAc;AACd,OAAO;AAEP,oDAAoD;AAEpD;;;CAGC;;;AACM,MAAM,eAAe,CAAC;IACzB,2DAA2D;IAC3D,WAAW;QACT,8CAA8C;QAC9C,MAAM,cAAc,SAAS,aAAa,CAAC,CAAC,eAAe,EAAE,OAAO,EAAE,CAAC;QAEvE,IAAI,aAAa;YACf,4BAA4B;YAC5B,YAAY,cAAc,CAAC;gBACzB,UAAU;gBACV,OAAO;YACT;YAEA,mCAAmC;YACnC,YAAY,SAAS,CAAC,GAAG,CAAC;YAE1B,uCAAuC;YACvC,WAAW;gBACT,YAAY,SAAS,CAAC,MAAM,CAAC;YAC/B,GAAG;QACL;IACF,GAAG;AACL"}},
    {"offset": {"line": 1040, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1046, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/components/shared/layout/Footer.tsx"],"sourcesContent":["\r\n'use client';\r\n\r\nimport { useState, useEffect, useCallback } from \"react\";\r\nimport { ChevronUp, ChevronDown, Bell, BellOff, Trash } from \"lucide-react\";\r\nimport { debounce, isEqual } from 'lodash';\r\nimport { useAuthStore, useMainStore } from '@/store';\r\nimport { Resizable } from \"re-resizable\";\r\nimport { useApiForMain } from '@/features/auth/hooks/useApiForMain';\r\nimport { useEnvironmentStore } from \"@/store/environmentStore\";\r\nimport { toast, initToasts } from \"./CustomToast\";\r\nimport { useApiForGetTreeMenuDataForSideMenu } from \"@/features/auth/hooks/useApiForGetTreeMenuDataForSideMenu\";\r\nimport { useApiForGetTreeDataForCampaignGroupTab } from \"@/features/campaignManager/hooks/useApiForGetTreeDataForCampaignGroupTab\";\r\n\r\ntype FooterDataType = {\r\n  time: string;\r\n  type: string;\r\n  message: string;\r\n};\r\n\r\ninterface FooterProps {\r\n  footerHeight: number;      // 열려 있을 때 푸터의 높이(px)\r\n  startResizing?: () => void; // 드래그로 푸터 높이를 조절하기 위한 함수\r\n  onToggleDrawer?: (isOpen: boolean) => void; // 부모 컴포넌트에 열림/닫힘 상태 전달\r\n  onResizeHeight?: (height: number) => void; // 리사이즈된 높이를 부모 컴포넌트에 전달\r\n  onResizeStart?: () => void; // 리사이즈 시작 이벤트\r\n  onResizeEnd?: (height: number) => void; // 리사이즈 종료 이벤트 - height 매개변수 추가\r\n}\r\n\r\nexport default function Footer({\r\n  footerHeight,\r\n  onToggleDrawer,\r\n  onResizeHeight,\r\n  onResizeStart,\r\n  onResizeEnd\r\n}: FooterProps) {\r\n  const [isExpanded, setIsExpanded] = useState(false);   // D(1단) / W(2단) 모드 토글\r\n  const [isDrawerOpen, setIsDrawerOpen] = useState(true); // 푸터 열기/닫기 토글\r\n  const [footerDataList, setFooterDataList] = useState<FooterDataType[]>([]);\r\n  const [currentHeight, setCurrentHeight] = useState(footerHeight);\r\n  const { id, tenant_id, role_id } = useAuthStore();\r\n  const { campaigns, setCampaigns } = useMainStore();\r\n  const { useAlramPopup } = useEnvironmentStore();\r\n\r\n  const { invalidateTreeMenuData } = useApiForGetTreeMenuDataForSideMenu();\r\n  const { invalidateCampaignGroupTreeData } = useApiForGetTreeDataForCampaignGroupTab();\r\n\r\n  const debouncedInvalidate = useCallback(\r\n    debounce(() => {\r\n      invalidateTreeMenuData();\r\n      invalidateCampaignGroupTreeData();\r\n    }, 500),\r\n    [invalidateTreeMenuData, invalidateCampaignGroupTreeData]\r\n  );\r\n\r\n  useEffect(() => {\r\n    initToasts();\r\n  }, []);\r\n\r\n  // 부모 컴포넌트에 열림/닫힘 상태 변경 알림\r\n  useEffect(() => {\r\n    if (onToggleDrawer) {\r\n      onToggleDrawer(isDrawerOpen);\r\n    }\r\n  }, [isDrawerOpen, onToggleDrawer]);\r\n\r\n  // D(1단) <-> W(2단) 전환\r\n  const toggleExpanded = () => {\r\n    setIsExpanded((prev) => !prev);\r\n    // 만약 닫혀 있었다면(32px 상태) W 모드 누를 때 자동 열기 (원치 않으면 제거)\r\n    if (!isDrawerOpen) {\r\n      setIsDrawerOpen(true);\r\n      if (onToggleDrawer) {\r\n        onToggleDrawer(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  // 열기/닫기\r\n  const toggleDrawer = () => {\r\n    const newState = !isDrawerOpen;\r\n    setIsDrawerOpen(newState);\r\n    if (onToggleDrawer) {\r\n      onToggleDrawer(newState);\r\n    }\r\n  };\r\n\r\n  // 알림 모두 비우기 기능\r\n  const handleClearNotifications = () => {\r\n    setFooterDataList([]);\r\n  };\r\n\r\n  //캠페인 정보 조회 api 호출\r\n  const { mutate: fetchMain } = useApiForMain({\r\n    onSuccess: (data) => {\r\n      setCampaigns(data.result_data);\r\n    }\r\n  });\r\n\r\n  // Helper function to add a message to footerDataList\r\n  const addMessageToFooterList = (time: string, type: string, message: string) => {\r\n    if (message !== '') {\r\n      setFooterDataList((prev) => [\r\n        {\r\n          time,\r\n          type,\r\n          message\r\n        },\r\n        ...prev.slice(0, 9) // 상위 10개만 보이게\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const footerDataSet = useCallback((announce: string, command: string, data: any, kind: string,campaign_id: string, tempEventData: any): void => {\r\n    //시간.\r\n    const today = new Date();\r\n    const _time = String(today.getHours()).padStart(2, '0') + ':' + String(today.getMinutes()).padStart(2, '0') + ':' + String(today.getSeconds()).padStart(2, '0');\r\n\r\n    // Check if we need to invalidate tree menu data\r\n    const shouldInvalidateTreeMenu = (\r\n      // 캠페인 추가/수정/삭제\r\n      (announce === '/pds/campaign' && ['INSERT', 'UPDATE', 'DELETE'].includes(command)) ||\r\n      // 캠페인 상태 변경\r\n      (announce === '/pds/campaign/status' && command === 'UPDATE') ||\r\n      // 스킬 추가/수정/삭제\r\n      (announce === '/pds/skill' && ['INSERT', 'UPDATE', 'DELETE'].includes(command)) ||\r\n      // 캠페인 요구스킬 수정\r\n      (announce === '/pds/campaign/skill' && command === 'UPDATE') ||\r\n      // 상담사 리소스 수정/삭제\r\n      (announce === 'update-agent' && ['UPDATE', 'DELETE'].includes(command))\r\n    );\r\n\r\n    // 필요한 경우 트리 메뉴 데이터 갱신\r\n    if (shouldInvalidateTreeMenu) {\r\n      debouncedInvalidate();\r\n    }\r\n\r\n    //타입.\r\n    let _type = 'Event';\r\n    if (kind === 'event') {\r\n      _type = 'Event';\r\n    } else if (kind === 'alram') {\r\n      _type = 'Event';\r\n    }\r\n\r\n    //메시지.\r\n    let _message = '';\r\n    let _message2 = '';\r\n\r\n    //운영설정>캠페인별 발신번호설정\r\n    if (announce === '/pds/campaign/calling-number') {\r\n      _message = '캠페인 : ';\r\n      if (command === 'INSERT') {\r\n        _message += '[' + campaign_id + '], 사용자 발신번호 설정 추가 성공';\r\n      } else if (command === 'DELETE') {\r\n        _message += '[' + campaign_id + '], 사용자 발신번호 설정 삭제 성공';\r\n      } else if (command === 'UPDATE') {\r\n        _message += '[' + campaign_id + '], 사용자 발신번호 설정 변경 성공';\r\n      }\r\n      addMessageToFooterList(_time, _type, _message);\r\n    }\r\n    //장비 사용, 장비 사용중지\r\n    else if (announce === 'dialing-device') {\r\n      if (command === 'UPDATE' && data['device_status'] === 'run') {\r\n        _message = 'CIDS 작동중';\r\n        // 커스텀 이벤트 발생 - 장비 상태 변경을 다른 컴포넌트에 알림\r\n        const deviceStatusEvent = new CustomEvent('deviceStatusChange', {\r\n          detail: {\r\n            device_id: data['device_id'].toString(),\r\n            device_status: 'run'\r\n          }\r\n        });\r\n        window.dispatchEvent(deviceStatusEvent);\r\n        addMessageToFooterList(_time, _type, _message);\r\n      } else if (command === 'UPDATE' && data['device_status'] === 'down') {\r\n        _message = 'CIDS 작동중지';\r\n        // 커스텀 이벤트 발생 - 장비 상태 변경을 다른 컴포넌트에 알림\r\n        const deviceStatusEvent = new CustomEvent('deviceStatusChange', {\r\n          detail: {\r\n            device_id: data['device_id'].toString(),\r\n            device_status: 'down'\r\n          }\r\n        });\r\n        window.dispatchEvent(deviceStatusEvent);\r\n        addMessageToFooterList(_time, _type, _message);\r\n      }\r\n    }\r\n    //캠페인수정>콜페이싱 수정\r\n    else if (announce === '/pds/campaign/dial-speed') {\r\n      _message = '[콜페이싱] ';\r\n      if (command === 'UPDATE') {\r\n        const tempCampaign = campaigns.find((campaign) => campaign.campaign_id === Number(campaign_id));\r\n        if (tempCampaign && tempCampaign.dial_mode === 2) {\r\n          _message += '캠페인 아이디 ' + campaign_id + ' , 현재 설정값 ' + data['dial_speed'] * 2;\r\n        } else {\r\n          _message += '캠페인 아이디 ' + campaign_id + ' , 현재 설정값 ' + data['dial_speed'] * 2;\r\n        }\r\n        addMessageToFooterList(_time, _type, _message);\r\n      }\r\n    }\r\n    //캠페인.\r\n    else if (announce === '/pds/campaign') {\r\n      _message = '캠페인 ';\r\n      let _start_flag = '';\r\n      if (data['start_flag'] === 1) {\r\n        _start_flag = '시작';\r\n      } else if (data['start_flag'] === 2) {\r\n        _start_flag = '멈춤';\r\n      } else if (data['start_flag'] === 3) {\r\n        _start_flag = '중지';\r\n      }\r\n      let _end_flag = '';\r\n      if (data['end_flag'] === 1) {\r\n        _end_flag = '진행중';\r\n      } else if (data['end_flag'] === 2) {\r\n        _end_flag = '완료';\r\n      }\r\n\r\n      if (command === 'INSERT') {\r\n        _message += '추가, 캠페인 아이디 : ' + campaign_id + ' , 캠페인 이름 : ' + data['campaign_name'] + ' , 동작상태 : ' + _start_flag + ', 완료구분 : ' + _end_flag;\r\n        _message2 = `[EVENT] [${campaign_id}] 캠페인 추가`;\r\n\r\n        // 캠페인 추가 시 토스트 메시지\r\n        if (useAlramPopup === 1) {\r\n          toast.event(_message2, {\r\n            duration: 6000\r\n          });\r\n        }\r\n        addMessageToFooterList(_time, _type, _message);\r\n      } else if (command === 'UPDATE') {\r\n        _message += '수정, 캠페인 아이디 : ' + campaign_id + ' , 캠페인 이름 : ' + data['campaign_name'] + ' , 동작상태 : ' + _start_flag + ', 완료구분 : ' + _end_flag;\r\n        _message2 = `[EVENT] [${campaign_id}] 캠페인 수정`;\r\n\r\n        // 캠페인 수정 시 토스트 메시지\r\n        if (useAlramPopup === 1) {\r\n          toast.event(_message2, {\r\n            duration: 6000\r\n          });\r\n        }\r\n        addMessageToFooterList(_time, _type, _message);\r\n      } else if (command === 'DELETE') {\r\n        _message += '삭제, 캠페인 아이디 : ' + campaign_id;\r\n        _message2 = `[EVENT] [${campaign_id}] 캠페인 삭제`;\r\n\r\n        // 캠페인 삭제 시 토스트 메시지\r\n        if (useAlramPopup === 1) {\r\n          toast.event(_message2, {\r\n            duration: 6000\r\n          });\r\n        }\r\n        addMessageToFooterList(_time, _type, _message);\r\n      }\r\n\r\n      fetchMain({\r\n        session_key: '',\r\n        tenant_id: tenant_id,\r\n      });\r\n\r\n      if (data['start_flag'] === 3) {\r\n        const statusMessage = '캠페인 동작상태 변경, 캠페인 아이디 : ' + campaign_id + ' , 캠페인 이름 : ' + data['campaign_name'] + ' , 동작상태 : ' + _start_flag + ', 완료구분 : ' + _end_flag;\r\n\r\n        // 알림 설정이 활성화되어 있으면 토스트 표시\r\n        if (useAlramPopup === 1) {\r\n          toast.event(`[EVENT] [${campaign_id}] 캠페인 상태 변경`, {\r\n            duration: 6000,\r\n          });\r\n        }\r\n\r\n        // 이미 위에서 메시지를 추가했으므로 여기서는 추가하지 않음\r\n      }\r\n    }\r\n    //스킬.\r\n    else if (announce === '/pds/skill/agent-list') {\r\n      const tempAgentIdList = data['agent_id'];\r\n      const _skillId = data['skill_id'];\r\n\r\n      if (tempAgentIdList && tempAgentIdList.length > 0) {\r\n        let actionType = '';\r\n        if (command === 'UPDATE' || command === 'INSERT') {\r\n          actionType = '할당';\r\n        } else if (command === 'DELETE') {\r\n          actionType = '해제';\r\n        }\r\n\r\n        const _message = '[EVENT] 상담사 스킬 ' + actionType;\r\n        addMessageToFooterList(_time, _type, _message);\r\n\r\n        // 토스트 알림은 한 번만 표시\r\n        if (useAlramPopup === 1) {\r\n          toast.event(`[EVENT] [${_skillId}] 상담사 스킬 ${actionType}`, {\r\n            duration: 6000\r\n          });\r\n        }\r\n      }\r\n    }\r\n    //스킬편집\r\n    else if (announce === '/pds/skill') {\r\n      _message = '[스킬 ';\r\n      if (command === 'INSERT') {\r\n        _message += '추가] 스킬 아이디 : ' + data['skill_id'] + ' , 스킬 이름 : ' + data['skill_name'];\r\n      } else if (command === 'UPDATE') {\r\n        _message += '변경] 스킬 아이디 : ' + data['skill_id'] + ' , 스킬 이름 : ' + data['skill_name'];\r\n      } else if (command === 'DELETE') {\r\n        _message += '삭제] 스킬 아이디 : ' + data['skill_id'] + ' , 스킬 이름 : ' + data['skill_name'];\r\n      }\r\n      addMessageToFooterList(_time, _type, _message);\r\n    }\r\n    //캠페인 요구스킬 수정\r\n    else if (announce === '/pds/campaign/skill') {\r\n      if (command === 'UPDATE') {\r\n        _message = '캠페인 요구스킬 수정, 캠페인 아이디 : ' + campaign_id;\r\n        addMessageToFooterList(_time, _type, _message);\r\n      }\r\n    }\r\n    //상담사 자원 수정/삭제\r\n    else if (announce === 'update-agent') {\r\n      _message = '[상담사 자원 ';\r\n      if (command === 'UPDATE') {\r\n        _message += '수정] 상담사 아이디 : ' + data['employee_id'] + ' , 상담사 이름 : ' + data['agent_name'];\r\n      } else if (command === 'DELETE') {\r\n        _message += '삭제] 상담사 아이디 : ' + data['employee_id'] + ' , 상담사 이름 : ' + data['agent_name'];\r\n      }\r\n      addMessageToFooterList(_time, _type, _message);\r\n    }\r\n    //캠페인수정>동작시간 추가\r\n    else if (announce === '/pds/campaign/schedule') {\r\n      _message = '캠페인 스케쥴';\r\n      if (command === 'INSERT') {\r\n        _message += '수정, 캠페인 아이디 : ' + campaign_id + ' , 캠페인 이름 : ' + data['campaign_name'];\r\n        addMessageToFooterList(_time, _type, _message);\r\n      }\r\n      else if (command === 'UPDATE') {\r\n        _message += '변경, 캠페인 아이디 : ' + campaign_id + ' , 캠페인 이름 : ' + data['campaign_name'];\r\n        addMessageToFooterList(_time, _type, _message);\r\n      }\r\n      else if (command === 'DELETE') {\r\n        _message += '삭제, 캠페인 아이디 : ' + campaign_id + ' , 캠페인 이름 : ' + data['campaign_name'];\r\n        addMessageToFooterList(_time, _type, _message);\r\n      }\r\n    }\r\n    //캠페인 동작상태 변경\r\n    else if (announce === '/pds/campaign/status') {\r\n      if (command === 'UPDATE') {\r\n        let _start_flag = '';\r\n        if (data['campaign_status'] === 1) {\r\n          _start_flag = '시작';\r\n        } else if (data['campaign_status'] === 2) {\r\n          _start_flag = '멈춤';\r\n        } else if (data['campaign_status'] === 3) {\r\n          _start_flag = '중지';\r\n        }\r\n\r\n        // 푸터 로그 메시지\r\n        _message = '캠페인 동작상태 변경, 캠페인 아이디 : ' + campaign_id + ', 동작상태: ' + _start_flag + ', 완료구분: 진행중';\r\n        \r\n        // 토스트 알림 표시 (한번만 표시)\r\n        if (useAlramPopup === 1) {\r\n          toast.event(`[EVENT] [${campaign_id}] 캠페인 상태 변경`, {\r\n            duration: 6000,\r\n          });\r\n        }\r\n\r\n        // 푸터 데이터 리스트에 추가\r\n        addMessageToFooterList(_time, _type, _message);\r\n      }\r\n    }\r\n    //발신리스트등록\r\n    else if (announce === '/pds/campaign/calling-list') {\r\n      if (command === 'INSERT') {\r\n        let list_flag = '';\r\n        if (data['list_flag'] === 'I') {\r\n          list_flag = '신규리스트';\r\n        } else if (data['list_flag'] === 'A') {\r\n          list_flag = '추가리스트';\r\n        } else if (data['list_flag'] === 'D') {\r\n          list_flag = '삭제리스트';\r\n        } else if (data['list_flag'] === 'L') {\r\n          list_flag = '초기화';\r\n        }\r\n        _message = '발신리스트등록, 캠페인 아이디 : ' + campaign_id + ' , 리스트구분 : ' + list_flag;\r\n        _message2 = `[EVENT] [${campaign_id}] 발신리스트 ${list_flag} 등록`;\r\n\r\n        // 토스트 알림 표시\r\n        if (useAlramPopup === 1) {\r\n          toast.event(_message2, {\r\n            duration: 6000\r\n          });\r\n        }\r\n\r\n        addMessageToFooterList(_time, _type, _message);\r\n      }\r\n    }\r\n\r\n  }, [campaigns, fetchMain, useAlramPopup, debouncedInvalidate, tenant_id]);\r\n\r\n  // SSE 구독\r\n  useEffect(() => {\r\n    // 브라우저 환경인지 확인\r\n    if (typeof window !== 'undefined' && window.EventSource && id !== '') {\r\n      const DOMAIN = process.env.NEXT_PUBLIC_API_URL;\r\n      const eventSource = new EventSource(\r\n        `${DOMAIN}/notification/${tenant_id}/subscribe/${id}`\r\n      );\r\n\r\n      let data: any = {};\r\n      let announce = \"\";\r\n      let command = \"\";\r\n      let kind = \"\";\r\n      let campaign_id = \"\";\r\n\r\n      eventSource.addEventListener('message', (event) => {\r\n        console.log(\"footer sse event = \", event.data);\r\n\r\n        if (event.data !== \"Connected!!\") {\r\n          const tempEventData = JSON.parse(event.data);\r\n          if (\r\n            announce !== tempEventData[\"announce\"] ||\r\n            !isEqual(data, tempEventData.data) ||\r\n            !isEqual(data, tempEventData[\"data\"]) ||\r\n            kind !== tempEventData[\"kind\"] ||\r\n            campaign_id !== tempEventData[\"campaign_id\"]\r\n          ) {\r\n            announce = tempEventData[\"announce\"];\r\n            command = tempEventData[\"command\"];\r\n            data = tempEventData[\"data\"];\r\n            kind = tempEventData[\"kind\"];\r\n            campaign_id = tempEventData[\"campaign_id\"];\r\n\r\n            footerDataSet(\r\n              tempEventData[\"announce\"],\r\n              tempEventData[\"command\"],\r\n              tempEventData[\"data\"],\r\n              tempEventData[\"kind\"],\r\n              tempEventData[\"campaign_id\"],\r\n              tempEventData\r\n            );\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }, [id, tenant_id, role_id]);\r\n\r\n\r\n  // 높이 변경 핸들러\r\n  const handleResizeStop = (e: any, direction: any, ref: any, d: any) => {\r\n    const newHeight = currentHeight + d.height;\r\n    setCurrentHeight(newHeight);\r\n\r\n    if (onResizeHeight) {\r\n      onResizeHeight(newHeight);\r\n    }\r\n\r\n    if (onResizeEnd) {\r\n      onResizeEnd(newHeight);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Resizable\r\n      size={{\r\n        width: '100%',\r\n        height: isDrawerOpen ? currentHeight : 32\r\n      }}\r\n      minHeight={100}\r\n      maxHeight={500}\r\n      enable={{\r\n        top: isDrawerOpen,\r\n        right: false,\r\n        bottom: false,\r\n        left: false,\r\n        topRight: false,\r\n        bottomRight: false,\r\n        bottomLeft: false,\r\n        topLeft: false\r\n      }}\r\n      className={`\r\n        border-t text-sm text-gray-600 bg-[#FBFBFB] flex flex-col duration-300 ease-in-out group relative h-[1px] before:content-[''] before:absolute hover:before:bg-[#5BC2C1]\r\n        ${isExpanded ? \"fixed left-0 right-0 bottom-0 z-50\" : \"relative\"}\r\n      `}\r\n      onResizeStart={onResizeStart}\r\n      onResizeStop={handleResizeStop}\r\n    >\r\n      {/* 상단 바 영역 */}\r\n      <div className=\"flex-none pt-[5px] pb-[4px] px-[20px] border-b bg-white flex justify-between items-center\">\r\n        <div className=\"flex items-center gap-1\">\r\n          <span className=\"text-[13px] text-[#333]\">현재 진행 상태 </span>\r\n          <span className=\"text-[12px] text-[#666] bg-gray-100 px-1 rounded\">\r\n            {footerDataList.length > 0 ? (\r\n              <span className=\"text-[#666] bg-gray-100 px-1 rounded\">\r\n                {footerDataList.length}건\r\n              </span>\r\n            ) : (\r\n              <span className=\"text-[#666] bg-gray-100 px-1 rounded\">\r\n                0건\r\n              </span>\r\n            )}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"flex items-center gap-2\">\r\n          {useAlramPopup === 1 ? (\r\n            <>\r\n              <span title=\"알림 활성화\">\r\n                <Bell className=\"w-4 h-4 text-blue-500\" />\r\n              </span>\r\n              <button onClick={handleClearNotifications} title=\"알림 모두 비우기\">\r\n                <Trash className=\"w-4 h-4 text-gray-500\" />\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <span title=\"알림 비활성화\">\r\n              <BellOff className=\"w-4 h-4 text-gray-400\" />\r\n            </span>\r\n          )}\r\n\r\n          {/* 열기/닫기 버튼 */}\r\n          <button\r\n            onClick={toggleDrawer}\r\n            className=\"\"\r\n            title={isDrawerOpen ? \"닫기\" : \"열기\"}\r\n          >\r\n            {isDrawerOpen ? (\r\n              <ChevronDown className=\"w-4 h-4\" />\r\n            ) : (\r\n              <ChevronUp className=\"w-4 h-4\" />\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 푸터 내부 콘텐츠: isDrawerOpen이 true일 때만 렌더링 */}\r\n      {isDrawerOpen && (\r\n        <div className=\"flex-1 flex overflow-hidden\">\r\n          {/* D(1단) -> w-full, W(2단) -> w-1/2 + 오른쪽 테이블 */}\r\n          <div\r\n            className={`\r\n              ${isExpanded ? \"w-1/2\" : \"w-full\"}\r\n              overflow-auto py-[7px] px-[20px]\r\n              ${isExpanded ? \"border-r\" : \"\"}\r\n            `}\r\n          >\r\n            <table className=\"w-full text-sm\">\r\n              <tbody>\r\n                {footerDataList.map((log, index) => (\r\n                  <tr key={index}>\r\n                    <td className=\"whitespace-nowrap text-[13px]\">[{log.time}]</td>\r\n                    <td className=\"whitespace-nowrap text-[13px] px-1 hidden\">[{log.type}]</td>\r\n                    <td className=\"text-[13px]\">{log.message}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          {/* 2단(W) 모드일 때만 오른쪽 테이블 표시 */}\r\n          {/* {isExpanded && (\r\n            <div className=\"w-1/2 overflow-auto py-[7px] px-[20px]\">\r\n              <table className=\"w-full text-sm\">\r\n                <tbody>\r\n                  {footerDataList.map((log, index) => (\r\n                    <tr key={index}>\r\n                      <td className=\"whitespace-nowrap text-[13px]\">[{log.time}]</td>\r\n                      <td className=\"whitespace-nowrap text-[13px] px-1 hidden\">[{log.type}]</td>\r\n                      <td className=\"text-[13px]\">{log.message}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )} */}\r\n        </div>\r\n      )}\r\n    </Resizable>\r\n  );\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1702, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1708, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/components/ui/context-menu.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\r\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst ContextMenu = ContextMenuPrimitive.Root\r\n\r\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\r\n\r\nconst ContextMenuGroup = ContextMenuPrimitive.Group\r\n\r\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\r\n\r\nconst ContextMenuSub = ContextMenuPrimitive.Sub\r\n\r\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\r\n\r\nconst ContextMenuSubTrigger = React.forwardRef<\r\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\r\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\r\n    inset?: boolean\r\n  }\r\n>(({ className, inset, children, ...props }, ref) => (\r\n  <ContextMenuPrimitive.SubTrigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"hover:bg-[#F4F6F9] flex cursor-default select-none items-center rounded-sm px-[6px] py-[4px] text-sm outline-none focus:bg-[#F4F6F9] data-[state=open]:bg-accent data-[state=open]:text-accent-foreground text-[#333]\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\r\n  </ContextMenuPrimitive.SubTrigger>\r\n))\r\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\r\n\r\nconst ContextMenuSubContent = React.forwardRef<\r\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\r\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\r\n>(({ className, ...props }, ref) => (\r\n  <ContextMenuPrimitive.SubContent\r\n    ref={ref}\r\n    className={cn(\r\n      \"z-50 min-w-[3rem] overflow-hidden rounded-[3px] border border-[#333] bg-popover py-[10px] px-[12px] text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\r\n\r\nconst ContextMenuContent = React.forwardRef<\r\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\r\n>(({ className, ...props }, ref) => (\r\n  <ContextMenuPrimitive.Portal>\r\n    <ContextMenuPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"z-50 min-w-[8rem] space-y-[2px] overflow-hidden rounded-[3px] border border-[#333] bg-popover py-[10px] px-[12px] text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </ContextMenuPrimitive.Portal>\r\n))\r\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\r\n\r\nconst ContextMenuItem = React.forwardRef<\r\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\r\n    inset?: boolean\r\n  }\r\n>(({ className, inset, ...props }, ref) => (\r\n  <ContextMenuPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"hover:bg-[#F4F6F9] relative flex cursor-default select-none items-center rounded-[3px] px-[6px] py-[4px] text-sm outline-none focus:bg-[#F4F6F9] data-[disabled]:pointer-events-none data-[disabled]:opacity-50 text-[#333]\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\r\n\r\nconst ContextMenuCheckboxItem = React.forwardRef<\r\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\r\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\r\n>(({ className, children, checked, ...props }, ref) => (\r\n  <ContextMenuPrimitive.CheckboxItem\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    checked={checked}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <ContextMenuPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4\" />\r\n      </ContextMenuPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </ContextMenuPrimitive.CheckboxItem>\r\n))\r\nContextMenuCheckboxItem.displayName =\r\n  ContextMenuPrimitive.CheckboxItem.displayName\r\n\r\nconst ContextMenuRadioItem = React.forwardRef<\r\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\r\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\r\n>(({ className, children, ...props }, ref) => (\r\n  <ContextMenuPrimitive.RadioItem\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <ContextMenuPrimitive.ItemIndicator>\r\n        <Circle className=\"h-4 w-4 fill-current\" />\r\n      </ContextMenuPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </ContextMenuPrimitive.RadioItem>\r\n))\r\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\r\n\r\nconst ContextMenuLabel = React.forwardRef<\r\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\r\n    inset?: boolean\r\n  }\r\n>(({ className, inset, ...props }, ref) => (\r\n  <ContextMenuPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\r\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\r\n\r\nconst ContextMenuSeparator = React.forwardRef<\r\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <ContextMenuPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\r\n    {...props}\r\n  />\r\n))\r\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\r\n\r\nconst ContextMenuShortcut = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLSpanElement>) => {\r\n  return (\r\n    <span\r\n      className={cn(\r\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\r\n\r\nexport {\r\n  ContextMenu,\r\n  ContextMenuTrigger,\r\n  ContextMenuContent,\r\n  ContextMenuItem,\r\n  ContextMenuCheckboxItem,\r\n  ContextMenuRadioItem,\r\n  ContextMenuLabel,\r\n  ContextMenuSeparator,\r\n  ContextMenuShortcut,\r\n  ContextMenuGroup,\r\n  ContextMenuPortal,\r\n  ContextMenuSub,\r\n  ContextMenuSubContent,\r\n  ContextMenuSubTrigger,\r\n  ContextMenuRadioGroup,\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1929, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1935, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/components/shared/layout/CustomAlert.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\r\nimport { AlertDialog, AlertDialogContent, AlertDialogTitle, AlertDialogHeader } from \"@/components/ui/alert-dialog\";\r\nimport { CommonButton } from \"@/components/shared/CommonButton\";\r\n\r\nexport interface CustomAlertRequest {\r\n    message: ReactNode;\r\n    title: string;\r\n    type: string;\r\n    isOpen?: boolean;\r\n    onClose: () => void;\r\n    onCancle?: () => void;\r\n    width?: string;\r\n    showButtons?: boolean;\r\n    confirmDisabled?: boolean;\r\n}\r\n\r\nconst CustomAlert = ({\r\n    message,\r\n    title,\r\n    type,\r\n    isOpen = true,\r\n    onClose,\r\n    onCancle,\r\n    width = 'max-w-sm',\r\n    showButtons = true,\r\n    confirmDisabled = false\r\n}: CustomAlertRequest) => {\r\n    return (\r\n        <AlertDialog\r\n            open={isOpen}\r\n            onOpenChange={(open) => {\r\n                // 다이얼로그가 닫힐 때(ESC키, 오버레이 클릭 등)는 취소 동작 호출\r\n                if (!open) {\r\n                    if (onCancle) {\r\n                        onCancle();\r\n                    } else {\r\n                        onClose();\r\n                    }\r\n                }\r\n            }}\r\n        >\r\n            <AlertDialogContent className={`p-0 ${width} rounded-none border shadow-sm`}>\r\n                <AlertDialogHeader className=\"bg-[#AAA] px-4 py-2 border-b rounded-tl-[.5rem] rounded-tr-[.5rem]\">\r\n                    <AlertDialogTitle className=\"text-sm text-[#fff] font-normal\">\r\n                        {title}\r\n                    </AlertDialogTitle>\r\n                </AlertDialogHeader>\r\n                <div className=\"p-4 bg-white rounded-bl-[.5rem] rounded-br-[.5rem]\">\r\n                    <div className=\"text-sm text-[#333]\">\r\n                        {typeof message === 'string'\r\n                            ? message.split('\\n').map((line, index) => (\r\n                                <React.Fragment key={index}>\r\n                                    {line}\r\n                                    <br />\r\n                                </React.Fragment>\r\n                            ))\r\n                            : message}\r\n                    </div>\r\n                    {showButtons && (\r\n                        <div className=\"flex justify-end gap-1.5 mt-[20px]\">\r\n                            {type === '1' ? (\r\n                                <>\r\n                                    <CommonButton \r\n                                        onClick={onClose} \r\n                                        disabled={confirmDisabled}\r\n                                        className={confirmDisabled ? 'opacity-50 cursor-not-allowed' : ''}\r\n                                    >\r\n                                        확인\r\n                                    </CommonButton>\r\n                                    {onCancle && (\r\n                                        <CommonButton variant=\"outline\" onClick={onCancle}>\r\n                                            닫기\r\n                                        </CommonButton>\r\n                                    )}\r\n                                </>\r\n                            ) : type === '0' ? (\r\n                                <>\r\n                                    <CommonButton \r\n                                        onClick={onClose} \r\n                                        disabled={confirmDisabled}\r\n                                        className={confirmDisabled ? 'opacity-50 cursor-not-allowed' : ''}\r\n                                    >\r\n                                        확인\r\n                                    </CommonButton>\r\n                                    <CommonButton variant=\"outline\" onClick={onClose}>\r\n                                        닫기\r\n                                    </CommonButton>\r\n                                </>\r\n                            ) : type === '3' ? (\r\n                                <>\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <CommonButton \r\n                                        onClick={onClose} \r\n                                        disabled={confirmDisabled}\r\n                                        className={confirmDisabled ? 'opacity-50 cursor-not-allowed' : ''}\r\n                                    >\r\n                                        확인\r\n                                    </CommonButton>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </AlertDialogContent>\r\n        </AlertDialog>\r\n    );\r\n};\r\n\r\nexport default CustomAlert;\r\n\r\n// import React, { ReactNode } from 'react';\r\n// import { AlertDialog, AlertDialogContent, AlertDialogTitle, AlertDialogHeader } from \"@/components/ui/alert-dialog\";\r\n// import { CommonButton } from \"@/components/shared/CommonButton\";\r\n\r\n// export interface CustomAlertRequest {\r\n//     message: ReactNode;\r\n//     title: string;\r\n//     type: string;\r\n//     isOpen?: boolean;\r\n//     onClose: () => void;\r\n//     onCancle?: () => void;\r\n//     width?: number | string;\r\n//     height?: number | string;\r\n//     showButtons?: boolean;\r\n//     confirmDisabled?: boolean;\r\n// }\r\n\r\n// const CustomAlert = ({\r\n//     message,\r\n//     title,\r\n//     type,\r\n//     isOpen = true,\r\n//     onClose,\r\n//     onCancle,\r\n//     width = 500,\r\n//     height = 500,\r\n//     showButtons = true,\r\n//     confirmDisabled = false\r\n// }: CustomAlertRequest) => {\r\n\r\n//     // 인라인 스타일 객체 생성\r\n//     const contentStyle: React.CSSProperties = {};\r\n//     if (width) {\r\n//         contentStyle.width = typeof width === 'number' ? `${width}px` : width;\r\n//         contentStyle.maxWidth = '90vw';\r\n//     }\r\n//     if (height) {\r\n//         contentStyle.height = typeof height === 'number' ? `${height}px` : height;\r\n//         contentStyle.maxHeight = '90vh';\r\n//     }\r\n\r\n//     return (\r\n//         <AlertDialog\r\n//             open={isOpen}\r\n//             onOpenChange={(open) => {\r\n//                 if (!open) {\r\n//                     if (onCancle) {\r\n//                         onCancle();\r\n//                     } else {\r\n//                         onClose();\r\n//                     }\r\n//                 }\r\n//             }}\r\n//         >\r\n//             <AlertDialogContent\r\n//                 className=\"p-0 rounded-none border shadow-sm flex flex-col\"\r\n//                 style={contentStyle}\r\n//             >\r\n//                 {/* 헤더 영역 */}\r\n//                 <AlertDialogHeader className=\"bg-[#AAA] px-4 py-2 border-b rounded-tl-[.5rem] rounded-tr-[.5rem] flex-shrink-0\">\r\n//                     <AlertDialogTitle className=\"text-sm text-[#fff] font-normal\">\r\n//                         {title}\r\n//                     </AlertDialogTitle>\r\n//                 </AlertDialogHeader>\r\n\r\n//                 {/* 콘텐츠 영역 - 내용이 넘칠 경우를 대비해 스크롤 가능하도록 설정 */}\r\n//                 <div className=\"p-4 bg-white flex-grow flex flex-col\" style={{ overflow: 'hidden' }}>\r\n//                     {/* 메시지 영역 - 스크롤 가능하도록 설정 */}\r\n//                     <div className=\"text-sm text-[#333] overflow-auto flex-grow\" style={{ minHeight: '100px' }}>\r\n//                         {typeof message === 'string'\r\n//                             ? message.split('\\n').map((line, index) => (\r\n//                                 <React.Fragment key={index}>\r\n//                                     {line}\r\n//                                     <br />\r\n//                                 </React.Fragment>\r\n//                             ))\r\n//                             : message}\r\n//                     </div>\r\n                    \r\n//                     {/* 버튼 영역 - 항상 하단에 고정 */}\r\n//                     {showButtons && (\r\n//                         <div className=\"flex justify-end gap-1.5 mt-4 pt-2 flex-shrink-0 border-t\">\r\n//                             {type === '1' ? (\r\n//                                 <>\r\n//                                     <CommonButton\r\n//                                         onClick={onClose}\r\n//                                         disabled={confirmDisabled}\r\n//                                         className={confirmDisabled ? 'opacity-50 cursor-not-allowed' : ''}\r\n//                                     >\r\n//                                         확인\r\n//                                     </CommonButton>\r\n//                                     {onCancle && (\r\n//                                         <CommonButton variant=\"outline\" onClick={onCancle}>\r\n//                                             닫기\r\n//                                         </CommonButton>\r\n//                                     )}\r\n//                                 </>\r\n//                             ) : type === '0' ? (\r\n//                                 <>\r\n//                                     <CommonButton\r\n//                                         onClick={onClose}\r\n//                                         disabled={confirmDisabled}\r\n//                                         className={confirmDisabled ? 'opacity-50 cursor-not-allowed' : ''}\r\n//                                     >\r\n//                                         확인\r\n//                                     </CommonButton>\r\n//                                     <CommonButton variant=\"outline\" onClick={onCancle ? onCancle : onClose}>\r\n//                                         닫기\r\n//                                     </CommonButton>\r\n//                                 </>\r\n//                             ) : type === '3' ? (\r\n//                                 <>\r\n//                                     {/* type 3은 버튼 없음 */}\r\n//                                 </>\r\n//                             ) : (\r\n//                                 <>\r\n//                                     <CommonButton\r\n//                                         onClick={onClose}\r\n//                                         disabled={confirmDisabled}\r\n//                                         className={confirmDisabled ? 'opacity-50 cursor-not-allowed' : ''}\r\n//                                     >\r\n//                                         확인\r\n//                                     </CommonButton>\r\n//                                 </>\r\n//                             )}\r\n//                         </div>\r\n//                     )}\r\n//                 </div>\r\n//             </AlertDialogContent>\r\n//         </AlertDialog>\r\n//     );\r\n// };\r\n\r\n// export default CustomAlert;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2216, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2222, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst labelVariants = cva(\r\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 text-[#333]\"\r\n)\r\n\r\nconst Label = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\r\n    VariantProps<typeof labelVariants>\r\n>(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root\r\n    ref={ref}\r\n    className={cn(labelVariants(), className)}\r\n    {...props}\r\n  />\r\n))\r\nLabel.displayName = LabelPrimitive.Root.displayName\r\n\r\nexport { Label }\r\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AAHA;AAHA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,8JAAM,UAAU,MAI5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAe,IAAI;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,qKAAe,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 2255, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2261, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/components/shared/layout/utils/utils.ts"],"sourcesContent":["// src\\components\\shared\\layout\\utils\\utils.ts\r\n\r\nimport { FilterType, SortType, TreeItem } from \"@/features/campaignManager/types/typeForSidebar2\";\r\n\r\n/**\r\n * Sidebar에서 MouseMove 이벤트 핸들러\r\n * @param e - MouseEvent\r\n * @param isResizing - 리사이징 중인지 여부\r\n * @param setWidth - width를 업데이트하는 함수\r\n */\r\nexport const handleMouseMoveForSidebar = (e: MouseEvent, isResizing: boolean, setWidth: (width: number) => void) => {\r\n  if (!isResizing) return;\r\n  const newWidth = e.clientX;\r\n  if (newWidth >= 200 && newWidth <= 600) {\r\n    setWidth(newWidth);\r\n  }\r\n};\r\n\r\n/**\r\n * Sidebar에서 MouseUp 이벤트 핸들러\r\n * @param setIsResizing - 리사이징 상태를 업데이트하는 함수\r\n */\r\nexport const handleMouseUpForSidebar = (setIsResizing: (isResizing: boolean) => void) => {\r\n  setIsResizing(false);\r\n};\r\n\r\n// src/components/shared/layout/utils/utils.ts\r\n\r\n/**\r\n * Sidebar 노드 토글 핸들러\r\n * @param nodeId - 토글할 노드 ID\r\n * @param expandedNodes - 현재 확장된 노드들의 집합\r\n * @param setExpandedNodes - 확장된 노드를 업데이트하는 함수\r\n */\r\nexport const handleNodeToggleForSidebar = (\r\n  nodeId: string,\r\n  expandedNodes: Set<string>,\r\n  setExpandedNodes: (nodes: Set<string>) => void\r\n) => {\r\n  const newSet = new Set(expandedNodes);\r\n  if (newSet.has(nodeId)) {\r\n    newSet.delete(nodeId);\r\n  } else {\r\n    newSet.add(nodeId);\r\n  }\r\n  setExpandedNodes(newSet);\r\n};\r\n\r\n/**\r\n * Sidebar 노드 선택 핸들러\r\n * @param nodeId - 선택한 노드 ID\r\n * @param setSelectedNodeId - 선택된 노드를 업데이트하는 함수\r\n */\r\nexport const handleNodeSelectForSidebar = (\r\n  nodeId: string,\r\n  setSelectedNodeId: (id: string) => void\r\n) => {\r\n  setSelectedNodeId(nodeId);\r\n};\r\n\r\n/**\r\n * Sidebar 트리 아이템 필터링\r\n * @param items - 트리 아이템 목록\r\n * @param type - 필터 타입\r\n * @returns 필터링된 트리 아이템 목록\r\n */\r\nexport const processTreeItemsForSidebar = (items: TreeItem[], type: FilterType): TreeItem[] => {\r\n  return items\r\n    .map((item) => {\r\n      const processed = { ...item };\r\n      if (item.children) {\r\n        processed.children = processTreeItemsForSidebar(item.children, type);\r\n      }\r\n      return processed;\r\n    })\r\n    .filter((item) => {\r\n      if (type === 'all') return true;\r\n      if (item.type === 'folder' && item.children && item.children.length > 0) return true;\r\n      return item.status === type as 'started' | 'pending' | 'stopped';\r\n    });\r\n};\r\n\r\n/**\r\n * Sidebar 정렬 처리\r\n * @param items - 트리 아이템 목록\r\n * @param type - 정렬 타입\r\n * @returns 정렬된 트리 아이템 목록\r\n */\r\nexport const sortTreeItemsForSidebar = (items: TreeItem[], type: SortType): TreeItem[] => {\r\n  return items\r\n    .map((item) => {\r\n      const sorted = { ...item };\r\n      if (item.children) {\r\n        sorted.children = sortTreeItemsForSidebar(item.children, type);\r\n      }\r\n      return sorted;\r\n    })\r\n    .sort((a, b) => {\r\n      if (type === 'name') {\r\n        return a.label.localeCompare(b.label);\r\n      }\r\n      return a.id.localeCompare(b.id);\r\n    });\r\n};\r\n\r\n\r\n// if (start_flag === 1) return 'started';      // 종료된 상태\r\n// if (start_flag === 2) return 'pending';    // 대기 상태\r\n// if (start_flag === 3) return 'stopped';     // 진행중 \r\n\r\n// export const getStatusIcon = (start_flag?: number): string | null => {\r\n//   switch (start_flag) {\r\n//     case 1:\r\n//       return 'started'; // 종료된 상태\r\n//     case 2:\r\n//       return 'pending'; // 대기 상태\r\n//     case 3:\r\n//       return 'stopped'; // 진행 중\r\n//     default:\r\n//       return null;\r\n//   }\r\n// };\r\n\r\n// \\nproject\\fe_pdsw\\src\\components\\shared\\layout\\utils\\utils.ts\r\nexport const getStatusIcon = (status?: string) => {\r\n  switch (status) {\r\n    case 'started':\r\n      return '/sidebar-menu/tree_play.svg';\r\n    case 'pending':\r\n      return '/sidebar-menu/tree_pause.svg';\r\n    case 'stopped':\r\n      return '/sidebar-menu/tree_stop.svg';\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nexport const getStatusIconWithStartFlag = (status?: number) => {\r\n  switch (status) {\r\n    case 1:\r\n      return '/sidebar-menu/tree_play.svg';\r\n    case 2:\r\n      return '/sidebar-menu/tree_pause.svg';\r\n    case 3:\r\n      return '/sidebar-menu/tree_stop.svg';\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\n"],"names":[],"mappings":"AAAA,8CAA8C;;;;;;;;;;;AAUvC,MAAM,4BAA4B,CAAC,GAAe,YAAqB;IAC5E,IAAI,CAAC,YAAY;IACjB,MAAM,WAAW,EAAE,OAAO;IAC1B,IAAI,YAAY,OAAO,YAAY,KAAK;QACtC,SAAS;IACX;AACF;AAMO,MAAM,0BAA0B,CAAC;IACtC,cAAc;AAChB;AAUO,MAAM,6BAA6B,CACxC,QACA,eACA;IAEA,MAAM,SAAS,IAAI,IAAI;IACvB,IAAI,OAAO,GAAG,CAAC,SAAS;QACtB,OAAO,MAAM,CAAC;IAChB,OAAO;QACL,OAAO,GAAG,CAAC;IACb;IACA,iBAAiB;AACnB;AAOO,MAAM,6BAA6B,CACxC,QACA;IAEA,kBAAkB;AACpB;AAQO,MAAM,6BAA6B,CAAC,OAAmB;IAC5D,OAAO,MACJ,GAAG,CAAC,CAAC;QACJ,MAAM,YAAY;YAAE,GAAG,IAAI;QAAC;QAC5B,IAAI,KAAK,QAAQ,EAAE;YACjB,UAAU,QAAQ,GAAG,2BAA2B,KAAK,QAAQ,EAAE;QACjE;QACA,OAAO;IACT,GACC,MAAM,CAAC,CAAC;QACP,IAAI,SAAS,OAAO,OAAO;QAC3B,IAAI,KAAK,IAAI,KAAK,YAAY,KAAK,QAAQ,IAAI,KAAK,QAAQ,CAAC,MAAM,GAAG,GAAG,OAAO;QAChF,OAAO,KAAK,MAAM,KAAK;IACzB;AACJ;AAQO,MAAM,0BAA0B,CAAC,OAAmB;IACzD,OAAO,MACJ,GAAG,CAAC,CAAC;QACJ,MAAM,SAAS;YAAE,GAAG,IAAI;QAAC;QACzB,IAAI,KAAK,QAAQ,EAAE;YACjB,OAAO,QAAQ,GAAG,wBAAwB,KAAK,QAAQ,EAAE;QAC3D;QACA,OAAO;IACT,GACC,IAAI,CAAC,CAAC,GAAG;QACR,IAAI,SAAS,QAAQ;YACnB,OAAO,EAAE,KAAK,CAAC,aAAa,CAAC,EAAE,KAAK;QACtC;QACA,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC,EAAE,EAAE;IAChC;AACJ;AAqBO,MAAM,gBAAgB,CAAC;IAC5B,OAAQ;QACN,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT;YACE,OAAO;IACX;AACF;AAEO,MAAM,6BAA6B,CAAC;IACzC,OAAQ;QACN,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT,KAAK;YACH,OAAO;QACT;YACE,OAAO;IACX;AACF"}},
    {"offset": {"line": 2352, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2358, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Table = React.forwardRef<\r\n  HTMLTableElement,\r\n  React.HTMLAttributes<HTMLTableElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div className=\"relative w-full overflow-auto\">\r\n    <table\r\n      ref={ref}\r\n      className={cn(\"w-full caption-bottom text-sm\", className)}\r\n      {...props}\r\n    />\r\n  </div>\r\n))\r\nTable.displayName = \"Table\"\r\n\r\nconst TableHeader = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\r\n))\r\nTableHeader.displayName = \"TableHeader\"\r\n\r\nconst TableBody = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tbody\r\n    ref={ref}\r\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableBody.displayName = \"TableBody\"\r\n\r\nconst TableFooter = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tfoot\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableFooter.displayName = \"TableFooter\"\r\n\r\nconst TableRow = React.forwardRef<\r\n  HTMLTableRowElement,\r\n  React.HTMLAttributes<HTMLTableRowElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tr\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableRow.displayName = \"TableRow\"\r\n\r\nconst TableHead = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.ThHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <th\r\n    ref={ref}\r\n    className={cn(\r\n      \"h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableHead.displayName = \"TableHead\"\r\n\r\nconst TableCell = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.TdHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <td\r\n    ref={ref}\r\n    className={cn(\r\n      \"p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTableCell.displayName = \"TableCell\"\r\n\r\nconst TableCaption = React.forwardRef<\r\n  HTMLTableCaptionElement,\r\n  React.HTMLAttributes<HTMLTableCaptionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <caption\r\n    ref={ref}\r\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nTableCaption.displayName = \"TableCaption\"\r\n\r\nexport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableFooter,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableCaption,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,8JAAM,UAAU,MAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,8JAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,8JAAM,UAAU,OAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,8JAAM,UAAU,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0IACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,8JAAM,UAAU,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wFACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,8JAAM,UAAU,QAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG"}},
    {"offset": {"line": 2490, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2496, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/components/shared/CustomCheckbox/index.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\r\nimport { Check } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst CustomCheckbox = React.forwardRef<\r\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <CheckboxPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      \"peer h-4 w-4 shrink-0 rounded-none border border-primary focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50  data-[state=checked]:text-black border-[#b6b6b6] data-[state=checked]:border-primary bg-[#fff] text-[#333]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <CheckboxPrimitive.Indicator\r\n      className={cn(\"flex items-center justify-center text-current\")}\r\n    >\r\n      <Check className=\"h-4 w-4\" />\r\n    </CheckboxPrimitive.Indicator>\r\n  </CheckboxPrimitive.Root>\r\n))\r\nCustomCheckbox.displayName = CheckboxPrimitive.Root.displayName\r\n\r\nexport { CustomCheckbox }\r\n"],"names":[],"mappings":";;;;AAEA;AAIA;AAHA;AACA;AAJA;;;;;;AAQA,MAAM,+BAAiB,8JAAM,UAAU,MAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,wKAAkB,IAAI;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,gSACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,wKAAkB,SAAS;YAC1B,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,6LAAC,uMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;;AAIvB,eAAe,WAAW,GAAG,wKAAkB,IAAI,CAAC,WAAW"}},
    {"offset": {"line": 2542, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2548, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/components/ui/popover.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Popover = PopoverPrimitive.Root\r\n\r\nconst PopoverTrigger = PopoverPrimitive.Trigger\r\n\r\nconst PopoverAnchor = PopoverPrimitive.Anchor\r\n\r\nconst PopoverContent = React.forwardRef<\r\n  React.ElementRef<typeof PopoverPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\r\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\r\n  <PopoverPrimitive.Portal>\r\n    <PopoverPrimitive.Content\r\n      ref={ref}\r\n      align={align}\r\n      sideOffset={sideOffset}\r\n      className={cn(\r\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </PopoverPrimitive.Portal>\r\n))\r\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\r\n\r\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor }\r\n"],"names":[],"mappings":";;;;;;;AAEA;AAGA;AAFA;AAHA;;;;;AAOA,MAAM,UAAU,uKAAiB,IAAI;AAErC,MAAM,iBAAiB,uKAAiB,OAAO;AAE/C,MAAM,gBAAgB,uKAAiB,MAAM;AAE7C,MAAM,+BAAiB,8JAAM,UAAU,MAGrC,CAAC,EAAE,SAAS,EAAE,QAAQ,QAAQ,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC5D,6LAAC,uKAAiB,MAAM;kBACtB,cAAA,6LAAC,uKAAiB,OAAO;YACvB,KAAK;YACL,OAAO;YACP,YAAY;YACZ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8aACA;YAED,GAAG,KAAK;;;;;;;;;;;;AAIf,eAAe,WAAW,GAAG,uKAAiB,OAAO,CAAC,WAAW"}},
    {"offset": {"line": 2592, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2598, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-7 w-full rounded-[3px] border border-input bg-white px-3 text-base transition-colors file:border-0 file:bg-white file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:text-[#aaa] disabled:bg-[#F4F4F4] md:text-sm border-[#ebebeb]\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,8JAAM,UAAU,MAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2XACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 2628, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2634, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/components/shared/layout/CommonDialogWithCustomAlertStyle.tsx"],"sourcesContent":["// src\\components\\shared\\layout\\CommonDialogWithCustomAlertStyle.tsx\r\nimport React, { Fragment } from 'react';\r\nimport { Dialog, Transition } from '@headlessui/react';\r\nimport { CommonButton } from \"@/components/shared/CommonButton\";\r\n\r\n// props 타입 정의\r\ninterface ICommonDialogWithCustomAlertStyleProps {\r\n  title: string;\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onCancel?: () => void;\r\n  width?: string;\r\n  showButtons?: boolean;\r\n  confirmDisabled?: boolean;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst CommonDialogWithCustomAlertStyle: React.FC<ICommonDialogWithCustomAlertStyleProps> = ({\r\n  title,\r\n  isOpen,\r\n  onClose,\r\n  onCancel,\r\n  width = 'max-w-sm',\r\n  showButtons = true,\r\n  confirmDisabled = false,\r\n  children,\r\n}) => {\r\n  // 다이얼로그를 닫는 함수\r\n  const handleClose = () => {\r\n    if (onCancel) {\r\n      onCancel();\r\n    } else {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Transition appear show={isOpen} as={Fragment}>\r\n      <Dialog as=\"div\" className=\"relative z-50\" onClose={handleClose}>\r\n        {/* 오버레이 */}\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"ease-out duration-300\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"ease-in duration-200\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\"\r\n        >\r\n          <div className=\"fixed inset-0 bg-black/30\" />\r\n        </Transition.Child>\r\n\r\n        {/* 다이얼로그 컨테이너 */}\r\n        <div className=\"fixed inset-0 overflow-y-auto\">\r\n          <div className=\"flex min-h-full items-center justify-center p-4\">\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0 scale-95\"\r\n              enterTo=\"opacity-100 scale-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100 scale-100\"\r\n              leaveTo=\"opacity-0 scale-95\"\r\n            >\r\n              <Dialog.Panel className={`p-0 ${width} rounded-none border shadow-sm bg-white`}>\r\n                {/* 헤더 */}\r\n                <div className=\"bg-[#AAA] px-4 py-2 border-b rounded-tl-[.5rem] rounded-tr-[.5rem]\">\r\n                  <Dialog.Title className=\"text-sm text-[#fff] font-normal\">\r\n                    {title}\r\n                  </Dialog.Title>\r\n                </div>\r\n                \r\n                {/* 본문 */}\r\n                <div className=\"p-4 bg-white rounded-bl-[.5rem] rounded-br-[.5rem]\">\r\n                  <div className=\"text-sm text-gray-700 mb-4\">\r\n                    {children}\r\n                  </div>\r\n                  {showButtons && (\r\n                    <div className=\"flex justify-end gap-1.5\">\r\n                      <CommonButton \r\n                        onClick={onClose} \r\n                        disabled={confirmDisabled}\r\n                        className={confirmDisabled ? 'opacity-50 cursor-not-allowed' : ''}\r\n                      >\r\n                        확인\r\n                      </CommonButton>\r\n                      {onCancel && (\r\n                        <CommonButton variant=\"outline\" onClick={onCancel}>\r\n                          닫기\r\n                        </CommonButton>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </Dialog.Panel>\r\n            </Transition.Child>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    </Transition>\r\n  );\r\n};\r\n\r\nexport default CommonDialogWithCustomAlertStyle;"],"names":[],"mappings":"AAAA,oEAAoE;;;;;AACpE;AAEA;AADA;AAAA;;;;;AAeA,MAAM,mCAAqF,CAAC,EAC1F,KAAK,EACL,MAAM,EACN,OAAO,EACP,QAAQ,EACR,QAAQ,UAAU,EAClB,cAAc,IAAI,EAClB,kBAAkB,KAAK,EACvB,QAAQ,EACT;IACC,eAAe;IACf,MAAM,cAAc;QAClB,IAAI,UAAU;YACZ;QACF,OAAO;YACL;QACF;IACF;IAEA,qBACE,6LAAC,0LAAA,CAAA,aAAU;QAAC,MAAM;QAAC,MAAM;QAAQ,IAAI,6JAAA,CAAA,WAAQ;kBAC3C,cAAA,6LAAC,kLAAA,CAAA,SAAM;YAAC,IAAG;YAAM,WAAU;YAAgB,SAAS;;8BAElD,6LAAC,0LAAA,CAAA,aAAU,CAAC,KAAK;oBACf,IAAI,6JAAA,CAAA,WAAQ;oBACZ,OAAM;oBACN,WAAU;oBACV,SAAQ;oBACR,OAAM;oBACN,WAAU;oBACV,SAAQ;8BAER,cAAA,6LAAC;wBAAI,WAAU;;;;;;;;;;;8BAIjB,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,0LAAA,CAAA,aAAU,CAAC,KAAK;4BACf,IAAI,6JAAA,CAAA,WAAQ;4BACZ,OAAM;4BACN,WAAU;4BACV,SAAQ;4BACR,OAAM;4BACN,WAAU;4BACV,SAAQ;sCAER,cAAA,6LAAC,kLAAA,CAAA,SAAM,CAAC,KAAK;gCAAC,WAAW,CAAC,IAAI,EAAE,MAAM,uCAAuC,CAAC;;kDAE5E,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC,kLAAA,CAAA,SAAM,CAAC,KAAK;4CAAC,WAAU;sDACrB;;;;;;;;;;;kDAKL,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAI,WAAU;0DACZ;;;;;;4CAEF,6BACC,6LAAC;gDAAI,WAAU;;kEACb,6LAAC,wJAAA,CAAA,eAAY;wDACX,SAAS;wDACT,UAAU;wDACV,WAAW,kBAAkB,kCAAkC;kEAChE;;;;;;oDAGA,0BACC,6LAAC,wJAAA,CAAA,eAAY;wDAAC,SAAQ;wDAAU,SAAS;kEAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAc3E;KApFM;uCAsFS"}},
    {"offset": {"line": 2800, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2806, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/components/shared/CommonCheckBox2/index.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useRef, useEffect } from 'react';\r\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\";\r\nimport { Check, Minus } from \"lucide-react\";\r\n\r\ninterface Props {\r\n    checked: boolean;\r\n    onChange?: (checked: boolean) => void;\r\n    disabled?: boolean;\r\n    className?: string;\r\n    title?: string;\r\n    size?: 'sm' | 'md';\r\n    indeterminate?: boolean;\r\n}\r\n\r\nconst CommonCheckBox2 = ({\r\n    checked,\r\n    onChange,\r\n    disabled = false,\r\n    className = \"\",\r\n    title,\r\n    size = 'sm',\r\n    indeterminate = false\r\n}: Props) => {\r\n    const sizeClasses = size === 'sm' ? 'h-4 w-4' : 'h-4 w-4';\r\n    \r\n    // Radix UI의 checked 상태에 대한 변환\r\n    // indeterminate가 true면 'indeterminate' 상태로 설정\r\n    // 그렇지 않으면 checked 값에 따라 true/false로 설정\r\n    const checkboxState = indeterminate ? 'indeterminate' : checked;\r\n    \r\n    const handleChange = (value: boolean | 'indeterminate') => {\r\n        if (!disabled && onChange) {\r\n            // 'indeterminate'인 경우 false로 변환하여 전달\r\n            onChange(value === true);\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <div className={`relative inline-block ${className}`}>\r\n            <CheckboxPrimitive.Root\r\n                checked={checkboxState}\r\n                onCheckedChange={handleChange}\r\n                disabled={disabled}\r\n                title={title}\r\n                className={`${sizeClasses} flex items-center justify-center rounded-none border border-[#b6b6b6] bg-white text-[#333] focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 ${disabled ? 'opacity-50 cursor-not-allowed' : ''}`}\r\n            >\r\n                <CheckboxPrimitive.Indicator>\r\n                    {indeterminate ? (\r\n                        <Minus className={`${sizeClasses} text-[#333]`} strokeWidth={2} />\r\n                    ) : (\r\n                        <Check className={`${sizeClasses} text-[#333]`} strokeWidth={2} />\r\n                    )}\r\n                </CheckboxPrimitive.Indicator>\r\n            </CheckboxPrimitive.Root>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CommonCheckBox2;"],"names":[],"mappings":";;;;AAGA;AACA;AAAA;AAJA;;;;AAgBA,MAAM,kBAAkB,CAAC,EACrB,OAAO,EACP,QAAQ,EACR,WAAW,KAAK,EAChB,YAAY,EAAE,EACd,KAAK,EACL,OAAO,IAAI,EACX,gBAAgB,KAAK,EACjB;IACJ,MAAM,cAAc,SAAS,OAAO,YAAY;IAEhD,8BAA8B;IAC9B,8CAA8C;IAC9C,uCAAuC;IACvC,MAAM,gBAAgB,gBAAgB,kBAAkB;IAExD,MAAM,eAAe,CAAC;QAClB,IAAI,CAAC,YAAY,UAAU;YACvB,qCAAqC;YACrC,SAAS,UAAU;QACvB;IACJ;IAEA,qBACI,6LAAC;QAAI,WAAW,CAAC,sBAAsB,EAAE,WAAW;kBAChD,cAAA,6LAAC,wKAAkB,IAAI;YACnB,SAAS;YACT,iBAAiB;YACjB,UAAU;YACV,OAAO;YACP,WAAW,GAAG,YAAY,oNAAoN,EAAE,WAAW,kCAAkC,IAAI;sBAEjS,cAAA,6LAAC,wKAAkB,SAAS;0BACvB,8BACG,6LAAC,uMAAA,CAAA,QAAK;oBAAC,WAAW,GAAG,YAAY,YAAY,CAAC;oBAAE,aAAa;;;;;yCAE7D,6LAAC,uMAAA,CAAA,QAAK;oBAAC,WAAW,GAAG,YAAY,YAAY,CAAC;oBAAE,aAAa;;;;;;;;;;;;;;;;;;;;;AAMrF;KA1CM;uCA4CS"}},
    {"offset": {"line": 2876, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2882, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/components/shared/TitleWrap/index.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\n\r\n\r\ninterface ButtonProps {\r\n  label: string; // 버튼 텍스트\r\n  onClick?: () => void; // 버튼 클릭 이벤트 (선택)\r\n  variant?: \"link\" | \"menu\" | \"default\" | \"destructive\" | \"outline\" | \"secondary\" | \"ghost\" | \"menuActive\" | \"menuOpened\" | \"login\" | \"customblue\" | null; // 버튼 스타일링 (선택)\r\n  type?: \"button\" | \"submit\" | \"reset\"; // 버튼 타입 (기본값: button)\r\n  disabled?: boolean; \r\n}\r\n\r\ninterface TitleWrapProps {\r\n  title: string; // 제목 텍스트\r\n  totalCount?: number; // 총 건수 (선택)\r\n  buttons?: ButtonProps[]; // 버튼 목록 (선택)\r\n  className?: string; // 추가적인 클래스명\r\n}\r\n\r\nconst TitleWrap: React.FC<TitleWrapProps> = ({\r\n  title,\r\n  totalCount,\r\n  buttons,\r\n  className,\r\n}) => {\r\n  return (\r\n    <div className={`flex justify-between items-center mb-2 text-[#333] ${className || \"\"}`}>\r\n      {/* 제목과 총 건수 */}\r\n      <div className=\"flex items-center\">\r\n        <h2 className=\"text-sm\">{title}</h2>\r\n        {totalCount !== undefined && (\r\n          <span className=\"text-sm text-[#777] pl-2\">\r\n            (총 <span className=\"text-[#F01E29]\">{totalCount}</span> 건)\r\n          </span>\r\n        )}\r\n      </div>\r\n\r\n      {/* 버튼 목록 */}\r\n      {buttons && buttons.length > 0 && (\r\n        <ul className=\"flex gap-1\">\r\n          {buttons.map((button, index) => (\r\n            <li key={index}>\r\n              <Button\r\n                variant={button.variant || \"default\"}\r\n                type={button.type || \"button\"}\r\n                onClick={button.onClick}\r\n                disabled={button.disabled || false} // disabled 속성 전달\r\n              >\r\n                {button.label}\r\n              </Button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TitleWrap;"],"names":[],"mappings":";;;;AACA;;;AAkBA,MAAM,YAAsC,CAAC,EAC3C,KAAK,EACL,UAAU,EACV,OAAO,EACP,SAAS,EACV;IACC,qBACE,6LAAC;QAAI,WAAW,CAAC,mDAAmD,EAAE,aAAa,IAAI;;0BAErF,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAW;;;;;;oBACxB,eAAe,2BACd,6LAAC;wBAAK,WAAU;;4BAA2B;0CACtC,6LAAC;gCAAK,WAAU;0CAAkB;;;;;;4BAAkB;;;;;;;;;;;;;YAM5D,WAAW,QAAQ,MAAM,GAAG,mBAC3B,6LAAC;gBAAG,WAAU;0BACX,QAAQ,GAAG,CAAC,CAAC,QAAQ,sBACpB,6LAAC;kCACC,cAAA,6LAAC,qIAAA,CAAA,SAAM;4BACL,SAAS,OAAO,OAAO,IAAI;4BAC3B,MAAM,OAAO,IAAI,IAAI;4BACrB,SAAS,OAAO,OAAO;4BACvB,UAAU,OAAO,QAAQ,IAAI;sCAE5B,OAAO,KAAK;;;;;;uBAPR;;;;;;;;;;;;;;;;AAerB;KArCM;uCAuCS"}},
    {"offset": {"line": 2967, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2973, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/components/shared/CustomInput/index.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst CustomInput = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-[26px] w-full rounded-[3px] border border-input bg-white px-[8px] transition-colors file:border-0 file:bg-white file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:text-[#aaa] disabled:bg-[#F4F4F4] border-[#ebebeb] text-[#333] text-sm\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nCustomInput.displayName = \"Input\"\r\n\r\nexport { CustomInput }"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,4BAAc,8JAAM,UAAU,MAClC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,YAAY,WAAW,GAAG"}},
    {"offset": {"line": 3003, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3009, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/components/shared/layout/comp/buttons/SortButtonForCampaign.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n} from \"@/components/ui/popover\";\r\nimport CommonButton from \"@/components/shared/CommonButton\";\r\nimport { ArrowUp, ArrowDown } from \"lucide-react\";\r\nimport Image from 'next/image';\r\nimport { NodeType, SortDirection, SortType, useTreeMenuStore, ViewMode } from '@/store/storeForSsideMenuCampaignTab';\r\n\r\nexport function SortButtonForCampaign() {\r\n  const [isPopoverOpen, setIsPopoverOpen] = useState(false);\r\n\r\n  const { \r\n    campaignSort, \r\n    selectedNodeType, \r\n    sortByNodeType,\r\n    setViewMode,\r\n    viewMode,\r\n    setSelectedNodeType,\r\n  } = useTreeMenuStore();\r\n\r\n  // 초기 설정 - 캠페인 모드로 설정하고 루트 노드만 확장\r\n  useEffect(() => {\r\n    if (viewMode === null) {\r\n      useTreeMenuStore.getState().setViewMode('campaign');\r\n      useTreeMenuStore.getState().setSelectedNodeType('campaign');\r\n\r\n      setTimeout(() => {\r\n        // @ts-expect-error: global window function expandAllNodes might not be declared\r\n        if (window.expandAllNodes) {\r\n          // @ts-expect-error: calling undeclared global function expandAllNodes\r\n          window.expandAllNodes();\r\n        }\r\n      }, 100);\r\n    }\r\n  }, [viewMode]);\r\n\r\n  const toggleSortField = (field: SortType) => {\r\n    if (campaignSort.type === field) return;\r\n    sortByNodeType(selectedNodeType, field, campaignSort.direction);\r\n  };\r\n\r\n  const handleNodeTypeSort = (nodeType: NodeType, direction: SortDirection) => {\r\n    console.log(\"정렬 버튼 클릭:\", { nodeType, direction });\r\n\r\n    sortByNodeType(nodeType, campaignSort.type, direction);\r\n\r\n    if (nodeType === 'tenant') {\r\n      setViewMode('tenant');\r\n\r\n      setTimeout(() => {\r\n        // @ts-expect-error: global window function expandTenantsOnly might not be declared\r\n        if (window.expandTenantsOnly) {\r\n          // @ts-expect-error: calling undeclared global function expandTenantsOnly\r\n          window.expandTenantsOnly();\r\n        }\r\n      }, 50);\r\n    } else {\r\n      setViewMode('campaign');\r\n\r\n      setTimeout(() => {\r\n        // @ts-expect-error: global window function expandAllNodes might not be declared\r\n        if (window.expandAllNodes) {\r\n          // @ts-expect-error: calling undeclared global function expandAllNodes\r\n          window.expandAllNodes();\r\n        }\r\n      }, 50);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      window.dispatchEvent(new Event('resize'));\r\n    }, 100);\r\n\r\n    setIsPopoverOpen(false);\r\n  };\r\n\r\n  const isActiveSort = (nodeType: NodeType, direction: SortDirection) => {\r\n    return selectedNodeType === nodeType && campaignSort.direction === direction;\r\n  };\r\n\r\n  const getViewButtonClass = (mode: ViewMode) => {\r\n    const baseClass = \"h-6 min-w-6 px-1 text-xs border rounded\";\r\n    return viewMode === mode \r\n      ? `${baseClass} bg-[#56CAD6] text-[#fff] ` \r\n      : `${baseClass} hover:bg-gray-50`;\r\n  };\r\n\r\n  const handleViewModeChange = (mode: ViewMode) => {\r\n    console.log(\"뷰 모드 변경:\", mode);\r\n    \r\n    // 이미 같은 모드인지 확인\r\n    if (viewMode === mode) {\r\n      // 같은 모드라도 확장 상태를 초기화\r\n      setTimeout(() => {\r\n        if (mode === 'tenant') {\r\n          // @ts-expect-error: global window function expandTenantsOnly might not be declared\r\n          if (window.expandTenantsOnly) {\r\n            // @ts-expect-error: calling undeclared global function expandTenantsOnly\r\n            window.expandTenantsOnly();\r\n          }\r\n        } else {\r\n          // @ts-expect-error: global window function expandAllNodes might not be declared\r\n          if (window.expandAllNodes) {\r\n            // @ts-expect-error: calling undeclared global function expandAllNodes\r\n            window.expandAllNodes();\r\n          }\r\n        }\r\n        \r\n        // 리사이즈 이벤트 발생시켜 UI 업데이트 유도\r\n        window.dispatchEvent(new Event('resize'));\r\n      }, 50);\r\n      return;\r\n    }\r\n    \r\n    // 다른 모드로 변경\r\n    setViewMode(mode);\r\n\r\n    setTimeout(() => {\r\n      if (mode === 'tenant') {\r\n        // @ts-expect-error: global window function expandTenantsOnly might not be declared\r\n        if (window.expandTenantsOnly) {\r\n          // @ts-expect-error: calling undeclared global function expandTenantsOnly\r\n          window.expandTenantsOnly();\r\n        }\r\n      } else {\r\n        // @ts-expect-error: global window function expandAllNodes might not be declared\r\n        if (window.expandAllNodes) {\r\n          // @ts-expect-error: calling undeclared global function expandAllNodes\r\n          window.expandAllNodes();\r\n        }\r\n      }\r\n      \r\n      // 리사이즈 이벤트 발생시켜 UI 업데이트 유도\r\n      window.dispatchEvent(new Event('resize'));\r\n    }, 50);\r\n  };\r\n\r\n  const renderViewButtons = () => {\r\n    return (\r\n      <div className=\"flex gap-1\">\r\n        <button\r\n          className={getViewButtonClass('tenant')}\r\n          onClick={() => handleViewModeChange('tenant')}\r\n          title=\"테넌트 보기\"\r\n        >\r\n          T\r\n        </button>\r\n        <button\r\n          className={getViewButtonClass('campaign')}\r\n          onClick={() => handleViewModeChange('campaign')}\r\n          title=\"캠페인 보기\"\r\n        >\r\n          C\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center\">\r\n      <Popover open={isPopoverOpen} onOpenChange={setIsPopoverOpen}>\r\n        <PopoverTrigger asChild>\r\n          <CommonButton\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            className=\"text-xs font-normal gap-[2px] hover:bg-[transparent] text-[#888] !p-0\"\r\n          >\r\n            정렬\r\n            <Image\r\n              src={`/tree-menu/array.png`}\r\n              alt={`정렬`}\r\n              width={9}\r\n              height={10}\r\n            />\r\n          </CommonButton>\r\n        </PopoverTrigger>\r\n        <PopoverContent className=\"w-auto min-w-[180px] p-0 py-[10px] px-[12px] rounded-[3px] border border-[#333]\" align=\"start\">\r\n          <div className=\"flex flex-col\">\r\n            <div className=\"\">\r\n              <div className=\"flex items-center justify-between mb-2\">\r\n                <span className=\"text-sm text-[#333]\">정렬 기준</span>\r\n                {renderViewButtons()}\r\n              </div>\r\n\r\n              <div className=\"flex gap-2\">\r\n                <button\r\n                  className={`flex-1 px-[6px] py-[4px] text-sm rounded-md border ${\r\n                    campaignSort.type === \"id\" \r\n                      ? \"bg-[#56CAD6] text-[#fff] \" \r\n                      : \"bg-white text-[#333] border-gray-200 hover:bg-gray-50\"\r\n                  }`}\r\n                  onClick={() => toggleSortField(\"id\")}\r\n                >\r\n                  ID\r\n                </button>\r\n                <button\r\n                  className={`flex-1 px-[6px] py-[4px] text-sm rounded-md border ${\r\n                    campaignSort.type === \"name\" \r\n                      ? \"bg-[#56CAD6] text-[#fff] \" \r\n                      : \"bg-white text-[#333] border-gray-200 hover:bg-gray-50\"\r\n                  }`}\r\n                  onClick={() => toggleSortField(\"name\")}\r\n                >\r\n                  이름\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"border-t border-gray-200 my-2\"></div>\r\n\r\n            <div className=\"flex items-center hover:bg-[#F4F6F9] rounded-md px-[6px] py-[4px]\">\r\n              <div className=\"flex-1 text-sm text-[#333]\">테넌트 보기</div>\r\n              <div className=\"flex gap-2\">\r\n                <button\r\n                  className={`p-1.5 rounded-md ${\r\n                    isActiveSort('tenant', 'asc')\r\n                      ? 'bg-[#56CAD6] text-[#fff]'\r\n                      : 'text-gray-400 hover:text-gray-600 hover:bg-gray-100'\r\n                  }`}\r\n                  onClick={() => handleNodeTypeSort('tenant', 'asc')}\r\n                  title={`${campaignSort.type === 'name' ? '이름' : 'ID'} 오름차순`}\r\n                >\r\n                  <ArrowUp className=\"h-4 w-4\" />\r\n                </button>\r\n                <button\r\n                  className={`p-1.5 rounded-md ${\r\n                    isActiveSort('tenant', 'desc')\r\n                      ? 'bg-[#56CAD6] text-[#fff]'\r\n                      : 'text-gray-400 hover:text-gray-600 hover:bg-gray-100'\r\n                  }`}\r\n                  onClick={() => handleNodeTypeSort('tenant', 'desc')}\r\n                  title={`${campaignSort.type === 'name' ? '이름' : 'ID'} 내림차순`}\r\n                >\r\n                  <ArrowDown className=\"h-4 w-4\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex items-center hover:bg-[#F4F6F9] rounded-md px-[6px] py-[4px]\">\r\n              <div className=\"flex-1 text-sm text-[#333]\">캠페인 보기</div>\r\n              <div className=\"flex gap-2\">\r\n                <button\r\n                  className={`p-1.5 rounded-md ${\r\n                    isActiveSort('campaign', 'asc')\r\n                      ? 'bg-[#56CAD6] text-[#fff]'\r\n                      : 'text-gray-400 hover:text-gray-600 hover:bg-gray-100'\r\n                  }`}\r\n                  onClick={() => handleNodeTypeSort('campaign', 'asc')}\r\n                  title={`${campaignSort.type === 'name' ? '이름' : 'ID'} 오름차순`}\r\n                >\r\n                  <ArrowUp className=\"h-4 w-4\" />\r\n                </button>\r\n                <button\r\n                  className={`p-1.5 rounded-md ${\r\n                    isActiveSort('campaign', 'desc')\r\n                      ? 'bg-[#56CAD6] text-[#fff]'\r\n                      : 'text-gray-400 hover:text-gray-600 hover:bg-gray-100'\r\n                  }`}\r\n                  onClick={() => handleNodeTypeSort('campaign', 'desc')}\r\n                  title={`${campaignSort.type === 'name' ? '이름' : 'ID'} 내림차순`}\r\n                >\r\n                  <ArrowDown className=\"h-4 w-4\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </PopoverContent>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3421, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3427, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/components/shared/layout/comp/buttons/ISortButtonForSideMenuCounselorTab.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { ArrowUp, ArrowDown } from \"lucide-react\";\r\nimport CommonButton from '@/components/shared/CommonButton';\r\nimport {\r\n  Popover,\r\n  PopoverContent,\r\n  PopoverTrigger,\r\n} from \"@/components/ui/popover\";\r\nimport { useCounselorFilterStore, NodeType } from \"@/store/storeForSideMenuCounselorTab\";\r\nimport Image from 'next/image';\r\n\r\n// 정렬 타입 정의\r\nexport type SortType = 'name' | 'id';\r\nexport type SortDirection = 'asc' | 'desc';\r\n\r\nexport interface SortOption {\r\n  type: SortType;\r\n  direction: SortDirection;\r\n  nodeType: NodeType;\r\n}\r\n\r\nconst ISortButtonForSideMenuCounselorTab = () => {\r\n  const { \r\n    sortOption, \r\n    setSortOption, \r\n    expandToLevel,\r\n    currentExpansionLevel\r\n  } = useCounselorFilterStore();\r\n  \r\n  const [isSortOpen, setIsSortOpen] = useState(false);\r\n  const [activeLevel, setActiveLevel] = useState<number>(currentExpansionLevel);\r\n\r\n  // 현재 확장 레벨 변경 시 로컬 상태 업데이트\r\n  useEffect(() => {\r\n    setActiveLevel(currentExpansionLevel);\r\n  }, [currentExpansionLevel]);\r\n\r\n  // 정렬 기준 선택 처리 (ID/이름)\r\n  const handleSortTypeSelect = (sortType: SortType) => {\r\n    setSortOption({ \r\n      ...sortOption,\r\n      type: sortType\r\n    });\r\n  };\r\n\r\n  // 노드 타입과 정렬 방향 함께 선택\r\n  const handleNodeTypeSort = (nodeType: NodeType, direction: SortDirection, event: React.MouseEvent) => {\r\n    event.stopPropagation();\r\n    \r\n    setSortOption({ \r\n      type: sortOption.type,\r\n      nodeType, \r\n      direction \r\n    });\r\n    \r\n    // 노드 타입에 따라 확장 레벨 설정\r\n    switch (nodeType) {\r\n      case 'tenant':\r\n        expandToLevel(2);\r\n        break;\r\n      case 'group':\r\n        expandToLevel(3);\r\n        break;\r\n      case 'team':\r\n        expandToLevel(4);\r\n        break;\r\n      case 'counselor':\r\n        expandToLevel(5);\r\n        break;\r\n      case 'all':\r\n        expandToLevel(5);\r\n        break;\r\n    }\r\n    \r\n    setIsSortOpen(false);\r\n  };\r\n\r\n  // 현재 활성화된 정렬 상태 확인\r\n  const isActiveSort = (nodeType: NodeType, direction: SortDirection) => {\r\n    return sortOption.nodeType === nodeType && sortOption.direction === direction;\r\n  };\r\n\r\n  // 현재 선택된 확장 레벨에 따라 버튼 스타일 결정\r\n  const getExpansionButtonClass = (level: number) => {\r\n    const baseClass = \"flex-1 px-[6px] py-[4px] text-xs font-medium rounded-md border\";\r\n    return currentExpansionLevel === level \r\n      ? `${baseClass} bg-[#56CAD6] text-[#fff]` \r\n      : `${baseClass} hover:bg-gray-50`;\r\n  };\r\n\r\n  // 레벨 선택 버튼 클릭 핸들러\r\n  const handleLevelSelect = (level: number, e: React.MouseEvent) => {\r\n    e.stopPropagation();\r\n    expandToLevel(level);\r\n  };\r\n\r\n  return (\r\n    <Popover open={isSortOpen} onOpenChange={setIsSortOpen}>\r\n      <PopoverTrigger asChild>\r\n        <CommonButton \r\n          variant=\"ghost\" \r\n          size=\"sm\" \r\n          className=\"text-xs font-normal gap-[2px] hover:bg-[transparent] text-[#888] !p-0\"\r\n        >\r\n          정렬\r\n          <Image \r\n            src={`/tree-menu/array.png`} \r\n            alt={`정렬`} \r\n            width={9} \r\n            height={10} \r\n          />\r\n        </CommonButton>\r\n      </PopoverTrigger>\r\n      <PopoverContent className=\"w-auto min-w-[180px] p-0 py-[10px] px-[12px] rounded-[3px] border border-[#333]\" align=\"start\">\r\n        <div className=\"flex flex-col\">\r\n          {/* 정렬 기준 헤더와 필드 토글 */}\r\n          <div className=\"\">\r\n            <div className=\"flex items-center justify-between mb-2\">\r\n              <span className=\"text-sm text-[#333]\">정렬 기준</span>\r\n              <div className=\"flex gap-1\">\r\n                <button\r\n                  className={getExpansionButtonClass(2)}\r\n                  onClick={(e) => handleLevelSelect(2, e)}\r\n                  title=\"테넌트 레벨만 보기\"\r\n                >\r\n                  T\r\n                </button>\r\n                <button\r\n                  className={getExpansionButtonClass(3)}\r\n                  onClick={(e) => handleLevelSelect(3, e)}\r\n                  title=\"그룹 레벨 보기\"\r\n                >\r\n                  G\r\n                </button>\r\n                <button\r\n                  className={getExpansionButtonClass(4)}\r\n                  onClick={(e) => handleLevelSelect(4, e)}\r\n                  title=\"팀 레벨 보기\"\r\n                >\r\n                  M\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex gap-2\">\r\n              <button\r\n                className={`flex-1 px-[6px] py-[4px] text-sm rounded-md border ${\r\n                  sortOption.type === \"id\" \r\n                    ? \"bg-[#56CAD6] text-[#fff] \" \r\n                    : \"bg-white text-gray-600 border-gray-200 hover:bg-gray-50\"\r\n                }`}\r\n                onClick={() => handleSortTypeSelect(\"id\")}\r\n              >\r\n                ID\r\n              </button>\r\n              <button\r\n                className={`flex-1 px-[6px] py-[4px] text-sm rounded-md border ${\r\n                  sortOption.type === \"name\" \r\n                    ? \"bg-[#56CAD6] text-[#fff] \" \r\n                    : \"bg-white text-gray-600 border-gray-200 hover:bg-gray-50\"\r\n                }`}\r\n                onClick={() => handleSortTypeSelect(\"name\")}\r\n              >\r\n                이름\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 구분선 */}\r\n          <div className=\"border-t border-gray-200 my-2\"></div>\r\n\r\n          {/* 전체 정렬 옵션 */}\r\n          <div className=\"flex items-center hover:bg-[#F4F6F9] rounded-md px-[6px] py-[4px]\">\r\n            <div className=\"flex-1 text-sm text-[#333]\">전체 보기</div>\r\n            <div className=\"flex gap-2\">\r\n              <button\r\n                className={`p-1.5 rounded-md ${\r\n                  isActiveSort('all', 'asc')\r\n                    ? 'bg-[#56CAD6] text-[#fff]'\r\n                    : 'text-gray-400 hover:text-gray-600 hover:bg-gray-100'\r\n                }`}\r\n                onClick={(e) => handleNodeTypeSort('all', 'asc', e)}\r\n                title={`${sortOption.type === 'name' ? '이름' : 'ID'} 오름차순`}\r\n              >\r\n                <ArrowUp className=\"h-4 w-4\" />\r\n              </button>\r\n              <button\r\n                className={`p-1.5 rounded-md ${\r\n                  isActiveSort('all', 'desc')\r\n                    ? 'bg-[#56CAD6] text-[#fff]'\r\n                    : 'text-gray-400 hover:text-gray-600 hover:bg-gray-100'\r\n                }`}\r\n                onClick={(e) => handleNodeTypeSort('all', 'desc', e)}\r\n                title={`${sortOption.type === 'name' ? '이름' : 'ID'} 내림차순`}\r\n              >\r\n                <ArrowDown className=\"h-4 w-4\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          \r\n          {/* 구분선 */}\r\n          <div className=\"border-t border-gray-200 my-2\"></div>\r\n\r\n          {/* 테넌트 정렬 옵션 */}\r\n          <div className=\"flex items-center hover:bg-[#F4F6F9] rounded-md px-[6px] py-[4px]\">\r\n            <div className=\"flex-1 text-sm text-[#333]\">테넌트 보기</div>\r\n            <div className=\"flex gap-2\">\r\n              <button\r\n                className={`p-1.5 rounded-md ${\r\n                  isActiveSort('tenant', 'asc')\r\n                    ? 'bg-[#56CAD6] text-[#fff]'\r\n                    : 'text-gray-400 hover:text-gray-600 hover:text-gray-600 hover:bg-gray-100'\r\n                }`}\r\n                onClick={(e) => handleNodeTypeSort('tenant', 'asc', e)}\r\n                title={`${sortOption.type === 'name' ? '이름' : 'ID'} 오름차순`}\r\n              >\r\n                <ArrowUp className=\"h-4 w-4\" />\r\n              </button>\r\n              <button\r\n                className={`p-1.5 rounded-md ${\r\n                  isActiveSort('tenant', 'desc')\r\n                    ? 'bg-[#56CAD6] text-[#fff]'\r\n                    : 'text-gray-400 hover:text-gray-600 hover:bg-gray-100'\r\n                }`}\r\n                onClick={(e) => handleNodeTypeSort('tenant', 'desc', e)}\r\n                title={`${sortOption.type === 'name' ? '이름' : 'ID'} 내림차순`}\r\n              >\r\n                <ArrowDown className=\"h-4 w-4\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 그룹 정렬 옵션 */}\r\n          <div className=\"flex items-center hover:bg-[#F4F6F9] rounded-md px-[6px] py-[4px]\">\r\n            <div className=\"flex-1 text-sm text-[#333]\">그룹 보기</div>\r\n            <div className=\"flex gap-2\">\r\n              <button\r\n                className={`p-1.5 rounded-md ${\r\n                  isActiveSort('group', 'asc')\r\n                    ? 'bg-[#56CAD6] text-[#fff]'\r\n                    : 'text-gray-400 hover:text-gray-600  hover:bg-gray-100'\r\n                }`}\r\n                onClick={(e) => handleNodeTypeSort('group', 'asc', e)}\r\n                title={`${sortOption.type === 'name' ? '이름' : 'ID'} 오름차순`}\r\n              >\r\n                <ArrowUp className=\"h-4 w-4\" />\r\n              </button>\r\n              <button\r\n                className={`p-1.5 rounded-md ${\r\n                  isActiveSort('group', 'desc')\r\n                    ? 'bg-[#56CAD6] text-[#fff]'\r\n                    : 'text-gray-400 hover:text-gray-600 hover:bg-gray-100'\r\n                }`}\r\n                onClick={(e) => handleNodeTypeSort('group', 'desc', e)}\r\n                title={`${sortOption.type === 'name' ? '이름' : 'ID'} 내림차순`}\r\n              >\r\n                <ArrowDown className=\"h-4 w-4\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 팀 정렬 옵션 */}\r\n          <div className=\"flex items-center hover:bg-[#F4F6F9] rounded-md px-[6px] py-[4px]\">\r\n            <div className=\"flex-1 text-sm text-[#333]\">팀 보기</div>\r\n            <div className=\"flex gap-2\">\r\n              <button\r\n                className={`p-1.5 rounded-md ${\r\n                  isActiveSort('team', 'asc')\r\n                    ? 'bg-[#56CAD6] text-[#fff]'\r\n                    : 'text-gray-400 hover:text-gray-600 hover:bg-gray-100'\r\n                }`}\r\n                onClick={(e) => handleNodeTypeSort('team', 'asc', e)}\r\n                title={`${sortOption.type === 'name' ? '이름' : 'ID'} 오름차순`}\r\n              >\r\n                <ArrowUp className=\"h-4 w-4\" />\r\n              </button>\r\n              <button\r\n                className={`p-1.5 rounded-md ${\r\n                  isActiveSort('team', 'desc')\r\n                    ? 'bg-[#56CAD6] text-[#fff]'\r\n                    : 'text-gray-400 hover:text-gray-600 hover:bg-gray-100'\r\n                }`}\r\n                onClick={(e) => handleNodeTypeSort('team', 'desc', e)}\r\n                title={`${sortOption.type === 'name' ? '이름' : 'ID'} 내림차순`}\r\n              >\r\n                <ArrowDown className=\"h-4 w-4\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 상담사 정렬 옵션 */}\r\n          <div className=\"flex items-center hover:bg-[#F4F6F9] rounded-md px-[6px] py-[4px]\">\r\n            <div className=\"flex-1 text-sm text-[#333]\">상담사 보기</div>\r\n            <div className=\"flex gap-2\">\r\n              <button\r\n                className={`p-1.5 rounded-md ${\r\n                  isActiveSort('counselor', 'asc')\r\n                    ? 'bg-[#56CAD6] text-[#fff]'\r\n                    : 'text-gray-400 hover:text-gray-600 hover:bg-gray-100'\r\n                }`}\r\n                onClick={(e) => handleNodeTypeSort('counselor', 'asc', e)}\r\n                title={`${sortOption.type === 'name' ? '이름' : 'ID'} 오름차순`}\r\n              >\r\n                <ArrowUp className=\"h-4 w-4\" />\r\n              </button>\r\n              <button\r\n                className={`p-1.5 rounded-md ${\r\n                  isActiveSort('counselor', 'desc')\r\n                    ? 'bg-[#56CAD6] text-[#fff]'\r\n                    : 'text-gray-400 hover:text-gray-600 hover:bg-gray-100'\r\n                }`}\r\n                onClick={(e) => handleNodeTypeSort('counselor', 'desc', e)}\r\n                title={`${sortOption.type === 'name' ? '이름' : 'ID'} 내림차순`}\r\n              >\r\n                <ArrowDown className=\"h-4 w-4\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n        </div>\r\n      </PopoverContent>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default ISortButtonForSideMenuCounselorTab;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3974, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3980, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/components/shared/layout/comp/buttons/OptionButtonsForSideMenuAgentTab.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { FilterIcon } from \"lucide-react\";\r\nimport CommonButton from \"@/components/shared/CommonButton\";\r\nimport { useCounselorFilterStore } from \"@/store/storeForSideMenuCounselorTab\";\r\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/components/ui/popover\";\r\nimport ISortButtonForSideMenuCounselorTab from \"./ISortButtonForSideMenuCounselorTab\";\r\n\r\nconst OptionButtonsForSideMenuAgentTab = () => {\r\n  return (\r\n    <div className=\"flex gap-2\">\r\n      {/* 정렬 버튼 */}\r\n      <ISortButtonForSideMenuCounselorTab />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionButtonsForSideMenuAgentTab;\r\n"],"names":[],"mappings":";;;;AAOA;AAPA;;;AASA,MAAM,mCAAmC;IACvC,qBACE,6LAAC;QAAI,WAAU;kBAEb,cAAA,6LAAC,kMAAA,CAAA,UAAkC;;;;;;;;;;AAGzC;KAPM;uCASS"}},
    {"offset": {"line": 4009, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4015, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/components/shared/layout/comp/TabActions/IFilterButtonForCampaignGroupTabHeader.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Popover, PopoverTrigger, PopoverContent } from \"@/components/ui/popover\";\r\nimport CommonButton from \"@/components/shared/CommonButton\";\r\nimport { ArrowUp, ArrowDown } from \"lucide-react\";\r\nimport Image from 'next/image';\r\nimport { useSideMenuCampaignGroupTabStore } from \"@/store/storeForSideMenuCampaignGroupTab\";\r\nimport { SortField, SortDirection, NodeType } from \"@/store/storeForSideMenuCampaignGroupTab\";\r\n\r\nconst IFilterButtonForCampaignGroupTabHeader = () => {\r\n  const [isPopoverOpen, setIsPopoverOpen] = useState(false);\r\n\r\n  const {\r\n    sortField,\r\n    sortDirection,\r\n    selectedNodeType,\r\n    sortByNodeType,\r\n    currentExpansionMode\r\n  } = useSideMenuCampaignGroupTabStore();\r\n\r\n  // 초기 로딩시 currentExpansionMode가 null일 경우를 처리\r\n  useEffect(() => {\r\n    if (currentExpansionMode === null) {\r\n      // 초기 상태는 그룹 레벨까지 확장('group')으로 설정\r\n      useSideMenuCampaignGroupTabStore.getState().expandTenantAndGroup();\r\n    }\r\n  }, [currentExpansionMode]);\r\n\r\n  const toggleSortField = (field: SortField) => {\r\n    if (sortField === field) return;\r\n    sortByNodeType(\"tenant\", field, sortDirection);\r\n  };\r\n\r\n  const handleNodeTypeSort = (nodeType: NodeType, direction: SortDirection) => {\r\n    sortByNodeType(nodeType, sortField, direction);\r\n    setIsPopoverOpen(false);\r\n  };\r\n\r\n  const isActiveSort = (nodeType: NodeType, direction: SortDirection) => {\r\n    return selectedNodeType === nodeType && sortDirection === direction;\r\n  };\r\n\r\n  // Function to determine active button state\r\n  const getExpansionButtonClass = (mode: 'tenant' | 'group' | 'all') => {\r\n    const baseClass = \"h-6 min-w-6 px-1 text-xs border rounded\";\r\n    return currentExpansionMode === mode \r\n      ? `${baseClass} bg-[#56CAD6] text-[#fff] ` \r\n      : `${baseClass} hover:bg-gray-50`;\r\n  };\r\n\r\n  // 추가: 'all' 버튼 추가\r\n  const renderExpansionButtons = () => {\r\n    return (\r\n      <div className=\"flex gap-1\">\r\n        <button\r\n          className={getExpansionButtonClass('tenant')}\r\n          onClick={() => useSideMenuCampaignGroupTabStore.getState().expandTenantOnly()}\r\n          title=\"테넌트 레벨만 보기\"\r\n        >\r\n          T\r\n        </button>\r\n        <button\r\n          className={getExpansionButtonClass('group')}\r\n          onClick={() => useSideMenuCampaignGroupTabStore.getState().expandTenantAndGroup()}\r\n          title=\"테넌트 및 그룹 레벨 보기\"\r\n        >\r\n          G\r\n        </button>\r\n\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center\">\r\n      {/* 정렬 버튼 */}\r\n      <Popover open={isPopoverOpen} onOpenChange={setIsPopoverOpen}>\r\n        <PopoverTrigger asChild>\r\n          <CommonButton\r\n            variant=\"ghost\"\r\n            size=\"sm\"\r\n            className=\"text-xs font-normal gap-[2px] hover:bg-[transparent] text-[#888] !p-0\"\r\n          >\r\n            정렬\r\n            <Image\r\n              src={`/tree-menu/array.png`}\r\n              alt={`정렬`}\r\n              width={9}\r\n              height={10}\r\n            />\r\n          </CommonButton>\r\n        </PopoverTrigger>\r\n        <PopoverContent className=\"w-auto min-w-[180px] p-0 py-[10px] px-[12px] rounded-[3px] border border-[#333]\" align=\"start\">\r\n          <div className=\"flex flex-col\">\r\n            {/* 정렬 기준 헤더와 필드 토글 */}\r\n            <div className=\"\">\r\n              <div className=\"flex items-center justify-between mb-2\">\r\n                <span className=\"text-sm text-[#333]\">정렬 기준</span>\r\n                {renderExpansionButtons()}\r\n              </div>\r\n\r\n              <div className=\"flex gap-2\">\r\n                <button\r\n                  className={`flex-1 px-[6px] py-[4px] text-sm rounded-md border ${\r\n                    sortField === \"id\" \r\n                      ? \"bg-[#56CAD6] text-[#fff] \" \r\n                      : \"bg-white text-[#333] border-gray-200 hover:bg-gray-50\"\r\n                  }`}\r\n                  onClick={() => toggleSortField(\"id\")}\r\n                >\r\n                  ID\r\n                </button>\r\n                <button\r\n                  className={`flex-1 px-[6px] py-[4px] text-sm rounded-md border ${\r\n                    sortField === \"name\" \r\n                      ? \"bg-[#56CAD6] text-[#fff] \" \r\n                      : \"bg-white text-[#333] border-gray-200 hover:bg-gray-50\"\r\n                  }`}\r\n                  onClick={() => toggleSortField(\"name\")}\r\n                >\r\n                  이름\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 구분선 */}\r\n            <div className=\"border-t border-gray-200 my-2\"></div>\r\n\r\n            {/* 전체 정렬 옵션 */}\r\n            <div className=\"flex items-center hover:bg-[#F4F6F9] rounded-md px-[6px] py-[4px]\">\r\n              <div className=\"flex-1 text-sm text-[#333]\">전체 보기</div>\r\n              <div className=\"flex gap-2\">\r\n                <button\r\n                  className={`p-1.5 rounded-md ${\r\n                    isActiveSort('all', 'asc')\r\n                      ? 'bg-[#56CAD6] text-[#fff]'\r\n                      : 'text-gray-400 hover:text-gray-600 hover:bg-gray-100'\r\n                  }`}\r\n                  onClick={() => handleNodeTypeSort('all', 'asc')}\r\n                  title={`${sortField === 'name' ? '이름' : 'ID'} 오름차순`}\r\n                >\r\n                  <ArrowUp className=\"h-4 w-4\" />\r\n                </button>\r\n                <button\r\n                  className={`p-1.5 rounded-md ${\r\n                    isActiveSort('all', 'desc')\r\n                      ? 'bg-[#56CAD6] text-[#fff]'\r\n                      : 'text-gray-400 hover:text-gray-600 hover:bg-gray-100'\r\n                  }`}\r\n                  onClick={() => handleNodeTypeSort('all', 'desc')}\r\n                  title={`${sortField === 'name' ? '이름' : 'ID'} 내림차순`}\r\n                >\r\n                  <ArrowDown className=\"h-4 w-4\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 구분선 */}\r\n            <div className=\"border-t border-gray-200 my-2\"></div>\r\n\r\n            {/* 테넌트 정렬 옵션 */}\r\n            <div className=\"flex items-center hover:bg-[#F4F6F9] rounded-md px-[6px] py-[4px]\">\r\n              <div className=\"flex-1 text-sm text-[#333]\">테넌트 보기</div>\r\n              <div className=\"flex gap-2\">\r\n                <button\r\n                  className={`p-1.5 rounded-md ${\r\n                    isActiveSort('tenant', 'asc')\r\n                      ? 'bg-[#56CAD6] text-[#fff]'\r\n                      : 'text-gray-400 hover:text-gray-600 hover:bg-gray-100'\r\n                  }`}\r\n                  onClick={() => handleNodeTypeSort('tenant', 'asc')}\r\n                  title={`${sortField === 'name' ? '이름' : 'ID'} 오름차순`}\r\n                >\r\n                  <ArrowUp className=\"h-4 w-4\" />\r\n                </button>\r\n                <button\r\n                  className={`p-1.5 rounded-md ${\r\n                    isActiveSort('tenant', 'desc')\r\n                      ? 'bg-[#56CAD6] text-[#fff]'\r\n                      : 'text-gray-400 hover:text-gray-600 hover:bg-gray-100'\r\n                  }`}\r\n                  onClick={() => handleNodeTypeSort('tenant', 'desc')}\r\n                  title={`${sortField === 'name' ? '이름' : 'ID'} 내림차순`}\r\n                >\r\n                  <ArrowDown className=\"h-4 w-4\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 그룹 정렬 옵션 */}\r\n            <div className=\"flex items-center hover:bg-[#F4F6F9] rounded-md px-[6px] py-[4px]\">\r\n              <div className=\"flex-1 text-sm text-[#333]\">그룹 보기</div>\r\n              <div className=\"flex gap-2\">\r\n                <button\r\n                  className={`p-1.5 rounded-md ${\r\n                    isActiveSort('group', 'asc')\r\n                      ? 'bg-[#56CAD6] text-[#fff]'\r\n                      : 'text-gray-400 hover:text-gray-600 hover:bg-gray-100'\r\n                  }`}\r\n                  onClick={() => handleNodeTypeSort('group', 'asc')}\r\n                  title={`${sortField === 'name' ? '이름' : 'ID'} 오름차순`}\r\n                >\r\n                  <ArrowUp className=\"h-4 w-4\" />\r\n                </button>\r\n                <button\r\n                  className={`p-1.5 rounded-md ${\r\n                    isActiveSort('group', 'desc')\r\n                      ? 'bg-[#56CAD6] text-[#fff]'\r\n                      : 'text-gray-400 hover:text-gray-600 hover:bg-gray-100'\r\n                  }`}\r\n                  onClick={() => handleNodeTypeSort('group', 'desc')}\r\n                  title={`${sortField === 'name' ? '이름' : 'ID'} 내림차순`}\r\n                >\r\n                  <ArrowDown className=\"h-4 w-4\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* 캠페인 정렬 옵션 */}\r\n            <div className=\"flex items-center hover:bg-[#F4F6F9] rounded-md px-[6px] py-[4px]\">\r\n              <div className=\"flex-1 text-sm text-[#333]\">캠페인 보기</div>\r\n              <div className=\"flex gap-2\">\r\n                <button\r\n                  className={`p-1.5 rounded-md ${\r\n                    isActiveSort('campaign', 'asc')\r\n                      ? 'bg-[#56CAD6] text-[#fff]'\r\n                      : 'text-gray-400 hover:text-gray-600 hover:bg-gray-100'\r\n                  }`}\r\n                  onClick={() => handleNodeTypeSort('campaign', 'asc')}\r\n                  title={`${sortField === 'name' ? '이름' : 'ID'} 오름차순`}\r\n                >\r\n                  <ArrowUp className=\"h-4 w-4\" />\r\n                </button>\r\n                <button\r\n                  className={`p-1.5 rounded-md ${\r\n                    isActiveSort('campaign', 'desc')\r\n                      ? 'bg-[#56CAD6] text-[#fff]'\r\n                      : 'text-gray-400 hover:text-gray-600 hover:bg-gray-100'\r\n                  }`}\r\n                  onClick={() => handleNodeTypeSort('campaign', 'desc')}\r\n                  title={`${sortField === 'name' ? '이름' : 'ID'} 내림차순`}\r\n                >\r\n                  <ArrowDown className=\"h-4 w-4\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </PopoverContent>\r\n      </Popover>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IFilterButtonForCampaignGroupTabHeader;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 4474, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4480, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/components/shared/layout/comp/TabActions/SkilFilterOptionPannelForCampaignTab.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport CommonButton from \"@/components/shared/CommonButton\";\r\nimport { useAuthStore } from \"@/store/authStore\";\r\nimport { CustomCheckbox } from \"@/components/shared/CustomCheckbox\";\r\nimport { useAssignableSkills } from \"@/features/preferences/hooks/useAssignableSkills\";\r\nimport { Popover } from \"@/components/ui/popover\";\r\nimport { PopoverClose } from \"@radix-ui/react-popover\";\r\nimport { useTreeMenuStore } from \"@/store/storeForSsideMenuCampaignTab\";\r\n\r\ninterface Skill {\r\n    skill_id: number;\r\n    skill_name: string;\r\n}\r\n\r\ninterface SkilFilterOptionPannelForCampaignTabProps {\r\n    shouldCloseOnConfirm?: boolean;\r\n    onConfirm?: () => void;\r\n    selectedSkills?: number[];\r\n    onSelectedSkillsChange?: (skills: number[]) => void;\r\n}\r\n\r\nconst SkilFilterOptionPannelForCampaignTab = ({\r\n    shouldCloseOnConfirm = false,\r\n    onConfirm,\r\n    selectedSkills: externalSelectedSkills,\r\n    onSelectedSkillsChange,\r\n}: SkilFilterOptionPannelForCampaignTabProps) => {\r\n    const { tenant_id } = useAuthStore();\r\n\r\n    // 할당 가능한 스킬 목록 가져오기\r\n    const { data: skills = [] as Skill[], isLoading, isError } = useAssignableSkills();\r\n\r\n    // 로컬 상태로 체크 박스 선택 상태 관리\r\n    const [internalSelectedSkills, setInternalSelectedSkills] = useState<number[]>([]);\r\n    \r\n    // 실제로 사용할 선택된 스킬 배열 (외부 또는 내부)\r\n    const selectedSkills = externalSelectedSkills !== undefined ? externalSelectedSkills : internalSelectedSkills;\r\n    const setSelectedSkills = (skills: number[]) => {\r\n        if (onSelectedSkillsChange) {\r\n            onSelectedSkillsChange(skills);\r\n        } else {\r\n            setInternalSelectedSkills(skills);\r\n        }\r\n    };\r\n\r\n    // 통합 스토어에서 설정자 함수 가져오기\r\n    const { \r\n        setSkilIdsForCampaignTreeMenu,\r\n        setFilterMode \r\n    } = useTreeMenuStore(); // 통합 스토어 사용\r\n\r\n    // 체크박스 변경 핸들러 (skill_id 기준)\r\n    const handleSkillChange = (skill_id: number) => {\r\n        setSelectedSkills(\r\n            selectedSkills.includes(skill_id) \r\n                ? selectedSkills.filter((id) => id !== skill_id) \r\n                : [...selectedSkills, skill_id]\r\n        );\r\n    };\r\n\r\n    // 확인 버튼 → 선택한 스킬 ID를 부모 컴포넌트로 전달\r\n    const handleConfirm = () => {\r\n        // 외부에서 선택 관리를 하지 않는 경우에만 스토어 업데이트\r\n        if (!onSelectedSkillsChange) {\r\n            setSkilIdsForCampaignTreeMenu(selectedSkills);\r\n            setFilterMode(selectedSkills.length > 0 ? \"skill\" : \"all\");\r\n        }\r\n        \r\n        // onConfirm 콜백이 있으면 호출\r\n        if (onConfirm) {\r\n            onConfirm();\r\n        }\r\n    };\r\n\r\n    // 취소 버튼 핸들러\r\n    const handleCancel = () => {\r\n        // 외부에서 관리하지 않는 경우에만 초기화\r\n        if (!onSelectedSkillsChange) {\r\n            setInternalSelectedSkills([]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"\">\r\n            {/* 로딩/에러 처리 */}\r\n            {isLoading && <p className=\"text-gray-500 text-sm\">로딩 중...</p>}\r\n            {isError && <p className=\"text-red-500 text-sm\">스킬 정보를 불러오는데 실패했습니다</p>}\r\n\r\n            {/* 스킬 체크박스 컨테이너 */}\r\n            <div className=\"\">\r\n                {/* 스킬 체크박스 목록 */}\r\n                <ul className=\"space-y-1 max-h-60 overflow-y-auto \">\r\n                    {skills.length > 0 ? (\r\n                        skills.map(({ skill_id, skill_name }: { skill_id: number; skill_name: string }) => (\r\n                            <li key={skill_id} className=\"px-[6px] py-[3px] flex items-center gap-2 border-gray-200 hover:bg-[#F4F6F9]\">\r\n                                <CustomCheckbox\r\n                                    id={`skill-${skill_id}`}\r\n                                    checked={selectedSkills.includes(skill_id)}\r\n                                    onCheckedChange={() => handleSkillChange(skill_id)}\r\n                                />\r\n                                <label htmlFor={`skill-${skill_id}`} className=\"cursor-pointer text-sm text-[#333]\">\r\n                                    {skill_name}\r\n                                </label>\r\n                            </li>\r\n                        ))\r\n                    ) : (\r\n                        !isLoading && <p className=\"text-gray-500 text-sm\">불러올 스킬이 없습니다.</p>\r\n                    )}\r\n                </ul>\r\n\r\n                {/* 확인/취소 버튼: 가운데 정렬 */}\r\n                <div className=\"mt-2 flex justify-end gap-2\">\r\n                    {shouldCloseOnConfirm ? (\r\n                        <PopoverClose asChild>\r\n                            <CommonButton onClick={handleConfirm} size=\"sm\">\r\n                                확인\r\n                            </CommonButton>\r\n                        </PopoverClose>\r\n                    ) : (\r\n                        <CommonButton onClick={handleConfirm} size=\"sm\">\r\n                            확인\r\n                        </CommonButton>\r\n                    )}\r\n                    <PopoverClose asChild>\r\n                        <CommonButton onClick={handleCancel} variant=\"outline\" size=\"sm\" className=\"text-gray-500\">\r\n                            취소\r\n                        </CommonButton>\r\n                    </PopoverClose>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SkilFilterOptionPannelForCampaignTab;"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AAGA;AADA;;;AARA;;;;;;;;AAuBA,MAAM,uCAAuC,CAAC,EAC1C,uBAAuB,KAAK,EAC5B,SAAS,EACT,gBAAgB,sBAAsB,EACtC,sBAAsB,EACkB;;IACxC,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,eAAY,AAAD;IAEjC,oBAAoB;IACpB,MAAM,EAAE,MAAM,SAAS,EAAE,AAAW,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,kKAAA,CAAA,sBAAmB,AAAD;IAE/E,wBAAwB;IACxB,MAAM,CAAC,wBAAwB,0BAA0B,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAEjF,+BAA+B;IAC/B,MAAM,iBAAiB,2BAA2B,YAAY,yBAAyB;IACvF,MAAM,oBAAoB,CAAC;QACvB,IAAI,wBAAwB;YACxB,uBAAuB;QAC3B,OAAO;YACH,0BAA0B;QAC9B;IACJ;IAEA,uBAAuB;IACvB,MAAM,EACF,6BAA6B,EAC7B,aAAa,EAChB,GAAG,CAAA,GAAA,+IAAA,CAAA,mBAAgB,AAAD,KAAK,YAAY;IAEpC,4BAA4B;IAC5B,MAAM,oBAAoB,CAAC;QACvB,kBACI,eAAe,QAAQ,CAAC,YAClB,eAAe,MAAM,CAAC,CAAC,KAAO,OAAO,YACrC;eAAI;YAAgB;SAAS;IAE3C;IAEA,iCAAiC;IACjC,MAAM,gBAAgB;QAClB,kCAAkC;QAClC,IAAI,CAAC,wBAAwB;YACzB,8BAA8B;YAC9B,cAAc,eAAe,MAAM,GAAG,IAAI,UAAU;QACxD;QAEA,uBAAuB;QACvB,IAAI,WAAW;YACX;QACJ;IACJ;IAEA,YAAY;IACZ,MAAM,eAAe;QACjB,wBAAwB;QACxB,IAAI,CAAC,wBAAwB;YACzB,0BAA0B,EAAE;QAChC;IACJ;IAEA,qBACI,6LAAC;QAAI,WAAU;;YAEV,2BAAa,6LAAC;gBAAE,WAAU;0BAAwB;;;;;;YAClD,yBAAW,6LAAC;gBAAE,WAAU;0BAAuB;;;;;;0BAGhD,6LAAC;gBAAI,WAAU;;kCAEX,6LAAC;wBAAG,WAAU;kCACT,OAAO,MAAM,GAAG,IACb,OAAO,GAAG,CAAC,CAAC,EAAE,QAAQ,EAAE,UAAU,EAA4C,iBAC1E,6LAAC;gCAAkB,WAAU;;kDACzB,6LAAC,0JAAA,CAAA,iBAAc;wCACX,IAAI,CAAC,MAAM,EAAE,UAAU;wCACvB,SAAS,eAAe,QAAQ,CAAC;wCACjC,iBAAiB,IAAM,kBAAkB;;;;;;kDAE7C,6LAAC;wCAAM,SAAS,CAAC,MAAM,EAAE,UAAU;wCAAE,WAAU;kDAC1C;;;;;;;+BAPA;;;;wCAYb,CAAC,2BAAa,6LAAC;4BAAE,WAAU;sCAAwB;;;;;;;;;;;kCAK3D,6LAAC;wBAAI,WAAU;;4BACV,qCACG,6LAAC,sKAAA,CAAA,eAAY;gCAAC,OAAO;0CACjB,cAAA,6LAAC,wJAAA,CAAA,UAAY;oCAAC,SAAS;oCAAe,MAAK;8CAAK;;;;;;;;;;qDAKpD,6LAAC,wJAAA,CAAA,UAAY;gCAAC,SAAS;gCAAe,MAAK;0CAAK;;;;;;0CAIpD,6LAAC,sKAAA,CAAA,eAAY;gCAAC,OAAO;0CACjB,cAAA,6LAAC,wJAAA,CAAA,UAAY;oCAAC,SAAS;oCAAc,SAAQ;oCAAU,MAAK;oCAAK,WAAU;8CAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQnH;GA/GM;;QAMoB,4HAAA,CAAA,eAAY;QAG2B,kKAAA,CAAA,sBAAmB;QAmB5E,+IAAA,CAAA,mBAAgB;;;KA5BlB;uCAiHS"}},
    {"offset": {"line": 4686, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4692, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/components/shared/layout/comp/buttons/IFilterButtonForCampaignTabHeader.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Popover, PopoverTrigger, PopoverContent } from \"@/components/ui/popover\";\r\nimport CommonButton from \"@/components/shared/CommonButton\";\r\nimport { Check, CheckIcon } from \"lucide-react\";\r\nimport { useAssignableSkills } from \"@/features/preferences/hooks/useAssignableSkills\";\r\nimport Image from 'next/image'\r\nimport SkilFilterOptionPannelForCampaignTab from \"../TabActions/SkilFilterOptionPannelForCampaignTab\";\r\nimport { useTreeMenuStore } from \"@/store/storeForSsideMenuCampaignTab\";\r\nimport { useAuthStore } from \"@/store\";\r\n\r\nconst IFilterButtonForCampaignTabHeader = () => {\r\n  const [showSkillFilter, setShowSkillFilter] = useState(false);\r\n  const [isPopoverOpen, setIsPopoverOpen] = useState(false);\r\n  // 로컬에서 선택된 스킬 ID를 관리하기 위한 상태 추가\r\n  const [localSelectedSkills, setLocalSelectedSkills] = useState<number[]>([]);\r\n\r\n  // 통합 스토어에서 선택된 스킬 ID 목록과 필터 모드를 가져오기\r\n  const {\r\n    skilIdsForCampaignTreeMenu,\r\n    setSkilIdsForCampaignTreeMenu,\r\n    filterMode,\r\n    setFilterMode\r\n  } = useTreeMenuStore(); // 변경됨\r\n  \r\n  const {tenant_id} = useAuthStore();\r\n  \r\n  // 할당 가능한 스킬 목록 가져오기\r\n  const { data: skills = [] } = useAssignableSkills(tenant_id);\r\n\r\n  // 현재 \"전체 선택\" 상태 확인 (로컬 상태 기준)\r\n  const allSkillIds = skills.map(skill => skill.skill_id);\r\n  const allSelected = allSkillIds.length > 0 && \r\n    allSkillIds.every(id => localSelectedSkills.includes(id));\r\n  const someSelected = localSelectedSkills.length > 0 && !allSelected;\r\n  \r\n  // 팝오버가 열릴 때 스토어 값으로 로컬 상태 초기화\r\n  useEffect(() => {\r\n    if (isPopoverOpen) {\r\n      setLocalSelectedSkills([...skilIdsForCampaignTreeMenu].map(id => Number(id)));\r\n    }\r\n  }, [isPopoverOpen, skilIdsForCampaignTreeMenu]);\r\n\r\n  // 선택 스킬로 보기 클릭 처리\r\n  const handleSelectSkillsClick = () => {\r\n    setShowSkillFilter(true);\r\n  };\r\n\r\n  // 전체보기 클릭 처리\r\n  const handleViewAllClick = () => {\r\n    // 스토어의 선택된 스킬 ID 목록을 빈 배열로 설정 (체크박스 모두 해제 효과)\r\n    setSkilIdsForCampaignTreeMenu([]);\r\n\r\n    // 필터 모드를 'all'로 설정\r\n    setFilterMode(\"all\");\r\n\r\n    // 팝오버 닫기\r\n    setShowSkillFilter(false);\r\n    setIsPopoverOpen(false);\r\n  };\r\n\r\n  // 확인 버튼 클릭 시 로컬 상태를 스토어에 반영하고 창 닫기\r\n  const handleConfirmClick = () => {\r\n    // 로컬 상태를 스토어에 반영\r\n    setSkilIdsForCampaignTreeMenu(localSelectedSkills);\r\n    \r\n    // 선택된 스킬이 있으면 필터 모드를 'skill'로, 없으면 'all'로 설정\r\n    setFilterMode(localSelectedSkills.length > 0 ? \"skill\" : \"all\");\r\n    \r\n    // 창 닫기\r\n    setShowSkillFilter(false);\r\n    setIsPopoverOpen(false);\r\n  };\r\n\r\n  // 전체 선택/해제 토글 기능 (로컬 상태만 변경)\r\n  const toggleAllSkills = () => {\r\n    if (allSelected) {\r\n      // 전체 해제\r\n      setLocalSelectedSkills([]);\r\n    } else {\r\n      // 전체 선택\r\n      setLocalSelectedSkills([...allSkillIds]);\r\n    }\r\n  };\r\n\r\n  // 자식 컴포넌트로 전달할 로컬 상태 관리 함수들\r\n  const handleLocalSkillChange = (skillIds: number[]) => {\r\n    setLocalSelectedSkills(skillIds);\r\n  };\r\n\r\n  return (\r\n    <Popover open={isPopoverOpen} onOpenChange={setIsPopoverOpen}>\r\n      <PopoverTrigger asChild>\r\n        <CommonButton \r\n          variant=\"ghost\" \r\n          size=\"sm\" \r\n          className=\"text-xs font-normal gap-[2px]  hover:bg-[transparent] text-[#888] !p-0\"\r\n        >\r\n          필터\r\n          <Image \r\n            src={`/tree-menu/filter.png`} \r\n            alt={`필터`} \r\n            width={9} \r\n            height={10} \r\n          />\r\n        </CommonButton>\r\n      </PopoverTrigger>\r\n      <PopoverContent className=\"w-auto min-w-[150px] p-0 py-[10px] px-[12px] rounded-[3px] border border-[#333]\" align=\"start\">\r\n        {!showSkillFilter ? (\r\n          // 기본 필터 옵션 메뉴\r\n          <div className=\"flex flex-col\">\r\n            <div className=\"\">\r\n              <CommonButton\r\n                variant=\"ghost\"\r\n                className=\"w-full justify-between rounded-[3px] px-[6px] py-[4px] text-sm text-[#333] hover:bg-[#F4F6F9]\"\r\n                onClick={handleViewAllClick}\r\n              >\r\n                <span>전체보기</span>\r\n                {filterMode === \"all\" && (\r\n                  <CheckIcon className=\"h-4 w-4 text-[#333]\" />\r\n                )}\r\n              </CommonButton>\r\n            </div>\r\n            <div>\r\n              <CommonButton\r\n                variant=\"ghost\"\r\n                className=\"w-full justify-between rounded-[3px] px-[6px] py-[4px] text-sm text-[#333] hover:bg-[#F4F6F9]\"\r\n                onClick={handleSelectSkillsClick}\r\n              >\r\n                <span>선택 스킬로 보기</span>\r\n                {filterMode === \"skill\" && (\r\n                  <CheckIcon className=\"h-4 w-4 text-[#333]\" />\r\n                )}\r\n              </CommonButton>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          // 스킬 필터 패널\r\n          <div className=\"p-0 w-[150px]\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <CommonButton\r\n                variant=\"ghost\"\r\n                onClick={() => setShowSkillFilter(false)}\r\n                className=\"text-sm text-[#333] !p-0\"\r\n              >\r\n                &lt; 뒤로\r\n              </CommonButton>\r\n              <span className=\"text-sm text-[#333]\">스킬 선택</span>\r\n            </div>\r\n            <div className=\"mt-[12px] mb-[1px] hover:bg-[#F4F6F9]\">\r\n              <CommonButton\r\n                  variant=\"ghost\"\r\n                  onClick={toggleAllSkills}\r\n                  className=\"text-sm text-[#333] flex items-center !px-[6px] !py-[3px]\"\r\n                  title={allSelected ? \"전체 해제\" : \"전체 선택\"}\r\n                >\r\n                  {allSelected ? (\r\n                    <>\r\n                      <div className=\"h-4 w-4 shrink-0 rounded-none border focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:text-black border-[#000] data-[state=checked]:border-primary bg-[#fff] flex justify-center items-center\">\r\n                          <Check className=\"h-4 w-4\" />\r\n                      </div>\r\n                      <span className=\"ml-1 text-sm\">모두 해제</span>\r\n                    </>\r\n                  ) : someSelected ? (\r\n                    <>\r\n                      <div className=\"relative\">\r\n                        <div className=\"h-4 w-4 shrink-0 rounded-none border focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:text-black border-[#b6b6b6] data-[state=checked]:border-primary bg-[#fff] flex justify-center items-center\">\r\n                          <div className=\"h-3 w-3 bg-[#333]\"></div>\r\n                        </div>\r\n                      </div>\r\n                      <span className=\"ml-1 text-sm\">전체 선택</span>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                        <div className=\"h-4 w-4 shrink-0 rounded-none border focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:text-black border-[#b6b6b6] data-[state=checked]:border-primary bg-[#fff]\">\r\n                        </div>\r\n                      <span className=\"ml-1 text-sm\">전체 선택</span>\r\n                    </>\r\n                  )}\r\n                </CommonButton>\r\n            </div>\r\n            <SkilFilterOptionPannelForCampaignTab\r\n              shouldCloseOnConfirm={true}\r\n              onConfirm={handleConfirmClick}\r\n              selectedSkills={localSelectedSkills}\r\n              onSelectedSkillsChange={handleLocalSkillChange}\r\n            />\r\n          </div>\r\n        )}\r\n      </PopoverContent>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default IFilterButtonForCampaignTabHeader;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 5063, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5069, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/components/shared/layout/comp/TabActions/index.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { FilterType } from '@/features/campaignManager/types/typeForSidebar2';\r\nimport { SortButtonForCampaign } from '../buttons/SortButtonForCampaign';\r\nimport OptionButtonsForSideMenuAgentTab from '../buttons/OptionButtonsForSideMenuAgentTab';\r\nimport ISearchButtonForFindForGroupOrCampaign from '../buttons/ISearchButtonForFindForGroupOrCampaign';\r\nimport IFilterButtonForCampaignGroupTabHeader from './IFilterButtonForCampaignGroupTabHeader';\r\nimport IFilterButtonForCampaignTabHeader from '../buttons/IFilterButtonForCampaignTabHeader';\r\nimport { SortOption, useTreeMenuStore } from '@/store/storeForSsideMenuCampaignTab';\r\n\r\ninterface TabActionsProps {\r\n  tabId: string;\r\n  onFilter?: (type: FilterType) => void;\r\n  // These props are for backward compatibility\r\n  onSort?: (type: any) => void;\r\n  selectedFilter?: FilterType;\r\n  selectedSort?: any;\r\n}\r\n\r\nexport function TabActions({\r\n  tabId,\r\n  onFilter,\r\n  onSort,\r\n  selectedFilter,\r\n  selectedSort\r\n}: TabActionsProps) {\r\n  // 통합 스토어에서 정렬 상태와 setter 가져오기\r\n  const { campaignSort, setCampaignSort } = useTreeMenuStore();\r\n\r\n  // 정렬 옵션 선택 처리\r\n  const handleSort = (option: SortOption) => {\r\n    // 통합 스토어 상태 업데이트\r\n    setCampaignSort(option);\r\n\r\n    // 이전 버전 호환성을 위한 onSort prop 처리 (있는 경우)\r\n    if (onSort) {\r\n      onSort(option.type);\r\n    }\r\n  };\r\n\r\n  switch (tabId) {\r\n    case 'campaign':\r\n      return (\r\n        <div className=\"flex items-center gap-[10px]\">\r\n          <IFilterButtonForCampaignTabHeader />\r\n          <SortButtonForCampaign />\r\n        </div>\r\n      );\r\n    case 'agent':\r\n      return (\r\n        <div className=\"flex items-center gap-[10px]\">\r\n          <OptionButtonsForSideMenuAgentTab />\r\n        </div>\r\n      );\r\n    case 'campaign-group':\r\n      return (\r\n        <div className=\"flex items-center gap-[8px]\">\r\n          {/* <ISearchButtonForFindForGroupOrCampaign /> */}\r\n          <IFilterButtonForCampaignGroupTabHeader />\r\n        </div>\r\n      );\r\n    default:\r\n      return null;\r\n  }\r\n}"],"names":[],"mappings":";;;;AAGA;AACA;AAEA;AACA;AACA;;;AARA;;;;;;AAmBO,SAAS,WAAW,EACzB,KAAK,EACL,QAAQ,EACR,MAAM,EACN,cAAc,EACd,YAAY,EACI;;IAChB,8BAA8B;IAC9B,MAAM,EAAE,YAAY,EAAE,eAAe,EAAE,GAAG,CAAA,GAAA,+IAAA,CAAA,mBAAgB,AAAD;IAEzD,cAAc;IACd,MAAM,aAAa,CAAC;QAClB,iBAAiB;QACjB,gBAAgB;QAEhB,uCAAuC;QACvC,IAAI,QAAQ;YACV,OAAO,OAAO,IAAI;QACpB;IACF;IAEA,OAAQ;QACN,KAAK;YACH,qBACE,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,iMAAA,CAAA,UAAiC;;;;;kCAClC,6LAAC,qLAAA,CAAA,wBAAqB;;;;;;;;;;;QAG5B,KAAK;YACH,qBACE,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,gMAAA,CAAA,UAAgC;;;;;;;;;;QAGvC,KAAK;YACH,qBACE,6LAAC;gBAAI,WAAU;0BAEb,cAAA,6LAAC,yMAAA,CAAA,UAAsC;;;;;;;;;;QAG7C;YACE,OAAO;IACX;AACF;GA7CgB;;QAQ4B,+IAAA,CAAA,mBAAgB;;;KAR5C"}},
    {"offset": {"line": 5161, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5167, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/components/shared/layout/BottomTabsForSideMenu.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { TabId } from \"@/features/campaignManager/components/data/baseTabs\";\r\nimport Image from 'next/image'\r\ninterface BottomTabsForSideMenuProps {\r\n  selectedTabId: TabId;\r\n  onTabChange: (tabId: TabId) => void;\r\n}\r\n\r\nconst tabsConfig = [\r\n  {\r\n    id: \"campaign\" as TabId,\r\n    label: \"캠페인\",\r\n    icons: {\r\n      default: \"/tree-menu/campaign_icon_for_sidemenu.png\",\r\n      selected: \"/tree-menu/campaign_icon_for_sidemenu_selected.png\"\r\n    },\r\n    alt: \"캠페인 아이콘\",\r\n    iconWidth: 13,\r\n    iconHeight: 13\r\n  },\r\n  {\r\n    id: \"agent\" as TabId,\r\n    label: \"상담사\",\r\n    icons: {\r\n      default: \"/tree-menu/ghost_icon_for_counselor_tab.png\",\r\n      selected: \"/tree-menu/ghost_icon_for_counselor_tab_selected.png\"\r\n    },\r\n    alt: \"상담사 아이콘\",\r\n    iconWidth: 14,\r\n    iconHeight: 14\r\n  },\r\n  {\r\n    id: \"campaign-group\" as TabId,\r\n    label: \"캠페인 그룹\",\r\n    icons: {\r\n      default: \"/tree-menu/campain_group.png\",\r\n      selected: \"/tree-menu/campain_group_selected.png\"\r\n    },\r\n    alt: \"캠페인 그룹 아이콘\",\r\n    iconWidth: 12,\r\n    iconHeight: 12\r\n  }\r\n];\r\n\r\nexport function BottomTabsForSideMenu({ selectedTabId, onTabChange }: BottomTabsForSideMenuProps) {\r\n  return (\r\n    <div className=\"flex-none\">\r\n      {tabsConfig.map((tab) => (\r\n        <button\r\n          key={tab.id}\r\n          className={`w-full text-left px-4 py-2 text-sm font-medium flex items-center gap-2 border-t\r\n            ${\r\n              selectedTabId === tab.id\r\n                ? \"bg-[#F1FBFC] text-[#02AFBF]\"\r\n                : \"text-[#444] hover:bg-gray-50 hover:text-gray-800\"\r\n            }`}\r\n          onClick={() => onTabChange(tab.id)}\r\n        >\r\n          <Image \r\n              src={selectedTabId === tab.id ? tab.icons.selected : tab.icons.default} \r\n              alt={tab.alt} \r\n              width={tab.iconWidth} \r\n              height={tab.iconHeight} \r\n            />\r\n          <span>{tab.label}</span>\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAGA;AAHA;;;AASA,MAAM,aAAa;IACjB;QACE,IAAI;QACJ,OAAO;QACP,OAAO;YACL,SAAS;YACT,UAAU;QACZ;QACA,KAAK;QACL,WAAW;QACX,YAAY;IACd;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;YACL,SAAS;YACT,UAAU;QACZ;QACA,KAAK;QACL,WAAW;QACX,YAAY;IACd;IACA;QACE,IAAI;QACJ,OAAO;QACP,OAAO;YACL,SAAS;YACT,UAAU;QACZ;QACA,KAAK;QACL,WAAW;QACX,YAAY;IACd;CACD;AAEM,SAAS,sBAAsB,EAAE,aAAa,EAAE,WAAW,EAA8B;IAC9F,qBACE,6LAAC;QAAI,WAAU;kBACZ,WAAW,GAAG,CAAC,CAAC,oBACf,6LAAC;gBAEC,WAAW,CAAC;YACV,EACE,kBAAkB,IAAI,EAAE,GACpB,gCACA,oDACJ;gBACJ,SAAS,IAAM,YAAY,IAAI,EAAE;;kCAEjC,6LAAC,gIAAA,CAAA,UAAK;wBACF,KAAK,kBAAkB,IAAI,EAAE,GAAG,IAAI,KAAK,CAAC,QAAQ,GAAG,IAAI,KAAK,CAAC,OAAO;wBACtE,KAAK,IAAI,GAAG;wBACZ,OAAO,IAAI,SAAS;wBACpB,QAAQ,IAAI,UAAU;;;;;;kCAE1B,6LAAC;kCAAM,IAAI,KAAK;;;;;;;eAfX,IAAI,EAAE;;;;;;;;;;AAoBrB;KAzBgB"}},
    {"offset": {"line": 5253, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5259, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/components/shared/layout/Sidebar2.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { baseTabs, TabId } from \"@/features/campaignManager/components/data/baseTabs\";\r\nimport { TreeMenusForCampaigns } from \"@/features/campaignManager/components/treeMenus/TreeMenusForCampaigns\";\r\nimport { TreeMenusForAgentTab } from \"@/features/campaignManager/components/treeMenus/TreeMenusForAgentTab\";\r\nimport { TreeMenusForCampaignGroupTab } from \"@/features/campaignManager/components/treeMenus/TreeMenusForCampaignGroupTab\";\r\nimport { TabActions } from \"./comp/TabActions\";\r\nimport { BottomTabsForSideMenu } from \"./BottomTabsForSideMenu\";\r\nimport Image from 'next/image';\r\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\r\nimport { useSidebarWidthStore } from \"@/store/useSidebarWidthStore\";\r\n\r\ninterface SidebarToggleButtonProps {\r\n  isOpen: boolean;\r\n  onClick: () => void;\r\n}\r\n\r\nfunction SidebarToggleButton({ isOpen, onClick }: SidebarToggleButtonProps) {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className=\"sidebar-button\r\n                transition-all duration-300 ease-in-out z-30\"\r\n    >\r\n      {isOpen ? (\r\n        <ChevronLeft className=\"w-3 h-3 text-gray-600\" />\r\n      ) : (\r\n        <ChevronRight className=\"w-3 h-3 text-gray-600\" />\r\n      )}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default function SidebarContainer() {\r\n  const storeWidth = useSidebarWidthStore(state => state.width);\r\n  const storeIsOpen = useSidebarWidthStore(state => state.isOpen);\r\n  const minWidth = useSidebarWidthStore(state => state.minWidth);\r\n  const maxWidth = useSidebarWidthStore(state => state.maxWidth);\r\n  const isResizing = useSidebarWidthStore(state => state.isResizing);\r\n  const setStoreWidth = useSidebarWidthStore(state => state.setWidth);\r\n  const setStoreIsOpen = useSidebarWidthStore(state => state.setIsOpen);\r\n  const setTabWidth = useSidebarWidthStore(state => state.setTabWidth);\r\n  const setCurrentTabId = useSidebarWidthStore(state => state.setCurrentTabId);\r\n  const setIsResizing = useSidebarWidthStore(state => state.setIsResizing);\r\n\r\n  const [selectedTabId, setSelectedTabId] = useState<TabId>(\"campaign\");\r\n\r\n  // 로컬 리사이징 상태 추가 (이중 안전장치)\r\n  const [localResizing, setLocalResizing] = useState(false);\r\n\r\n  // 성능 최적화를 위한 refs\r\n  const sidebarRef = useRef<HTMLDivElement>(null);\r\n  const lastWidthRef = useRef(storeWidth);\r\n  const resizeTimeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  // 선택된 탭 변경 시 Store 업데이트\r\n  useEffect(() => {\r\n    setCurrentTabId(selectedTabId);\r\n  }, [selectedTabId, setCurrentTabId]);\r\n\r\n  const handleResizeStart = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n\r\n    // 트랜지션 효과 일시 중지 (렉 감소)\r\n    if (sidebarRef.current) {\r\n      sidebarRef.current.style.transition = 'none';\r\n    }\r\n\r\n    // 로컬 상태와 글로벌 상태 모두 업데이트\r\n    setLocalResizing(true);\r\n    setIsResizing(true);\r\n    lastWidthRef.current = storeWidth;\r\n  };\r\n\r\n  const handleMouseMove = (e: MouseEvent) => {\r\n    // 로컬 상태로 리사이징 여부 확인\r\n    if (!localResizing) return;\r\n\r\n    // DOM 직접 조작 (상태 업데이트 없이)\r\n    const newWidth = e.clientX;\r\n    const clampedWidth = Math.max(minWidth, Math.min(maxWidth, newWidth));\r\n\r\n    if (sidebarRef.current) {\r\n      sidebarRef.current.style.width = `${clampedWidth}px`;\r\n    }\r\n\r\n    // 디바운싱: 마우스 이동 중 실시간 상태 업데이트 제한\r\n    if (resizeTimeoutRef.current) {\r\n      clearTimeout(resizeTimeoutRef.current);\r\n    }\r\n\r\n    resizeTimeoutRef.current = setTimeout(() => {\r\n      setStoreWidth(clampedWidth);\r\n    }, 10); // 최소 상태 업데이트 간격\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    // 로컬 상태로 리사이징 여부 확인\r\n    if (!localResizing) return;\r\n\r\n    // 트랜지션 효과 복원\r\n    if (sidebarRef.current) {\r\n      sidebarRef.current.style.transition = '';\r\n\r\n      // 마지막 너비 계산\r\n      const currentWidth = parseInt(sidebarRef.current.style.width, 10) || storeWidth;\r\n      const clampedWidth = Math.max(minWidth, Math.min(maxWidth, currentWidth));\r\n\r\n      // 상태 업데이트 및 현재 탭에 너비 저장\r\n      setStoreWidth(clampedWidth);\r\n      setTabWidth(selectedTabId, clampedWidth);\r\n    }\r\n\r\n    // 로컬 상태와 글로벌 상태 모두 업데이트\r\n    setLocalResizing(false);\r\n    setIsResizing(false);\r\n\r\n    // 디바운스 타임아웃 정리\r\n    if (resizeTimeoutRef.current) {\r\n      clearTimeout(resizeTimeoutRef.current);\r\n      resizeTimeoutRef.current = null;\r\n    }\r\n  };\r\n\r\n  const toggleSidebar = () => {\r\n    setStoreIsOpen(!storeIsOpen);\r\n  };\r\n\r\n  // 리사이징 이벤트 리스너 관리 - 로컬 상태 기반\r\n  useEffect(() => {\r\n    if (localResizing) {\r\n      window.addEventListener(\"mousemove\", handleMouseMove);\r\n      window.addEventListener(\"mouseup\", handleMouseUp);\r\n      // 텍스트 선택 방지\r\n      document.body.style.userSelect = 'none';\r\n    } else {\r\n      document.body.style.userSelect = '';\r\n    }\r\n\r\n    return () => {\r\n      window.removeEventListener(\"mousemove\", handleMouseMove);\r\n      window.removeEventListener(\"mouseup\", handleMouseUp);\r\n      document.body.style.userSelect = '';\r\n    };\r\n  }, [localResizing]); // 로컬 상태를 의존성으로 사용\r\n\r\n  const renderTreeMenu = () => {\r\n    switch (selectedTabId) {\r\n      case \"campaign\":\r\n        return <TreeMenusForCampaigns />;\r\n      case \"agent\":\r\n        return <TreeMenusForAgentTab />;\r\n      case \"campaign-group\":\r\n        return <TreeMenusForCampaignGroupTab />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-full bg-white border-r relative\">\r\n      <div\r\n        ref={sidebarRef}\r\n        className=\"flex flex-col transition-all duration-300 ease-in-out relative\"\r\n        style={{\r\n          width: storeIsOpen ? `${storeWidth}px` : '0',\r\n        }}\r\n      >\r\n        {/* Main Content Area */}\r\n        <div className=\"flex-1 relative flex flex-col min-h-0\">\r\n          <div className={`absolute inset-0 flex flex-col transition-all duration-300 ease-in-out\r\n              ${!storeIsOpen ? 'invisible' : ''}`}>\r\n            {/* 상단 헤더 */}\r\n            <div className=\"flex-none flex items-center justify-between py-1.5 px-[20px] border-b\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <div className=\"text-sm text-[#444] font-medium flex gap-2 items-center\">\r\n                  <div>\r\n                    {selectedTabId && (\r\n                      <Image\r\n                        src={baseTabs.find((tab) => tab.id === selectedTabId)?.icon || \"/tree-menu/campaign_icon_for_sidemenu.png\"}\r\n                        alt={baseTabs.find((tab) => tab.id === selectedTabId)?.label || \"탭아이콘\"}\r\n                        width={baseTabs.find((tab) => tab.id === selectedTabId)?.iconWidth || 13}\r\n                        height={baseTabs.find((tab) => tab.id === selectedTabId)?.iconHeight || 13}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                  {baseTabs.find((tab) => tab.id === selectedTabId)?.label}\r\n                </div>\r\n              </div>\r\n              <div className=\"flex items-center justify-end \">\r\n                <TabActions tabId={selectedTabId} />\r\n              </div>\r\n            </div>\r\n\r\n            {/* 트리메뉴 영역 - 스크롤 가능한 컨테이너 */}\r\n            <div className=\"flex-1 min-h-0 relative\">\r\n              <div id=\"tree-menu-container\" className=\"absolute inset-0 overflow-y-auto\">\r\n                {renderTreeMenu()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 하단 탭 메뉴 */}\r\n        <div className={`flex-none transition-all duration-300 ease-in-out \r\n                      ${!storeIsOpen ? 'scale-x-[0.125] origin-left' : ''}`}>\r\n          <BottomTabsForSideMenu\r\n            selectedTabId={selectedTabId}\r\n            onTabChange={setSelectedTabId}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* 토글 버튼 */}\r\n      <SidebarToggleButton isOpen={storeIsOpen} onClick={toggleSidebar} />\r\n\r\n      {/* 리사이즈 핸들 */}\r\n      {storeIsOpen && (\r\n        <div\r\n          className=\"w-[1px] cursor-col-resize bg-[#FBFBFB] hover:bg-[#5BC2C1] active:bg-[#5BC2C1] group_col\"\r\n          onMouseDown={handleResizeStart}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 5623, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}