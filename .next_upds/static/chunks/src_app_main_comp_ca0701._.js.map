{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/app/main/comp/preferences/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, TableRow, TableHeader, TableCell } from \"@/components/ui/table-custom\";\r\nimport { CommonRadio, CommonRadioItem } from \"@/components/shared/CommonRadio\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { CustomInput } from \"@/components/shared/CustomInput\";\r\nimport { CommonButton } from \"@/components/shared/CommonButton\";\r\nimport { CustomCheckbox } from \"@/components/shared/CustomCheckbox\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/shared/CustomSelect\";\r\nimport TitleWrap from \"@/components/shared/TitleWrap\";\r\nimport { useEnvironmentStore } from '@/store/environmentStore';\r\nimport { useAuthStore } from '@/store/authStore';\r\nimport { useApirForEnvironmentSave } from '@/features/auth/hooks/useApiForEnvironment';\r\nimport CustomAlert from '@/components/shared/layout/CustomAlert';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useTabStore } from '@/store/tabStore';\r\nimport CustomInputForTime from '@/components/shared/CustomInputForTime';\r\n\r\n// API에 전송할 데이터 구조\r\ninterface PreferencesData {\r\n  campaignListAlram: number;\r\n  statisticsUpdateCycle: number;\r\n  serverConnectionTime: number;\r\n  showChannelCampaignDayScop: number;\r\n  personalCampaignAlertOnly: number;\r\n  useAlramPopup: number;\r\n  unusedWorkHoursCalc: number;\r\n  sendingWorkStartHours: string;\r\n  sendingWorkEndHours: string;\r\n  dayOfWeekSetting: string;\r\n}\r\n\r\ninterface PreferencesBoardProps {\r\n  onSubmit?: (data: PreferencesData) => void;\r\n}\r\n\r\n// \"campaignListAlram\": 0,  \t\t\t알림설정-리스트 잔량부족시 알람 모드(주기적으로 계속) 0: 한번만, 1: 주기적으로 계속\r\n// \"statisticsUpdateCycle\": 20,  \t\t통계갱신주기-통계 가져오기 주기\r\n// \"serverConnectionTime\": 100,\t\t서버접속시간-서버와의 접속시간을 설정합니다.\r\n// \"showChannelCampaignDayScop\": 5,\t채널할당시보여주는캠페인-채널 할당 캠페인 범위\r\n// \"personalCampaignAlertOnly\": 0,\t\t알림옆라벨-본인 캠페인만 알림 여부 (체크안함) 0:전체, 1:본인\r\n// \"useAlramPopup\": 0,\t\t\t\t\t메시지알림창-알람 팝업 사용여부 (알리지않음) 0:알리지 않음, 1:알림\r\n// \"unusedWorkHoursCalc\": 1,\t\t\t캠페인기능업무시간라벨-업무시간 적용여부  (체크) 체크 되어있을때는 캠페인 가능 업무시간 다 Disabled 0:사용, 1:미사용\r\n// \"sendingWorkStartHours\": \"0000\",\t발신업무시간시작시간-발신업무시작시간\r\n// \"sendingWorkEndHours\": \"0000\",\t\t발신업무시간종료시간발신업무종료시간\r\n// \"dayOfWeekSetting\": \"f,f,f,f,f,f,f\"\t요일설정-발신업무가능 요일 (f는 체크 안됨 t는 체크)\r\n\r\nexport default function PreferencesBoard({ onSubmit }: PreferencesBoardProps) {\r\n  const router = useRouter();\r\n\r\n  // 환경설정 스토어에서 데이터 가져오기\r\n  const { environmentData, setEnvironment } = useEnvironmentStore();\r\n  // 사용자 인증 정보 가져오기\r\n  const { id: userId } = useAuthStore();\r\n\r\n  // 알림 상태\r\n  const [alertState, setAlertState] = useState({\r\n    isOpen: false,\r\n    message: '',\r\n    title: '알림',\r\n    type: '1',\r\n    onConfirm: () => { },\r\n    onCancel: () => { }\r\n  });\r\n\r\n  // 상태 초기화 - 기본값 없이 environmentData에서만 가져오도록 수정\r\n  const [refreshCycle, setRefreshCycle] = useState(\"\");\r\n  const [monitoringType, setMonitoringType] = useState(\"\");\r\n  const [retryCount, setRetryCount] = useState(\"\");\r\n  const [timeout, setCustomTimeout] = useState(\"\");\r\n  const [startTime, setStartTime] = useState(\"\");\r\n  const [endTime, setEndTime] = useState(\"\");\r\n  const [messageType, setMessageType] = useState(\"\");\r\n  const [personalCampaignAlertOnly, setPersonalCampaignAlertOnly] = useState(false);\r\n  const [unusedWorkHoursCalc, setUnusedWorkHoursCalc] = useState(false);\r\n  const [dayOfWeek, setDayOfWeek] = useState<string[]>(['f', 'f', 'f', 'f', 'f', 'f', 'f']);\r\n  const [isSaving, setIsSaving] = useState(false);\r\n\r\n  const weekdays = ['일', '월', '화', '수', '목', '금', '토'];\r\n\r\n  const { activeTabId, activeTabKey, removeTab } = useTabStore();\r\n\r\n  // 알림 유틸리티 함수\r\n  const showAlert = (message: string) => {\r\n    setAlertState({\r\n      isOpen: true,\r\n      message,\r\n      title: '알림',\r\n      type: '2',\r\n      onConfirm: closeAlert,\r\n      onCancel: () => { }\r\n    });\r\n  };\r\n\r\n  const closeAlert = () => {\r\n    setAlertState(prev => ({ ...prev, isOpen: false }));\r\n    closeCurrentTab();\r\n  };\r\n\r\n  const closeCurrentTab = () => {\r\n    if (activeTabId !== null && activeTabKey !== null) {\r\n      removeTab(activeTabId, activeTabKey);\r\n    }\r\n  };\r\n\r\n  // 환경설정 수정 API 호출\r\n  const { mutate: environmentSave } = useApirForEnvironmentSave({\r\n    onSuccess: (data) => {\r\n      setIsSaving(false);\r\n      showAlert('환경설정이 저장되었습니다');\r\n\r\n      // 환경설정 스토어도 업데이트하여 UI 반영\r\n      if (environmentData) {\r\n        const updatedData = {\r\n          ...environmentData,\r\n          campaignListAlram: monitoringType === \"oneTime\" ? 1 : 0,\r\n          statisticsUpdateCycle: parseInt(retryCount),\r\n          serverConnectionTime: parseInt(timeout),\r\n          showChannelCampaignDayScop: parseInt(refreshCycle),\r\n          personalCampaignAlertOnly: personalCampaignAlertOnly ? 1 : 0,\r\n          useAlramPopup: messageType === \"알림만\" ? 1 : 0,\r\n          unusedWorkHoursCalc: unusedWorkHoursCalc ? 1 : 0,\r\n          sendingWorkStartHours: startTime,\r\n          sendingWorkEndHours: endTime,\r\n          dayOfWeekSetting: dayOfWeek.join(',')\r\n        };\r\n        setEnvironment(updatedData);\r\n      }\r\n    },\r\n    onError: (error) => {\r\n      setIsSaving(false);\r\n      showAlert(`환경설정 저장에 실패했습니다. ${error.message}`);\r\n    }\r\n  });\r\n\r\n  // 환경설정 데이터가 로드되면 상태 업데이트\r\n  useEffect(() => {\r\n    if (environmentData) {\r\n      // 환경설정 데이터에서 값 설정\r\n      setRefreshCycle(environmentData.showChannelCampaignDayScop?.toString() || \"\");\r\n      setMonitoringType(environmentData.campaignListAlram === 1 ? \"oneTime\" : \"periodic\");\r\n      setRetryCount(environmentData.statisticsUpdateCycle?.toString() || \"\");\r\n      setCustomTimeout(environmentData.serverConnectionTime?.toString() || \"\");\r\n      setPersonalCampaignAlertOnly(environmentData.personalCampaignAlertOnly === 1);\r\n      setMessageType(environmentData.useAlramPopup === 1 ? \"알림만\" : \"알림과 없음\");\r\n      setUnusedWorkHoursCalc(environmentData.unusedWorkHoursCalc === 1);\r\n      setStartTime(environmentData.sendingWorkStartHours || \"\");\r\n      setEndTime(environmentData.sendingWorkEndHours || \"\");\r\n\r\n      // 요일 설정 파싱\r\n      if (environmentData.dayOfWeekSetting) {\r\n        setDayOfWeek(environmentData.dayOfWeekSetting.split(','));\r\n      }\r\n    }\r\n  }, [environmentData]);\r\n\r\n  // 요일 체크박스 변경 핸들러\r\n  const handleDayChange = (index: number, checked: boolean) => {\r\n    const newDays = [...dayOfWeek];\r\n    newDays[index] = checked ? 't' : 'f';\r\n    setDayOfWeek(newDays);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    closeCurrentTab();\r\n  };\r\n\r\n\r\n  // #### 유효한 시간 형식인지 확인 (4자리 문자열이고, 시는 00~23, 분은 00~59이어야 함)\r\n  const isTimeFormatValid = (time: string) => {\r\n    if (time.length !== 4) return false;\r\n    const hours = Number(time.substring(0, 2));\r\n    const minutes = Number(time.substring(2, 4));\r\n    if (isNaN(hours) || isNaN(minutes)) return false;\r\n    if (hours < 0 || hours > 23) return false;\r\n    if (minutes < 0 || minutes > 59) return false;\r\n    return true;\r\n  };\r\n\r\n    // #### 추가적인 유효성 예시(\"1112\"인 경우 무효)와 24시간 체제 확인\r\n    const validateTime = (time: string) => {\r\n      // \"1112\"는 예시로 무효 처리\r\n      if (time === \"1112\") return false;\r\n      return isTimeFormatValid(time);\r\n    };\r\n \r\n  \r\n\r\n  // 폼 제출 핸들러\r\n  const handleSubmit = () => {\r\n    if (!environmentData) {\r\n      showAlert('환경설정 데이터를 불러올 수 없습니다.');\r\n      return;\r\n    }\r\n\r\n    // #### 필수 입력 및 기본 유효성 검사\r\n    if (startTime.length === 4 && endTime.length === 4) {\r\n      // 24시간 범위를 벗어난 경우\r\n      if (!isTimeFormatValid(startTime) || !isTimeFormatValid(endTime)) {\r\n        setAlertState({\r\n          ...alertState,\r\n          isOpen: true,\r\n          message: \"잘못된 시간 형식입니다. 00:00 ~ 23:59 범위 내 입력해 주세요.\",\r\n        });\r\n        return;\r\n      }\r\n      // #### 시작시간/종료시간 추가 유효성 검사 (예: \"1112\" 무효 처리)\r\n      if (!validateTime(startTime) || !validateTime(endTime)) {\r\n        setAlertState({\r\n          ...alertState,\r\n          isOpen: true,\r\n          message: \"잘못된 시간입니다.\",\r\n        });\r\n        return;\r\n      }\r\n      // #### 시작시간이 종료시간보다 늦은 경우\r\n      if (startTime > endTime) {\r\n        setAlertState({\r\n          ...alertState,\r\n          isOpen: true,\r\n          message: \"시작시간이 종료시간보다 늦을 수 없습니다.\",\r\n        });\r\n        return;\r\n      }\r\n      let check = false;\r\n      \r\n      if (\r\n        startTime.replace(\":\", \"\") === startTime &&\r\n        endTime.replace(\":\", \"\") === endTime\r\n      ) {\r\n        check = true;\r\n      }\r\n      \r\n      if (!check) {\r\n        setStartTime(\"\");\r\n        setEndTime(\"\");\r\n\r\n        return;\r\n      }\r\n    }\r\n\r\n    setIsSaving(true);\r\n\r\n    // API 요청을 위한 데이터 형식으로 변환\r\n    const requestData = {\r\n      employeeId: userId,\r\n      campaignListAlram: monitoringType === \"oneTime\" ? 1 : 0,\r\n      statisticsUpdateCycle: parseInt(retryCount) || environmentData.statisticsUpdateCycle,\r\n      serverConnectionTime: parseInt(timeout) || environmentData.serverConnectionTime,\r\n      showChannelCampaignDayScop: parseInt(refreshCycle) || environmentData.showChannelCampaignDayScop,\r\n      personalCampaignAlertOnly: personalCampaignAlertOnly ? 1 : 0,\r\n      useAlramPopup: messageType === \"알림만\" ? 1 : 0,\r\n      unusedWorkHoursCalc: unusedWorkHoursCalc ? 1 : 0,\r\n      sendingWorkStartHours: startTime || environmentData.sendingWorkStartHours,\r\n      sendingWorkEndHours: endTime || environmentData.sendingWorkEndHours,\r\n      dayOfWeekSetting: dayOfWeek.join(',')\r\n    };\r\n\r\n    // 환경설정 저장 API 호출\r\n    environmentSave(requestData);\r\n\r\n    // 상위 컴포넌트의 onSubmit이 있는 경우에도 호출\r\n    if (onSubmit) {\r\n      onSubmit(requestData);\r\n    }\r\n  };\r\n\r\n  \r\n  \r\n\r\n  return (\r\n    <div className=\"w-full limit-width\">\r\n      <div className=\"flex-col flex gap-5\">\r\n        <div>\r\n          <TitleWrap title=\"화면표시\" />\r\n          <Table className='text-[#333]'>\r\n            <tbody>\r\n              <TableRow>\r\n                <TableHeader className=\"w-[12.5rem] !pt-[6px] !pb-[5px]\">\r\n                  <Label className=\"w-32\">채널 할당 시 보여주는 캠페인</Label>\r\n                </TableHeader>\r\n                <TableCell className=\"w-[17rem]\">\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <CustomInput\r\n                      type=\"number\"\r\n                      value={refreshCycle}\r\n                      onChange={(e) => setRefreshCycle(e.target.value)}\r\n                      className=\"w-20\"\r\n                    />\r\n                    <span className=\"text-sm\">일(day)</span>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">채널을 캠페인 모드로 할당 시 화면에 보여주는 캠페인의 범위를 선택합니다. 현재 날짜를 기준으로 설정한 값만큼의 범위안에서 캠페인을 보여줍니다.</span>\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableHeader className=\"w-[12.5rem] !py-[6px]\">\r\n                  <Label className=\"w-32\">일람설정</Label>\r\n                </TableHeader>\r\n                <TableCell className=\"w-[17rem]\">\r\n                  <CommonRadio value={monitoringType} onValueChange={setMonitoringType} className=\"flex gap-8\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <CommonRadioItem value=\"oneTime\" id=\"oneTime\" />\r\n                      <Label htmlFor=\"oneTime\">한번만</Label>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <CommonRadioItem value=\"periodic\" id=\"periodic\" />\r\n                      <Label htmlFor=\"periodic\">주기적으로 계속</Label>\r\n                    </div>\r\n                  </CommonRadio>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">캠페인 리스트 잔량 부족시의 알람모드를 설정합니다.</span>\r\n                </TableCell>\r\n              </TableRow>\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <div>\r\n          <TitleWrap title=\"통신\" />\r\n          <Table className='text-[#333]'>\r\n            <tbody>\r\n              <TableRow>\r\n                <TableHeader className=\"w-[12.5rem] !pt-[6px] !pb-[5px]\">\r\n                  <Label className=\"w-32\">통계 갱신주기</Label>\r\n                </TableHeader>\r\n                <TableCell className=\"w-[17rem]\">\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <CustomInput\r\n                      type=\"number\"\r\n                      value={retryCount}\r\n                      onChange={(e) => setRetryCount(e.target.value)}\r\n                      className=\"w-20\"\r\n                    />\r\n                    <span className=\"text-sm\">초(sec)</span>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">캠페인 통계를 서버로부터 가져오는 주기를 설정합니다.(권장 30~60초)</span>\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableHeader className=\"w-[12.5rem] !py-[6px]\">\r\n                  <Label className=\"w-32\">서버 접속시간</Label>\r\n                </TableHeader>\r\n                <TableCell className=\"w-[17rem]\">\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <CustomInput\r\n                      type=\"number\"\r\n                      value={timeout}\r\n                      onChange={(e) => setCustomTimeout(e.target.value)}\r\n                      className=\"w-20\"\r\n                    />\r\n                    <span className=\"text-sm\">초(sec)</span>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">서버와의 접속시간을 설정합니다.</span>\r\n                </TableCell>\r\n              </TableRow>\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <div>\r\n          <div className=\"flex justify-between items-center mb-2\">\r\n            <div className=\"flex items-center gap-8\">\r\n              <h2 className=\"text-sm\">알림</h2>\r\n              <div className='flex items-center gap-1'>\r\n                <CustomCheckbox\r\n                  id=\"notification-enable\"\r\n                  checked={personalCampaignAlertOnly}\r\n                  onCheckedChange={(checked) => setPersonalCampaignAlertOnly(checked as boolean)}\r\n                />\r\n                <Label htmlFor=\"notification-enable\" className=\"text-sm\">본인 캠페인만 업링크 알림</Label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Table className='text-[#333]'>\r\n            <tbody>\r\n              <TableRow>\r\n                <TableHeader className=\"w-[12.5rem] !py-[6px]\">\r\n                  <Label className=\"w-32\">메세지 알림창</Label>\r\n                </TableHeader>\r\n                <TableCell className=\"w-[17rem]\">\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <Select value={messageType} onValueChange={setMessageType}>\r\n                      <SelectTrigger className=\"w-40\">\r\n                        <SelectValue placeholder=\"알림 설정\" />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"알림과 없음\">알리지 않음</SelectItem>\r\n                        <SelectItem value=\"알림만\">알림</SelectItem>\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">주요 이벤트 알림창 알림을 설정합니다.</span>\r\n                </TableCell>\r\n              </TableRow>\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <div>\r\n          <div className=\"flex justify-between items-center mb-2\">\r\n            <div className=\"flex items-center gap-8\">\r\n              <h2 className=\"text-sm\">캠페인 가능 업무시간</h2>\r\n              <div className='flex items-center gap-1'>\r\n                <CustomCheckbox\r\n                  id=\"worktime-enable\"\r\n                  checked={unusedWorkHoursCalc}\r\n                  onCheckedChange={(checked) => setUnusedWorkHoursCalc(checked as boolean)}\r\n                />\r\n                <Label htmlFor=\"worktime-enable\" className=\"text-sm\">업무시간 계산 미사용</Label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Table className='text-[#333]'>\r\n            <tbody>\r\n              <TableRow>\r\n                <TableHeader className=\"w-[12.5rem] !pt-[6px] !pb-[5px]\">\r\n                  <Label className=\"w-32\">발신업무시간</Label>\r\n                </TableHeader>\r\n                <TableCell className=\"w-[17rem]\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <Label>시작시간</Label>\r\n                    <CustomInputForTime\r\n                      value={startTime}\r\n                      onChange={(value) => setStartTime(value)}\r\n                      className=\"w-16\"\r\n                      disabled={unusedWorkHoursCalc}\r\n                    />\r\n                    <Label>종료시간</Label>\r\n                    <CustomInputForTime\r\n                      value={endTime}\r\n                      onChange={(value) => setEndTime(value)}\r\n                      className=\"w-16\"\r\n                      disabled={unusedWorkHoursCalc}\r\n                    />\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <span className=\"text-sm\">해당 업무 시간에만 캠페인을 시작할 수 있습니다.</span>\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableHeader className=\"w-[12.5rem] !py-[6px]\">\r\n                  <Label className=\"w-32\">요일 설정</Label>\r\n                </TableHeader>\r\n                <TableCell className=\"w-[17rem]\" colSpan={2}>\r\n                  <div className=\"flex gap-4\">\r\n                    {weekdays.map((day, index) => (\r\n                      <div key={day} className=\"flex items-center gap-1\">\r\n                        <CustomCheckbox\r\n                          id={`day-${day}`}\r\n                          checked={dayOfWeek[index] === 't'}\r\n                          onCheckedChange={(checked) => handleDayChange(index, checked as boolean)}\r\n                          disabled={unusedWorkHoursCalc}\r\n                        />\r\n                        <Label htmlFor={`day-${day}`}>{day}</Label>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </TableCell>\r\n              </TableRow>\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <div className=\"flex justify-end gap-2\">\r\n          <CommonButton\r\n            onClick={handleSubmit}\r\n            disabled={isSaving}\r\n          >\r\n            {isSaving ? '저장 중...' : '저장'}\r\n          </CommonButton>\r\n          <CommonButton onClick={handleCancel}>취소</CommonButton>\r\n        </div>\r\n      </div>\r\n\r\n      <CustomAlert\r\n        message={alertState.message}\r\n        title={alertState.title}\r\n        type={alertState.type}\r\n        isOpen={alertState.isOpen}\r\n        onClose={() => {\r\n          setAlertState((prev) => ({ ...prev, isOpen: false }));\r\n        }}\r\n        onCancle={() => {\r\n          setAlertState((prev) => ({ ...prev, isOpen: false }));\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1124, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1130, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/app/main/comp/SystemPreferences/index.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\r\nimport TitleWrap from \"@/components/shared/TitleWrap\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/shared/CustomSelect\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { CustomInput } from \"@/components/shared/CustomInput\";\r\nimport DataGrid, { CellClickArgs } from 'react-data-grid';\r\nimport { useAuthStore, useMainStore } from '@/store';\r\nimport { ChannelListDataResponse, DialingDeviceListDataResponse } from '@/features/preferences/types/SystemPreferences';\r\nimport { useApiForChannelList } from '@/features/preferences/hooks/useApiForChannelList';\r\nimport { useApiForChannelEdit } from '@/features/preferences/hooks/useApiForChannelEdit';\r\nimport { useApiForDialingDevice, useApiForDialingDeviceCreate, useApiForDialingDeviceDelete, useApiForDialingDeviceUpdate } from '@/features/preferences/hooks/useApiForDialingDevice';\r\nimport CustomAlert from '@/components/shared/layout/CustomAlert';\r\nimport Cookies from 'js-cookie';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useEnvironmentStore } from '@/store/environmentStore';\r\nimport { useApiForSchedules } from '@/features/campaignManager/hooks/useApiForSchedules';\r\n\r\ninterface EquipmentRow {\r\n    device_id: string;\r\n    channel_count: number;\r\n    device_name: string;\r\n    usage: string;\r\n}\r\n\r\ninterface ChannelRow {\r\n    channelNumber: number;\r\n    channelName: string;\r\n    mode: string;\r\n    assignValue: number;\r\n}\r\n\r\n// 디바이스 상태 인터페이스 추가\r\ninterface DeviceStatus {\r\n    device_id: string;\r\n    device_status: \"run\" | \"down\";\r\n}\r\n\r\nconst errorMessage = {\r\n    isOpen: false,\r\n    message: '',\r\n    title: '로그인',\r\n    type: '2',\r\n};\r\n\r\nconst SystemPreferences = () => {\r\n    const [refreshCycle, setRefreshCycle] = useState(\"\");\r\n    const [monitoringType, setMonitoringType] = useState(\"periodic\");\r\n    const [equipmentNumber, setEquipmentNumber] = useState(\"\");\r\n    const [equipmentName, setEquipmentName] = useState(\"\");\r\n    const [allocationMode, setAllocationMode] = useState(\"\");\r\n    const [allocationOutboundMode, setAllocationOutboundMode] = useState(\"\");\r\n    \r\n    const [selectedDevice, setSelectedDevice] = useState<EquipmentRow | null>(null);\r\n    const [selectedChannel, setSelectedChannel] = useState<ChannelRow | null>(null);\r\n    const [filteredChannels, setFilteredChannels] = useState<ChannelRow[]>([]);\r\n    const [isEditable, setIsEditable] = useState(false);\r\n    const [scheduleData, setScheduleData] = useState<any[]>([]);\r\n\r\n    // 디바이스 상태를 저장할 상태 변수 추가\r\n    const [deviceStatuses, setDeviceStatuses] = useState<Record<string, \"run\" | \"down\">>({});\r\n\r\n    const { tenant_id, role_id } = useAuthStore();\r\n\r\n    // useMainStore의 campaigns에서 가져오는 creation_time으로 채널 리스트의 값이 useEnvironmentStore에서 가져오는 환경설정에서 설정한 \r\n    // showChannelCampaignDayScop 시간내에 만들어진것만 보이게 수정해야함.\r\n    const { tenants, campaigns } = useMainStore();\r\n    const { environmentData } = useEnvironmentStore();\r\n    const [dialingDeviceList, setDialingDeviceList] = useState<DialingDeviceListDataResponse[]>([]);\r\n    const [channelList, setChannelList] = useState<ChannelListDataResponse[]>([]);\r\n    const router = useRouter();\r\n\r\n    const [alertState, setAlertState] = useState({\r\n        isOpen: false,\r\n        message: '',\r\n        title: '알림',\r\n        type: '1',\r\n        onConfirm: () => {},\r\n        onCancel: () => {}\r\n    });\r\n\r\n    const showAlert = (message: string) => {\r\n        setAlertState({\r\n            isOpen: true,\r\n            message,\r\n            title: '알림',\r\n            type: '2',\r\n            onConfirm: closeAlert,\r\n            onCancel: () => {}\r\n        });\r\n    };\r\n\r\n    const showConfirm = (message: string, onConfirm: () => void) => {\r\n        setAlertState({\r\n            isOpen: true,\r\n            message,\r\n            title: '확인',\r\n            type: '1',\r\n            onConfirm: () => {\r\n                onConfirm();\r\n                closeAlert();\r\n            },\r\n            onCancel: closeAlert\r\n        });\r\n    };\r\n\r\n    const closeAlert = () => {\r\n        setAlertState(prev => ({ ...prev, isOpen: false }));\r\n    };\r\n\r\n    // Footer에서 발생하는 이벤트 수신을 위한 이벤트 리스너 추가\r\n    useEffect(() => {\r\n        // 장비 상태 변경 이벤트 수신 함수\r\n        const handleDeviceStatusChange = (event: any) => {\r\n            \r\n            const { device_id, device_status } = event.detail;\r\n            \r\n            // 디바이스 상태 업데이트\r\n            setDeviceStatuses(prev => ({\r\n                ...prev,\r\n                [device_id]: device_status\r\n            }));\r\n    \r\n            // 선택된 디바이스가 변경된 디바이스와 동일하면 상태 갱신\r\n            if (selectedDevice && selectedDevice.device_id === device_id) {\r\n                setSelectedDevice(prev => {\r\n                    if (!prev) return null;\r\n                    return {\r\n                        ...prev,\r\n                        usage: device_status === \"run\" ? \"사용\" : \"미사용\"\r\n                    };\r\n                });\r\n            }\r\n        };\r\n        \r\n        // 이벤트 리스너 등록 (타입 캐스팅 추가)\r\n        window.addEventListener('deviceStatusChange', handleDeviceStatusChange as EventListener);\r\n        \r\n        // 컴포넌트 언마운트 시 리스너 제거\r\n        return () => {\r\n            window.removeEventListener('deviceStatusChange', handleDeviceStatusChange as EventListener);\r\n        };\r\n    }, [selectedDevice]);\r\n\r\n    // 장비 목록 조회\r\n    const { mutate: fetchDialingDeviceList } = useApiForDialingDevice({\r\n        onSuccess: (data) => {\r\n            \r\n            // 응답 데이터 구조 확인 및 예외 처리\r\n            if (!data) {\r\n                setDialingDeviceList([]);\r\n                return;\r\n            }\r\n            \r\n            if (!data.result_data) {\r\n                setDialingDeviceList([]);\r\n                return;\r\n            }\r\n            \r\n            // result_data가 배열인지 확인\r\n            if (!Array.isArray(data.result_data)) {\r\n                setDialingDeviceList([]);\r\n                return;\r\n            }\r\n            \r\n            setDialingDeviceList(data.result_data);\r\n            \r\n            // 현재 저장된 장비를 찾아서 선택 상태로 설정\r\n            if (!equipmentNumber) return;\r\n            \r\n            const currentDeviceId = equipmentNumber;\r\n            const savedDevice = data.result_data.find(device => \r\n                device && device.device_id && device.device_id.toString() === currentDeviceId\r\n            );\r\n            \r\n            if (savedDevice) {\r\n                const deviceRow = {\r\n                    device_id: savedDevice.device_id.toString(),\r\n                    channel_count: savedDevice.channel_count,\r\n                    device_name: savedDevice.device_name,\r\n                    usage: getDeviceUsage(savedDevice.device_id)\r\n                };\r\n                setSelectedDevice(deviceRow);\r\n                setIsEditable(true);\r\n            }\r\n        },\r\n        onError: (error) => {      \r\n            if (error.message && error.message.split('||')[0] === '5') {\r\n                setAlertState({\r\n                    ...errorMessage,\r\n                    isOpen: true,\r\n                    message: 'API 연결 세션이 만료되었습니다. 로그인을 다시 하셔야합니다.',\r\n                    onConfirm: closeAlert,\r\n                    onCancel: () => {}\r\n                });\r\n                Cookies.remove('session_key');\r\n                setTimeout(() => {\r\n                    router.push('/login');\r\n                }, 1000);\r\n            } else {\r\n                showAlert(`시스템 모니터링 조회 실패: ${error.message || '알 수 없는 오류'}`);\r\n            }\r\n        }\r\n    });\r\n\r\n    // 채널 목록 조회\r\n    const { mutate: fetchChannelList } = useApiForChannelList({\r\n        onSuccess: (data) => {\r\n            setChannelList(data.result_data);\r\n        },onError: (data) => {      \r\n            if (data.message.split('||')[0] === '5') {\r\n              setAlertState({\r\n                ...errorMessage,\r\n                isOpen: true,\r\n                message: 'API 연결 세션이 만료되었습니다. 로그인을 다시 하셔야합니다.',\r\n                onConfirm: closeAlert,\r\n                onCancel: () => {}\r\n              });\r\n              Cookies.remove('session_key');\r\n              setTimeout(() => {\r\n                router.push('/login');\r\n              }, 1000);\r\n            }\r\n          }\r\n    });\r\n\r\n    // 채널 정보 수정 api 호출\r\n    const { mutate: fetchChannelEdit } = useApiForChannelEdit({\r\n        onSuccess: (data) => {\r\n            fetchChannelList();\r\n            fetchDialingDeviceList({\r\n                tenant_id_array: tenant_id === 0 ?  tenants.map(tenant => tenant.tenant_id) : [tenant_id]\r\n            });\r\n        },onError: (error) => {\r\n            if (error.message.split('||')[0] === '5') {\r\n                setAlertState({\r\n                  ...errorMessage,\r\n                  isOpen: true,\r\n                  message: 'API 연결 세션이 만료되었습니다. 로그인을 다시 하셔야합니다.',\r\n                  onConfirm: closeAlert,\r\n                  onCancel: () => {}\r\n                });\r\n                Cookies.remove('session_key');\r\n                setTimeout(() => {\r\n                  router.push('/login');\r\n                }, 1000);\r\n            } else {\r\n                showAlert('채널 정보 저장 중 오류가 발생했습니다: ' + error.message);\r\n            }\r\n        }\r\n    });\r\n    \r\n    // 장비 신규 등록 API\r\n    const { mutate: createDevice } = useApiForDialingDeviceCreate({\r\n        onSuccess: (data) => {\r\n            fetchChannelList();\r\n            fetchDialingDeviceList({\r\n                tenant_id_array: tenant_id === 0 ?  tenants.map(tenant => tenant.tenant_id) : [tenant_id]\r\n            });\r\n        },onError: (error) => {\r\n            if (error.message.split('||')[0] === '5') {\r\n                setAlertState({\r\n                  ...errorMessage,\r\n                  isOpen: true,\r\n                  message: 'API 연결 세션이 만료되었습니다. 로그인을 다시 하셔야합니다.',\r\n                  onConfirm: closeAlert,\r\n                  onCancel: () => {}\r\n                });\r\n                Cookies.remove('session_key');\r\n                setTimeout(() => {\r\n                  router.push('/login');\r\n                }, 1000);\r\n            } else {\r\n                showAlert('장비 정보 저장 중 오류가 발생했습니다: ' + error.message);\r\n            }\r\n        }\r\n    });\r\n\r\n    // 장비 수정 API\r\n    const { mutate: updateDevice } = useApiForDialingDeviceUpdate({\r\n        onSuccess: (data) => {\r\n            fetchChannelList();\r\n            fetchDialingDeviceList({\r\n                tenant_id_array: tenant_id === 0 ?  tenants.map(tenant => tenant.tenant_id) : [tenant_id]\r\n            });\r\n        },\r\n        onError: (error) => {\r\n            if (error.message.split('||')[0] === '5') {\r\n                setAlertState({\r\n                  ...errorMessage,\r\n                  isOpen: true,\r\n                  message: 'API 연결 세션이 만료되었습니다. 로그인을 다시 하셔야합니다.',\r\n                  onConfirm: closeAlert,\r\n                  onCancel: () => {}\r\n                });\r\n                Cookies.remove('session_key');\r\n                setTimeout(() => {\r\n                  router.push('/login');\r\n                }, 1000);\r\n            } else {\r\n                showAlert('장비 정보 저장 중 오류가 발생했습니다: ' + error.message);\r\n            }\r\n        }\r\n    });\r\n\r\n    // 장비 삭제 API\r\n    const { mutate: deleteDevice } = useApiForDialingDeviceDelete({\r\n        onSuccess: (data) => {\r\n            fetchChannelList();\r\n            fetchDialingDeviceList({\r\n                tenant_id_array: tenant_id === 0 ?  tenants.map(tenant => tenant.tenant_id) : [tenant_id]\r\n            });\r\n        },\r\n        onError: (error) => {\r\n            if (error.message.split('||')[0] === '5') {\r\n                setAlertState({\r\n                  ...errorMessage,\r\n                  isOpen: true,\r\n                  message: 'API 연결 세션이 만료되었습니다. 로그인을 다시 하셔야합니다.',\r\n                  onConfirm: closeAlert,\r\n                  onCancel: () => {}\r\n                });\r\n                Cookies.remove('session_key');\r\n                setTimeout(() => {\r\n                  router.push('/login');\r\n                }, 1000);\r\n            } else {\r\n                showAlert('장비 정보 삭제 중 오류가 발생했습니다: ' + error.message);\r\n            }\r\n        }\r\n    });\r\n\r\n    // 스케줄 조회\r\n    const { mutate: fetchSchedules } = useApiForSchedules({\r\n        onSuccess: (data) => {\r\n            // 스케줄 데이터 처리 및 저장\r\n            if (data && data.result_data && Array.isArray(data.result_data)) {\r\n                setScheduleData(data.result_data);\r\n            }\r\n        },\r\n        onError: (error) => {\r\n            if (error.message.split('||')[0] === '5') {\r\n                setAlertState({\r\n                    ...errorMessage,\r\n                    isOpen: true,\r\n                    message: 'API 연결 세션이 만료되었습니다. 로그인을 다시 하셔야합니다.',\r\n                    onConfirm: closeAlert,\r\n                    onCancel: () => {}\r\n                });\r\n                Cookies.remove('session_key');\r\n                setTimeout(() => {\r\n                    router.push('/login');\r\n                }, 1000);\r\n            } else {\r\n                showAlert('오류 발생: ' + error.message);\r\n            }\r\n        }\r\n    });\r\n\r\n    // 장비 목록 조회 시 테넌트 정보가 변경될 때마다 호출\r\n    useEffect(() => {\r\n        if (tenants && tenants.length > 0) {\r\n            fetchDialingDeviceList({\r\n                tenant_id_array: tenant_id === 0 ?  tenants.map(tenant => tenant.tenant_id) : [tenant_id]\r\n            });\r\n            fetchChannelList();\r\n            \r\n            fetchSchedules({\r\n                tenant_id_array: tenants.map(tenant => tenant.tenant_id)\r\n            });\r\n        } \r\n    }, [tenants]);\r\n\r\n    // 장비의 사용여부를 확인하는 함수 (실시간 상태 반영)\r\n    const getDeviceUsage = (deviceId: number): string => {\r\n        const deviceIdStr = deviceId.toString();\r\n        \r\n        // 실시간 상태가 있으면 확인\r\n        if (deviceIdStr in deviceStatuses) {\r\n            if (deviceStatuses[deviceIdStr] === \"run\") {\r\n                return \"사용\";\r\n            } else if (deviceStatuses[deviceIdStr] === \"down\") {\r\n                return \"미사용\";\r\n            } else {\r\n                return \"미사용\"; // null 또는 기타 값\r\n            }\r\n        }\r\n        \r\n        // 실시간 상태가 없으면 API에서 받은 초기 상태 확인\r\n        if (!dialingDeviceList || !Array.isArray(dialingDeviceList)) {\r\n            return \"미사용\";\r\n        }\r\n        \r\n        const device = dialingDeviceList.find(d => d && d.device_id && d.device_id.toString() === deviceIdStr);\r\n        if (device) {\r\n            if (device.device_state === \"run\") {\r\n                return \"사용\";\r\n            } else if (device.device_state === \"down\") {\r\n                return \"미사용\";\r\n            } else {\r\n                return \"미사용\"; // null 또는 기타 값\r\n            }\r\n        }\r\n        \r\n        // 그 외에는 미사용\r\n        return \"미사용\";\r\n    };\r\n\r\n    // 할당 발신모드에 따른 채널 모드 반환\r\n    const getChannelMode = (assignValue: number, assignKind: number): string => {\r\n        if (assignKind === 1) {\r\n            // 캠페인으로 할당일 때 기존 로직\r\n            switch(assignValue) {\r\n                case 2147483647:\r\n                    return \"모든 캠페인사용\";\r\n                case 0:\r\n                    return \"회선사용안함\";\r\n                default: {\r\n                    // 수정: campaigns가 비어있지 않은지 확인\r\n                    if (!campaigns || !Array.isArray(campaigns)) {\r\n                        return \"미할당\";\r\n                    }\r\n                    \r\n                    const campaign = campaigns.find(camp => camp && camp.campaign_id === assignValue);\r\n                    if (campaign) {\r\n                        return `ID[${campaign.campaign_id}] : ${campaign.campaign_name}`;\r\n                    }\r\n                    return \"미할당\";\r\n                }\r\n            }\r\n        } else if (assignKind === 2) {\r\n            // 발신모드로 할당일 때 새로운 로직\r\n            switch(assignValue) {\r\n                case 0:\r\n                    return \"회선사용안함\";\r\n                case 2147483647:\r\n                    return \"발신방법 모두사용\";\r\n                case 1:\r\n                    return \"Power Mode\";\r\n                case 2:\r\n                    return \"Progressive Mode\";\r\n                case 3:\r\n                    return \"Predictive Mode\";\r\n                case 5:\r\n                    return \"System Preview\";\r\n                default:\r\n                    return \"미할당\";\r\n            }\r\n        } else if (assignKind === 3) {\r\n            switch(assignValue) {\r\n                case 0:\r\n                    return \"회선사용안함\";\r\n                case 2147483647:\r\n                    return \"모든 그룹아이디 사용\";\r\n                default:\r\n                    return \"미할당\";\r\n            }\r\n        }\r\n        return \"미할당\";\r\n    };\r\n\r\n    // 장비 목록 데이터 구성\r\n    const equipmentRows = useMemo(() => {\r\n        // dialingDeviceList가 없을 경우 빈 배열 반환\r\n        if (!dialingDeviceList || !Array.isArray(dialingDeviceList) || dialingDeviceList.length === 0) {\r\n            return [];\r\n        }\r\n        \r\n        return dialingDeviceList.map(device => ({\r\n            device_id: device.device_id.toString(),\r\n            channel_count: device.channel_count,\r\n            device_name: device.device_name,\r\n            usage: getDeviceUsage(device.device_id)\r\n        }));\r\n    }, [dialingDeviceList, channelList, deviceStatuses]);\r\n\r\n    // 장비 목록 데이터 구성\r\n    const equipmentColumns = [\r\n        { key: \"device_id\", name: \"장비번호\" },\r\n        { key: \"channel_count\", name: \"채널수\" },\r\n        { key: \"device_name\", name: \"장비이름\" },\r\n        { key: \"usage\", name: \"사용여부\" }\r\n    ];\r\n\r\n    // 채널 목록 데이터 구성\r\n    const channelColumns = [\r\n        { key: \"channelNumber\", name: \"채널번호\" },\r\n        { key: \"channelName\", name: \"채널이름\" },\r\n        { key: \"mode\", name: \"할당 발신모드\" },\r\n    ];\r\n\r\n    // 장비 목록 클릭 핸들러\r\n    const handleEquipmentCellClick = ({ row }: CellClickArgs<EquipmentRow>) => {\r\n        if (row) {\r\n            setSelectedDevice(row);\r\n        }\r\n    };\r\n\r\n    // 채널 목록 클릭 핸들러\r\n    const handleChannelCellClick = ({ row }: CellClickArgs<ChannelRow>) => {\r\n        if (row) {\r\n            setSelectedChannel(row);\r\n        }\r\n    };\r\n\r\n    // 장비 상세내역의 신규 버튼 클릭 핸들러\r\n    const handleNewEquipment = () => {\r\n        // dialingDeviceList 안전 검사 추가\r\n        if (!dialingDeviceList || !Array.isArray(dialingDeviceList) || dialingDeviceList.length === 0) {\r\n            // 장비가 없는 경우 첫 번호는 1로 설정\r\n            setEquipmentNumber(\"1\");\r\n        } else {\r\n            const deviceIds = dialingDeviceList\r\n                .filter(device => device && device.device_id) // 유효한 device_id만 필터링\r\n                .map(device => device.device_id)\r\n                .sort((a, b) => a - b);\r\n                \r\n            const lastDeviceId = deviceIds.length > 0 ? deviceIds[deviceIds.length - 1] : 0;\r\n            const newDeviceId = (lastDeviceId + 1).toString();\r\n            setEquipmentNumber(newDeviceId);\r\n        }\r\n    \r\n        setSelectedDevice(null);\r\n        setEquipmentName(\"\");\r\n        setRefreshCycle(\"\");\r\n        setMonitoringType(\"periodic\");\r\n        setFilteredChannels([]);\r\n        setSelectedChannel(null);\r\n        setAllocationMode(\"\");\r\n        setAllocationOutboundMode(\"\");\r\n        setIsEditable(true);\r\n    };\r\n    \r\n\r\n    // 장비 저장 핸들러 (신규/수정 공통 검증)\r\n    const validateEquipmentData = () => {\r\n        if (!equipmentNumber || !equipmentName || !refreshCycle) {\r\n            showAlert('모든 필드를 입력해주세요.');\r\n            return false;\r\n        }\r\n\r\n        const channelCount = parseInt(refreshCycle);\r\n        if (isNaN(channelCount) || channelCount <= 0) {\r\n            showAlert('유효한 채널 수를 입력해주세요.');\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    // 장비 저장 핸들러\r\n    const handleSaveEquipment = () => {\r\n        if (!validateEquipmentData()) return;\r\n\r\n        const saveRequest = {\r\n            tenant_id: tenants[0].tenant_id,\r\n            device_id: parseInt(equipmentNumber),\r\n            device_name: equipmentName,\r\n            channel_count: parseInt(refreshCycle)\r\n        };\r\n\r\n        const handleApiResponse = (response: any) => {\r\n            if (response.result_code === -1) {\r\n                showAlert('[LICENSE FULL] CIOD 접속 라이선스를 초과하였습니다.\\n라이선스 문의 후 다시 시도하여 주십시오.');\r\n                return;\r\n            }\r\n            \r\n            if (selectedDevice) {\r\n                showAlert('장비 정보가 성공적으로 수정되었습니다.');\r\n            } else {\r\n                showAlert('새로운 장비 정보가 성공적으로 저장되었습니다.');\r\n            }\r\n        };\r\n\r\n        if (selectedDevice) {\r\n            updateDevice(saveRequest, {\r\n                onSuccess: handleApiResponse\r\n            });\r\n        } else {\r\n            createDevice(saveRequest, {\r\n                onSuccess: handleApiResponse\r\n            });\r\n        }\r\n    };\r\n\r\n    // 장비 삭제 핸들러\r\n    const handleDeleteEquipment = () => {\r\n        // 선택된 장비가 없을 경우 경고 알림\r\n        if (!selectedDevice) {\r\n            showAlert('삭제할 장비를 먼저 선택해주세요.');\r\n            return;\r\n        }\r\n\r\n        // 삭제 확인 알림\r\n        showConfirm(\r\n            `장비 [${selectedDevice.device_name}]를 삭제하시겠습니까? \\n\\n ※주의: 삭제시 데이터베이스에서 완전 삭제됩니다. \\n 다시 한번 확인해 주시고 삭제해 주세요.`, \r\n            () => {\r\n                // 확인 버튼 클릭 시 실행될 함수\r\n                deleteDevice({\r\n                    tenant_id: tenants[0].tenant_id,\r\n                    device_id: parseInt(selectedDevice.device_id || \"0\")\r\n                }, {\r\n                    onSuccess: (data) => {\r\n                        showAlert('장비 삭제 요청이 성공적으로 처리되었습니다.');\r\n                        setSelectedDevice(null);\r\n                        setEquipmentNumber(\"\");\r\n                        setEquipmentName(\"\");\r\n                        setRefreshCycle(\"\");\r\n                        setFilteredChannels([]);\r\n                        setSelectedChannel(null);\r\n                        setAllocationMode(\"\");\r\n                        setAllocationOutboundMode(\"\");\r\n                        setIsEditable(false);\r\n                    }\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    // 채널 수정 핸들러\r\n    const handleChannelEdit = () => {\r\n        if (!selectedDevice) return;\r\n        \r\n        // channelList 안전 검사 추가\r\n        if (!channelList || !Array.isArray(channelList)) {\r\n            showAlert('채널 정보를 불러올 수 없습니다.');\r\n            return;\r\n        }\r\n        \r\n        const deviceChannels = channelList.find(\r\n            channel => channel && channel.device_id && \r\n            channel.device_id.toString() === selectedDevice.device_id\r\n        );\r\n    \r\n        if (!deviceChannels) {\r\n            showAlert('이 장비에 대한 채널 정보가 없습니다. 시스템 관리자에게 문의하세요.');\r\n            return;\r\n        }\r\n    \r\n        let updatedChannelAssign: number[];\r\n    \r\n        // 할당모드가 변경되었는지 확인\r\n        if (deviceChannels.assign_kind.toString() !== allocationMode) {\r\n            // 할당모드가 변경된 경우 모든 채널을 0으로 설정\r\n            updatedChannelAssign = new Array(selectedDevice.channel_count).fill(0);\r\n            \r\n            // 현재 선택된 채널과 할당발신모드가 있다면 해당 채널만 선택된 값으로 업데이트\r\n            if (selectedChannel && allocationOutboundMode) {\r\n                updatedChannelAssign[selectedChannel.channelNumber] = parseInt(allocationOutboundMode);\r\n            }\r\n        } else {\r\n            // 할당모드가 변경되지 않은 경우 기존 로직 유지\r\n            updatedChannelAssign = [...deviceChannels.channel_assign];\r\n            if (selectedChannel) {\r\n                updatedChannelAssign[selectedChannel.channelNumber] = parseInt(allocationOutboundMode);\r\n            }\r\n        }\r\n    \r\n        const channelEditRequest = {\r\n            device_id: parseInt(selectedDevice.device_id),\r\n            assign_kind: parseInt(allocationMode),\r\n            channel_count: selectedDevice.channel_count,\r\n            channel_assign: updatedChannelAssign\r\n        };\r\n    \r\n        fetchChannelEdit(channelEditRequest);\r\n        showAlert('채널 정보가 성공적으로 수정되었습니다.');\r\n    };\r\n\r\n    // 할당 발신모드 옵션 생성\r\n    const getAllocationOutboundModeOptions = () => {\r\n        if (allocationMode === \"1\") {\r\n          // 캠페인으로 할당일 때 기본 옵션\r\n          const defaultOptions = [\r\n            { value: \"2147483647\", label: \"모든 캠페인사용\" },\r\n            { value: \"0\", label: \"회선사용안함\" },\r\n          ];\r\n          \r\n          // campaigns가 비어있는지 확인\r\n          if (!campaigns || !Array.isArray(campaigns) || campaigns.length === 0) {\r\n            return defaultOptions;\r\n          }\r\n          \r\n          // 현재 날짜\r\n          const currentDate = new Date();\r\n          const dayScope = environmentData?.showChannelCampaignDayScop || 0; // 설정 값이 없으면 기본값 0\r\n          \r\n          // dayScope가 0이면 모든 캠페인 표시\r\n          if (dayScope === 0) {\r\n            const allCampaignOptions = campaigns.map(campaign => ({\r\n              value: campaign.campaign_id.toString(),\r\n              label: `ID[${campaign.campaign_id}] : ${campaign.campaign_name}`\r\n            }));\r\n            return [...defaultOptions, ...allCampaignOptions];\r\n          }\r\n          \r\n          // scheduleData가 없으면 모든 캠페인 표시\r\n          if (!scheduleData || !Array.isArray(scheduleData) || scheduleData.length === 0) {\r\n            const allCampaignOptions = campaigns.map(campaign => ({\r\n              value: campaign.campaign_id.toString(),\r\n              label: `ID[${campaign.campaign_id}] : ${campaign.campaign_name}`\r\n            }));\r\n            return [...defaultOptions, ...allCampaignOptions];\r\n          }\r\n          \r\n          // 캠페인 ID를 key로, end_date를 value로 맵 생성\r\n          const campaignEndDateMap = new Map();\r\n          \r\n          // 스케줄 데이터에서 각 캠페인의 end_date 추출\r\n          scheduleData.forEach(schedule => {\r\n            if (schedule && schedule.campaign_id !== undefined && schedule.end_date) {\r\n              const campaignId = typeof schedule.campaign_id === 'number' ? \r\n                schedule.campaign_id : parseInt(schedule.campaign_id);\r\n              \r\n              // YYYYMMDD 형식의 end_date를 Date 객체로 변환\r\n              let endDateStr = schedule.end_date;\r\n              \r\n              // YYYYMMDD 형식을 YYYY-MM-DD 형식으로 변환\r\n              if (endDateStr && endDateStr.length === 8) {\r\n                endDateStr = `${endDateStr.substring(0, 4)}-${endDateStr.substring(4, 6)}-${endDateStr.substring(6, 8)}`;\r\n              }\r\n              \r\n              campaignEndDateMap.set(campaignId, endDateStr);\r\n            }\r\n          });\r\n          \r\n          // 필터링: end_date가 현재 날짜 기준으로 showChannelCampaignDayScop 일 이내인 캠페인만 표시\r\n          const filteredCampaigns = campaigns.filter(campaign => {\r\n            // 캠페인 객체가 유효한지 확인\r\n            if (!campaign || campaign.campaign_id === undefined) {\r\n              return false;\r\n            }\r\n            \r\n            // 캠페인에 대한 end_date 가져오기\r\n            const endDateStr = campaignEndDateMap.get(campaign.campaign_id);\r\n            \r\n            // end_date가 없으면 포함 (이 부분이 수정됨)\r\n            if (!endDateStr) {\r\n              return true;\r\n            }\r\n            \r\n            // 날짜 문자열을 Date 객체로 변환\r\n            const endDate = new Date(endDateStr);\r\n            \r\n            // 유효한 날짜인지 확인\r\n            if (isNaN(endDate.getTime())) {\r\n              return true; // 날짜가 유효하지 않아도 포함 (이 부분도 수정됨)\r\n            }\r\n            \r\n            // 현재 날짜와의 차이 계산 (밀리초 단위)\r\n            const timeDiff = endDate.getTime() - currentDate.getTime();\r\n            \r\n            // 일 단위로 변환 (미래 날짜면 양수, 과거 날짜면 음수)\r\n            const dayDiff = timeDiff / (1000 * 60 * 60 * 24);\r\n            \r\n            // dayScope 이내인지 확인\r\n            return dayDiff >= -dayScope;\r\n          });\r\n          \r\n          // 필터링된 캠페인을 드롭다운 옵션으로 변환\r\n          const campaignOptions = filteredCampaigns.map(campaign => ({\r\n            value: campaign.campaign_id.toString(),\r\n            label: `ID[${campaign.campaign_id}] : ${campaign.campaign_name}`\r\n          }));\r\n      \r\n          return [...defaultOptions, ...campaignOptions];\r\n        } else if (allocationMode === \"2\") {\r\n            // 발신모드로 할당일 때 옵션 (변경 없음)\r\n            return [\r\n                { value: \"0\", label: \"회선사용안함\" },\r\n                { value: \"2147483647\", label: \"발신방법 모두사용\" },\r\n                { value: \"1\", label: \"Power Mode\" },\r\n                { value: \"2\", label: \"Progressive Mode\" },\r\n                { value: \"3\", label: \"Predictive Mode\" },\r\n                { value: \"5\", label: \"System Preview\" }\r\n            ];\r\n        } else if (allocationMode === \"3\") {\r\n            // 채널그룹으로 할당일 때 옵션 (변경 없음)\r\n            return [\r\n                { value: \"0\", label: \"회선사용안함\" },\r\n                { value: \"2147483647\", label: \"모든 그룹아이디 사용\" }\r\n            ];\r\n        }\r\n        return [];\r\n    };\r\n    \r\n\r\n    // 장비 목록용 rowClass 함수\r\n    const getEquipmentRowClass = (row: EquipmentRow) => {\r\n        return selectedDevice?.device_id === row.device_id ? 'bg-[#FFFAEE]' : '';\r\n    };\r\n    \r\n    // 채널 목록용 rowClass 함수\r\n    const getChannelRowClass = (row: ChannelRow) => {\r\n        return selectedChannel?.channelNumber === row.channelNumber ? 'bg-[#FFFAEE]' : '';\r\n    };\r\n\r\n    // 장비 목록에서 선택된 장비가 변경될 때마다 채널 목록 업데이트\r\n    useEffect(() => {\r\n        if (selectedDevice) {\r\n            setEquipmentNumber(selectedDevice.device_id);\r\n            setEquipmentName(selectedDevice.device_name);\r\n            setRefreshCycle(selectedDevice.channel_count.toString());\r\n            setMonitoringType(selectedDevice.usage === \"사용\" ? \"oneTime\" : \"periodic\");\r\n            setIsEditable(true);\r\n            \r\n            // 수정: channelList가 비어있지 않은지 확인\r\n            if (channelList && Array.isArray(channelList)) {\r\n                const selectedDeviceChannels = channelList.find(\r\n                    channel => channel && channel.device_id && channel.device_id.toString() === selectedDevice.device_id\r\n                );\r\n    \r\n                if (selectedDeviceChannels) {\r\n                    const channels: ChannelRow[] = selectedDeviceChannels.channel_assign\r\n                        .map((assignValue, index) => ({\r\n                            channelNumber: index,\r\n                            channelName: `Channel No ${index}`,\r\n                            mode: getChannelMode(assignValue, selectedDeviceChannels.assign_kind),\r\n                            assignValue: assignValue\r\n                        }));\r\n    \r\n                    setFilteredChannels(channels);\r\n                    setAllocationMode(selectedDeviceChannels.assign_kind.toString());\r\n                    \r\n                    // 이전에 선택된 채널 번호 확인\r\n                    const prevChannelNumber = selectedChannel?.channelNumber;\r\n                    if (prevChannelNumber !== undefined) {\r\n                        const existingChannel = channels.find(c => c.channelNumber === prevChannelNumber);\r\n                        if (existingChannel) {\r\n                            setSelectedChannel(existingChannel);\r\n                            setAllocationOutboundMode(existingChannel.assignValue.toString());\r\n                            return;\r\n                        }\r\n                    }\r\n    \r\n                    // 첫 번째 채널 선택\r\n                    if (channels.length > 0) {\r\n                        setSelectedChannel(channels[0]);\r\n                        setAllocationOutboundMode(channels[0].assignValue.toString());\r\n                    } else {\r\n                        setSelectedChannel(null);\r\n                        setAllocationOutboundMode(\"\");\r\n                    }\r\n                } else {\r\n                    setFilteredChannels([]);\r\n                    setSelectedChannel(null);\r\n                    setAllocationMode(\"\");\r\n                    setAllocationOutboundMode(\"\");\r\n                }\r\n            } else {\r\n                setFilteredChannels([]);\r\n                setSelectedChannel(null);\r\n                setAllocationMode(\"\");\r\n                setAllocationOutboundMode(\"\");\r\n            }\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedDevice, channelList]);\r\n\r\n    // 채널 선택 시 상세 정보 업데이트\r\n    useEffect(() => {\r\n        // console.log(\"campaigns\", campaigns);\r\n        if (selectedChannel) {\r\n            setAllocationOutboundMode(selectedChannel.assignValue.toString());\r\n        }\r\n    }, [selectedChannel]);\r\n\r\n    return (\r\n        <div className=\"space-y-5\">\r\n            <div className=\"flex gap-5\">\r\n                <div className=\"w-1/2 flex-1 flex flex-col gap-5\">\r\n                    {/* 장비 목록 섹션 */}\r\n                    <div className=\"flex flex-col gap-2\">\r\n                        <TitleWrap title=\"장비 목록\" totalCount={dialingDeviceList?.length || 0} />\r\n                        <div className=\"grid-custom-wrap h-[300px]\">\r\n                            <DataGrid<EquipmentRow>\r\n                                columns={equipmentColumns}\r\n                                rows={equipmentRows}\r\n                                className=\"grid-custom cursor-pointer\"\r\n                                rowKeyGetter={(row) => row.device_id}\r\n                                onCellClick={handleEquipmentCellClick}\r\n                                selectedRows={selectedDevice ? new Set([selectedDevice.device_id]) : new Set()}\r\n                                rowHeight={30}\r\n                                headerRowHeight={30}\r\n                                rowClass={getEquipmentRowClass}\r\n                                enableVirtualization={false}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {/* 장비 상세내역 섹션 */}\r\n                    <div className=\"flex flex-col gap-2\">\r\n                        <TitleWrap\r\n                            title=\"장비 상세내역\"\r\n                            buttons={[\r\n                                { \r\n                                    label: \"신규\", \r\n                                    onClick: handleNewEquipment\r\n                                },\r\n                                { \r\n                                    label: \"저장\", \r\n                                    onClick: handleSaveEquipment\r\n                                },{ \r\n                                    label: \"삭제\", \r\n                                    onClick: handleDeleteEquipment\r\n                                },\r\n                            ]}\r\n                        />\r\n                        <div className=\"flex flex-col gap-2\">\r\n                            <div className=\"flex items-center gap-1\">\r\n                                <Label className=\"w-[5.6rem] min-w-[5.6rem]\">장비번호</Label>\r\n                                <CustomInput \r\n                                    type=\"text\"\r\n                                    value={equipmentNumber}\r\n                                    onChange={(e) => setEquipmentNumber(e.target.value)}\r\n                                    disabled={true}\r\n                                    className=\"w-full\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"flex items-center gap-1\">\r\n                                <Label className=\"w-[5.6rem] min-w-[5.6rem]\">장비이름</Label>\r\n                                <CustomInput \r\n                                    type=\"text\"\r\n                                    value={equipmentName}\r\n                                    onChange={(e) => setEquipmentName(e.target.value)}\r\n                                    disabled={!isEditable}\r\n                                    className=\"w-full\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"flex items-center gap-1\">\r\n                                <Label className=\"w-[5.6rem] min-w-[5.6rem]\">채널수</Label>\r\n                                <CustomInput \r\n                                    type=\"number\" \r\n                                    value={refreshCycle}\r\n                                    onChange={(e) => setRefreshCycle(e.target.value)}\r\n                                    disabled={!isEditable || selectedDevice !== null}\r\n                                    className=\"w-full\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"w-1/2 flex-1 flex flex-col gap-5\">\r\n                    {/* 채널목록 섹션 */}\r\n                    <div className=\"flex flex-col gap-2\">\r\n                        <TitleWrap title=\"채널목록\" totalCount={filteredChannels?.length || 0} />\r\n                        <div className=\"grid-custom-wrap h-[300px]\">\r\n                            <DataGrid<ChannelRow>\r\n                                columns={channelColumns}\r\n                                rows={filteredChannels}\r\n                                className=\"grid-custom cursor-pointer\"\r\n                                onCellClick={handleChannelCellClick}\r\n                                selectedRows={selectedChannel ? new Set([selectedChannel.channelNumber.toString()]) : new Set()}\r\n                                rowKeyGetter={(row) => row.channelNumber.toString()}\r\n                                rowHeight={30}\r\n                                headerRowHeight={30}\r\n                                rowClass={getChannelRowClass}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    {/* 채널 상세내역 섹션 */}\r\n                    <div className=\"flex flex-col gap-2\">\r\n                        <TitleWrap\r\n                            title=\"채널 상세내역\"\r\n                            buttons={[\r\n                                { \r\n                                    label: \"적용\", \r\n                                    onClick: handleChannelEdit,\r\n                                    disabled: !selectedDevice || !selectedChannel \r\n                                },\r\n                            ]}\r\n                        />\r\n                        <div className=\"flex flex-col gap-2\">\r\n                            <div className=\"flex items-center gap-1\">\r\n                                <Label className=\"w-[5.6rem] min-w-[5.6rem]\">할당모드</Label>\r\n                                <Select \r\n                                    value={allocationMode} \r\n                                    onValueChange={setAllocationMode}\r\n                                    disabled={!selectedDevice}\r\n                                >\r\n                                    <SelectTrigger className=\"w-full\">\r\n                                        <SelectValue placeholder=\"할당모드 선택\" />\r\n                                    </SelectTrigger>\r\n                                    <SelectContent>\r\n                                        <SelectItem value=\"1\">1.캠페인으로할당</SelectItem>\r\n                                        <SelectItem value=\"2\">2.발신모드로할당</SelectItem>\r\n                                        <SelectItem value=\"3\">3.채널그룹으로할당</SelectItem>\r\n                                    </SelectContent>\r\n                                </Select>\r\n                            </div>\r\n                            <div className=\"flex items-center gap-1\">\r\n                                <Label className=\"w-[5.6rem] min-w-[5.6rem]\">할당발신모드</Label>\r\n                                <Select \r\n                                    value={allocationOutboundMode} \r\n                                    onValueChange={setAllocationOutboundMode}\r\n                                    disabled={!selectedChannel}\r\n                                >\r\n                                    <SelectTrigger className=\"w-full\">\r\n                                        <SelectValue placeholder=\"할당발신모드 선택\" />\r\n                                    </SelectTrigger>\r\n                                    <SelectContent style={{ maxHeight: '300px', overflowY: 'auto' }}>\r\n                                        {getAllocationOutboundModeOptions().map(option => (\r\n                                            <SelectItem key={option.value} value={option.value}>\r\n                                                {option.label}\r\n                                            </SelectItem>\r\n                                        ))}\r\n                                    </SelectContent>\r\n                                </Select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <CustomAlert\r\n                isOpen={alertState.isOpen}\r\n                message={alertState.message}\r\n                title={alertState.title}\r\n                type={alertState.type}\r\n                onClose={alertState.onConfirm}\r\n                onCancle={alertState.onCancel}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SystemPreferences;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2521, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2527, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/app/main/comp/OutboundCallProgressPanel/index.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useMemo, useEffect } from 'react';\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/shared/CustomSelect\";\r\nimport { Table, TableRow, TableHeader, TableCell } from \"@/components/ui/table-custom\";\r\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\r\nimport DataGrid, { Column as DataGridColumn } from 'react-data-grid';\r\nimport { useApiForCallProgressStatus } from '@/features/monitoring/hooks/useApiForCallProgressStatus';\r\nimport { useMainStore, useCampainManagerStore } from '@/store';\r\nimport { useApiForCampaignSkill } from '@/features/campaignManager/hooks/useApiForCampaignSkill';\r\nimport { useApiForPhoneDescription } from '@/features/campaignManager/hooks/useApiForPhoneDescription';\r\nimport { useEnvironmentStore } from '@/store/environmentStore';\r\n\r\n// 타입 정의\r\ninterface Stats {\r\n  waiting: number;\r\n  firstCall: number;\r\n  retryCall: number;\r\n  distributing: number;\r\n}\r\n\r\ninterface BarData {\r\n  name: string;\r\n  value: number;\r\n}\r\n\r\ninterface GridData {\r\n  skillId: string;\r\n  campaignId: string;\r\n  campaignName: string;\r\n  priority: string;\r\n  custKey: string;\r\n  custName: string;\r\n  phoneType: string;\r\n  phone1: string;\r\n  attempt1: string;\r\n  phone2: string;\r\n  attempt2: string;\r\n  phone3: string;\r\n  attempt3: string;\r\n  phone4: string;\r\n  attempt4: string;\r\n  phone5: string;\r\n  attempt5: string;\r\n  result: string;\r\n}\r\n\r\ninterface CampaignData {\r\n  stats: Stats;\r\n  barData: BarData[];\r\n  gridData: GridData[];\r\n}\r\n\r\ninterface CampaignDataMap {\r\n  [key: string]: CampaignData;\r\n}\r\n\r\ninterface Column extends DataGridColumn<GridData> {\r\n  key: keyof GridData;\r\n  name: string;\r\n}\r\n\r\n// 발신진행상태 목록 데이터 타입\r\ninterface SummaryCallProgressStatusDataType {\r\n  campaignId: number;                 //캠페인ID\r\n  campaignName: string;               //캠페인 이름\r\n  event: number;                      //채널에 발생한 마지막 이벤트(0(NONE), 1(ON_HOOK), 2(OFF_HOOK), 3(PRESS_DIGIT), 4(NETWORK_DELAY), 5(INTERRUPT_CALL), 6(RINGBACK), 7(CONNECT), 8(DETECT_BEGIN), 9(DETECT_END), 10(ROUTE))\r\n  dialSequence: number;               //발신 일련 번호\r\n  dialResult: number;                 //발신 결과 코드(0(NONE), 1(MAN), 2(BUSY), 3(NO_ANSWER), 4(FAX_MODEM), 5(ANSWERING_MACHINE), 6(ETC_FAIL), 7(INVALID_NUMBER), 8(DIALING), 9(LINE_STOP), 10(CUSTOMER_ONHOOK), 11(SILENCE), 12(DIALTONE_SILENCE), 13(BLACK_LIST), 14(ROUTE_FAIL), 15(BEFORE_BLACKLIST), 2501(MACHINE_BUSY), 2502(MACHINE_NOANSWER), 2503(MACHINE_POWEROFF), 2504(MACHINE_ROAMING), 2505(MACHINE_MISSING_NUMBER), 2506(MACHINE_ETC))\r\n  customerName: string;               //고객 이름\r\n  customerKey: string;                //고객 키\r\n  phoneNumber: string[];              //발신 번호\r\n  phoneDialCount: number[];           //발신 번호 별 시도 회수\r\n  dialedPhone: number;                //발신 번호 인덱스\r\n  reuseCount: number;                 //캠페인 재사용 회수 : 1(최초발신), 2~(재발신)\r\n  retryCall: number;                  //재시도 여부 : 0(재시도 없음), 1(재시도 있음)\r\n  waiting: number;                    //대기상담사\r\n  firstCall: number;                  //최초발신\r\n  _retryCall: number;                 //재시도발신\r\n  distributing: number;               //분배 대기\r\n  result: string;                     //다이얼 결과\r\n  phoneType: string;                  //발신번호 구분\r\n}\r\n\r\ninterface OutboundCallProgressPanelProps {\r\n  externalCampaignId?: string;\r\n  onCampaignChange?: (campaignId: string) => void;\r\n  onDataUpdate?: (data: CampaignData) => void;\r\n}\r\n\r\nconst OutboundCallProgressPanel: React.FC<OutboundCallProgressPanelProps> = ({\r\n  externalCampaignId,\r\n  onCampaignChange,\r\n  onDataUpdate\r\n}) => {\r\n  const [internalSelectedCampaign, setInternalSelectedCampaign] = useState<string>('all');\r\n  const { campaigns } = useMainStore();\r\n  const { campaignSkills, setCampaignSkills,phoneDescriptions, setPhoneDescriptions } = useCampainManagerStore();\r\n  const [ _campaignData, _setCampaignData ] = useState<CampaignDataMap>({});\r\n  const [ waitingCounselorCnt, setWaitingCounselorCnt ] = useState<number>(0);\r\n  const { statisticsUpdateCycle } = useEnvironmentStore();\r\n  const intervalRef = React.useRef<NodeJS.Timeout | null>(null);\r\n\r\n  // 실제 사용할 캠페인 ID 결정\r\n  const selectedCampaign = externalCampaignId ?? internalSelectedCampaign;\r\n\r\n\r\n\r\n  // 빈 데이터 정의\r\n  const emptyData: CampaignData = {\r\n    stats: {\r\n      waiting: 0,\r\n      firstCall: 0,\r\n      retryCall: 0,\r\n      distributing: 0\r\n    },\r\n    barData: [\r\n      { name: '최초 발신용', value: 0 },\r\n      { name: '재시도 발신용', value: 0 },\r\n      { name: '분배 대기', value: 0 }\r\n    ],\r\n    gridData: []\r\n  };\r\n\r\n  // 캠페인별 데이터\r\n  // const campaignData: CampaignDataMap = {\r\n  //   test1: {\r\n  //     stats: {\r\n  //       waiting: 2,\r\n  //       firstCall: 3,\r\n  //       retryCall: 2,\r\n  //       distributing: 1\r\n  //     },\r\n  //     barData: [\r\n  //       { name: '최초 발신용', value: 80 },\r\n  //       { name: '재시도 발신용', value: 50 },\r\n  //       { name: '분배 대기', value: 30 }\r\n  //     ],\r\n  //     gridData: [\r\n  //       {\r\n  //         skillId: '1246',\r\n  //         campaignId: '0125',\r\n  //         campaignName: 'test1캠페인',\r\n  //         priority: '2',\r\n  //         custKey: '241545',\r\n  //         custName: '김철수',\r\n  //         phoneType: '일반전화',\r\n  //         phone1: '01087654321',\r\n  //         attempt1: '1',\r\n  //         phone2: '01087654321',\r\n  //         attempt2: '1',\r\n  //         phone3: '01087654321',\r\n  //         attempt3: '2',\r\n  //         phone4: '01087654321',\r\n  //         attempt4: '2',\r\n  //         phone5: '01087654321',\r\n  //         attempt5: '2',\r\n  //         result: '실패'\r\n  //       }\r\n  //     ]\r\n  //   },\r\n  //   test2: {\r\n  //     stats: {\r\n  //       waiting: 1,\r\n  //       firstCall: 2,\r\n  //       retryCall: 1,\r\n  //       distributing: 0\r\n  //     },\r\n  //     barData: [\r\n  //       { name: '최초 발신용', value: 60 },\r\n  //       { name: '재시도 발신용', value: 40 },\r\n  //       { name: '분배 대기', value: 20 }\r\n  //     ],\r\n  //     gridData: [\r\n  //       {\r\n  //         skillId: '1247',\r\n  //         campaignId: '0126',\r\n  //         campaignName: 'test2캠페인',\r\n  //         priority: '3',\r\n  //         custKey: '241546',\r\n  //         custName: '이영희',\r\n  //         phoneType: '회사전화',\r\n  //         phone1: '01098765432',\r\n  //         attempt1: '2',\r\n  //         phone2: '01098765432',\r\n  //         attempt2: '1',\r\n  //         phone3: '01098765432',\r\n  //         attempt3: '1',\r\n  //         phone4: '01087654321',\r\n  //         attempt4: '2',\r\n  //         phone5: '01087654321',\r\n  //         attempt5: '2',\r\n  //         result: '진행중'\r\n  //       }\r\n  //     ]\r\n  //   }\r\n  // };\r\n\r\n  // 전체 데이터 계산을 위한 useMemo 훅 사용\r\n  const allCampaignData = useMemo<CampaignData>(() => {\r\n    if (Object.keys(_campaignData).length === 0) return emptyData;\r\n    // 모든 캠페인의 통계 합계 계산\r\n    const totalStats = Object.values(_campaignData).reduce((acc, campaign) => ({\r\n      waiting: acc.waiting + campaign.stats.waiting,\r\n      firstCall: acc.firstCall + campaign.stats.firstCall,\r\n      retryCall: acc.retryCall + campaign.stats.retryCall,\r\n      distributing: acc.distributing + campaign.stats.distributing\r\n    }), { waiting: 0, firstCall: 0, retryCall: 0, distributing: 0 });\r\n\r\n    // 모든 캠페인의 바 차트 데이터 합계 계산\r\n    const totalBarData = [\r\n      {\r\n        name: '최초 발신용',\r\n        value: Object.values(_campaignData).reduce((sum, campaign) =>\r\n          sum + (campaign.barData.find(item => item.name === '최초 발신용')?.value ?? 0), 0\r\n        )\r\n      },\r\n      {\r\n        name: '재시도 발신용',\r\n        value: Object.values(_campaignData).reduce((sum, campaign) =>\r\n          sum + (campaign.barData.find(item => item.name === '재시도 발신용')?.value ?? 0), 0\r\n        )\r\n      },\r\n      {\r\n        name: '분배 대기',\r\n        value: Object.values(_campaignData).reduce((sum, campaign) =>\r\n          sum + (campaign.barData.find(item => item.name === '분배 대기')?.value ?? 0), 0\r\n        )\r\n      }\r\n    ];\r\n\r\n    // 모든 캠페인의 그리드 데이터 통합\r\n    const totalGridData = Object.values(_campaignData).flatMap(campaign => campaign.gridData);\r\n\r\n    return {\r\n      stats: totalStats,\r\n      barData: totalBarData,\r\n      gridData: totalGridData\r\n    };\r\n  }, [_campaignData]);\r\n\r\n // 현재 선택된 캠페인의 데이터 (안전하게 처리)\r\n const currentData = useMemo(() => {\r\n  if (selectedCampaign === 'all') return allCampaignData;\r\n  if (!selectedCampaign) return emptyData;\r\n  return _campaignData[selectedCampaign] || emptyData;\r\n}, [selectedCampaign, allCampaignData, _campaignData]);\r\n\r\n  // 데이터 업데이트 시 부모 컴포넌트에 알림\r\n  useEffect(() => {\r\n    if (onDataUpdate) {\r\n      onDataUpdate(currentData);\r\n    }\r\n  }, [currentData, onDataUpdate]);\r\n\r\n  // 그리드 컬럼 정의\r\n  const columns: Column[] = [\r\n    { key: 'skillId', name: '스킬아이디' },\r\n    { key: 'campaignId', name: '캠페인아이디' },\r\n    { key: 'campaignName', name: '캠페인이름' },\r\n    { key: 'priority', name: '다이얼 순번' },\r\n    { key: 'custKey', name: '고객키' },\r\n    { key: 'custName', name: '고객이름' },\r\n    { key: 'phoneType', name: '발신번호 구분' },\r\n    { key: 'phone1', name: '전화번호1' },\r\n    { key: 'attempt1', name: '시도횟수' },\r\n    { key: 'phone2', name: '전화번호2' },\r\n    { key: 'attempt2', name: '시도횟수' },\r\n    { key: 'phone3', name: '전화번호3' },\r\n    { key: 'attempt3', name: '시도횟수' },\r\n    { key: 'phone4', name: '전화번호3' },\r\n    { key: 'attempt4', name: '시도횟수' },\r\n    { key: 'phone5', name: '전화번호3' },\r\n    { key: 'attempt5', name: '시도횟수' },\r\n    { key: 'result', name: '다이얼 결과' }\r\n  ];\r\n\r\n  // 캠페인 변경 핸들러\r\n  const handleCampaignChange = (value: string): void => {\r\n    if (onCampaignChange) {\r\n      onCampaignChange(value);\r\n    } else {\r\n      setInternalSelectedCampaign(value);\r\n    }\r\n    if (intervalRef.current) {\r\n      clearInterval(intervalRef.current);\r\n    }\r\n    if( value !== 'all'){\r\n      const campaignInfo = campaigns.find(data => data.campaign_id === Number(value));\r\n      const tenantId = campaignInfo?.tenant_id + '' || '1';\r\n      const campaignId = campaignInfo?.campaign_id + '' || '0';\r\n      fetchCallProgressStatus({ tenantId, campaignId });\r\n      if( statisticsUpdateCycle > 0 ){  \r\n        intervalRef.current = setInterval(() => {\r\n          fetchCallProgressStatus({ tenantId, campaignId });\r\n        }, statisticsUpdateCycle * 1000);     \r\n      }\r\n    }else{\r\n      fetchCallProgressStatus({\r\n        tenantId: '1',\r\n        campaignId: '0'\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Select 컴포넌트 렌더링 여부 결정\r\n  const [ shouldRenderSelect , setShouldRenderSelect ] = useState<boolean>(false);\r\n\r\n  // 발신 진행 정보 api 호출\r\n  const { mutate: fetchCallProgressStatus } = useApiForCallProgressStatus({\r\n    onSuccess: (data) => {  \r\n      const tempList = data.sendingProgressStatusList;\r\n      setWaitingCounselorCnt( data.waitingCounselorCnt );\r\n      if( tempList.length > 0){\r\n        const sumCallProgressStatus:SummaryCallProgressStatusDataType[] = [];\r\n        for( let i=0;i<tempList.length;i++){\r\n          const index = sumCallProgressStatus.findIndex((data) => data.campaignId === tempList[i].campaignId);\r\n          if( index === -1){\r\n            sumCallProgressStatus.push({...tempList[i],\r\n              waiting: 0,  //대기상담사\r\n              firstCall: tempList[i].reuseCount === 1 ? 1 : 0, //최초발신\r\n              _retryCall: tempList[i].reuseCount === 2 ? 1 : 0, //재시도발신\r\n              distributing: tempList[i].waitingLstCnt, //분배 대기\r\n              result: campaigns.find((campaign) => campaign.campaign_id === tempList[i].campaignId)?.end_flag === 1 ? '진행중' : '완료',\r\n              phoneType: (() => {\r\n                const campaign = campaigns.find((campaign) => campaign.campaign_id === tempList[i].campaignId);\r\n                const phoneDescription = phoneDescriptions.find((phoneDescription) => phoneDescription.description_id === campaign?.dial_phone_id);\r\n                return phoneDescription ? (phoneDescription as any)[`phone${tempList[i].dialedPhone}`] || '' : '';\r\n              })()\r\n            });\r\n          }else{\r\n            // sumCallProgressStatus[index].waiting += tempList[i].waiting;\r\n            sumCallProgressStatus[index].firstCall += tempList[i].reuseCount === 1 ? 1 : 0;\r\n            sumCallProgressStatus[index].retryCall += tempList[i].reuseCount === 2 ? 1 : 0;\r\n            sumCallProgressStatus[index].distributing += tempList[i].waitingLstCnt;\r\n          }\r\n        }\r\n\r\n        const tempCampaignData: CampaignDataMap = {};\r\n        for( let i=0;i<sumCallProgressStatus.length;i++){\r\n          const _tempCampaignData: CampaignDataMap = {\r\n            [sumCallProgressStatus[i].campaignId]: {\r\n              stats: {\r\n                waiting: sumCallProgressStatus[i].waiting,    //대기상담사\r\n                firstCall: sumCallProgressStatus[i].firstCall,//최초발신\r\n                retryCall: sumCallProgressStatus[i].retryCall,//재시도발신\r\n                distributing: sumCallProgressStatus[i].distributing//분배 대기\r\n              },\r\n              barData: [\r\n                { name: '최초 발신용', value: sumCallProgressStatus[i].firstCall },  //최초 발신용\r\n                { name: '재시도 발신용', value: sumCallProgressStatus[i].retryCall },  //재시도 발신용\r\n                { name: '분배 대기', value: sumCallProgressStatus[i].waiting - (sumCallProgressStatus[i].firstCall+sumCallProgressStatus[i].retryCall) }   //분배 대기\r\n              ],\r\n              gridData: [\r\n                {\r\n                  skillId: campaignSkills.filter((skill) => skill.campaign_id === sumCallProgressStatus[i].campaignId)\r\n                  .map((data) => data.skill_id)\r\n                  .join(','),\r\n                  campaignId: sumCallProgressStatus[i].campaignId+'',\r\n                  campaignName: sumCallProgressStatus[i].campaignName,\r\n                  priority: sumCallProgressStatus[i].dialSequence+'', //다이얼 순번\r\n                  custKey: sumCallProgressStatus[i].customerKey,\r\n                  custName: sumCallProgressStatus[i].customerName,\r\n                  phoneType: sumCallProgressStatus[i].phoneType,  \r\n                  phone1: sumCallProgressStatus[i].phoneNumber[0]+'',\r\n                  attempt1: sumCallProgressStatus[i].phoneDialCount[0]+'',\r\n                  phone2: sumCallProgressStatus[i].phoneNumber[1]+'',\r\n                  attempt2: sumCallProgressStatus[i].phoneDialCount[1]+'',\r\n                  phone3: sumCallProgressStatus[i].phoneNumber[2]+'',\r\n                  attempt3: sumCallProgressStatus[i].phoneDialCount[2]+'',\r\n                  phone4: sumCallProgressStatus[i].phoneNumber[3]+'',\r\n                  attempt4: sumCallProgressStatus[i].phoneDialCount[3]+'',\r\n                  phone5: sumCallProgressStatus[i].phoneNumber[4]+'',\r\n                  attempt5: sumCallProgressStatus[i].phoneDialCount[4]+'',\r\n                  result: sumCallProgressStatus[i].result   \r\n                }\r\n              ]\r\n            }\r\n          };\r\n          Object.assign(tempCampaignData, _tempCampaignData);\r\n        }\r\n        _setCampaignData(tempCampaignData);\r\n      }else{\r\n        _setCampaignData({\r\n              ' ': {\r\n                stats: {\r\n                  waiting: data.waitingCounselorCnt,\r\n                  firstCall: 0,\r\n                  retryCall: 0,\r\n                  distributing: 0\r\n                },\r\n                barData: [\r\n                  { name: '최초 발신용', value: 0 },\r\n                  { name: '재시도 발신용', value: 0 },\r\n                  { name: '분배 대기', value: 0 }\r\n                ],\r\n                gridData: [\r\n                ]\r\n              }\r\n        });\r\n      }\r\n      // setDataList(tempList);\r\n      // setSelectedCall(tempList[0]);\r\n      console.log(\"API 응답 데이터:\", tempList); \r\n    } \r\n  });\r\n  \r\n  // 전화번호설명 템플릿 조회\r\n  const { mutate: fetchPhoneDescriptions } = useApiForPhoneDescription({\r\n    onSuccess: (data) => {\r\n      setPhoneDescriptions(data.result_data||[]);\r\n    }\r\n  });\r\n\r\n  // 캠페인스킬 조회\r\n  const { mutate: fetchCampaignSkills } = useApiForCampaignSkill({\r\n    onSuccess: (data) => {\r\n      setCampaignSkills(data.result_data);\r\n    }\r\n  });\r\n  \r\n  useEffect(() => {\r\n    if( externalCampaignId ){\r\n      const campaignInfo = campaigns.find(data => data.campaign_id === Number(externalCampaignId));\r\n      const tenantId = campaignInfo?.tenant_id+'' || '1';\r\n      const campaignId = campaignInfo?.campaign_id+'' || '0';\r\n      fetchCallProgressStatus({ tenantId, campaignId });\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n      }\r\n      if( statisticsUpdateCycle > 0 ){  \r\n        intervalRef.current = setInterval(() => {\r\n          fetchCallProgressStatus({ tenantId, campaignId });\r\n        }, statisticsUpdateCycle * 1000);     \r\n      }\r\n      setShouldRenderSelect(false);\r\n      return () => {\r\n        if (intervalRef.current) {\r\n          clearInterval(intervalRef.current);\r\n        }\r\n      };\r\n    }else{\r\n      setShouldRenderSelect(true);\r\n    }\r\n  }, [externalCampaignId,statisticsUpdateCycle]);\r\n\r\n  useEffect(() => {\r\n    if( externalCampaignId ){\r\n      const campaignInfo = campaigns.find(data => data.campaign_id === Number(externalCampaignId));\r\n      fetchCallProgressStatus({\r\n        tenantId: campaignInfo?.tenant_id+'' || '1',\r\n        campaignId: campaignInfo?.campaign_id+'' || '0'\r\n      });\r\n      setShouldRenderSelect(false);\r\n    }else{\r\n      setShouldRenderSelect(true);\r\n    }\r\n  }, [externalCampaignId]);\r\n\r\n  useEffect(() => {\r\n    if( campaignSkills.length > 0 && phoneDescriptions.length > 0){\r\n      fetchCallProgressStatus({\r\n        tenantId: '1',\r\n        campaignId: '0'\r\n      });\r\n    }\r\n  }, [campaignSkills, phoneDescriptions]);\r\n\r\n  useEffect(() => {\r\n    let count = 0;\r\n    if( campaignSkills.length === 0){\r\n      fetchCampaignSkills({\r\n        session_key: '',\r\n        tenant_id: 0,\r\n      });\r\n      count++;\r\n    }\r\n    if( phoneDescriptions.length === 0){\r\n      fetchPhoneDescriptions({\r\n        session_key: '',\r\n        tenant_id: 0,\r\n      });\r\n      count++;\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex flex-col gap-5 h-full out-wrap\">\r\n      {shouldRenderSelect && (\r\n        <div className=\"flex items-center gap-2\">\r\n          <Label className=\"w-20 min-w-20\">캠페인</Label>\r\n          <Select onValueChange={handleCampaignChange} value={selectedCampaign}>\r\n            <SelectTrigger className=\"w-48\">\r\n              <SelectValue placeholder=\"캠페인전체\" />\r\n            </SelectTrigger>\r\n            <SelectContent>\r\n              <SelectItem value=\"all\">캠페인전체</SelectItem>\r\n              {campaigns.map(option => (\r\n                <SelectItem key={option.campaign_id} value={option.campaign_id.toString()}>\r\n                  [{option.campaign_id}]{option.campaign_name}\r\n                </SelectItem>\r\n              ))}\r\n            </SelectContent>\r\n          </Select>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"flex gap-5 h-[calc(100%-46px)] out-call-responsive-container\">\r\n        <div className=\"flex-1 out-call-responsive-left gap-5\">\r\n          <div className=\"\">\r\n            <Table>\r\n              <thead>\r\n                <TableRow>\r\n                  <TableHeader className=\"!bg-[#DDF4F2] !text-center text-sm font-normal text-[#3A9D6C] !h-[30px]\">\r\n                    대기 상담사\r\n                  </TableHeader>\r\n                  <TableHeader className=\"!bg-[#FEE9EC] !text-center text-sm font-normal text-[#C95E5E] !h-[30px]\">\r\n                    최초발신\r\n                  </TableHeader>\r\n                  <TableHeader className=\"!bg-[#E8EFFA] !text-center text-sm font-normal text-[#338BD3] !h-[30px]\">\r\n                    재시도 발신\r\n                  </TableHeader>\r\n                  <TableHeader className=\"!bg-[#F6F0FA] !text-center text-sm font-normal text-[#9459BF] !h-[30px]\">\r\n                    분배대기\r\n                  </TableHeader>\r\n                </TableRow>\r\n              </thead>\r\n              <tbody>\r\n                <TableRow>\r\n                  <TableCell className=\"!text-center text-sm !h-[30px]\">{waitingCounselorCnt}</TableCell>\r\n                  <TableCell className=\"!text-center text-sm !h-[30px]\">{currentData.stats.firstCall}</TableCell>\r\n                  <TableCell className=\"!text-center text-sm !h-[30px]\">{currentData.stats.retryCall}</TableCell>\r\n                  <TableCell className=\"!text-center text-sm !h-[30px]\">{currentData.stats.distributing}</TableCell>\r\n                </TableRow>\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n\r\n          <div className=\"w-full h-[calc(100%-57px)]\">\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\" className=\"m-auto\">\r\n              <BarChart\r\n                data={currentData.barData}\r\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n                layout=\"vertical\"\r\n              >\r\n                <CartesianGrid strokeDasharray=\"3 3\" horizontal={true} vertical={true} />\r\n                <XAxis\r\n                  type=\"number\"\r\n                  tick={{ fontSize: 13 }}\r\n                  axisLine={{ stroke: '#999' }}\r\n                />\r\n                <YAxis\r\n                  type=\"category\"\r\n                  dataKey=\"name\"\r\n                  width={100}\r\n                  tick={{ fontSize: 13 }}\r\n                  axisLine={{ stroke: '#999' }}\r\n                />\r\n                <Tooltip />\r\n                <Bar\r\n                  dataKey=\"value\"\r\n                  fill=\"#4FD1C5\"\r\n                  barSize={20}\r\n                />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid-custom-wrap flex-1 out-call-responsive-right\">\r\n          <DataGrid\r\n            columns={columns}\r\n            rows={currentData.gridData}\r\n            className=\"grid-custom\"\r\n            rowHeight={30}\r\n            headerRowHeight={30}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OutboundCallProgressPanel;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3433, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3439, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/app/main/comp/StatusCampaign/index.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/shared/CustomSelect\";\r\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\nimport { useApiForCampaignSkill } from '@/features/campaignManager/hooks/useApiForCampaignSkill';\r\nimport { useApiForSkills } from '@/features/campaignManager/hooks/useApiForSkills';\r\nimport { useCampainManagerStore, useMainStore } from '@/store';\r\nimport { useApiForCampaignProgressInformation } from '@/features/monitoring/hooks/useApiForCampaignProgressInformation';\r\nimport { CommonButton } from \"@/components/shared/CommonButton\";\r\nimport { useEnvironmentStore } from '@/store/environmentStore';\r\n\r\ninterface ChartDataItem {\r\n  name: string;\r\n  progress: number;\r\n  success: number;\r\n}\r\n\r\n// 나중에 실제 API 연동 시 사용할 데이터 타입\r\ninterface DispatchStatusData {\r\n  campaign_id: number;\r\n  dispatch_type: string;\r\n  campaign_name: string;\r\n  progress: number;\r\n  success: number;\r\n}\r\n\r\ninterface DispatchDataType {\r\n  dispatch_id: number;\r\n  dispatch_name: string;\r\n}\r\n\r\nconst DISPATCH_TYPES = {\r\n  INITIAL: '최초발신',\r\n  FIRST: '1차재발신',\r\n  SECOND: '2차재발신',\r\n  THIRD: '3차재발신',\r\n  FOURTH: '4차재발신'\r\n} as const;\r\n\r\ntype DispatchType = typeof DISPATCH_TYPES[keyof typeof DISPATCH_TYPES];\r\n\r\nconst StatusCampaign: React.FC = () => {\r\n  const [selectedSkill, setSelectedSkill] = useState<string>('total');\r\n  const [selectedDispatch, setSelectedDispatch] = useState<string>('0');\r\n  const { campaignSkills, setCampaignSkills } = useCampainManagerStore();\r\n  const { campaigns } = useMainStore();\r\n  const [skills, setSkills] = useState<any[]>([]);\r\n  const [chartData, setChartData] = useState<ChartDataItem[]>([]);\r\n  const [campaignInfoList, setCampaignInfoList] = useState<DispatchStatusData[]>([]);\r\n  const [selectedCampaignId, setSelectedCampaignId] = useState<number>(0);\r\n  const [selectedCampaignIdIndex, setSelectedCampaignIdIndex] = useState<number>(0);\r\n  const [maxDispatchCount, setMaxDispatchCount] = useState<number>(0);\r\n  const [dispatchTypeList, setDispatchTypeList] = useState<DispatchDataType[]>([]);\r\n  const [isRefreshing, setIsRefreshing] = useState<boolean>(false);\r\n  const { statisticsUpdateCycle } = useEnvironmentStore();\r\n\r\n  // 캠페인 진행 정보 API 호출 (useMutation 사용)\r\n  const { \r\n    mutate: fetchCampaignProgressInformation, \r\n    data: progressData,\r\n    isPending, \r\n    isError\r\n  } = useApiForCampaignProgressInformation({\r\n    onSuccess: (data) => {\r\n      if (data && data.progressInfoList && campaigns.length > 0 && selectedCampaignIdIndex < campaigns.length) {\r\n        const tempList = data.progressInfoList.sort((a, b) => a.reuseCnt - b.reuseCnt);\r\n        \r\n        if (tempList.length > 0) {\r\n          const tempDataList: DispatchStatusData[] = tempList.map((item, i) => ({\r\n            campaign_id: item.campId || selectedCampaignId,\r\n            dispatch_type: i.toString(),\r\n            campaign_name: campaigns[selectedCampaignIdIndex].campaign_name,\r\n            progress: item.totLstCnt === 0 ? 0 : parseFloat(((item.nonTTCT / item.totLstCnt) * 100).toFixed(1)),\r\n            success: item.totLstCnt === 0 ? 0 : parseFloat(((item.scct / item.totLstCnt) * 100).toFixed(1)),\r\n          }));\r\n          \r\n          setCampaignInfoList(prev => [...prev, ...tempDataList]);\r\n          \r\n          if (maxDispatchCount < tempList.length) {\r\n            setMaxDispatchCount(tempList.length);\r\n          }\r\n        }\r\n\r\n        // 다음 캠페인으로 이동\r\n        const index = selectedCampaignIdIndex + 1;\r\n        if (index < campaigns.length) {\r\n          setSelectedCampaignId(campaigns[index].campaign_id);\r\n          setSelectedCampaignIdIndex(index);\r\n        } else {\r\n          const tempList = Array.from({ length: maxDispatchCount }, (_, i) => ({\r\n            dispatch_id: i,\r\n            dispatch_name: i === 0 ? '최초발신' : `${i}차재발신`\r\n          }));\r\n          setDispatchTypeList(tempList);\r\n          fetchSkills({\r\n            tenant_id_array: []\r\n          });\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  // 데이터 갱신 함수\r\n  const refreshData = useCallback(() => {\r\n    setIsRefreshing(true);\r\n    \r\n    // 초기화\r\n    setSelectedCampaignId(campaigns[0]?.campaign_id || 0);\r\n    setSelectedCampaignIdIndex(0);\r\n    setCampaignInfoList([]);\r\n    \r\n    // campaigns이 있을 경우에만 API 호출\r\n    if (campaigns.length > 0) {\r\n      fetchCampaignProgressInformation({\r\n        tenantId: campaigns[0].tenant_id,\r\n        campaignId: campaigns[0].campaign_id\r\n      });\r\n    }\r\n\r\n    // 타이머로 isRefreshing 상태 해제\r\n    setTimeout(() => setIsRefreshing(false), 1000);\r\n  }, [campaigns, fetchCampaignProgressInformation]);\r\n\r\n  // 스킬 조회\r\n  const { mutate: fetchSkills } = useApiForSkills({\r\n    onSuccess: (data) => {\r\n      setSkills(data.result_data);\r\n      fetchCampaignSkills({\r\n        session_key: '',\r\n        tenant_id: 0,\r\n      });\r\n    }\r\n  });\r\n\r\n  // 캠페인 스킬 조회\r\n  const { mutate: fetchCampaignSkills } = useApiForCampaignSkill({\r\n    onSuccess: (data) => {\r\n      setCampaignSkills(data.result_data);\r\n      // 여기에 나중에 발신 상태 API 연동\r\n      processDataForChart(data.result_data, selectedSkill, selectedDispatch);\r\n    }\r\n  });\r\n\r\n  // 테스트용 발신 상태 데이터 생성 함수 (나중에 API로 대체)\r\n  const generateDispatchStatusData = (campaignId: number) => {\r\n    const tempDataList = campaignInfoList.filter(data => data.campaign_id === campaignId);\r\n    const temp: { [key: string]: any } = { campaign_id: campaignId };\r\n\r\n    for (let j = 0; j < maxDispatchCount; j++) {\r\n      const data = tempDataList[j] || { progress: 0, success: 0 };\r\n      temp[`dispatch${j}`] = { progress: data.progress, success: data.success };\r\n    }\r\n\r\n    return temp;\r\n  };\r\n\r\n  // 차트 데이터 처리 함수\r\n  const processDataForChart = (\r\n    campaignSkillsData: any[], \r\n    currentSkill: string, \r\n    dispatchType: string\r\n  ) => {\r\n    let filteredCampaigns = campaignSkillsData.sort((a, b) => a.campaign_id - b.campaign_id);\r\n    \r\n    // 스킬 필터링\r\n    if (currentSkill !== 'total') {\r\n      filteredCampaigns = campaignSkillsData.filter(campaign => \r\n        campaign.skill_id?.includes(Number(currentSkill))\r\n      );\r\n    } else {\r\n      filteredCampaigns = campaigns.sort((a, b) => a.campaign_id - b.campaign_id);\r\n    }\r\n\r\n    // 각 캠페인에 대해 발신 단계 데이터 생성\r\n    const processedData = filteredCampaigns.map((campaign) => {\r\n      // API에서 받아올 데이터 구조\r\n      const statusData = generateDispatchStatusData(campaign.campaign_id);\r\n      const dispatchKey = `dispatch${dispatchType}` as keyof typeof statusData;\r\n      const campaignInfo = campaigns.find(data => data.campaign_id === campaign.campaign_id);\r\n      const campaignName = campaignInfo ? campaignInfo.campaign_name : '알 수 없음';\r\n\r\n      return {\r\n        name: `[${campaign.campaign_id}]${campaignName}`,\r\n        progress: typeof statusData[dispatchKey] === 'object' ? statusData[dispatchKey].progress : 0,\r\n        success: typeof statusData[dispatchKey] === 'object' ? statusData[dispatchKey].success : 0,\r\n      };\r\n    });\r\n    \r\n    setChartData(processedData);\r\n  };\r\n\r\n  // 스킬 선택 변경 핸들러\r\n  const handleSkillChange = (value: string) => {\r\n    setSelectedSkill(value);\r\n    if (campaignSkills.length > 0) {\r\n      processDataForChart(campaignSkills, value, selectedDispatch);\r\n    }\r\n  };\r\n\r\n  // 발신 단계 선택 변경 핸들러\r\n  const handleDispatchChange = (value: string) => {\r\n    setSelectedDispatch(value);\r\n    if (campaignSkills.length > 0) {\r\n      processDataForChart(campaignSkills, selectedSkill, value);\r\n    }\r\n  };\r\n\r\n  const itemHeight = 50;\r\n  const chartHeight = Math.max(chartData.length * itemHeight + 100, 300);\r\n\r\n  // 컴포넌트 마운트 시 및 selectedCampaignId 변경 시 데이터 로드\r\n  useEffect(() => {\r\n    if (selectedCampaignId > 0 && campaigns.length > 0 && selectedCampaignIdIndex < campaigns.length) {\r\n      fetchCampaignProgressInformation({\r\n        tenantId: campaigns[selectedCampaignIdIndex].tenant_id,\r\n        campaignId: selectedCampaignId\r\n      });\r\n    }\r\n  }, [selectedCampaignId, selectedCampaignIdIndex, campaigns, fetchCampaignProgressInformation]);\r\n\r\n  // 통계 갱신 주기에 따른 자동 새로고침 설정\r\n  useEffect(() => {\r\n    if (statisticsUpdateCycle > 0) {\r\n      const interval = setInterval(() => {\r\n        refreshData();\r\n      }, statisticsUpdateCycle * 1000);\r\n      \r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [statisticsUpdateCycle, refreshData]);\r\n\r\n  // 캠페인 목록 변경 시 초기 데이터 설정\r\n  useEffect(() => {\r\n    if (campaigns.length > 0) {\r\n      setSelectedCampaignId(campaigns[0].campaign_id);\r\n      setSelectedCampaignIdIndex(0);\r\n      setCampaignInfoList([]);\r\n    }\r\n  }, [campaigns]);\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"flex gap-4 mb-6 items-center\">\r\n        <Select value={selectedSkill} onValueChange={handleSkillChange}>\r\n          <SelectTrigger className=\"w-40\">\r\n            <SelectValue placeholder=\"스킬전체보기\"/>\r\n          </SelectTrigger>\r\n          <SelectContent>\r\n            <SelectItem value=\"total\">스킬전체보기</SelectItem>\r\n            {skills.map(skill => (\r\n              <SelectItem key={skill.skill_id} value={skill.skill_id.toString()}>\r\n                {skill.skill_name}\r\n              </SelectItem>\r\n            ))}\r\n          </SelectContent>\r\n        </Select>\r\n\r\n        <Select value={selectedDispatch} onValueChange={handleDispatchChange}>\r\n          <SelectTrigger className=\"w-40\">\r\n            <SelectValue placeholder=\"최초발신\"/>\r\n          </SelectTrigger>\r\n          <SelectContent>\r\n            {dispatchTypeList.map(option => (\r\n              <SelectItem key={option.dispatch_id} value={option.dispatch_id.toString()}>\r\n                {option.dispatch_name}\r\n              </SelectItem>\r\n            ))}\r\n          </SelectContent>\r\n        </Select>\r\n\r\n        <CommonButton \r\n          variant=\"secondary\" \r\n          onClick={refreshData} \r\n          disabled={isPending || isRefreshing}\r\n        >\r\n          {isRefreshing ? '새로고침 중...' : '새로고침'}\r\n        </CommonButton>\r\n      </div>\r\n\r\n      {isPending && !isRefreshing ? (\r\n        <div className=\"border p-2 rounded flex items-center justify-center\" style={{ height: chartHeight }}>\r\n          <p>데이터를 로드 중입니다...</p>\r\n        </div>\r\n      ) : isError ? (\r\n        <div className=\"border p-2 rounded flex items-center justify-center\" style={{ height: chartHeight }}>\r\n          <p>데이터 로드 중 오류가 발생했습니다. 새로고침을 시도해주세요.</p>\r\n        </div>\r\n      ) : (\r\n        <div style={{ height: chartHeight }} className=\"border p-2 rounded\">\r\n          {chartData.length > 0 ? (\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n              <BarChart\r\n                layout=\"vertical\"\r\n                data={chartData}\r\n                margin={{ top: 20, right: 30, left: 100, bottom: 5 }}\r\n              >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis \r\n                  type=\"number\" \r\n                  tick={{ fontSize: 13 }}\r\n                  axisLine={{ stroke: '#999' }}\r\n                />\r\n                <YAxis \r\n                  type=\"category\" \r\n                  dataKey=\"name\"\r\n                  tick={{ fontSize: 13 }}\r\n                  axisLine={{ stroke: '#999' }}\r\n                />\r\n                <Tooltip />\r\n                <Legend \r\n                  verticalAlign=\"top\"\r\n                  align=\"left\"\r\n                  wrapperStyle={{\r\n                    paddingBottom: '20px',\r\n                    fontSize: '14px'\r\n                  }}\r\n                />\r\n                <Bar dataKey=\"success\" fill=\"#FF8DA0\" name=\"성공률\" />\r\n                <Bar dataKey=\"progress\" fill=\"#4AD3C8\" name=\"진행률\" />\r\n              </BarChart>\r\n            </ResponsiveContainer>\r\n          ) : (\r\n            <div className=\"flex items-center justify-center h-full\">\r\n              <p>표시할 데이터가 없습니다.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatusCampaign;"],"names":[],"mappings":";;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AA4BA,MAAM,iBAAiB;IACrB,SAAS;IACT,OAAO;IACP,QAAQ;IACR,OAAO;IACP,QAAQ;AACV;AAIA,MAAM,iBAA2B;;IAC/B,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAC3D,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACjE,MAAM,EAAE,cAAc,EAAE,iBAAiB,EAAE,GAAG,CAAA,GAAA,sIAAA,CAAA,yBAAsB,AAAD;IACnE,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,eAAY,AAAD;IACjC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAS,EAAE;IAC9C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAmB,EAAE;IAC9D,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAwB,EAAE;IACjF,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACrE,MAAM,CAAC,yBAAyB,2BAA2B,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IAC/E,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACjE,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAsB,EAAE;IAC/E,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAC1D,MAAM,EAAE,qBAAqB,EAAE,GAAG,CAAA,GAAA,mIAAA,CAAA,sBAAmB,AAAD;IAEpD,oCAAoC;IACpC,MAAM,EACJ,QAAQ,gCAAgC,EACxC,MAAM,YAAY,EAClB,SAAS,EACT,OAAO,EACR,GAAG,CAAA,GAAA,iLAAA,CAAA,uCAAoC,AAAD,EAAE;QACvC,SAAS;mEAAE,CAAC;gBACV,IAAI,QAAQ,KAAK,gBAAgB,IAAI,UAAU,MAAM,GAAG,KAAK,0BAA0B,UAAU,MAAM,EAAE;oBACvG,MAAM,WAAW,KAAK,gBAAgB,CAAC,IAAI;wFAAC,CAAC,GAAG,IAAM,EAAE,QAAQ,GAAG,EAAE,QAAQ;;oBAE7E,IAAI,SAAS,MAAM,GAAG,GAAG;wBACvB,MAAM,eAAqC,SAAS,GAAG;gGAAC,CAAC,MAAM,IAAM,CAAC;oCACpE,aAAa,KAAK,MAAM,IAAI;oCAC5B,eAAe,EAAE,QAAQ;oCACzB,eAAe,SAAS,CAAC,wBAAwB,CAAC,aAAa;oCAC/D,UAAU,KAAK,SAAS,KAAK,IAAI,IAAI,WAAW,CAAC,AAAC,KAAK,OAAO,GAAG,KAAK,SAAS,GAAI,GAAG,EAAE,OAAO,CAAC;oCAChG,SAAS,KAAK,SAAS,KAAK,IAAI,IAAI,WAAW,CAAC,AAAC,KAAK,IAAI,GAAG,KAAK,SAAS,GAAI,GAAG,EAAE,OAAO,CAAC;gCAC9F,CAAC;;wBAED;mFAAoB,CAAA,OAAQ;uCAAI;uCAAS;iCAAa;;wBAEtD,IAAI,mBAAmB,SAAS,MAAM,EAAE;4BACtC,oBAAoB,SAAS,MAAM;wBACrC;oBACF;oBAEA,cAAc;oBACd,MAAM,QAAQ,0BAA0B;oBACxC,IAAI,QAAQ,UAAU,MAAM,EAAE;wBAC5B,sBAAsB,SAAS,CAAC,MAAM,CAAC,WAAW;wBAClD,2BAA2B;oBAC7B,OAAO;wBACL,MAAM,WAAW,MAAM,IAAI,CAAC;4BAAE,QAAQ;wBAAiB;4FAAG,CAAC,GAAG,IAAM,CAAC;oCACnE,aAAa;oCACb,eAAe,MAAM,IAAI,SAAS,GAAG,EAAE,IAAI,CAAC;gCAC9C,CAAC;;wBACD,oBAAoB;wBACpB,YAAY;4BACV,iBAAiB,EAAE;wBACrB;oBACF;gBACF;YACF;;IACF;IAEA,YAAY;IACZ,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;mDAAE;YAC9B,gBAAgB;YAEhB,MAAM;YACN,sBAAsB,SAAS,CAAC,EAAE,EAAE,eAAe;YACnD,2BAA2B;YAC3B,oBAAoB,EAAE;YAEtB,4BAA4B;YAC5B,IAAI,UAAU,MAAM,GAAG,GAAG;gBACxB,iCAAiC;oBAC/B,UAAU,SAAS,CAAC,EAAE,CAAC,SAAS;oBAChC,YAAY,SAAS,CAAC,EAAE,CAAC,WAAW;gBACtC;YACF;YAEA,0BAA0B;YAC1B;2DAAW,IAAM,gBAAgB;0DAAQ;QAC3C;kDAAG;QAAC;QAAW;KAAiC;IAEhD,QAAQ;IACR,MAAM,EAAE,QAAQ,WAAW,EAAE,GAAG,CAAA,GAAA,iKAAA,CAAA,kBAAe,AAAD,EAAE;QAC9C,SAAS;8CAAE,CAAC;gBACV,UAAU,KAAK,WAAW;gBAC1B,oBAAoB;oBAClB,aAAa;oBACb,WAAW;gBACb;YACF;;IACF;IAEA,YAAY;IACZ,MAAM,EAAE,QAAQ,mBAAmB,EAAE,GAAG,CAAA,GAAA,wKAAA,CAAA,yBAAsB,AAAD,EAAE;QAC7D,SAAS;qDAAE,CAAC;gBACV,kBAAkB,KAAK,WAAW;gBAClC,uBAAuB;gBACvB,oBAAoB,KAAK,WAAW,EAAE,eAAe;YACvD;;IACF;IAEA,qCAAqC;IACrC,MAAM,6BAA6B,CAAC;QAClC,MAAM,eAAe,iBAAiB,MAAM,CAAC,CAAA,OAAQ,KAAK,WAAW,KAAK;QAC1E,MAAM,OAA+B;YAAE,aAAa;QAAW;QAE/D,IAAK,IAAI,IAAI,GAAG,IAAI,kBAAkB,IAAK;YACzC,MAAM,OAAO,YAAY,CAAC,EAAE,IAAI;gBAAE,UAAU;gBAAG,SAAS;YAAE;YAC1D,IAAI,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,GAAG;gBAAE,UAAU,KAAK,QAAQ;gBAAE,SAAS,KAAK,OAAO;YAAC;QAC1E;QAEA,OAAO;IACT;IAEA,eAAe;IACf,MAAM,sBAAsB,CAC1B,oBACA,cACA;QAEA,IAAI,oBAAoB,mBAAmB,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,WAAW,GAAG,EAAE,WAAW;QAEvF,SAAS;QACT,IAAI,iBAAiB,SAAS;YAC5B,oBAAoB,mBAAmB,MAAM,CAAC,CAAA,WAC5C,SAAS,QAAQ,EAAE,SAAS,OAAO;QAEvC,OAAO;YACL,oBAAoB,UAAU,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,WAAW,GAAG,EAAE,WAAW;QAC5E;QAEA,yBAAyB;QACzB,MAAM,gBAAgB,kBAAkB,GAAG,CAAC,CAAC;YAC3C,mBAAmB;YACnB,MAAM,aAAa,2BAA2B,SAAS,WAAW;YAClE,MAAM,cAAc,CAAC,QAAQ,EAAE,cAAc;YAC7C,MAAM,eAAe,UAAU,IAAI,CAAC,CAAA,OAAQ,KAAK,WAAW,KAAK,SAAS,WAAW;YACrF,MAAM,eAAe,eAAe,aAAa,aAAa,GAAG;YAEjE,OAAO;gBACL,MAAM,CAAC,CAAC,EAAE,SAAS,WAAW,CAAC,CAAC,EAAE,cAAc;gBAChD,UAAU,OAAO,UAAU,CAAC,YAAY,KAAK,WAAW,UAAU,CAAC,YAAY,CAAC,QAAQ,GAAG;gBAC3F,SAAS,OAAO,UAAU,CAAC,YAAY,KAAK,WAAW,UAAU,CAAC,YAAY,CAAC,OAAO,GAAG;YAC3F;QACF;QAEA,aAAa;IACf;IAEA,eAAe;IACf,MAAM,oBAAoB,CAAC;QACzB,iBAAiB;QACjB,IAAI,eAAe,MAAM,GAAG,GAAG;YAC7B,oBAAoB,gBAAgB,OAAO;QAC7C;IACF;IAEA,kBAAkB;IAClB,MAAM,uBAAuB,CAAC;QAC5B,oBAAoB;QACpB,IAAI,eAAe,MAAM,GAAG,GAAG;YAC7B,oBAAoB,gBAAgB,eAAe;QACrD;IACF;IAEA,MAAM,aAAa;IACnB,MAAM,cAAc,KAAK,GAAG,CAAC,UAAU,MAAM,GAAG,aAAa,KAAK;IAElE,8CAA8C;IAC9C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,IAAI,qBAAqB,KAAK,UAAU,MAAM,GAAG,KAAK,0BAA0B,UAAU,MAAM,EAAE;gBAChG,iCAAiC;oBAC/B,UAAU,SAAS,CAAC,wBAAwB,CAAC,SAAS;oBACtD,YAAY;gBACd;YACF;QACF;mCAAG;QAAC;QAAoB;QAAyB;QAAW;KAAiC;IAE7F,0BAA0B;IAC1B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,IAAI,wBAAwB,GAAG;gBAC7B,MAAM,WAAW;yDAAY;wBAC3B;oBACF;wDAAG,wBAAwB;gBAE3B;gDAAO,IAAM,cAAc;;YAC7B;QACF;mCAAG;QAAC;QAAuB;KAAY;IAEvC,wBAAwB;IACxB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,IAAI,UAAU,MAAM,GAAG,GAAG;gBACxB,sBAAsB,SAAS,CAAC,EAAE,CAAC,WAAW;gBAC9C,2BAA2B;gBAC3B,oBAAoB,EAAE;YACxB;QACF;mCAAG;QAAC;KAAU;IAEd,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,wJAAA,CAAA,SAAM;wBAAC,OAAO;wBAAe,eAAe;;0CAC3C,6LAAC,wJAAA,CAAA,gBAAa;gCAAC,WAAU;0CACvB,cAAA,6LAAC,wJAAA,CAAA,cAAW;oCAAC,aAAY;;;;;;;;;;;0CAE3B,6LAAC,wJAAA,CAAA,gBAAa;;kDACZ,6LAAC,wJAAA,CAAA,aAAU;wCAAC,OAAM;kDAAQ;;;;;;oCACzB,OAAO,GAAG,CAAC,CAAA,sBACV,6LAAC,wJAAA,CAAA,aAAU;4CAAsB,OAAO,MAAM,QAAQ,CAAC,QAAQ;sDAC5D,MAAM,UAAU;2CADF,MAAM,QAAQ;;;;;;;;;;;;;;;;;kCAOrC,6LAAC,wJAAA,CAAA,SAAM;wBAAC,OAAO;wBAAkB,eAAe;;0CAC9C,6LAAC,wJAAA,CAAA,gBAAa;gCAAC,WAAU;0CACvB,cAAA,6LAAC,wJAAA,CAAA,cAAW;oCAAC,aAAY;;;;;;;;;;;0CAE3B,6LAAC,wJAAA,CAAA,gBAAa;0CACX,iBAAiB,GAAG,CAAC,CAAA,uBACpB,6LAAC,wJAAA,CAAA,aAAU;wCAA0B,OAAO,OAAO,WAAW,CAAC,QAAQ;kDACpE,OAAO,aAAa;uCADN,OAAO,WAAW;;;;;;;;;;;;;;;;kCAOzC,6LAAC,wJAAA,CAAA,eAAY;wBACX,SAAQ;wBACR,SAAS;wBACT,UAAU,aAAa;kCAEtB,eAAe,cAAc;;;;;;;;;;;;YAIjC,aAAa,CAAC,6BACb,6LAAC;gBAAI,WAAU;gBAAsD,OAAO;oBAAE,QAAQ;gBAAY;0BAChG,cAAA,6LAAC;8BAAE;;;;;;;;;;uBAEH,wBACF,6LAAC;gBAAI,WAAU;gBAAsD,OAAO;oBAAE,QAAQ;gBAAY;0BAChG,cAAA,6LAAC;8BAAE;;;;;;;;;;qCAGL,6LAAC;gBAAI,OAAO;oBAAE,QAAQ;gBAAY;gBAAG,WAAU;0BAC5C,UAAU,MAAM,GAAG,kBAClB,6LAAC,sKAAA,CAAA,sBAAmB;oBAAC,OAAM;oBAAO,QAAO;8BACvC,cAAA,6LAAC,uJAAA,CAAA,WAAQ;wBACP,QAAO;wBACP,MAAM;wBACN,QAAQ;4BAAE,KAAK;4BAAI,OAAO;4BAAI,MAAM;4BAAK,QAAQ;wBAAE;;0CAEnD,6LAAC,gKAAA,CAAA,gBAAa;gCAAC,iBAAgB;;;;;;0CAC/B,6LAAC,wJAAA,CAAA,QAAK;gCACJ,MAAK;gCACL,MAAM;oCAAE,UAAU;gCAAG;gCACrB,UAAU;oCAAE,QAAQ;gCAAO;;;;;;0CAE7B,6LAAC,wJAAA,CAAA,QAAK;gCACJ,MAAK;gCACL,SAAQ;gCACR,MAAM;oCAAE,UAAU;gCAAG;gCACrB,UAAU;oCAAE,QAAQ;gCAAO;;;;;;0CAE7B,6LAAC,0JAAA,CAAA,UAAO;;;;;0CACR,6LAAC,yJAAA,CAAA,SAAM;gCACL,eAAc;gCACd,OAAM;gCACN,cAAc;oCACZ,eAAe;oCACf,UAAU;gCACZ;;;;;;0CAEF,6LAAC,sJAAA,CAAA,MAAG;gCAAC,SAAQ;gCAAU,MAAK;gCAAU,MAAK;;;;;;0CAC3C,6LAAC,sJAAA,CAAA,MAAG;gCAAC,SAAQ;gCAAW,MAAK;gCAAU,MAAK;;;;;;;;;;;;;;;;yCAIhD,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;kCAAE;;;;;;;;;;;;;;;;;;;;;;AAOjB;GAjSM;;QAG0C,sIAAA,CAAA,yBAAsB;QAC9C,4HAAA,CAAA,eAAY;QASA,mIAAA,CAAA,sBAAmB;QAQjD,iLAAA,CAAA,uCAAoC;QA8DR,iKAAA,CAAA,kBAAe;QAWP,wKAAA,CAAA,yBAAsB;;;KA9F1D;uCAmSS"}},
    {"offset": {"line": 3975, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3981, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/app/main/comp/ChannelMonitor/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { PieChart, Pie, Cell, ResponsiveContainer, Legend, Tooltip } from 'recharts';\r\nimport DataGrid from 'react-data-grid';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/shared/CustomSelect\";\r\nimport 'react-data-grid/lib/styles.css';\r\nimport { useApiForChannelStateMonitoringList } from '@/features/monitoring/hooks/useApiForChannelStateMonitoringList';\r\nimport { useEnvironmentStore } from '@/store/environmentStore';\r\nimport { useMainStore } from '@/store';\r\nimport { useApiForDialingDevice, useApiForDialingDeviceCreate, useApiForDialingDeviceDelete, useApiForDialingDeviceUpdate } from '@/features/preferences/hooks/useApiForDialingDevice';\r\n\r\ntype ChannelStatus = 'IDLE' | 'BUSY' | 'NONE';\r\n\r\ninterface ChannelData {\r\n  CIDSNO: string;\r\n  CHNO: string;\r\n  status: ChannelStatus;\r\n  equipmentNo?: string;\r\n  campaignMode?: string;\r\n  callMode?: string;\r\n  channelGroupMode?:string;\r\n  ChannelMode:string;\r\n}\r\n\r\ninterface ItemType {\r\n  key: string;\r\n  name: string;\r\n}\r\n\r\ntype FilterMode = '전체' | '장비번호' | '캠페인 모드' | '발신 모드' | '채널 그룹 모드';\r\n\r\nconst COLORS = {\r\n  IDLE: '#4AD3C8',\r\n  BUSY: '#FF8DA0',\r\n  NONE: '#D398FF'\r\n};\r\n\r\nconst secondModeAll = [\r\n  {key:' ', name: '선택'},\r\n];\r\n\r\nconst secondModeCampaignGroup = [\r\n  {key:' ', name: '전체 채널그룹'},\r\n  {key:'회선사용안함', name: '회선사용안함'},\r\n  {key:'모든그룹아이디사용', name: '모든 그룹아이디 사용'},\r\n];\r\n\r\nconst secondModeSender = [\r\n  {key:' ', name: '전체발신모드'},\r\n  {key:'0', name: '회선사용안함'},\r\n  {key:'발신방법모두사용', name: '발신방법모두사용'},\r\n  {key:'1', name: 'power mode'},\r\n  {key:'2', name: 'progressive mode'},\r\n  {key:'3', name: 'predictive mode'},\r\n  {key:'5', name: 'system preview'}\r\n];\r\n\r\nconst ChannelMonitor: React.FC = () => {\r\n  const [firstSelect, setFirstSelect] = useState<FilterMode>('전체');\r\n  const [secondSelect, setSecondSelect] = useState<string>('');\r\n  const [thirdSelect, setThirdSelect] = useState<string>('상태전체');\r\n  const [channelData, setChannelData] = useState<ChannelData[]>([]);\r\n  const [filteredData, setFilteredData] = useState<ChannelData[]>([]);\r\n  const { statisticsUpdateCycle } = useEnvironmentStore();\r\n  const { tenants, campaigns } = useMainStore();\r\n  const [ secondModeEquipment, setSecondModeEquipment ] = useState<ItemType[]>([]);\r\n  const [ secondModeCampaign, setSecondModeCampaign ] = useState<ItemType[]>([]);\r\n  const [ secondModeCampaignGroup, setSecondModeCampaignGroup ] = useState<ItemType[]>([]);\r\n\r\n  // 첫 번째 Select의 옵션\r\n  const firstSelectOptions = ['전체', '장비번호', '캠페인 모드', '발신 모드', '채널 그룹 모드'];\r\n\r\n  // 두 번째 Select의 옵션 (첫 번째 선택에 따라 동적 변경)\r\n  const getSecondSelectOptions = () => {\r\n    switch (firstSelect) {\r\n      case '장비번호':\r\n        return secondModeEquipment;\r\n      case '캠페인 모드':\r\n        return secondModeCampaign;\r\n      case '발신 모드':\r\n        return secondModeSender;\r\n      default:\r\n        return secondModeAll;\r\n    }\r\n  };\r\n\r\n  // 세 번째 Select의 옵션\r\n  const thirdSelectOptions = ['상태전체', 'NONE', 'IDLE', 'BUSY'];\r\n\r\n  // 필터링 로직\r\n  useEffect(() => {\r\n    let newData:ChannelData[] = channelData.sort((a,b)=>(parseInt(a.CIDSNO) - parseInt(b.CIDSNO)));\r\n    if( channelData.length > 0 ){\r\n      if (firstSelect !== '전체') {\r\n        if (secondSelect && secondSelect !== ' ') {\r\n          switch (firstSelect) {\r\n            case '장비번호':\r\n              newData = channelData.filter(item => item.CIDSNO && item.CIDSNO === secondSelect);\r\n              break;\r\n            case '캠페인 모드':\r\n              newData = channelData.filter(item => item.campaignMode === secondSelect);\r\n              break;\r\n            case '발신 모드':\r\n              newData = channelData.filter(item => item.callMode === secondSelect);\r\n              break;\r\n            case '채널 그룹 모드':\r\n              newData = channelData.filter(item => item.channelGroupMode === secondSelect);\r\n              break;\r\n          }\r\n        }else if(firstSelect === '캠페인 모드'){\r\n          newData = channelData.filter(item => item.campaignMode != '');\r\n        }else if(firstSelect === '발신 모드'){\r\n          newData = channelData.filter(item => item.callMode != '');\r\n        }else if(firstSelect === '채널 그룹 모드'){\r\n          newData = channelData.filter(item => item.channelGroupMode != '');\r\n        }\r\n      }else{\r\n\r\n      }\r\n\r\n      if (thirdSelect !== '상태전체') {\r\n        newData = newData.filter(item => item.status === thirdSelect);\r\n      }\r\n\r\n      setFilteredData(newData);\r\n    }\r\n  }, [firstSelect, secondSelect, thirdSelect, channelData]);\r\n\r\n  // 상태별 카운트 계산\r\n  const statusCounts = filteredData.reduce((acc, curr) => {\r\n    acc[curr.status] = (acc[curr.status] || 0) + 1;\r\n    return acc;\r\n  }, {} as Record<ChannelStatus, number>);\r\n\r\n  // 도넛 차트 데이터 준비\r\n  const chartData = Object.entries(statusCounts).map(([name, value]) => ({\r\n    name: name + ':' + value,\r\n    value: (value / filteredData.length) * 100\r\n  }));\r\n\r\n  // 그리드 컬럼 정의\r\n  const columns = [\r\n    { key: 'CIDSNO', name: 'CIDSNO' },\r\n    { key: 'CHNO', name: 'CHNO' },\r\n    { \r\n      key: 'status', \r\n      name: '상태',\r\n      formatter: ({ row }: { row: ChannelData }) => (\r\n        <div\r\n          className=\"px-2 py-1 rounded text-center\"\r\n          style={{ \r\n            backgroundColor: COLORS[row.status as ChannelStatus],\r\n            color: 'white'\r\n          }}\r\n        >\r\n          {row.status}\r\n        </div>\r\n      )\r\n    }\r\n  ];\r\n\r\n  // 첫 번째 Select 변경 시 두 번째 Select 초기화\r\n  const handleFirstSelectChange = (value: FilterMode) => {\r\n    setFirstSelect(value);\r\n    setSecondSelect(' ');\r\n  };\r\n\r\n  // 채널 모니터링 api 호출\r\n  const { mutate: fetchChannelStateMonitoringList } = useApiForChannelStateMonitoringList({\r\n    onSuccess: (data) => {  \r\n      const dataList = data.dialerChannelStatusList.sort((a, b) => parseInt(a.id) - parseInt(b.id))\r\n      .map(item => ({\r\n        CIDSNO: item.deviceId,\r\n        CHNO: `CH${item.id}`,\r\n        status: item.state === '0' ? 'NONE' : item.state === '1' ? 'IDLE' : 'BUSY' as ChannelStatus,\r\n        ChannelMode: item.assign_kind,\r\n        campaignMode: item.assign_kind === '1' ? item.dial_mode === '2147483647' ? '모든캠페인사용' : item.dial_mode === '0' ?'회선사용안함':item.dial_mode : '', \r\n        callMode: item.assign_kind === '2' ?item.dial_mode === '2147483647' ? '발신방법모두사용':item.dial_mode:'',\r\n        channelGroupMode: item.assign_kind === '3' ? item.dial_mode === '2147483647' ? '모든그룹아이디사용' : item.dial_mode === '0' ?'회선사용안함':item.dial_mode : '',\r\n      }));\r\n      setChannelData(dataList);  \r\n\r\n      const dataCampaignList = data.dialerChannelStatusList.filter(item => item.assign_kind === '1' && !(item.dial_mode == '0' || item.dial_mode == '2147483647') );\r\n      if( dataCampaignList.length > 0){\r\n        const tempData: ItemType[] = dataCampaignList.map(item => ({\r\n          key: `${item.dial_mode}`,\r\n          name: campaigns.filter(data => data.campaign_id === Number(item.dial_mode ))[0].campaign_name\r\n        }));\r\n        setSecondModeCampaign(tempData.sort((a,b) => parseInt(a.key) - parseInt(b.key)));\r\n      }\r\n      \r\n      const dataGroupList = data.dialerChannelStatusList.filter(item => item.assign_kind === '3' && !(item.dial_mode == '0' || item.dial_mode == '2147483647') );\r\n      if( dataGroupList.length > 0){\r\n        const tempData: ItemType[] = dataGroupList.map(item => ({\r\n          key: `${item.dial_mode}`,\r\n          name: campaigns.filter(data => data.campaign_id === Number(item.dial_mode ))[0].campaign_name\r\n        }));\r\n        setSecondModeCampaignGroup(tempData.sort((a,b) => parseInt(a.key) - parseInt(b.key)));\r\n      }\r\n      \r\n    }\r\n  });\r\n\r\n  // 장비 목록 조회\r\n  const { mutate: fetchDialingDeviceList } = useApiForDialingDevice({\r\n      onSuccess: (data) => {\r\n        if( data.result_data.length > 0 ){\r\n          const tempData: ItemType[] = data.result_data.map(item => ({\r\n            key: `${item.device_id}`,\r\n            name: item.device_name\r\n          }));\r\n          setSecondModeEquipment(tempData);\r\n        }\r\n        fetchChannelStateMonitoringList({deviceId:0});\r\n      }\r\n  });\r\n\r\n  useEffect(() => {   \r\n    fetchDialingDeviceList({\r\n        tenant_id_array: tenants.map(tenant => tenant.tenant_id)\r\n    });     \r\n    // fetchChannelStateMonitoringList({deviceId:0});\r\n    if( statisticsUpdateCycle > 0 ){        \r\n      const interval = setInterval(() => {  \r\n        fetchDialingDeviceList({\r\n            tenant_id_array: tenants.map(tenant => tenant.tenant_id)\r\n        });     \r\n        // fetchChannelStateMonitoringList({deviceId:0});\r\n      }, statisticsUpdateCycle * 1000);  \r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [statisticsUpdateCycle]);\r\n\r\n  return (\r\n    <div className=\"h-full\">\r\n      <div className=\"flex gap-5 h-full\">\r\n        {/* 도넛 차트 */}\r\n        <div className=\"w-full lg:w-1/2 h-full flex flex-col gap-5\">\r\n          <div className=\"text-sm h-[26px] min-h-[26px] flex flex-col justify-center\">\r\n            TOTAL {filteredData.length} CH\r\n          </div>\r\n          <div className=\"border p-2 rounded h-[calc(100%-46px)]\">\r\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n              <PieChart>\r\n                <Pie\r\n                  data={chartData}\r\n                  dataKey=\"value\"\r\n                  nameKey=\"name\"\r\n                  cx=\"50%\"\r\n                  cy=\"50%\"\r\n                  innerRadius={45}\r\n                  outerRadius={100}\r\n                  fill=\"#8884d8\"\r\n                  label={({ value }) => `${value.toFixed(0)}%`}\r\n                >\r\n                  {chartData.map((entry, index) => (\r\n                    <Cell \r\n                      key={`cell-${index}`} \r\n                      fill={COLORS[entry.name.split(':')[0] as ChannelStatus]} \r\n                    />\r\n                  ))}\r\n                </Pie>\r\n                <Tooltip />\r\n                <Legend \r\n                    verticalAlign=\"bottom\" \r\n                    align=\"center\"\r\n                    wrapperStyle={{ \r\n                        position: 'relative',\r\n                        bottom: '20%'\r\n                    }}\r\n                    />\r\n              </PieChart>\r\n            </ResponsiveContainer>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 데이터 그리드 */}\r\n        <div className=\"w-full lg:w-1/2 flex flex-col gap-5\">\r\n          <div className=\"flex gap-2\">\r\n            <Select onValueChange={handleFirstSelectChange}>\r\n              <SelectTrigger className=\"w-40\">\r\n                <SelectValue placeholder={firstSelect} />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                {firstSelectOptions.map(option => (\r\n                  <SelectItem key={option} value={option}>{option}</SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n\r\n            <Select \r\n              disabled={firstSelect === '전체'}\r\n              onValueChange={setSecondSelect}\r\n              value={secondSelect}\r\n            >\r\n              <SelectTrigger className=\"w-40\">\r\n                <SelectValue placeholder={secondSelect || \"선택\"} />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                {firstSelect === '장비번호' &&\r\n                  <SelectItem key={' '} value={' '}>{'전체장비'}</SelectItem> \r\n                }\r\n                {firstSelect === '캠페인 모드' &&\r\n                <>\r\n                  <SelectItem key={' '} value={' '}>{'전체캠페인'}</SelectItem> \r\n                  <SelectItem key={'회선사용안함'} value={'회선사용안함'}>{'회선사용안함'}</SelectItem> \r\n                  <SelectItem key={'모든캠페인사용'} value={'모든캠페인사용'}>{'모든캠페인사용'}</SelectItem> \r\n                </>\r\n                }\r\n                {firstSelect === '채널 그룹 모드' &&\r\n                <>\r\n                  <SelectItem key={' '} value={' '}>{'전체 채널그룹'}</SelectItem> \r\n                  <SelectItem key={'회선사용안함'} value={'회선사용안함'}>{'회선사용안함'}</SelectItem> \r\n                  <SelectItem key={'모든그룹아이디사용'} value={'모든그룹아이디사용'}>{'모든 그룹아이디 사용'}</SelectItem> \r\n                </>\r\n                }\r\n                {firstSelect === '장비번호'?\r\n                  secondModeEquipment.map(option => (\r\n                    <SelectItem key={option.key} value={option.key}>[{option.key}]{option.name}</SelectItem>\r\n                  ))\r\n                  :\r\n                  firstSelect === '캠페인 모드'?\r\n                  secondModeCampaign.map(option => (\r\n                    <SelectItem key={option.key} value={option.key}>{option.name}</SelectItem>\r\n                  ))\r\n                  :\r\n                  firstSelect === '발신 모드'?\r\n                  secondModeSender.map(option => (\r\n                    <SelectItem key={option.key} value={option.key}>{option.name}</SelectItem>\r\n                  ))\r\n                  :\r\n                  firstSelect === '채널 그룹 모드'?\r\n                  secondModeCampaignGroup.map(option => (\r\n                    <SelectItem key={option.key} value={option.key}>{option.name}</SelectItem>\r\n                  ))\r\n                  :\r\n                  secondModeAll.map(option => (\r\n                    <SelectItem key={option.key} value={option.key}>{option.name}</SelectItem>\r\n                  ))\r\n                }\r\n              </SelectContent>\r\n            </Select>\r\n\r\n            <Select onValueChange={setThirdSelect}>\r\n              <SelectTrigger className=\"w-40\">\r\n                <SelectValue placeholder={thirdSelect} />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                {thirdSelectOptions.map(option => (\r\n                  <SelectItem key={option} value={option}>{option}</SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n          <div className=\"grid-custom-wrap h-[calc(100%-46px)]\">\r\n            <DataGrid\r\n              columns={columns}\r\n              rows={filteredData}\r\n              className=\"grid-custom\"\r\n              rowHeight={30}\r\n              headerRowHeight={30}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChannelMonitor;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 4668, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4674, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/app/main/comp/CreateCampaignFormPanel/variables/variablesForCreateCampaignForm.ts"],"sourcesContent":["import { CustomAlertRequest } from \"@/components/shared/layout/CustomAlert\";\r\nimport { MainDataResponse } from \"@/features/auth/types/mainIndex\";\r\nimport { CampaignDialSpeedUpdateRequest, CampaignInfoUpdateRequest, CampaignSkillUpdateRequest } from \"@/features/campaignManager/types/campaignManagerIndex\";\r\nimport { CallPacingTabParam } from \"./interfacesForCreateCampaign\";\r\n\r\nexport const CampaignInfo: MainDataResponse = {\r\n    campaign_id: 0,\r\n    campaign_name: '',\r\n    campaign_desc: '',\r\n    site_code: 0,\r\n    service_code: 0,\r\n    start_flag: 0,\r\n    end_flag: 0,\r\n    dial_mode: 1,\r\n    callback_kind: 0,\r\n    delete_flag: 0,\r\n    list_count: 0,\r\n    list_redial_query: '',\r\n    next_campaign: 0,\r\n    token_id: 0,\r\n    phone_order: '',\r\n    phone_dial_try: [0, 0, 0, 0, 0],\r\n    dial_try_interval: 20,\r\n    trunk_access_code: '',\r\n    DDD_code: '',\r\n    power_divert_queue: 0,\r\n    max_ring: 0,\r\n    detect_mode: 0,\r\n    auto_dial_interval: 30,\r\n    creation_user: '',\r\n    creation_time: '',\r\n    creation_ip: '',\r\n    update_user: '',\r\n    update_time: '',\r\n    update_ip: '',\r\n    dial_phone_id: 0,\r\n    tenant_id: -1,\r\n    alarm_answer_count: 0,\r\n    dial_speed: 0,\r\n    parent_campaign: 0,\r\n    overdial_abandon_time: 2,\r\n    list_alarm_count: 100,\r\n    supervisor_phone: '',\r\n    reuse_count: 0,\r\n    use_counsel_result: 0,\r\n    use_list_alarm: 0,\r\n    redial_strategy: [\r\n        \"7:2.1.0\\/3.1.0\\/4.1.0\\/5.1.0\\/6.1.0\\/10.1.0\\/99.1.0\\/2501.1.0\\/2502.1.0\\/2503.1.0\\/2504.1.0\\/2505.1.0\\/2506.1.0\",\r\n        \"7:2.1.0\\/3.1.0\\/4.1.0\\/5.1.0\\/6.1.0\\/10.1.0\\/99.1.0\\/2501.1.0\\/2502.1.0\\/2503.1.0\\/2504.1.0\\/2505.1.0\\/2506.1.0\",\r\n        \"7:2.1.0\\/3.1.0\\/4.1.0\\/5.1.0\\/6.1.0\\/10.1.0\\/99.1.0\\/2501.1.0\\/2502.1.0\\/2503.1.0\\/2504.1.0\\/2505.1.0\\/2506.1.0\",\r\n        \"7:2.1.0\\/3.1.0\\/4.1.0\\/5.1.0\\/6.1.0\\/10.1.0\\/99.1.0\\/2501.1.0\\/2502.1.0\\/2503.1.0\\/2504.1.0\\/2505.1.0\\/2506.1.0\",\r\n        \"7:2.1.0\\/3.1.0\\/4.1.0\\/5.1.0\\/6.1.0\\/10.1.0\\/99.1.0\\/2501.1.0\\/2502.1.0\\/2503.1.0\\/2504.1.0\\/2505.1.0\\/2506.1.0\"\r\n    ],\r\n    dial_mode_option: 0,\r\n    user_option: '',\r\n    campaign_status: 0,\r\n    // 개별 속성 추가\r\n    phone_dial_try1: 0,\r\n    phone_dial_try2: 0,\r\n    phone_dial_try3: 0,\r\n    phone_dial_try4: 0,\r\n    phone_dial_try5: 0,\r\n    redial_strategy1: \"7:2.1.0/3.1.0/4.1.0/5.1.0/6.1.0/10.1.0/99.1.0/2501.1.0/2502.1.0/2503.1.0/2504.1.0/2505.1.0/2506.1.0\",\r\n    redial_strategy2: \"7:2.1.0/3.1.0/4.1.0/5.1.0/6.1.0/10.1.0/99.1.0/2501.1.0/2502.1.0/2503.1.0/2504.1.0/2505.1.0/2506.1.0\",\r\n    redial_strategy3: \"7:2.1.0/3.1.0/4.1.0/5.1.0/6.1.0/10.1.0/99.1.0/2501.1.0/2502.1.0/2503.1.0/2504.1.0/2505.1.0/2506.1.0\",\r\n    redial_strategy4: \"7:2.1.0/3.1.0/4.1.0/5.1.0/6.1.0/10.1.0/99.1.0/2501.1.0/2502.1.0/2503.1.0/2504.1.0/2505.1.0/2506.1.0\",\r\n    redial_strategy5: \"7:2.1.0/3.1.0/4.1.0/5.1.0/6.1.0/10.1.0/99.1.0/2501.1.0/2502.1.0/2503.1.0/2504.1.0/2505.1.0/2506.1.0\"\r\n}\r\n\r\nexport const CampaignManagerInfo: CampaignInfoUpdateRequest = {\r\n    campaign_id: 0,\r\n    campaign_name: '',\r\n    campaign_desc: '',\r\n    site_code: 0,\r\n    service_code: 0,\r\n    start_flag: 0,\r\n    end_flag: 0,\r\n    dial_mode: 1,\r\n    callback_kind: 2,\r\n    delete_flag: 0,\r\n    list_count: 0,\r\n    list_redial_query: '',\r\n    next_campaign: 0,\r\n    token_id: 0,\r\n    phone_order: '',\r\n    phone_dial_try1: 0,\r\n    phone_dial_try2: 0,\r\n    phone_dial_try3: 0,\r\n    phone_dial_try4: 0,\r\n    phone_dial_try5: 0,\r\n    dial_try_interval: 20,\r\n    trunk_access_code: '',\r\n    DDD_code: '',\r\n    power_divert_queue: '0',\r\n    max_ring: 0,\r\n    detect_mode: 0,\r\n    auto_dial_interval: 30,\r\n    creation_user: '',\r\n    creation_time: '',\r\n    creation_ip: '',\r\n    update_user: '',\r\n    update_time: '',\r\n    update_ip: '',\r\n    dial_phone_id: 0,\r\n    tenant_id: -1,\r\n    alarm_answer_count: 0,\r\n    dial_speed: 0,\r\n    parent_campaign: 0,\r\n    overdial_abandon_time: 2,\r\n    list_alarm_count: 100,\r\n    supervisor_phone: '',\r\n    reuse_count: 0,\r\n    use_counsel_result: 0,\r\n    use_list_alarm: 0,\r\n    redial_strategy1: \"7:2.1.0\\/3.1.0\\/4.1.0\\/5.1.0\\/6.1.0\\/10.1.0\\/99.1.0\\/2501.1.0\\/2502.1.0\\/2503.1.0\\/2504.1.0\\/2505.1.0\\/2506.1.0\",\r\n    redial_strategy2: \"7:2.1.0\\/3.1.0\\/4.1.0\\/5.1.0\\/6.1.0\\/10.1.0\\/99.1.0\\/2501.1.0\\/2502.1.0\\/2503.1.0\\/2504.1.0\\/2505.1.0\\/2506.1.0\",\r\n    redial_strategy3: \"7:2.1.0\\/3.1.0\\/4.1.0\\/5.1.0\\/6.1.0\\/10.1.0\\/99.1.0\\/2501.1.0\\/2502.1.0\\/2503.1.0\\/2504.1.0\\/2505.1.0\\/2506.1.0\",\r\n    redial_strategy4: \"7:2.1.0\\/3.1.0\\/4.1.0\\/5.1.0\\/6.1.0\\/10.1.0\\/99.1.0\\/2501.1.0\\/2502.1.0\\/2503.1.0\\/2504.1.0\\/2505.1.0\\/2506.1.0\",\r\n    redial_strategy5: \"7:2.1.0\\/3.1.0\\/4.1.0\\/5.1.0\\/6.1.0\\/10.1.0\\/99.1.0\\/2501.1.0\\/2502.1.0\\/2503.1.0\\/2504.1.0\\/2505.1.0\\/2506.1.0\",\r\n    dial_mode_option: 0,\r\n    user_option: '',\r\n    customer_char_id: 1,\r\n    counsel_script_id: 1,\r\n    announcement_id: 1,\r\n    campaign_level: 0,\r\n    outbound_sequence: '',\r\n}\r\n\r\nexport const errorMessage: CustomAlertRequest = {\r\n    isOpen: false,\r\n    message: '',\r\n    title: '캠페인',\r\n    type: '1',\r\n    onClose: () => { },\r\n    onCancle: () => { },\r\n};\r\n\r\nexport const CampaignSkillInfo: CampaignSkillUpdateRequest = {\r\n    campaign_id: 0,\r\n    skill_id: [],\r\n}\r\n\r\nexport const CampaignDialSpeedInfo: CampaignDialSpeedUpdateRequest = {\r\n    campaign_id: 0,\r\n    tenant_id: 0,\r\n    dial_speed: 0\r\n}\r\n\r\nexport const CampaignCallPacingTabInfo: CallPacingTabParam = {\r\n  changeYn: false,\r\n  campaignDialSpeedChangeYn: false,\r\n  onSave: false,\r\n  onClosed: false,\r\n  dial_mode: 0,\r\n  progressive_dial_speed: 0,\r\n  predictive_dial_speed: 0,\r\n}"],"names":[],"mappings":";;;;;;;;AAKO,MAAM,eAAiC;IAC1C,aAAa;IACb,eAAe;IACf,eAAe;IACf,WAAW;IACX,cAAc;IACd,YAAY;IACZ,UAAU;IACV,WAAW;IACX,eAAe;IACf,aAAa;IACb,YAAY;IACZ,mBAAmB;IACnB,eAAe;IACf,UAAU;IACV,aAAa;IACb,gBAAgB;QAAC;QAAG;QAAG;QAAG;QAAG;KAAE;IAC/B,mBAAmB;IACnB,mBAAmB;IACnB,UAAU;IACV,oBAAoB;IACpB,UAAU;IACV,aAAa;IACb,oBAAoB;IACpB,eAAe;IACf,eAAe;IACf,aAAa;IACb,aAAa;IACb,aAAa;IACb,WAAW;IACX,eAAe;IACf,WAAW,CAAC;IACZ,oBAAoB;IACpB,YAAY;IACZ,iBAAiB;IACjB,uBAAuB;IACvB,kBAAkB;IAClB,kBAAkB;IAClB,aAAa;IACb,oBAAoB;IACpB,gBAAgB;IAChB,iBAAiB;QACb;QACA;QACA;QACA;QACA;KACH;IACD,kBAAkB;IAClB,aAAa;IACb,iBAAiB;IACjB,WAAW;IACX,iBAAiB;IACjB,iBAAiB;IACjB,iBAAiB;IACjB,iBAAiB;IACjB,iBAAiB;IACjB,kBAAkB;IAClB,kBAAkB;IAClB,kBAAkB;IAClB,kBAAkB;IAClB,kBAAkB;AACtB;AAEO,MAAM,sBAAiD;IAC1D,aAAa;IACb,eAAe;IACf,eAAe;IACf,WAAW;IACX,cAAc;IACd,YAAY;IACZ,UAAU;IACV,WAAW;IACX,eAAe;IACf,aAAa;IACb,YAAY;IACZ,mBAAmB;IACnB,eAAe;IACf,UAAU;IACV,aAAa;IACb,iBAAiB;IACjB,iBAAiB;IACjB,iBAAiB;IACjB,iBAAiB;IACjB,iBAAiB;IACjB,mBAAmB;IACnB,mBAAmB;IACnB,UAAU;IACV,oBAAoB;IACpB,UAAU;IACV,aAAa;IACb,oBAAoB;IACpB,eAAe;IACf,eAAe;IACf,aAAa;IACb,aAAa;IACb,aAAa;IACb,WAAW;IACX,eAAe;IACf,WAAW,CAAC;IACZ,oBAAoB;IACpB,YAAY;IACZ,iBAAiB;IACjB,uBAAuB;IACvB,kBAAkB;IAClB,kBAAkB;IAClB,aAAa;IACb,oBAAoB;IACpB,gBAAgB;IAChB,kBAAkB;IAClB,kBAAkB;IAClB,kBAAkB;IAClB,kBAAkB;IAClB,kBAAkB;IAClB,kBAAkB;IAClB,aAAa;IACb,kBAAkB;IAClB,mBAAmB;IACnB,iBAAiB;IACjB,gBAAgB;IAChB,mBAAmB;AACvB;AAEO,MAAM,eAAmC;IAC5C,QAAQ;IACR,SAAS;IACT,OAAO;IACP,MAAM;IACN,SAAS,KAAQ;IACjB,UAAU,KAAQ;AACtB;AAEO,MAAM,oBAAgD;IACzD,aAAa;IACb,UAAU,EAAE;AAChB;AAEO,MAAM,wBAAwD;IACjE,aAAa;IACb,WAAW;IACX,YAAY;AAChB;AAEO,MAAM,4BAAgD;IAC3D,UAAU;IACV,2BAA2B;IAC3B,QAAQ;IACR,UAAU;IACV,WAAW;IACX,wBAAwB;IACxB,uBAAuB;AACzB"}},
    {"offset": {"line": 4838, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4844, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/app/main/comp/NewCampaignManager/NewCampaignManagerDetail.tsx"],"sourcesContent":["\"use client\";\r\n// components/CampaignManager/CampaignManagerDetail.tsx\r\nimport { useMainStore, useCampainManagerStore, useTabStore, useAuthStore } from '@/store';\r\nimport Image from 'next/image'\r\nimport TitleWrap from \"@/components/shared/TitleWrap\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { CustomInput } from \"@/components/shared/CustomInput\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/shared/CustomSelect\";\r\nimport CampaignTab from '../CampaignManager/CampaignTab';\r\nimport { MainDataResponse } from '@/features/auth/types/mainIndex';\r\nimport { CampaignSkillUpdateRequest\r\n  , CampaignScheDuleListDataResponse\r\n  , CallingNumberListDataResponse \r\n  , CampaignDialSpeedUpdateRequest\r\n} from '@/features/campaignManager/types/campaignManagerIndex';\r\nimport { useEffect, useState } from 'react';\r\nimport SkillListPopup from '@/components/shared/layout/SkillListPopup';\r\nimport { useApiForCampaignSkillUpdate } from '@/features/campaignManager/hooks/useApiForCampaignSkillUpdate';\r\nimport { useApiForCampaignManagerInsert,CampaignInfoInsertRequest } from '@/features/campaignManager/hooks/useApiForCampaignManagerInsert';\r\nimport { useApiForCampaignScheduleInsert } from '@/features/campaignManager/hooks/useApiForCampaignScheduleInsert';\r\nimport { useApiForCallingNumberInsert } from '@/features/campaignManager/hooks/useApiForCallingNumberInsert';\r\nimport { useApiForDialSpeedUpdate } from '@/features/campaignManager/hooks/useApiForDialSpeedUpdate';\r\nimport { useApiForMain } from '@/features/auth/hooks/useApiForMain';\r\nimport CustomAlert, { CustomAlertRequest } from '@/components/shared/layout/CustomAlert';\r\nimport CallingNumberPopup from '@/components/shared/layout/CallingNumberPopup';\r\nimport Cookies from 'js-cookie';\r\nimport { useRouter } from 'next/navigation';\r\nimport { CommonButton } from \"@/components/shared/CommonButton\";\r\n\r\nexport interface TabItem {\r\n  id: number;\r\n  uniqueKey: string;\r\n  title: string;\r\n  icon: string;\r\n  href: string;\r\n  content: React.ReactNode;\r\n  campaignId?: string;\r\n}\r\n\r\nconst dialModeList = [\r\n  {dial_id:1, dial_name: 'Power'},\r\n  {dial_id:2, dial_name: 'Progressive'},\r\n  {dial_id:3, dial_name: 'Predictive'},\r\n  {dial_id:4, dial_name: 'System Preview'},\r\n];\r\n\r\nconst errorMessage: CustomAlertRequest = {\r\n  isOpen: false,\r\n  message: '',\r\n  title: '캠페인',\r\n  type: '1',\r\n  onClose: () => {},\r\n  onCancle: () => {},\r\n};\r\n\r\nconst CampaignSkillInfo: CampaignSkillUpdateRequest = {\r\n  campaign_id: 0,\r\n  skill_id: [],\r\n}\r\n\r\nconst CallingNumberInfo: CallingNumberListDataResponse = {\r\n  campaign_id: 0,\r\n  calling_number: ''\r\n}\r\n\r\nconst CampaignDialSpeedInfo: CampaignDialSpeedUpdateRequest = {\r\n  campaign_id: 0,\r\n  tenant_id: 0,\r\n  dial_speed: 0\r\n}\r\n\r\nconst CampaignManagerInfo: CampaignInfoInsertRequest = {\r\n  campaign_id: 0,\r\n  campaign_name: '',\r\n  campaign_desc: '',\r\n  site_code: 0,\r\n  service_code: 0,\r\n  start_flag: 0,\r\n  end_flag: 0,\r\n  dial_mode: 1,\r\n  callback_kind: 2,\r\n  delete_flag: 0,\r\n  list_count: 0,\r\n  list_redial_query: '',\r\n  next_campaign: 0,\r\n  token_id: 0,\r\n  phone_order: '',\r\n  phone_dial_try1: 0,\r\n  phone_dial_try2: 0,\r\n  phone_dial_try3: 0,\r\n  phone_dial_try4: 0,\r\n  phone_dial_try5: 0,\r\n  dial_try_interval: 20,\r\n  trunk_access_code: '',\r\n  DDD_code: '',\r\n  power_divert_queue: '0',\r\n  max_ring: 0,\r\n  detect_mode: 1,\r\n  auto_dial_interval: 30,\r\n  creation_user: '',\r\n  creation_time: '',\r\n  creation_ip: '',\r\n  update_user: '',\r\n  update_time: '',\r\n  update_ip: '',\r\n  dial_phone_id: 0,\r\n  tenant_id: -1,\r\n  alarm_answer_count: 0,\r\n  dial_speed: 0,\r\n  parent_campaign: 0,\r\n  overdial_abandon_time: 2,\r\n  list_alarm_count: 100,\r\n  supervisor_phone: '',\r\n  reuse_count: 0,\r\n  use_counsel_result: 0,\r\n  use_list_alarm: 0,\r\n  redial_strategy1: \"7:2.1.0\\/3.1.0\\/4.1.0\\/5.1.0\\/6.1.0\\/10.1.0\\/99.1.0\\/2501.1.0\\/2502.1.0\\/2503.1.0\\/2504.1.0\\/2505.1.0\\/2506.1.0\",\r\n  redial_strategy2: \"7:2.1.0\\/3.1.0\\/4.1.0\\/5.1.0\\/6.1.0\\/10.1.0\\/99.1.0\\/2501.1.0\\/2502.1.0\\/2503.1.0\\/2504.1.0\\/2505.1.0\\/2506.1.0\",\r\n  redial_strategy3: \"7:2.1.0\\/3.1.0\\/4.1.0\\/5.1.0\\/6.1.0\\/10.1.0\\/99.1.0\\/2501.1.0\\/2502.1.0\\/2503.1.0\\/2504.1.0\\/2505.1.0\\/2506.1.0\",\r\n  redial_strategy4: \"7:2.1.0\\/3.1.0\\/4.1.0\\/5.1.0\\/6.1.0\\/10.1.0\\/99.1.0\\/2501.1.0\\/2502.1.0\\/2503.1.0\\/2504.1.0\\/2505.1.0\\/2506.1.0\",\r\n  redial_strategy5: \"7:2.1.0\\/3.1.0\\/4.1.0\\/5.1.0\\/6.1.0\\/10.1.0\\/99.1.0\\/2501.1.0\\/2502.1.0\\/2503.1.0\\/2504.1.0\\/2505.1.0\\/2506.1.0\",\r\n  dial_mode_option: 0,\r\n  user_option: '',\r\n  customer_char_id: 1,\r\n  counsel_script_id: 1,\r\n  announcement_id: 1,\r\n  campaign_level: 0,\r\n  outbound_sequence: '',\r\n}\r\n\r\nexport const CampaignInfo: MainDataResponse = {\r\n  campaign_id: 0,\r\n  campaign_name: '',\r\n  campaign_desc: '',\r\n  site_code: 0,\r\n  service_code: 0,\r\n  start_flag: 0,\r\n  end_flag: 0,\r\n  dial_mode: 1,\r\n  callback_kind: 0,\r\n  delete_flag: 0,\r\n  list_count: 0,\r\n  list_redial_query: '',\r\n  next_campaign: 0,\r\n  token_id: 0,\r\n  phone_order: '',\r\n  phone_dial_try: [0,0,0,0,0],\r\n  dial_try_interval: 20,\r\n  trunk_access_code: '',\r\n  DDD_code: '',\r\n  power_divert_queue: 0,\r\n  max_ring: 0,\r\n  detect_mode: 1,\r\n  auto_dial_interval: 30,\r\n  creation_user: '',\r\n  creation_time: '',\r\n  creation_ip: '',\r\n  update_user: '',\r\n  update_time: '',\r\n  update_ip: '',\r\n  dial_phone_id: 0,\r\n  tenant_id: -1,\r\n  alarm_answer_count: 0,\r\n  dial_speed: 0,\r\n  parent_campaign: 0,\r\n  overdial_abandon_time: 2,\r\n  list_alarm_count: 100,\r\n  supervisor_phone: '',\r\n  reuse_count: 0,\r\n  use_counsel_result: 0,\r\n  use_list_alarm: 0,\r\n  redial_strategy: [\r\n    \"7:2.1.0\\/3.1.0\\/4.1.0\\/5.1.0\\/6.1.0\\/10.1.0\\/99.1.0\\/2501.1.0\\/2502.1.0\\/2503.1.0\\/2504.1.0\\/2505.1.0\\/2506.1.0\",\r\n    \"7:2.1.0\\/3.1.0\\/4.1.0\\/5.1.0\\/6.1.0\\/10.1.0\\/99.1.0\\/2501.1.0\\/2502.1.0\\/2503.1.0\\/2504.1.0\\/2505.1.0\\/2506.1.0\",\r\n    \"7:2.1.0\\/3.1.0\\/4.1.0\\/5.1.0\\/6.1.0\\/10.1.0\\/99.1.0\\/2501.1.0\\/2502.1.0\\/2503.1.0\\/2504.1.0\\/2505.1.0\\/2506.1.0\",\r\n    \"7:2.1.0\\/3.1.0\\/4.1.0\\/5.1.0\\/6.1.0\\/10.1.0\\/99.1.0\\/2501.1.0\\/2502.1.0\\/2503.1.0\\/2504.1.0\\/2505.1.0\\/2506.1.0\",\r\n    \"7:2.1.0\\/3.1.0\\/4.1.0\\/5.1.0\\/6.1.0\\/10.1.0\\/99.1.0\\/2501.1.0\\/2502.1.0\\/2503.1.0\\/2504.1.0\\/2505.1.0\\/2506.1.0\"\r\n],\r\n  dial_mode_option: 0,\r\n  user_option: '',\r\n  campaign_status: 0\r\n}\r\n\r\nexport interface OperationTimeParam {\r\n  changeYn: boolean;\r\n  campaignInfoChangeYn: boolean;\r\n  campaignScheduleChangeYn: boolean;\r\n  onSave: boolean;\r\n  onClosed: boolean;\r\n  campaign_id: number;\r\n  start_date: string;\r\n  end_date: string;\r\n  start_time: string[];\r\n  end_time: string[];\r\n  start_flag: string;\r\n}\r\n\r\nexport interface OutgoingOrderTabParam {\r\n  changeYn: boolean;\r\n  campaignInfoChangeYn: boolean;\r\n  onSave: boolean;\r\n  onClosed: boolean;\r\n  dial_phone_id: number;\r\n  phone_order: string;\r\n  phone_dial_try: number[];\r\n}\r\n\r\nexport interface OutgoingStrategyTabParam {\r\n  changeYn: boolean;\r\n  campaignInfoChangeYn: boolean;\r\n  onSave: boolean;\r\n  onClosed: boolean;\r\n  onInit: boolean;\r\n  redial_strategy: string[];\r\n}\r\n\r\nexport interface OutgoingMethodTabParam {\r\n  changeYn: boolean;\r\n  campaignInfoChangeYn: boolean;\r\n  onSave: boolean;\r\n  onClosed: boolean;\r\n  trunk_access_code: string;      //Trunk Access Code\r\n  dial_try_interval: number;      //재시도 간격(초)\r\n  alarm_answer_count: number;     //콜 목표량\r\n  overdial_abandon_time: number;  //포기호 처리시간(초)\r\n  detect_mode: number;            //기계음 처리 - 자동응답기 처리 1 : 컬러링 판별 후 사람만 연결, 2 : 컬러링 판별 후 사람/기계음 연결, 3 : 기계음/사람 무조건 연결\r\n  auto_dial_interval: number;     //자동 다이얼 시\r\n  power_divert_queue: number;     //연결 IVR NO 및 다이얼 모드\r\n  next_campaign: number;          //연결 캠페인\r\n  DDD_code: string;               //DDD Number - 지역 번호\r\n  callback_kind: number;          //연결구분 - 콜백구분 0 : 일반 캠페인(Default), 1 : 무한 콜백, 2 : 일반 콜백\r\n  max_ring: number;               //최대 링 횟수\r\n  token_id: number;               //토큰 ID\r\n  use_counsel_result: number;     //상담결과 등록 여부 - 0 : 미사용, 1 : 사용\r\n  dial_mode_option: number;       //다이얼 모드 옵션 - 발신 모드별 옵션 설정(system preview 에서만 사용)\r\n  user_option: string;            //제한 호수 비율\r\n}\r\n\r\nexport interface AdditionalInfoTabParam {\r\n  changeYn: boolean;\r\n  campaignInfoChangeYn: boolean;\r\n  onSave: boolean;\r\n  onClosed: boolean;\r\n}\r\n\r\nconst today = new Date();\r\nconst CampaignScheduleInfo: CampaignScheDuleListDataResponse = {\r\n  campaign_id: 0,\r\n  tenant_id: 0,\r\n  start_date: today.getFullYear() + ('0' + (today.getMonth() + 1)).slice(-2) + ('0' + today.getDate()).slice(-2),\r\n  end_date: today.getFullYear() + ('0' + (today.getMonth() + 1)).slice(-2) + ('0' + today.getDate()).slice(-2),\r\n  start_time: [],\r\n  end_time: []\r\n}\r\n\r\nexport interface CallPacingTabParam {\r\n  changeYn: boolean;\r\n  campaignDialSpeedChangeYn: boolean;\r\n  onSave: boolean;\r\n  onClosed: boolean;\r\n  dial_mode: number;\r\n  progressive_dial_speed: number; //PDS 발신 속도(1~100)\r\n  predictive_dial_speed: number;  //PDS 발신 속도(1~100)\r\n}\r\n\r\nconst CampaignCallPacingTabInfo: CallPacingTabParam = {\r\n  changeYn: false,\r\n  campaignDialSpeedChangeYn: false,\r\n  onSave: false,\r\n  onClosed: false,\r\n  dial_mode: 0,\r\n  progressive_dial_speed: 0,\r\n  predictive_dial_speed: 0,\r\n}\r\n\r\nexport interface CallbackTabParam {\r\n  changeYn: boolean;\r\n  campaignInfoChangeYn: boolean;\r\n  onSave: boolean;\r\n  onClosed: boolean;\r\n  callback_kind: number;\r\n  service_code: number;\r\n}\r\n\r\nexport interface NotificationTabParam {\r\n  changeYn: boolean;\r\n  campaignInfoChangeYn: boolean;\r\n  onSave: boolean;\r\n  onClosed: boolean;\r\n  use_list_alarm: number;\r\n  list_alarm_count: number;\r\n  supervisor_phone: string;\r\n}\r\n\r\ntype Props = {\r\n  tenantId?: string;\r\n}\r\n\r\nconst NewCampaignManagerDetail: React.FC<Props> = ({tenantId}: Props) => {\r\n  const [tempCampaignManagerInfo, setTempCampaignManagerInfo] = useState<CampaignInfoInsertRequest>(CampaignManagerInfo);\r\n  const [tempCampaignInfo, setTempCampaignsInfo] = useState<MainDataResponse>(CampaignInfo);\r\n  const [tempCampaignSkills, setTempCampaignSkills] = useState<CampaignSkillUpdateRequest>(CampaignSkillInfo);\r\n  const [tempCallingNumberInfo, setTempCallingNumberInfo] = useState<CallingNumberListDataResponse>(CallingNumberInfo);\r\n  const [tempCampaignSchedule, setTempCampaignSchedule] = useState<CampaignScheDuleListDataResponse>(CampaignScheduleInfo);\r\n  const [tempCampaignDialSpeedInfo, setTempCampaignDialSpeedInfo] = useState<CampaignDialSpeedUpdateRequest>(CampaignDialSpeedInfo);\r\n  const [tempCampaignDialSpeedInfoParam, setTempCampaignDialSpeedInfoParam] = useState<CallPacingTabParam>(CampaignCallPacingTabInfo);\r\n  const [changeYn, setChangeYn] = useState<boolean>(false); // 변경여부\r\n  const [campaignInfoChangeYn, setCampaignInfoChangeYn] = useState<boolean>(true); // 캠페인정보 변경여부\r\n  const [campaignSkillChangeYn, setCampaignSkillChangeYn] = useState<boolean>(false); // 캠페인스킬 변경여부\r\n  const [callingNumberChangeYn, setCallingNumberChangeYn] = useState<boolean>(false); // 캠페인 발신번호 변경여부\r\n  const [campaignDialSpeedChangeYn, setCampaignDialSpeedChangeYn] = useState<boolean>(false); // 캠페인 발신속도 변경여부\r\n  const [campaignSaveYn, setCampaignSaveYn] = useState<boolean>(false); // 캠페인 저장여부\r\n  const { tenants\r\n    , setCampaigns\r\n    , selectedCampaign\r\n    , setSelectedCampaign\r\n  } = useMainStore();\r\n  const { removeTab, activeTabId, activeTabKey, addTab, openedTabs, setActiveTab } = useTabStore();\r\n  const { callingNumbers, campaignSkills, schedules, setCampaignSkills, setSchedules, setCallingNumbers } = useCampainManagerStore();\r\n  const [ inputSkills, setInputSkills ] = useState('');\r\n  const [ inputCallingNumber, setInputCallingNumber ] = useState('');\r\n  const [ skillPopupState, setSkillPopupState] = useState({\r\n    isOpen: false,\r\n    param: [],\r\n    tenantId: 0,\r\n    type: '1',\r\n  });\r\n  const [alertState, setAlertState] = useState<CustomAlertRequest>(errorMessage);\r\n  const [ callingNumberPopupState, setCallingNumberPopupState] = useState({\r\n    isOpen: false,\r\n    param: [],\r\n    tenantId: 0,\r\n    type: '1',\r\n  });\r\n  const router = useRouter();\r\n  const [tempCampaignId, setTempCampaignId] = useState<number>(0);\r\n  const { id, menu_role_id, session_key, tenant_id } = useAuthStore();\r\n\r\n  //input data change\r\n  const handleInputData = (value:any, col:string) => {\r\n    if( col === 'campaign_id' && value !== '' ){\r\n      const numValue = Number(value);\r\n      setTempCampaignsInfo({\r\n          ...tempCampaignInfo,\r\n          campaign_id: numValue\r\n      });\r\n      setTempCampaignManagerInfo({\r\n          ...tempCampaignManagerInfo,\r\n          campaign_id: numValue\r\n      });\r\n    }    \r\n    if( col === 'campaign_name' ){\r\n      setTempCampaignsInfo({\r\n        ...tempCampaignInfo,\r\n        campaign_name: value\r\n      });\r\n      setTempCampaignManagerInfo({\r\n        ...tempCampaignManagerInfo,\r\n        campaign_name: value\r\n      });\r\n    }\r\n    if( col === 'campaign_desc' ){\r\n      setTempCampaignsInfo({\r\n        ...tempCampaignInfo,\r\n        campaign_desc: value\r\n      });\r\n      setTempCampaignManagerInfo({\r\n        ...tempCampaignManagerInfo,\r\n        campaign_desc: value\r\n      });\r\n    }\r\n  }\r\n\r\n  //select data change\r\n  const handleSelectChange = (value: string, type: 'tenant' | 'dialMode') => {\r\n    if( type === 'tenant' && value !== '' ){\r\n      setTempCampaignsInfo({\r\n        ...tempCampaignInfo,\r\n        tenant_id: Number(value)\r\n      });\r\n      setTempCampaignManagerInfo({\r\n        ...tempCampaignManagerInfo,\r\n        tenant_id: Number(value)\r\n      });\r\n    }  \r\n    if( type === 'dialMode' && value !== '' ){\r\n      console.log('dialMode');\r\n      setTempCampaignsInfo({\r\n        ...tempCampaignInfo,\r\n        dial_mode: Number(value)\r\n      });\r\n      setTempCampaignManagerInfo({\r\n        ...tempCampaignManagerInfo,\r\n        dial_mode: Number(value)\r\n      });\r\n      setTempCampaignDialSpeedInfoParam({...tempCampaignDialSpeedInfoParam,\r\n        dial_mode: Number(value)\r\n      });\r\n    }  \r\n  }\r\n  //스킬 선택 팝업 버튼이벤트\r\n  const handleOpenSkillPopup = () => {\r\n    console.log(tempCampaignInfo.tenant_id);\r\n    if( tempCampaignInfo.tenant_id < 0){\r\n      setAlertState({\r\n        ...errorMessage,\r\n        isOpen: true,\r\n        message: '테넌트를 선택해 주세요.',\r\n        type: '2',\r\n        onClose: () => setAlertState((prev) => ({ ...prev, isOpen: false }))\r\n      });\r\n    }else{\r\n      setSkillPopupState({...skillPopupState,\r\n        isOpen: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  //스킬 선택 팝업\r\n  const handleSelectSkills = (param: string) => {\r\n    if( tempCampaignSkills.skill_id.join(',') !== param ){\r\n      setCampaignSkillChangeYn(true);\r\n      setInputSkills(param);\r\n      setTempCampaignSkills({...tempCampaignSkills\r\n        , campaign_id: tempCampaignInfo.campaign_id\r\n        , skill_id: param.split(',').map((data) => Number(data))\r\n      });\r\n    }\r\n    setSkillPopupState((prev) => ({ ...prev, isOpen: false }))\r\n  }\r\n  \r\n  //발신번호 팝업\r\n  const handleCallingNumlber = (param: string) => {\r\n    if( inputCallingNumber !== param ){\r\n      setCallingNumberChangeYn(true);\r\n      setInputCallingNumber(param);\r\n      setTempCallingNumberInfo({...tempCallingNumberInfo\r\n        , campaign_id: tempCampaignInfo.campaign_id\r\n        , calling_number: param\r\n      });\r\n    }\r\n    setCallingNumberPopupState((prev) => ({ ...prev, isOpen: false }))\r\n  }\r\n\r\n  //캠페인 동작시간 탭 변경\r\n  const handleCampaignScheduleChange = (value: OperationTimeParam) => {\r\n    if( value.campaignInfoChangeYn ){\r\n      setTempCampaignManagerInfo({...tempCampaignManagerInfo\r\n        , start_flag: Number(value.start_flag)\r\n      });\r\n      setTempCampaignsInfo({...tempCampaignInfo\r\n        , start_flag: Number(value.start_flag)\r\n      });\r\n    }\r\n    if( value.campaignScheduleChangeYn ){\r\n      setTempCampaignSchedule({...tempCampaignSchedule\r\n        , campaign_id: value.campaign_id\r\n        , start_date: value.start_date\r\n        , end_date: value.end_date\r\n        , start_time: value.start_time\r\n        , end_time: value.end_time\r\n      });\r\n    }\r\n    if( value.onSave ){\r\n      setCampaignSaveYn(false);\r\n      handleCampaignSave();\r\n    }\r\n    if( value.onClosed ){\r\n      handleCampaignClosed();\r\n    }\r\n  }\r\n  \r\n  //캠페인 발신순서 탭 변경\r\n  const handleCampaignOutgoingOrderChange = (value: OutgoingOrderTabParam) => {\r\n    if( value.campaignInfoChangeYn ){\r\n      setTempCampaignsInfo({...tempCampaignInfo\r\n        , dial_phone_id: Number(value.dial_phone_id)\r\n        , phone_dial_try: value.phone_dial_try\r\n        , phone_order: value.phone_order\r\n      });\r\n      setTempCampaignManagerInfo({...tempCampaignManagerInfo\r\n        , dial_phone_id: Number(value.dial_phone_id)\r\n        , phone_dial_try1: value.phone_dial_try[0]\r\n        , phone_dial_try2: value.phone_dial_try[1]\r\n        , phone_dial_try3: value.phone_dial_try[2]\r\n        , phone_dial_try4: value.phone_dial_try[3]\r\n        , phone_dial_try5: value.phone_dial_try[4]\r\n        , phone_order: value.phone_order\r\n      });\r\n    }  \r\n    if( value.onSave ){\r\n      setCampaignSaveYn(false);\r\n      handleCampaignSave();\r\n    }\r\n    if( value.onClosed ){\r\n      handleCampaignClosed();\r\n    }  \r\n  }\r\n  \r\n  //캠페인 발신전략 탭 변경\r\n  const handleOutgoingStrategyTabChange = (value: OutgoingStrategyTabParam) => {\r\n    if( value.campaignInfoChangeYn ){\r\n      setTempCampaignsInfo({...tempCampaignInfo\r\n        , redial_strategy: value.redial_strategy\r\n      });\r\n      setTempCampaignManagerInfo({...tempCampaignManagerInfo\r\n        , redial_strategy1: value.redial_strategy[0]\r\n        , redial_strategy2: value.redial_strategy[1]\r\n        , redial_strategy3: value.redial_strategy[2]\r\n        , redial_strategy4: value.redial_strategy[3]\r\n        , redial_strategy5: value.redial_strategy[4]\r\n      });\r\n    }  \r\n    //초기화버튼 클릭시\r\n    if( value.onInit ){\r\n      setTempCampaignsInfo({...tempCampaignInfo\r\n        , redial_strategy: CampaignInfo.redial_strategy\r\n      });\r\n      setTempCampaignManagerInfo({...tempCampaignManagerInfo\r\n        , redial_strategy1: CampaignManagerInfo.redial_strategy1\r\n        , redial_strategy2: CampaignManagerInfo.redial_strategy2\r\n        , redial_strategy3: CampaignManagerInfo.redial_strategy3\r\n        , redial_strategy4: CampaignManagerInfo.redial_strategy4\r\n        , redial_strategy5: CampaignManagerInfo.redial_strategy5\r\n      });\r\n    }\r\n    if( value.onSave ){\r\n      setCampaignSaveYn(false);\r\n      handleCampaignSave();\r\n    }\r\n    if( value.onClosed ){\r\n      handleCampaignClosed();\r\n    }  \r\n  }\r\n  \r\n  //캠페인 발신방법 탭 변경\r\n  const handleOutgoingMethodTabChange = (value: OutgoingMethodTabParam) => {\r\n    if( value.campaignInfoChangeYn ){\r\n      setTempCampaignsInfo({...tempCampaignInfo\r\n        ,trunk_access_code : value.trunk_access_code\r\n        ,dial_try_interval : value.dial_try_interval\r\n        ,alarm_answer_count : value.alarm_answer_count\r\n        ,overdial_abandon_time : value.overdial_abandon_time\r\n        ,detect_mode : value.detect_mode\r\n        ,auto_dial_interval : value.auto_dial_interval\r\n        ,power_divert_queue : value.power_divert_queue\r\n        ,next_campaign : value.next_campaign\r\n        ,DDD_code : value.DDD_code\r\n        ,callback_kind : value.callback_kind\r\n        ,max_ring : value.max_ring\r\n        ,token_id : value.token_id\r\n        ,use_counsel_result : value.use_counsel_result\r\n        ,dial_mode_option : value.dial_mode_option\r\n        ,user_option : value.user_option\r\n      });\r\n      setTempCampaignManagerInfo({...tempCampaignManagerInfo\r\n        ,trunk_access_code : value.trunk_access_code\r\n        ,dial_try_interval : value.dial_try_interval\r\n        ,alarm_answer_count : value.alarm_answer_count\r\n        ,overdial_abandon_time : value.overdial_abandon_time\r\n        ,detect_mode : value.detect_mode\r\n        ,auto_dial_interval : value.auto_dial_interval\r\n        ,power_divert_queue : value.power_divert_queue+''\r\n        ,next_campaign : value.next_campaign\r\n        ,DDD_code : value.DDD_code\r\n        ,callback_kind : value.callback_kind\r\n        ,max_ring : value.max_ring\r\n        ,token_id : value.token_id\r\n        ,use_counsel_result : value.use_counsel_result\r\n        ,dial_mode_option : value.dial_mode_option\r\n        ,user_option : value.user_option\r\n      });\r\n    }  \r\n    if( value.onSave ){\r\n      setCampaignSaveYn(false);\r\n      handleCampaignSave();\r\n    }\r\n    if( value.onClosed ){\r\n      handleCampaignClosed();\r\n    }  \r\n  }\r\n\r\n  //캠페인 콜페이싱 탭 변경\r\n  const handleCallPacingTabChange = (value: CallPacingTabParam) => {\r\n    if( value.campaignDialSpeedChangeYn ){\r\n      setCampaignDialSpeedChangeYn(value.campaignDialSpeedChangeYn);\r\n      setTempCampaignDialSpeedInfoParam({...tempCampaignDialSpeedInfoParam\r\n        , predictive_dial_speed : value.predictive_dial_speed\r\n        , progressive_dial_speed: value.progressive_dial_speed\r\n      });\r\n      setTempCampaignDialSpeedInfo({...tempCampaignDialSpeedInfo\r\n        , dial_speed : value.dial_mode === 2? Math.floor(value.progressive_dial_speed): value.predictive_dial_speed\r\n      });\r\n    }  \r\n    if( value.onSave ){\r\n      setCampaignSaveYn(false);\r\n      handleCampaignSave();\r\n    }\r\n    if( value.onClosed ){\r\n      handleCampaignClosed();\r\n    }  \r\n  }\r\n\r\n  //캠페인 콜백 탭 변경\r\n  const handleCampaignCallbackTabChange = (value: OutgoingOrderTabParam) => {\r\n    if( value.campaignInfoChangeYn ){\r\n      setTempCampaignsInfo({...tempCampaignInfo\r\n        , dial_phone_id: Number(value.dial_phone_id)\r\n        , phone_dial_try: value.phone_dial_try\r\n        , phone_order: value.phone_order\r\n      });\r\n      setTempCampaignManagerInfo({...tempCampaignManagerInfo\r\n        , dial_phone_id: Number(value.dial_phone_id)\r\n        , phone_dial_try1: value.phone_dial_try[0]\r\n        , phone_dial_try2: value.phone_dial_try[1]\r\n        , phone_dial_try3: value.phone_dial_try[2]\r\n        , phone_dial_try4: value.phone_dial_try[3]\r\n        , phone_dial_try5: value.phone_dial_try[4]\r\n        , phone_order: value.phone_order\r\n      });\r\n    }  \r\n    if( value.onSave ){\r\n      setCampaignSaveYn(false);\r\n      handleCampaignSave();\r\n    }\r\n    if( value.onClosed ){\r\n      handleCampaignClosed();\r\n    }  \r\n  }\r\n  \r\n  //캠페인 콜백 탭 변경\r\n  const handleCallbackTabChange = (value: CallbackTabParam) => {    \r\n    if( value.campaignInfoChangeYn ){\r\n      setTempCampaignsInfo({...tempCampaignInfo\r\n        , callback_kind: Number(value.callback_kind)\r\n        , service_code: value.service_code\r\n      });\r\n      setTempCampaignManagerInfo({...tempCampaignManagerInfo\r\n        , callback_kind: Number(value.callback_kind)\r\n        , service_code: value.service_code\r\n      });\r\n    }  \r\n    if( value.onSave ){\r\n      // setCampaignSaveYn(false);\r\n      handleCampaignSave();\r\n    }\r\n    if( value.onClosed ){\r\n      handleCampaignClosed();\r\n    }  \r\n  }\r\n\r\n  //캠페인 알림 탭 변경\r\n  const handleNotificationTabChange = (value: NotificationTabParam) => {    \r\n    if( value.campaignInfoChangeYn ){\r\n      setTempCampaignsInfo({...tempCampaignInfo\r\n        , list_alarm_count: Number(value.list_alarm_count)\r\n        , supervisor_phone: value.supervisor_phone\r\n        , use_list_alarm: value.use_list_alarm\r\n      });\r\n      setTempCampaignManagerInfo({...tempCampaignManagerInfo\r\n        , list_alarm_count: Number(value.list_alarm_count)\r\n        , supervisor_phone: value.supervisor_phone\r\n        , use_list_alarm: value.use_list_alarm\r\n      });\r\n    }  \r\n    if( value.onSave ){\r\n      // setCampaignSaveYn(false);\r\n      handleCampaignSave();\r\n    }\r\n    if( value.onClosed ){\r\n      handleCampaignClosed();\r\n    }  \r\n  }\r\n\r\n  //캠페인 기타정보 탭 변경\r\n  const handleAdditionalInfoTabChange = (value: AdditionalInfoTabParam) => {    \r\n    if( value.onSave ){\r\n      // setCampaignSaveYn(false);\r\n      handleCampaignSave();\r\n    }\r\n    if( value.onClosed ){\r\n      handleCampaignClosed();\r\n    }  \r\n  }\r\n\r\n  //캠페인 취소\r\n  const handleCampaignClosed = () => {\r\n    setAlertState({\r\n      ...errorMessage,\r\n      isOpen: true,\r\n      message: '캠페인 편집창을 종료하시겠습니까?',\r\n      onClose: handleCampaignClosedExecute,\r\n      onCancle: () => setAlertState((prev) => ({ ...prev, isOpen: false }))\r\n    });\r\n  }\r\n  \r\n  //캠페인 취소 실행.\r\n  const handleCampaignClosedExecute = () => {\r\n    setAlertState((prev) => ({ ...prev, isOpen: false }));\r\n    // removeTab(Number(activeTabId),activeTabKey+'');\r\n    const existingTabs = openedTabs.filter(tab => tab.id === 13);\r\n    existingTabs.forEach(tab => {\r\n      removeTab(tab.id, tab.uniqueKey);\r\n    });\r\n  }\r\n\r\n  //캠페인 저장\r\n  const handleCampaignSave = () => {\r\n    \r\n    let saveErrorCheck = false;\r\n    //2018.11.27 Gideon #23127 캠페인 수정창 연결 IVR 입력 예외 처리\r\n    if(!saveErrorCheck && tempCampaignManagerInfo.dial_mode !== 2 && (tempCampaignManagerInfo.power_divert_queue === '0' || tempCampaignManagerInfo.power_divert_queue === '')){\r\n      saveErrorCheck = true;\r\n      setAlertState({\r\n        ...errorMessage,\r\n        isOpen: true,\r\n        message: \"'발신 방법' 탭의 '연결 IVR NO' 값을 입력해 주시기 바랍니다.\", \r\n        type: '2',\r\n        onClose: () => setAlertState((prev) => ({ ...prev, isOpen: false }))\r\n      });\r\n    }\r\n    // }\r\n    if(!saveErrorCheck && tempCampaignManagerInfo.campaign_name === '' ){\r\n      saveErrorCheck = true;\r\n      setAlertState({\r\n        ...errorMessage,\r\n        isOpen: true,\r\n        message: \"캠페인명을 입력해 주세요.\",\r\n        type: '2',\r\n        onClose: () => setAlertState((prev) => ({ ...prev, isOpen: false }))\r\n      });\r\n    }\r\n    if(!saveErrorCheck && isNaN(tempCampaignManagerInfo.tenant_id) ){\r\n      saveErrorCheck = true;\r\n      setAlertState({\r\n        ...errorMessage,\r\n        isOpen: true,\r\n        message: \"테넌트를 선택해 주세요.\",\r\n        type: '2',\r\n        onClose: () => setAlertState((prev) => ({ ...prev, isOpen: false }))\r\n      });\r\n    }\r\n    if( !saveErrorCheck && tempCampaignSchedule.start_time.length === 0){\r\n      saveErrorCheck = true;\r\n      setAlertState({\r\n        ...errorMessage,\r\n        isOpen: true,\r\n        message: \"시작시간 또는 종료시간을 지정해 주세요.\",\r\n        type: '2',\r\n        onClose: () => setAlertState((prev) => ({ ...prev, isOpen: false }))\r\n      });\r\n    }\r\n    if( !saveErrorCheck ){      \r\n      handleCampaignSaveExecute();\r\n    }\r\n  }\r\n  \r\n  //캠페인 저장 실행.\r\n  const handleCampaignSaveExecute = () => {\r\n    setAlertState((prev) => ({ ...prev, isOpen: false }));\r\n    setChangeYn(true);\r\n    fetchCampaignManagerInsert({...tempCampaignManagerInfo\r\n      , update_user: id\r\n      , creation_user: id\r\n      , update_ip: Cookies.get('userHost')+''\r\n      , creation_ip: Cookies.get('userHost')+''\r\n    });\r\n  }\r\n\r\n  const handleBlur = (e: React.FocusEvent<HTMLInputElement>) => {\r\n    const currentValue = e.target.value;\r\n    if (currentValue.startsWith(\"0\") && currentValue.length > 1) {\r\n      e.target.value = currentValue.replace(/^0+/, \"\");\r\n    }\r\n  };\r\n\r\n  //변경여부 체크\r\n  useEffect(() => {  \r\n    if( changeYn && !campaignInfoChangeYn && !campaignSkillChangeYn && !callingNumberChangeYn && !campaignDialSpeedChangeYn ){  \r\n      fetchMain({\r\n        session_key: session_key,\r\n        tenant_id: tenant_id,\r\n      });\r\n    }\r\n  }, [campaignInfoChangeYn,campaignSkillChangeYn,callingNumberChangeYn,campaignDialSpeedChangeYn]);\r\n\r\n  //캠페인 정보 조회 api 호출\r\n  const { mutate: fetchMain } = useApiForMain({\r\n    onSuccess: (data) => {\r\n      setCampaigns(data.result_data);\r\n      setSelectedCampaign( data.result_data.filter((campaign) => campaign.campaign_id === tempCampaignId)[0] );\r\n      setTempCampaignsInfo(data.result_data.filter((campaign) => campaign.campaign_id === tempCampaignId)[0]);\r\n    //   setChangeYn(false);\r\n      setAlertState({\r\n        ...errorMessage,\r\n        isOpen: true,\r\n        message: '작업이 완료되었습니다.',\r\n        type: '2',\r\n        onClose: handleClose,\r\n      });\r\n    }\r\n  });\r\n\r\n  const handleClose = () => {\r\n    setAlertState((prev) => ({ ...prev, isOpen: false }));\r\n    removeTab(Number(activeTabId),activeTabKey+'');\r\n  };\r\n\r\n  //캠페인 발신번호 추가 api 호출\r\n  const { mutate: fetchCallingNumberInsert } = useApiForCallingNumberInsert({\r\n    onSuccess: (data) => {\r\n        setCallingNumberChangeYn(false);\r\n    }\r\n  });\r\n\r\n  //캠페인 정보 수정 api 호출\r\n  const { mutate: fetchCampaignManagerInsert } = useApiForCampaignManagerInsert({\r\n    onSuccess: (data) => {\r\n        setTempCampaignId(data.result_data.campaign_id);\r\n        const _tempCampaignSchedule = {...tempCampaignSchedule\r\n            , tenant_id: tempCampaignManagerInfo.tenant_id\r\n            , campaign_id: data.result_data.campaign_id\r\n        }\r\n        //캠페인 스케줄 수정 api 호출\r\n        fetchCampaignScheduleInsert(_tempCampaignSchedule);\r\n        \r\n    },onError: (data) => {      \r\n      if (data.message.split('||')[0] === '5') {\r\n        setAlertState({\r\n          ...errorMessage,\r\n          isOpen: true,\r\n          message: 'API 연결 세션이 만료되었습니다. 로그인을 다시 하셔야합니다.',\r\n          type: '2',\r\n          onClose: () => goLogin(),\r\n        });\r\n      }\r\n    }\r\n  });\r\n  const goLogin = () => {\r\n    Cookies.remove('session_key');\r\n    router.push('/login');\r\n  }\r\n\r\n  //캠페인 스킬 수정 api 호출\r\n  const { mutate: fetchCampaignSkillUpdate } = useApiForCampaignSkillUpdate({\r\n    onSuccess: (data) => {\r\n        setCampaignSkillChangeYn(false);\r\n    }\r\n  });\r\n  \r\n  //캠페인 스케줄 등록 api 호출\r\n  const { mutate: fetchCampaignScheduleInsert } = useApiForCampaignScheduleInsert({\r\n    onSuccess: (data) => {\r\n        if( tempCampaignSkills.skill_id.length > 0){\r\n            const _tempCampaignSkills = {...tempCampaignSkills,\r\n                campaign_id: tempCampaignId\r\n            }\r\n            fetchCampaignSkillUpdate(_tempCampaignSkills);\r\n        }\r\n        \r\n        if (tempCallingNumberInfo.calling_number !== '' ) {\r\n            const _tempCallingNumberInfo = {...tempCallingNumberInfo,\r\n                campaign_id: tempCampaignId\r\n            }\r\n            fetchCallingNumberInsert(_tempCallingNumberInfo);\r\n        }\r\n        setCampaignInfoChangeYn(false);\r\n    }\r\n  });\r\n  \r\n  //캠페인 발신 속도 수정 api 호출\r\n  const { mutate: fetchDialSpeedUpdate } = useApiForDialSpeedUpdate({\r\n    onSuccess: (data) => {\r\n      setCampaignDialSpeedChangeYn(false);\r\n    }\r\n  });\r\n  \r\n  useEffect(() => {\r\n    if( id !== ''){        \r\n      setTempCampaignManagerInfo({\r\n        ...tempCampaignManagerInfo\r\n        , update_user: id\r\n        , creation_user: id\r\n      });\r\n    }\r\n  }, [id]);\r\n  \r\n  useEffect(() => {\r\n    if( tenantId !== ''){        \r\n        setTempCampaignsInfo({\r\n            ...tempCampaignInfo,\r\n            tenant_id: Number(tenantId)\r\n        });\r\n      setTempCampaignManagerInfo({\r\n        ...tempCampaignManagerInfo\r\n        , tenant_id: Number(tenantId)\r\n      });\r\n    }\r\n  }, [tenantId]);\r\n\r\n  return (\r\n    <div className='flex flex-col gap-5 w-full overflow-auto'>\r\n      <div>\r\n        <TitleWrap\r\n          className='border-b border-gray-300 pb-1'\r\n          title=\"캠페인정보\"\r\n          buttons={[\r\n              { label: \"캠페인 생성\", onClick: () => handleCampaignSave(),},\r\n              { label: \"생성 취소\", onClick: () => handleCampaignClosed() },\r\n          ]}\r\n          />\r\n          <div className=\"grid grid-cols-3 gap-x-[24px] gap-y-2\">\r\n          <div className='flex items-center gap-2'>\r\n            <Label className=\"w-[90px] min-w-[90px]\">캠페인 아이디</Label>\r\n            <CustomInput \r\n              type=\"number\" \r\n              value={tempCampaignInfo.campaign_id } \r\n              onChange={(e) => handleInputData(e.target.value, 'campaign_id')}            \r\n              className=\"\" \r\n              min=\"0\" \r\n              onBlur={handleBlur}\r\n            />\r\n          </div>\r\n\r\n          <div className='flex items-center gap-2'>\r\n            <Label className=\"w-[74px] min-w-[74px]\">테넌트</Label>\r\n            <Select\r\n              onValueChange={(value) => handleSelectChange(value, 'tenant')}\r\n              value={tempCampaignInfo.tenant_id+'' || ''}\r\n            >\r\n              <SelectTrigger className=\"w-full\">\r\n                <SelectValue placeholder=\"테넌트를 선택하세요\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                {tenants.map(option => (\r\n                  <SelectItem key={option.tenant_id} value={option.tenant_id.toString()}>\r\n                    {option.tenant_name}\r\n                  </SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n\r\n          <div className='flex items-center gap-2'>\r\n            <Label className=\"w-[74px] min-w-[74px]\">캠페인명</Label>\r\n            <CustomInput \r\n              value={tempCampaignInfo.campaign_name || ''} \r\n              onChange={(e) => handleInputData(e.target.value, 'campaign_name')}         \r\n              className=\"\" \r\n            />\r\n          </div>\r\n\r\n          <div className='flex items-center gap-2'>\r\n            <Label className=\"w-[90px] min-w-[90px]\">다이얼 모드</Label>\r\n            <Select\r\n              onValueChange={(value) => handleSelectChange(value, 'dialMode')}\r\n              value={tempCampaignInfo.dial_mode+''}\r\n            >\r\n              <SelectTrigger className=\"w-full\">\r\n                <SelectValue placeholder=\"다이얼 모드를 선택하세요\" />\r\n              </SelectTrigger>\r\n              <SelectContent>\r\n                {dialModeList.map(option => (\r\n                  <SelectItem key={option.dial_id} value={option.dial_id.toString()}>\r\n                    {option.dial_name}\r\n                  </SelectItem>\r\n                ))}\r\n              </SelectContent>\r\n            </Select>\r\n          </div>\r\n          <div className='flex items-center gap-2 relative'>\r\n            <Label className=\"w-[74px] min-w-[74px]\">스킬</Label>\r\n            <CustomInput value={inputSkills} className=\"w-full\" readOnly />\r\n            <button\r\n                className=\"absolute right-2 top-[52%] transform -translate-y-1/2\">\r\n                <Image\r\n                    src=\"/skill-popup.svg\"\r\n                    alt=\"스킬팝업\"\r\n                    width={12}\r\n                    height={12}\r\n                    priority\r\n                    onClick={() => handleOpenSkillPopup()}\r\n                  /> \r\n            </button>\r\n          </div>\r\n          <div className='flex items-center gap-2'>\r\n            <Label className=\"w-[74px] min-w-[74px]\">발신번호</Label>\r\n            <CustomInput value={inputCallingNumber} className=\"w-full\" \r\n              disabled={selectedCampaign !== null} readOnly\r\n            />\r\n            {menu_role_id === 1 ? (\r\n              <CommonButton variant=\"outline\" className=\"h-[24px]\" onClick={() =>\r\n                setCallingNumberPopupState({\r\n                  ...callingNumberPopupState,\r\n                  isOpen: true,\r\n                })\r\n              }>\r\n                발신번호 변경\r\n              </CommonButton>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"flex items-center gap-2 col-span-3\">\r\n            <Label className=\"w-[90px] min-w-[90px]\">설명</Label>\r\n            <CustomInput value={tempCampaignInfo.campaign_desc || ''} className=\"w-full\"          \r\n              onChange={(e) => handleInputData(e.target.value, 'campaign_desc')} \r\n            /> \r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <CampaignTab campaignSchedule={tempCampaignSchedule}\r\n          callCampaignMenu={'NewCampaignManager'}\r\n          campaignInfo={tempCampaignInfo}\r\n          campaignDialSpeedInfo={tempCampaignDialSpeedInfoParam}\r\n          onCampaignOutgoingOrderChange={(value) => handleCampaignOutgoingOrderChange(value)}\r\n          onCampaignScheduleChange={(value) => handleCampaignScheduleChange(value)}\r\n          onCampaignOutgoingStrategyChange={(value) => handleOutgoingStrategyTabChange(value)}\r\n          onCampaignOutgoingMethodChange={(value) => handleOutgoingMethodTabChange(value)}\r\n          onHandleCallPacingTabChange={(value) => handleCallPacingTabChange(value)}\r\n          onHandleAdditionalInfoTabChange={(value) => handleAdditionalInfoTabChange(value)}\r\n          onHandleCallbackTabChange={(value) => handleCallbackTabChange(value)}\r\n          onHandleNotificationTabChange={(value) => handleNotificationTabChange(value)}\r\n        />\r\n      </div>\r\n      <SkillListPopup\r\n        param={tempCampaignSkills.skill_id||[]}\r\n        tenantId={tempCampaignInfo.tenant_id}\r\n        type={skillPopupState.type}\r\n        isOpen={skillPopupState.isOpen}\r\n        onConfirm={(param) => handleSelectSkills(param)}\r\n        onCancel={() => setSkillPopupState((prev) => ({ ...prev, isOpen: false }))}\r\n      />\r\n      <CustomAlert\r\n        message={alertState.message}\r\n        title={alertState.title}\r\n        type={alertState.type}\r\n        isOpen={alertState.isOpen}\r\n        onClose={() => {\r\n          alertState.onClose()\r\n        }}\r\n        onCancle={() => setAlertState((prev) => ({ ...prev, isOpen: false }))}/>\r\n      <CallingNumberPopup\r\n        param={inputCallingNumber}\r\n        type={callingNumberPopupState.type}\r\n        isOpen={callingNumberPopupState.isOpen}\r\n        onConfirm={(param) => handleCallingNumlber(param)}\r\n        onCancle={() => setCallingNumberPopupState((prev) => ({ ...prev, isOpen: false }))}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default NewCampaignManagerDetail"],"names":[],"mappings":"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"}},
    {"offset": {"line": 6146, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6152, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/app/main/comp/NewCampaignManager/index.tsx"],"sourcesContent":["// C:\\Users\\terec\\fe_pdsw\\src\\app\\main\\comp\\CampaignManager\\index.tsx\r\nimport React, { useState, useEffect } from 'react'\r\nimport NewCampaignManagerDetail from './NewCampaignManagerDetail';\r\n// import { useApiForSchedules } from '@/features/campaignManager/hooks/useApiForSchedules';\r\n// import { useApiForSkills } from '@/features/campaignManager/hooks/useApiForSkills';\r\n// import { useApiForCallingNumber } from '@/features/campaignManager/hooks/useApiForCallingNumber';\r\n// import { useApiForCampaignSkill } from '@/features/campaignManager/hooks/useApiForCampaignSkill';\r\n// import { useApiForPhoneDescription } from '@/features/campaignManager/hooks/useApiForPhoneDescription';\r\nimport { useMainStore, useCampainManagerStore, useTabStore } from '@/store';\r\n\r\ntype Props = {\r\n  tenantId?: string;\r\n}\r\n\r\nconst NewCampaignManager = ({tenantId}: Props) => {\r\n  \r\n  const { tenants } = useMainStore();\r\n  const { campaignIdForUpdateFromSideMenu } = useTabStore();\r\n\r\n  const { setSchedules, setSkills, setCallingNumbers, setCampaignSkills, setPhoneDescriptions } = useCampainManagerStore();\r\n  \r\n  // const [campaignHeaderSearchParam,setCampaignHeaderSearchParam] = useState<CampaignHeaderSearch>();\r\n  // const handleCampaignHeaderSearch = (param:CampaignHeaderSearch) => {\r\n  //   setCampaignHeaderSearchParam(param);\r\n  // };\r\n  \r\n  // 스케줄 조회\r\n  // const { mutate: fetchSchedules } = useApiForSchedules({\r\n  //   onSuccess: (data) => {\r\n  //     setSchedules(data.result_data);  \r\n  //     const tempTenantIdArray = tenants.map((tenant) => tenant.tenant_id); \r\n  //     fetchSkills({\r\n  //       tenant_id_array: tempTenantIdArray\r\n  //     });   \r\n  //   }\r\n  // });\r\n  // 스킬 조회\r\n  // const { mutate: fetchSkills } = useApiForSkills({\r\n  //   onSuccess: (data) => {\r\n  //     setSkills(data.result_data);\r\n  //     fetchCallingNumbers({\r\n  //       session_key: '',\r\n  //       tenant_id: 0,\r\n  //     });\r\n  //   }\r\n  // });\r\n  // 전화번호 조회\r\n  // const { mutate: fetchCallingNumbers } = useApiForCallingNumber({\r\n  //   onSuccess: (data) => {\r\n  //     setCallingNumbers(data.result_data);\r\n  //     fetchCampaignSkills({\r\n  //       session_key: '',\r\n  //       tenant_id: 0,\r\n  //     });\r\n  //   }\r\n  // });\r\n  // 캠페인스킬 조회\r\n  // const { mutate: fetchCampaignSkills } = useApiForCampaignSkill({\r\n  //   onSuccess: (data) => {\r\n  //     setCampaignSkills(data.result_data);\r\n  //     fetchPhoneDescriptions({\r\n  //       session_key: '',\r\n  //       tenant_id: 0,\r\n  //     });\r\n  //   }\r\n  // });\r\n  // 전화번호설명 템플릿 조회\r\n  // const { mutate: fetchPhoneDescriptions } = useApiForPhoneDescription({\r\n  //   onSuccess: (data) => {\r\n  //     setPhoneDescriptions(data.result_data);\r\n  //   }\r\n  // });\r\n  \r\n  useEffect(() => {\r\n    if( typeof tenantId !== 'undefined'){\r\n      console.log(tenantId);\r\n    }\r\n  }, [tenantId]);\r\n\r\n  return (\r\n    <div>\r\n      <div className='flex flex-col gap-[15px]'>\r\n          <div className=\"flex gap-[30px]\">\r\n            <NewCampaignManagerDetail tenantId={tenantId}/>\r\n          </div> \r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewCampaignManager"],"names":[],"mappings":"AAAA,qEAAqE;;;;;AACrE;AACA;AACA,4FAA4F;AAC5F,sFAAsF;AACtF,oGAAoG;AACpG,oGAAoG;AACpG,0GAA0G;AAC1G;AAAA;AAAA;AAAA;;;;;;AAMA,MAAM,qBAAqB,CAAC,EAAC,QAAQ,EAAQ;;IAE3C,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,eAAY,AAAD;IAC/B,MAAM,EAAE,+BAA+B,EAAE,GAAG,CAAA,GAAA,2HAAA,CAAA,cAAW,AAAD;IAEtD,MAAM,EAAE,YAAY,EAAE,SAAS,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,GAAG,CAAA,GAAA,sIAAA,CAAA,yBAAsB,AAAD;IAErH,qGAAqG;IACrG,uEAAuE;IACvE,yCAAyC;IACzC,KAAK;IAEL,SAAS;IACT,0DAA0D;IAC1D,2BAA2B;IAC3B,wCAAwC;IACxC,4EAA4E;IAC5E,oBAAoB;IACpB,2CAA2C;IAC3C,aAAa;IACb,MAAM;IACN,MAAM;IACN,QAAQ;IACR,oDAAoD;IACpD,2BAA2B;IAC3B,mCAAmC;IACnC,4BAA4B;IAC5B,yBAAyB;IACzB,sBAAsB;IACtB,UAAU;IACV,MAAM;IACN,MAAM;IACN,UAAU;IACV,mEAAmE;IACnE,2BAA2B;IAC3B,2CAA2C;IAC3C,4BAA4B;IAC5B,yBAAyB;IACzB,sBAAsB;IACtB,UAAU;IACV,MAAM;IACN,MAAM;IACN,WAAW;IACX,mEAAmE;IACnE,2BAA2B;IAC3B,2CAA2C;IAC3C,+BAA+B;IAC/B,yBAAyB;IACzB,sBAAsB;IACtB,UAAU;IACV,MAAM;IACN,MAAM;IACN,gBAAgB;IAChB,yEAAyE;IACzE,2BAA2B;IAC3B,8CAA8C;IAC9C,MAAM;IACN,MAAM;IAEN,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;wCAAE;YACR,IAAI,OAAO,aAAa,aAAY;gBAClC,QAAQ,GAAG,CAAC;YACd;QACF;uCAAG;QAAC;KAAS;IAEb,qBACE,6LAAC;kBACC,cAAA,6LAAC;YAAI,WAAU;sBACX,cAAA,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,gLAAA,CAAA,UAAwB;oBAAC,UAAU;;;;;;;;;;;;;;;;;;;;;AAKhD;GA1EM;;QAEgB,4HAAA,CAAA,eAAY;QACY,2HAAA,CAAA,cAAW;QAEyC,sIAAA,CAAA,yBAAsB;;;KALlH;uCA4ES"}},
    {"offset": {"line": 6279, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6285, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/app/main/comp/AgentStatusMonitoring/component/StatusTimer.tsx"],"sourcesContent":["// src/components/shared/StatusTimer.tsx\r\nimport React, { useState, useEffect } from 'react';\r\n\r\ninterface StatusTimerProps {\r\n  initialTime: string | number; // Initial time in seconds or \"HH:MM:SS\" format\r\n  isRunning?: boolean; // Optional: control if timer is running\r\n}\r\n\r\nconst StatusTimer: React.FC<StatusTimerProps> = ({ \r\n  initialTime, \r\n  isRunning = true \r\n}) => {\r\n  // Convert initialTime to seconds from various possible formats\r\n  const parseTimeToSeconds = (time: string | number): number => {\r\n    // Handle numeric inputs (already in seconds)\r\n    if (typeof time === 'number') return time;\r\n    if (!isNaN(Number(time))) return Number(time);\r\n    \r\n    // Handle HH:MM:SS format\r\n    if (time && time.includes(':')) {\r\n      try {\r\n        const [hours, minutes, seconds] = time.split(':').map(Number);\r\n        return (hours * 3600) + (minutes * 60) + seconds;\r\n      } catch (e) {\r\n        console.error('Error parsing time:', time, e);\r\n        return 0;\r\n      }\r\n    }\r\n    \r\n    // Default fallback\r\n    return 0;\r\n  };\r\n\r\n  const [seconds, setSeconds] = useState<number>(parseTimeToSeconds(initialTime));\r\n\r\n  // Format seconds to \"HH:MM:SS\"\r\n  const formatTime = (totalSeconds: number): string => {\r\n    const hours = Math.floor(totalSeconds / 3600);\r\n    const minutes = Math.floor((totalSeconds % 3600) / 60);\r\n    const secs = totalSeconds % 60;\r\n\r\n    return [hours, minutes, secs]\r\n      .map(val => String(val).padStart(2, '0'))\r\n      .join(':');\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Reset timer when initialTime changes\r\n    setSeconds(parseTimeToSeconds(initialTime));\r\n  }, [initialTime]);\r\n\r\n  useEffect(() => {\r\n    let intervalId: NodeJS.Timeout | null = null;\r\n\r\n    if (isRunning) {\r\n      intervalId = setInterval(() => {\r\n        setSeconds(prevSeconds => prevSeconds + 1);\r\n      }, 1000);\r\n    }\r\n\r\n    return () => {\r\n      if (intervalId) clearInterval(intervalId);\r\n    };\r\n  }, [isRunning]);\r\n\r\n  return <span>{formatTime(seconds)}</span>;\r\n};\r\n\r\nexport default StatusTimer;"],"names":[],"mappings":"AAAA,wCAAwC;;;;;AACxC;;;;AAOA,MAAM,cAA0C,CAAC,EAC/C,WAAW,EACX,YAAY,IAAI,EACjB;;IACC,+DAA+D;IAC/D,MAAM,qBAAqB,CAAC;QAC1B,6CAA6C;QAC7C,IAAI,OAAO,SAAS,UAAU,OAAO;QACrC,IAAI,CAAC,MAAM,OAAO,QAAQ,OAAO,OAAO;QAExC,yBAAyB;QACzB,IAAI,QAAQ,KAAK,QAAQ,CAAC,MAAM;YAC9B,IAAI;gBACF,MAAM,CAAC,OAAO,SAAS,QAAQ,GAAG,KAAK,KAAK,CAAC,KAAK,GAAG,CAAC;gBACtD,OAAO,AAAC,QAAQ,OAAS,UAAU,KAAM;YAC3C,EAAE,OAAO,GAAG;gBACV,QAAQ,KAAK,CAAC,uBAAuB,MAAM;gBAC3C,OAAO;YACT;QACF;QAEA,mBAAmB;QACnB,OAAO;IACT;IAEA,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU,mBAAmB;IAElE,+BAA+B;IAC/B,MAAM,aAAa,CAAC;QAClB,MAAM,QAAQ,KAAK,KAAK,CAAC,eAAe;QACxC,MAAM,UAAU,KAAK,KAAK,CAAC,AAAC,eAAe,OAAQ;QACnD,MAAM,OAAO,eAAe;QAE5B,OAAO;YAAC;YAAO;YAAS;SAAK,CAC1B,GAAG,CAAC,CAAA,MAAO,OAAO,KAAK,QAAQ,CAAC,GAAG,MACnC,IAAI,CAAC;IACV;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR,uCAAuC;YACvC,WAAW,mBAAmB;QAChC;gCAAG;QAAC;KAAY;IAEhB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR,IAAI,aAAoC;YAExC,IAAI,WAAW;gBACb,aAAa;6CAAY;wBACvB;qDAAW,CAAA,cAAe,cAAc;;oBAC1C;4CAAG;YACL;YAEA;yCAAO;oBACL,IAAI,YAAY,cAAc;gBAChC;;QACF;gCAAG;QAAC;KAAU;IAEd,qBAAO,6LAAC;kBAAM,WAAW;;;;;;AAC3B;GA1DM;KAAA;uCA4DS"}},
    {"offset": {"line": 6371, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6377, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/app/main/comp/AgentStatusMonitoring/index.tsx"],"sourcesContent":["// // src\\app\\main\\comp\\AgentStatusMonitoring\\index.tsx\r\n// import React, { useState, useMemo, useEffect } from \"react\";\r\n// import TitleWrap from \"@/components/shared/TitleWrap\";\r\n// import { Table, TableRow, TableHeader, TableCell } from \"@/components/ui/table-custom\";\r\n// import Image from \"next/image\";\r\n// import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/shared/CustomSelect\";\r\n// import { CustomCheckbox } from \"@/components/shared/CustomCheckbox\";\r\n// import { Label } from \"@/components/ui/label\";\r\n// import { useMainStore } from '@/store';\r\n// import { useEnvironmentStore } from '@/store/environmentStore';\r\n\r\n// // 타입 임포트\r\n// import {\r\n//   AgentStatus,\r\n//   AgentData,\r\n//   StatusHeaderItem,\r\n//   SortField,\r\n//   SortDirection,\r\n//   AgentStatusMonitoringProps,\r\n//   AgentStateMonitoringListResponse\r\n// } from './types/typeForCunsultantMonitoring';\r\n// import { useApiForGetConsultantStatusMonitorData } from \"@/features/monitoring/hooks/useApiForGetConsultantStatusMonitorData\";\r\n// import StatusTimer from \"./component/StatusTimer\";\r\n\r\n// const AgentStatusMonitoring: React.FC<AgentStatusMonitoringProps> = ({\r\n//   sessionKey,\r\n//   campaignId,\r\n//   tenantId,\r\n// }) => {\r\n//   // 상태 관리\r\n//   const [selectedStatuses, setSelectedStatuses] = useState<AgentStatus>({\r\n//     waiting: true,\r\n//     processing: false,\r\n//     afterprocessing: false,\r\n//     rest: false\r\n//   });\r\n\r\n//   // 정렬 관련 상태\r\n//   const [sortField, setSortField] = useState<SortField>('time');\r\n//   const [sortDirection, setSortDirection] = useState<SortDirection>('asc');\r\n//   const { campaigns } = useMainStore();\r\n//   const [agentData, setAgentData] = useState<AgentData[]>([]);\r\n//   const { statisticsUpdateCycle } = useEnvironmentStore();\r\n\r\n//   const handleStatusChange = (status: keyof AgentStatus): void => {\r\n//     setSelectedStatuses(prev => ({\r\n//       ...prev,\r\n//       [status]: !prev[status]\r\n//     }));\r\n//   };\r\n\r\n//   const toggleSortDirection = (): void => {\r\n//     setSortDirection(prev => prev === 'asc' ? 'desc' : 'asc');\r\n//   };\r\n\r\n//   const getStatusColor = (status: AgentData['status']): string => {\r\n//     const colors = {\r\n//       waiting: 'text-[#3A9D6C]',\r\n//       processing: 'text-[#C95E5E]',\r\n//       afterprocessing: 'text-[#338BD3]',\r\n//       rest: 'text-[#9459BF]'\r\n//     };\r\n//     return colors[status];\r\n//   };\r\n\r\n//   const getStatusText = (status: AgentData['status']): string => {\r\n//     const statusMap = {\r\n//       waiting: '대기',\r\n//       processing: '처리',\r\n//       afterprocessing: '후처리',\r\n//       rest: '휴식'\r\n//     };\r\n//     return statusMap[status];\r\n//   };\r\n\r\n//   const sortedAndFilteredAgents = useMemo(() => {\r\n//     const filtered = agentData.filter(agent => selectedStatuses[agent.status]);\r\n\r\n//     return [...filtered].sort((a, b) => {\r\n//       let compareA: string | number = a[sortField];\r\n//       let compareB: string | number = b[sortField];\r\n\r\n//       if (sortField === 'status') {\r\n//         compareA = getStatusText(a.status);\r\n//         compareB = getStatusText(b.status);\r\n//       }\r\n\r\n//       if (sortField === 'time') {\r\n//         // 시간을 초 단위로 변환하여 비교\r\n//         const timeToSeconds = (time: string): number => {\r\n//           const [hours, minutes, seconds] = time.split(':').map(Number);\r\n//           return hours * 3600 + minutes * 60 + seconds;\r\n//         };\r\n//         compareA = timeToSeconds(a.time);\r\n//         compareB = timeToSeconds(b.time);\r\n//       }\r\n\r\n//       if (compareA < compareB) return sortDirection === 'asc' ? -1 : 1;\r\n//       if (compareA > compareB) return sortDirection === 'asc' ? 1 : -1;\r\n//       return 0;\r\n//     });\r\n//   }, [agentData, selectedStatuses, sortField, sortDirection]);\r\n\r\n//   const getStatusCount = (status: AgentData['status']): number => {\r\n//     return agentData.filter(agent => agent.status === status).length;\r\n//   };\r\n\r\n//   const statusHeaderItems: StatusHeaderItem[] = [\r\n//     { status: 'waiting', bg: '!bg-[#DDF4F2]', text: '대기 상담사', icon: '/waiting.svg' },\r\n//     { status: 'processing', bg: '!bg-[#FEE9EC]', text: '처리', icon: '/processing.svg' },\r\n//     { status: 'afterprocessing', bg: '!bg-[#E8EFFA]', text: '후처리', icon: '/afterprocessing.svg' },\r\n//     { status: 'rest', bg: '!bg-[#F6F0FA]', text: '휴식', icon: '/rest.svg' }\r\n//   ];\r\n\r\n//   // 새로 만든 useApiForGetConsultantStatusMonitorData 훅 사용\r\n//   const { data, refetch, isLoading } = useApiForGetConsultantStatusMonitorData({\r\n//     tenantId: Number(tenantId || 0),\r\n//     campaignId: Number(campaignId || 0),\r\n//     sessionKey: sessionKey || '',\r\n//   }, {\r\n//     enabled: !!sessionKey && tenantId !== 'undefined', // sessionKey가 존재하고 tenantId != null 인 경우\r\n//     refetchInterval: statisticsUpdateCycle > 0 ? statisticsUpdateCycle * 1000 : false,\r\n//   });\r\n\r\n//   console.log(\"AgentStatusMonitoring data\", data);\r\n  \r\n\r\n//   useEffect(() => {\r\n//     if (data && data.counselorStatusList.length > 0) {\r\n//       const tempDataList: AgentData[] = data.counselorStatusList.map((item, index) => ({\r\n//         id: index,\r\n//         status: item.statusCode === '204'\r\n//           ? 'waiting'\r\n//           : item.statusCode === '205'\r\n//             ? 'processing'\r\n//             : item.statusCode === '206'\r\n//               ? 'afterprocessing'\r\n//               : 'rest',\r\n//         agent: item.counselorId,\r\n//         name: item.counselorName,\r\n//         time: item.statusTime || '0',\r\n//       }));\r\n//       setAgentData(tempDataList);\r\n//     }else{\r\n//       setAgentData([]);\r\n//     }\r\n//   }, [data]);\r\n\r\n//   return (\r\n//     <>\r\n//       <div>\r\n//         <TitleWrap\r\n//           // title={`상담사 상태 통계${campaignId ? ` (캠페인 ID: ${campaignId})` : ''} tenantId: ${tenantId}`}\r\n//           title={`상담사 상태 통계`}\r\n//           className=\"border-b border-gray-300 pb-1\"\r\n//         />\r\n//         <Table>\r\n//           <tbody>\r\n//             <TableRow>\r\n//               {statusHeaderItems.map(item => (\r\n//                 <TableHeader\r\n//                   key={item.status}\r\n//                   className={`${item.bg} !text-center text-sm font-normal !h-[30px] ${getStatusColor(item.status)}`}\r\n//                 >\r\n//                   <div className=\"flex items-center gap-2 justify-center\">\r\n//                     <Image\r\n//                       src={item.icon}\r\n//                       alt={item.text}\r\n//                       width={14}\r\n//                       height={14}\r\n//                       priority\r\n//                     />\r\n//                     {item.text}\r\n//                   </div>\r\n//                 </TableHeader>\r\n//               ))}\r\n//             </TableRow>\r\n//             <TableRow>\r\n//               {statusHeaderItems.map(item => (\r\n//                 <TableCell key={item.status} className=\"!text-center text-sm !h-[30px]\">\r\n//                   {getStatusCount(item.status)}\r\n//                 </TableCell>\r\n//               ))}\r\n//             </TableRow>\r\n//           </tbody>\r\n//         </Table>\r\n//       </div>\r\n//       <div className=\"h-[calc(100%-115px)]\">\r\n//         <TitleWrap\r\n//           title=\"상담사 상태\"\r\n//           className=\"border-b border-gray-300 pb-1\"\r\n//         />\r\n//         <div className=\"flex justify-between items-center bg-[#f8f8f8] h-[30px] px-5 border-t border-x rounded-t-[3px]\">\r\n//           <div className=\"flex gap-4\">\r\n//             {statusHeaderItems.map(item => (\r\n//               <div key={item.status} className=\"flex gap-1 items-center\">\r\n//                 <div className=\"flex items-center space-x-2\">\r\n//                   <CustomCheckbox\r\n//                     id={item.status}\r\n//                     checked={selectedStatuses[item.status]}\r\n//                     onCheckedChange={(checked: boolean) => handleStatusChange(item.status)}\r\n//                   />\r\n//                   <label\r\n//                     htmlFor={item.status}\r\n//                     className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n//                   >\r\n//                     {getStatusText(item.status)}\r\n//                   </label>\r\n//                 </div>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//           <div className=\"flex gap-4 items-center\">\r\n//             <div className=\"flex items-center gap-2\">\r\n//               <Label className=\"pr-2\">정렬선택</Label>\r\n//               <div className=\"w-[120px]\">\r\n//                 <Select value={sortField} onValueChange={(value: SortField) => setSortField(value)}>\r\n//                   <SelectTrigger className=\"w-full\">\r\n//                     <SelectValue placeholder=\"시간\" />\r\n//                   </SelectTrigger>\r\n//                   <SelectContent>\r\n//                     <SelectItem value=\"time\">시간</SelectItem>\r\n//                     <SelectItem value=\"agent\">상담사 아이디</SelectItem>\r\n//                     <SelectItem value=\"name\">상담사 이름</SelectItem>\r\n//                     <SelectItem value=\"status\">상태</SelectItem>\r\n//                   </SelectContent>\r\n//                 </Select>\r\n//               </div>\r\n//             </div>\r\n//             <button\r\n//               onClick={toggleSortDirection}\r\n//               type=\"button\"\r\n//               aria-label={sortDirection === 'asc' ? \"오름차순\" : \"내림차순\"}\r\n//             >\r\n//               <Image\r\n//                 src=\"/sort_button.svg\"\r\n//                 alt={sortDirection === 'asc' ? \"오름차순\" : \"내림차순\"}\r\n//                 width={12}\r\n//                 height={12}\r\n//                 className={sortDirection === 'desc' ? \"rotate-180\" : \"\"}\r\n//               />\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"h-[calc(100%-59px)] overflow-auto border border-[#ebebeb] rounded-b-[3px]\">\r\n//           <table className=\"w-full table-auto rounded-[3px] border-separate border-spacing-0\">\r\n//             <tbody>\r\n//               { sortedAndFilteredAgents && !isLoading ? sortedAndFilteredAgents.map((agent) => (\r\n//                 <tr key={agent.id}>\r\n//                   <td className=\"text-center text-sm border-b px-3 py-1 text-[#333]\">\r\n//                     <div className={`flex items-center gap-2 justify-center ${getStatusColor(agent.status)}`}>\r\n//                       <Image\r\n//                         src={`/${agent.status}.svg`}\r\n//                         alt={getStatusText(agent.status)}\r\n//                         width={14}\r\n//                         height={14}\r\n//                       />\r\n//                       {getStatusText(agent.status)}\r\n//                     </div>\r\n//                   </td>\r\n//                   <td className=\"text-center text-sm border-b px-3 py-1 text-[#333]\">{agent.agent}</td>\r\n//                   <td className=\"text-center text-sm border-b px-3 py-1 text-[#333]\">{agent.name}</td>\r\n//                   <td className=\"text-center text-sm border-b px-3 py-1 text-[#333]\">\r\n//                   <StatusTimer initialTime={agent.time || 0} />\r\n\r\n//                   </td>\r\n//                   <td className=\"text-center text-sm border-b px-3 py-1 text-[#333]\">\r\n//                     ({agentData.filter(a => a.status === agent.status).length}/{agentData.length})\r\n//                   </td>\r\n//                 </tr>\r\n//               )) :\r\n//                 (\r\n//                   [...Array(6)].map((_, index) => (\r\n//                     <tr key={`skeleton-${index}`}>\r\n//                       {Array.from({ length: 5 }).map((_, colIndex) => (\r\n//                         <td key={colIndex} className=\"text-center text-sm border-b px-3 py-1\">\r\n//                           <div className=\"flex justify-center\">\r\n//                             <div className=\"h-4 w-24 rounded bg-gray-200 animate-pulse\" />\r\n//                           </div>\r\n//                         </td>\r\n//                       ))}\r\n//                     </tr>\r\n//                   ))\r\n//                 )\r\n//               }\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default AgentStatusMonitoring;\r\n\r\n// src\\app\\main\\comp\\AgentStatusMonitoring\\index.tsx\r\nimport React, { useState, useMemo, useEffect } from \"react\";\r\nimport TitleWrap from \"@/components/shared/TitleWrap\";\r\nimport { Table, TableRow, TableHeader, TableCell } from \"@/components/ui/table-custom\";\r\nimport Image from \"next/image\";\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/shared/CustomSelect\";\r\nimport { CustomCheckbox } from \"@/components/shared/CustomCheckbox\";\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { useMainStore } from '@/store';\r\nimport { useEnvironmentStore } from '@/store/environmentStore';\r\n\r\n// 타입 임포트\r\nimport {\r\n  AgentStatus,\r\n  AgentData, // Make sure AgentData has time as number if modified below\r\n  StatusHeaderItem,\r\n  SortField,\r\n  SortDirection,\r\n  AgentStatusMonitoringProps,\r\n  AgentStateMonitoringListResponse // Ensure this type matches API response\r\n} from './types/typeForCunsultantMonitoring'; // Adjust path if needed\r\nimport { useApiForGetConsultantStatusMonitorData } from \"@/features/monitoring/hooks/useApiForGetConsultantStatusMonitorData\"; // Adjust path if needed\r\nimport StatusTimer from \"./component/StatusTimer\"; // Adjust path if needed\r\n\r\n// --- Ensure AgentData type reflects time as number ---\r\n// Example modification (adjust in your actual types file):\r\n// export interface AgentData {\r\n//   id: number;\r\n//   status: 'waiting' | 'processing' | 'afterprocessing' | 'rest';\r\n//   agent: string;\r\n//   name: string;\r\n//   time: number; // Changed from string to number\r\n// }\r\n// -----------------------------------------------------\r\n\r\n\r\nconst AgentStatusMonitoring: React.FC<AgentStatusMonitoringProps> = ({\r\n  sessionKey,\r\n  campaignId,\r\n  tenantId,\r\n}) => {\r\n  // 상태 관리\r\n  const [selectedStatuses, setSelectedStatuses] = useState<AgentStatus>({\r\n    waiting: true,\r\n    processing: true, // Defaulting more statuses to true for testing visibility\r\n    afterprocessing: true,\r\n    rest: true\r\n  });\r\n\r\n  // 정렬 관련 상태\r\n  const [sortField, setSortField] = useState<SortField>('time'); // Default sort field\r\n  const [sortDirection, setSortDirection] = useState<SortDirection>('asc'); // Default sort direction\r\n  const { campaigns } = useMainStore(); // campaigns might not be used here, check if needed\r\n  const [agentData, setAgentData] = useState<AgentData[]>([]);\r\n  const { statisticsUpdateCycle } = useEnvironmentStore();\r\n\r\n  const handleStatusChange = (status: keyof AgentStatus): void => {\r\n    setSelectedStatuses(prev => ({\r\n      ...prev,\r\n      [status]: !prev[status]\r\n    }));\r\n  };\r\n\r\n  // API 훅 호출\r\n  const { data, refetch, isLoading, error } = useApiForGetConsultantStatusMonitorData({\r\n    tenantId: Number(tenantId || 0), // Ensure tenantId is a number\r\n    campaignId: Number(campaignId || 0), // Ensure campaignId is a number\r\n    sessionKey: sessionKey || '',\r\n  }, {\r\n    enabled: !!sessionKey && tenantId !== 'undefined' && tenantId !== null, // Enable only when valid props are present\r\n    refetchInterval: statisticsUpdateCycle > 0 ? statisticsUpdateCycle * 1000 : false, // Use store value for interval\r\n  });\r\n\r\n  // API 데이터 처리 및 상태 업데이트\r\n  useEffect(() => {\r\n    // Check if data exists and has the expected structure\r\n    if (data && data.counselorStatusList && data.counselorStatusList.length >= 0) { // Check >= 0 to handle empty arrays\r\n        const tempDataList: AgentData[] = data.counselorStatusList.map((item, index) => {\r\n            let status: AgentData['status'];\r\n            switch (item.statusCode) {\r\n                case '204': status = 'waiting'; break;\r\n                case '205': status = 'processing'; break;\r\n                case '206': status = 'afterprocessing'; break;\r\n                default: status = 'rest'; // Assuming any other code means rest\r\n            }\r\n\r\n            return {\r\n                // Use index as numeric ID to match AgentData type\r\n                id: index,\r\n                status: status,\r\n                agent: item.counselorId,\r\n                name: item.counselorName,\r\n                // Keep time as string to match AgentData type\r\n                time: String(item.statusTime || '0'), // Convert to string, default to '0' if falsy\r\n            };\r\n        });\r\n        setAgentData(tempDataList);\r\n    } else if (!isLoading && !error) {\r\n        // If data is null/undefined/empty array after loading and no error, clear the list\r\n        setAgentData([]);\r\n    }\r\n    // Add isLoading and error to dependencies if needed, e.g., for clearing data on error\r\n  }, [data, isLoading, error]); // Dependencies for processing data\r\n\r\n\r\n  const toggleSortDirection = (): void => {\r\n    setSortDirection(prev => prev === 'asc' ? 'desc' : 'asc');\r\n  };\r\n\r\n  const getStatusColor = (status: AgentData['status']): string => {\r\n    const colors = {\r\n      waiting: 'text-[#3A9D6C]',\r\n      processing: 'text-[#C95E5E]',\r\n      afterprocessing: 'text-[#338BD3]',\r\n      rest: 'text-[#9459BF]'\r\n    };\r\n    return colors[status];\r\n  };\r\n\r\n  const getStatusText = (status: AgentData['status']): string => {\r\n    const statusMap = {\r\n      waiting: '대기',\r\n      processing: '처리',\r\n      afterprocessing: '후처리',\r\n      rest: '휴식'\r\n    };\r\n    return statusMap[status];\r\n  };\r\n\r\n  // 정렬 및 필터링 로직 (useMemo)\r\n  const sortedAndFilteredAgents = useMemo(() => {\r\n    // Start with filtering\r\n    const filtered = agentData.filter(agent => selectedStatuses[agent.status]);\r\n\r\n    // Then sort the filtered data\r\n    return [...filtered].sort((a, b) => {\r\n      let compareA: string | number = a[sortField];\r\n      let compareB: string | number = b[sortField];\r\n\r\n      // Handle specific sort fields\r\n      if (sortField === 'status') {\r\n        compareA = getStatusText(a.status);\r\n        compareB = getStatusText(b.status);\r\n        // String comparison\r\n        return sortDirection === 'asc'\r\n          ? compareA.localeCompare(compareB)\r\n          : compareB.localeCompare(compareA);\r\n      }\r\n\r\n      if (sortField === 'agent' || sortField === 'name') {\r\n        // String comparison (case-insensitive example)\r\n         compareA = String(compareA).toLowerCase();\r\n         compareB = String(compareB).toLowerCase();\r\n         return sortDirection === 'asc'\r\n          ? compareA.localeCompare(compareB)\r\n          : compareB.localeCompare(compareA);\r\n      }\r\n\r\n      // *** MODIFICATION: Direct numeric comparison for 'time' ***\r\n      if (sortField === 'time') {\r\n          // Ensure values are numbers before comparison\r\n          const numA = typeof compareA === 'string' ? Number(compareA) : compareA;\r\n          const numB = typeof compareB === 'string' ? Number(compareB) : compareB;\r\n          return sortDirection === 'asc' ? numA - numB : numB - numA;\r\n      }\r\n\r\n      // Default fallback (shouldn't be reached with defined SortField types)\r\n      if (compareA < compareB) return sortDirection === 'asc' ? -1 : 1;\r\n      if (compareA > compareB) return sortDirection === 'asc' ? 1 : -1;\r\n      return 0;\r\n    });\r\n  }, [agentData, selectedStatuses, sortField, sortDirection]); // Dependencies\r\n\r\n  const getStatusCount = (status: AgentData['status']): number => {\r\n    // Count based on the original, unfiltered data\r\n    return agentData.filter(agent => agent.status === status).length;\r\n  };\r\n\r\n  // Static header items\r\n  const statusHeaderItems: StatusHeaderItem[] = [\r\n    { status: 'waiting', bg: '!bg-[#DDF4F2]', text: '대기', icon: '/waiting.svg' }, // Text updated\r\n    { status: 'processing', bg: '!bg-[#FEE9EC]', text: '처리', icon: '/processing.svg' },\r\n    { status: 'afterprocessing', bg: '!bg-[#E8EFFA]', text: '후처리', icon: '/afterprocessing.svg' },\r\n    { status: 'rest', bg: '!bg-[#F6F0FA]', text: '휴식', icon: '/rest.svg' }\r\n  ];\r\n\r\n\r\n  // --- JSX Rendering ---\r\n  return (\r\n    <>\r\n      {/* 상단 통계 */}\r\n      <div>\r\n        <TitleWrap\r\n          title={`상담사 상태 통계`}\r\n          className=\"border-b border-gray-300 pb-1\"\r\n        />\r\n        <Table>\r\n          <tbody>\r\n            <TableRow>\r\n              {statusHeaderItems.map(item => (\r\n                <TableHeader\r\n                  key={item.status}\r\n                  className={`${item.bg} !text-center text-sm font-normal !h-[30px] ${getStatusColor(item.status)}`}\r\n                >\r\n                  <div className=\"flex items-center gap-2 justify-center\">\r\n                    <Image\r\n                      src={item.icon}\r\n                      alt={item.text}\r\n                      width={14}\r\n                      height={14}\r\n                      priority // Keep priority if these are critical above-the-fold images\r\n                    />\r\n                    {item.text}\r\n                  </div>\r\n                </TableHeader>\r\n              ))}\r\n            </TableRow>\r\n            <TableRow>\r\n              {statusHeaderItems.map(item => (\r\n                <TableCell key={item.status} className=\"!text-center text-sm !h-[30px]\">\r\n                  {getStatusCount(item.status)}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n\r\n      {/* 하단 상세 목록 */}\r\n      {/* Calculate height dynamically or use flex-grow if parent allows */}\r\n      <div className=\"flex flex-col h-[calc(100%-115px)] mt-2\"> {/* Added mt-2 for spacing */}\r\n        <TitleWrap\r\n          title=\"상담사 상태\"\r\n          className=\"border-b border-gray-300 pb-1\"\r\n        />\r\n        {/* 필터 및 정렬 컨트롤 */}\r\n        <div className=\"flex justify-between items-center bg-[#f8f8f8] h-[40px] px-4 border-t border-x rounded-t-[3px]\"> {/* Increased height and padding */}\r\n          <div className=\"flex gap-4 items-center\"> {/* Added items-center */}\r\n            {statusHeaderItems.map(item => (\r\n              <div key={item.status} className=\"flex items-center\"> {/* Removed redundant inner div */}\r\n                <CustomCheckbox\r\n                  id={item.status}\r\n                  checked={selectedStatuses[item.status]}\r\n                  // Pass boolean directly to onCheckedChange if CustomCheckbox expects it\r\n                  onCheckedChange={() => handleStatusChange(item.status)}\r\n                />\r\n                <Label\r\n                  htmlFor={item.status}\r\n                  className=\"text-sm font-medium ml-2 cursor-pointer\" // Added ml-2 and cursor-pointer\r\n                >\r\n                  {getStatusText(item.status)}\r\n                </Label>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"flex gap-3 items-center\"> {/* Reduced gap slightly */}\r\n            {/* <Label className=\"text-sm\">정렬:</Label> Removed label for cleaner look */}\r\n            <div className=\"w-[130px]\"> {/* Slightly wider select */}\r\n              <Select value={sortField} onValueChange={(value: SortField) => setSortField(value)}>\r\n                <SelectTrigger className=\"w-full h-8 text-sm\"> {/* Adjusted height and text size */}\r\n                  <SelectValue placeholder=\"정렬 기준\" />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  <SelectItem value=\"time\">시간</SelectItem>\r\n                  <SelectItem value=\"agent\">상담사 아이디</SelectItem>\r\n                  <SelectItem value=\"name\">상담사 이름</SelectItem>\r\n                  <SelectItem value=\"status\">상태</SelectItem>\r\n                </SelectContent>\r\n              </Select>\r\n            </div>\r\n            <button\r\n              onClick={toggleSortDirection}\r\n              type=\"button\"\r\n              aria-label={sortDirection === 'asc' ? \"오름차순\" : \"내림차순\"}\r\n              className=\"p-1 rounded hover:bg-gray-200\" // Added padding and hover effect\r\n            >\r\n              <Image\r\n                src=\"/sort_button.svg\" // Ensure this path is correct\r\n                alt={sortDirection === 'asc' ? \"오름차순\" : \"내림차순\"}\r\n                width={14} // Slightly larger icon\r\n                height={14}\r\n                className={`transition-transform duration-200 ${sortDirection === 'desc' ? \"rotate-180\" : \"\"}`} // Added transition\r\n              />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 상담사 목록 테이블 */}\r\n        {/* Use flex-grow to take remaining height */}\r\n        <div className=\"flex-grow overflow-auto border border-t-0 border-[#ebebeb] rounded-b-[3px]\">\r\n          <table className=\"w-full table-fixed border-separate border-spacing-0\"> {/* Use table-fixed for better column control */}\r\n             <colgroup> {/* Define column widths */}\r\n                <col style={{ width: '20%' }} />\r\n                <col style={{ width: '25%' }} />\r\n                <col style={{ width: '25%' }} />\r\n                <col style={{ width: '15%' }} />\r\n                <col style={{ width: '15%' }} />\r\n            </colgroup>\r\n            <tbody>\r\n             {isLoading ? (\r\n                 // Skeleton Loader\r\n                [...Array(6)].map((_, index) => (\r\n                  <tr key={`skeleton-${index}`} className=\"h-[34px]\"> {/* Set skeleton row height */}\r\n                    {Array.from({ length: 5 }).map((_, colIndex) => (\r\n                      <td key={colIndex} className=\"text-center text-sm border-b px-3 py-1\">\r\n                        <div className=\"flex justify-center items-center h-full\">\r\n                          <div className=\"h-4 w-20 rounded bg-gray-200 animate-pulse\" />\r\n                        </div>\r\n                      </td>\r\n                    ))}\r\n                  </tr>\r\n                ))\r\n             ) : error ? (\r\n                  // Error Message\r\n                 <tr>\r\n                    <td colSpan={5} className=\"text-center text-red-500 py-4\">\r\n                        데이터 로드 중 오류 발생: {error.message}\r\n                    </td>\r\n                 </tr>\r\n             ) : sortedAndFilteredAgents.length === 0 ? (\r\n                  // No Data Message\r\n                  <tr>\r\n                    <td colSpan={5} className=\"text-center text-gray-500 py-4\">\r\n                        표시할 데이터가 없습니다.\r\n                    </td>\r\n                  </tr>\r\n             ) : (\r\n                // Actual Data Rows\r\n                sortedAndFilteredAgents.map((agent) => (\r\n                  <tr key={agent.id} className=\"h-[34px]\"> {/* Consistent row height */}\r\n                    <td className=\"text-center text-sm border-b px-3 py-1 text-[#333] truncate\">\r\n                      <div className={`flex items-center gap-1.5 justify-center ${getStatusColor(agent.status)}`}>\r\n                        <Image\r\n                          src={`/${agent.status}.svg`} // Ensure these paths are correct\r\n                          alt={getStatusText(agent.status)}\r\n                          width={14}\r\n                          height={14}\r\n                        />\r\n                        {getStatusText(agent.status)}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"text-center text-sm border-b px-3 py-1 text-[#333] truncate\">{agent.agent}</td>\r\n                    <td className=\"text-center text-sm border-b px-3 py-1 text-[#333] truncate\">{agent.name}</td>\r\n                    <td className=\"text-center text-sm border-b px-3 py-1 text-[#333]\">\r\n                       {/* *** Pass initial time in seconds to StatusTimer *** */}\r\n                      <StatusTimer initialTime={agent.time} />\r\n                    </td>\r\n                    <td className=\"text-center text-sm border-b px-3 py-1 text-[#333] truncate\">\r\n                      {/* Display count for the agent's current status */}\r\n                      ({getStatusCount(agent.status)}/{agentData.length})\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n             )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AgentStatusMonitoring;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 7366, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7372, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/app/main/comp/SystemMonitoring/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport TitleWrap from \"@/components/shared/TitleWrap\";\r\nimport { Table, TableRow, TableHeader, TableCell } from \"@/components/ui/table-custom\";\r\nimport { useApiForSystemMonitoring } from \"@/features/monitoring/hooks/useApiForSystemMonitoring\";\r\nimport { useEnvironmentStore } from '@/store/environmentStore';\r\n\r\n// 시스템 상태에 따른 타입 정의\r\ntype SystemStatus = \"normal\" | \"abnormal\";\r\n\r\n// API 응답 타입 정의\r\ninterface ApiResponse {\r\n  code: string;\r\n  message: string;\r\n  processStatusList: ProcessStatus[];\r\n}\r\n\r\ninterface ProcessStatus {\r\n  name: string;\r\n  pid: number;\r\n  state: number; // 1: normal, 0: abnormal\r\n  time: string;\r\n}\r\n\r\n// 각 시스템의 데이터 타입 정의\r\ninterface SystemData {\r\n  id: number;  \r\n  title: string;\r\n  status: SystemStatus;\r\n  pid: string;\r\n  time: string;\r\n}\r\n\r\ntype SystemCardProps = Omit<SystemData, 'id'>;\r\n\r\n// 상태에 따른 스타일 설정\r\nconst statusStyles = {\r\n  normal: {\r\n    bgColor: \"#44B67D\",\r\n    text: \"정상\"\r\n  },\r\n  abnormal: {\r\n    bgColor: \"#FC5858\",\r\n    text: \"비정상\"\r\n  }\r\n};\r\n\r\n// 개별 시스템 컴포넌트\r\nconst SystemCard: React.FC<SystemCardProps> = ({ title, status, pid, time }) => {\r\n  const style = status === \"normal\" ? statusStyles.normal : statusStyles.abnormal;\r\n\r\n  return (\r\n    <div>\r\n      <TitleWrap title={title} />\r\n      <div className=\"border border-[#ebebeb] rounded-[3px] px-[40px] py-[25px] flex flex-col gap-5 items-center\">\r\n        <div className=\"flex items-center gap-2\">\r\n          <div \r\n            className=\"w-4 h-4 rounded-full\" \r\n            style={{ backgroundColor: style.bgColor }}\r\n          />\r\n          <div className=\"text-sm\" style={{ color: style.bgColor }}>\r\n            {style.text}\r\n          </div>\r\n        </div>\r\n        <Table className=\"!w-[80%] text-[#333]\">\r\n          <tbody>\r\n            <TableRow>\r\n              <TableHeader className=\"text-sm font-normal\">pid</TableHeader>\r\n              <TableCell className=\"text-sm\">{pid}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableHeader className=\"text-sm font-normal\">time</TableHeader>\r\n              <TableCell className=\"text-sm\">{time}</TableCell>\r\n            </TableRow>\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SystemMonitoring: React.FC = () => {\r\n  // 상태 관리 추가\r\n  const [systemsData, setSystemsData] = useState<SystemData[]>([]);\r\n  const { statisticsUpdateCycle } = useEnvironmentStore();\r\n\r\n  // API 호출 및 응답 처리\r\n  const { mutate: systemMonitoring } = useApiForSystemMonitoring({\r\n    onSuccess: (data: ApiResponse) => {\r\n      // API 응답 데이터를 컴포넌트 데이터 형식으로 변환\r\n      if (data && data.processStatusList && Array.isArray(data.processStatusList)) {\r\n        if (data.processStatusList.length === 0) {\r\n          setSystemsData([]);\r\n        } else {\r\n          const formattedData: SystemData[] = data.processStatusList.map((item, index) => ({\r\n            id: index + 1,\r\n            title: item.name, // name을 title로 매핑\r\n            status: item.state === 1 ? \"normal\" : \"abnormal\", // state 1은 normal, 그 외는 abnormal\r\n            pid: item.pid.toString(), // pid를 문자열로 변환하여 pdi에 매핑  ==> pid로 수정\r\n            time: item.time // time은 그대로 사용\r\n          }));\r\n          \r\n          // #### 요구사항 정렬순서 텍스트 배열\r\n          const customOrder = [\r\n            \"EXDdesigner\", \r\n            \"EXDdbcontrol\", \r\n            \"EXDfr\", \r\n            \"EXDdialer\", \r\n            \"EXDcallpacing\", \r\n            \"EXDassist\", \r\n            \"EXDListAutomation\", \r\n            \"EXDfw\", \r\n            \"EXDMMService\", \r\n            \"CCbridge1\", \r\n            \"CCbridge2\"\r\n          ];\r\n          // ####\r\n          const sortedProcessData = formattedData.sort((a, b) => {\r\n            \r\n            // b는 원본객체, a는 b의 다음순서객체이며,\r\n            // customOrder 순서에서 a와 b의 index를 구하고, 음수면 a가 앞으로, 양수면 b가 앞으로 옴\r\n            // 즉, api받아온 순서를 customOrder의 index에 맞게 앞으로 뒤로 정렬시킨다.\r\n\r\n            return customOrder.indexOf(a.title) - customOrder.indexOf(b.title);\r\n          });\r\n          \r\n          setSystemsData(sortedProcessData);\r\n        }\r\n      }\r\n    },\r\n    onError: (error) => {\r\n      console.error(error);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    systemMonitoring({}); // 시스템 모니터링 API 호출\r\n    if( statisticsUpdateCycle > 0 ){        \r\n      const interval = setInterval(() => {  \r\n        systemMonitoring({}); // 시스템 모니터링 API 호출\r\n      }, statisticsUpdateCycle * 1000);  \r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [systemMonitoring,statisticsUpdateCycle]);\r\n\r\n  \r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"w-full limit-width\">\r\n      {systemsData.length > 0 ? (\r\n        <div className=\"grid grid-cols-3 grid-rows-3 gap-[30px]\">\r\n          {systemsData.map((system) => (\r\n            <SystemCard\r\n              key={system.id}\r\n              title={system.title}\r\n              status={system.status}\r\n              pid={system.pid}\r\n              time={system.time}\r\n            />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div className=\"flex justify-center items-center h-[300px]\">\r\n          <p className=\"text-lg text-gray-500\">데이터가 없습니다</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SystemMonitoring;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 7649, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7655, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/app/main/comp/IntegratedMonitoringDashboard.tsx"],"sourcesContent":["// C:\\nproject\\fe_pdsw\\src\\app\\main\\comp\\IntegratedMonitoringDashboard.tsx\r\nimport React, { useState } from 'react';\r\nimport { ZoomableContent } from '@/components/shared/ui/ZoomableContent';\r\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\r\nimport { Alert, AlertTitle, AlertDescription } from '@/components/ui/alert';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport CustomAlert from '@/components/shared/layout/CustomAlert';\r\n\r\nconst IntegratedMonitoringDashboard: React.FC = () => {\r\n  const [isAlertOpen, setIsAlertOpen] = useState(false);\r\n\r\n  const handleOpenAlert = () => setIsAlertOpen(true);\r\n  const handleCloseAlert = () => setIsAlertOpen(false);\r\n\r\n  return (\r\n    <ZoomableContent>\r\n      <div className=\"flex flex-col h-full w-full p-4 bg-gray-100\">\r\n        <header className=\"mb-4\">\r\n          <h1 className=\"text-2xl font-bold text-center\">통합 모니터링 대시보드</h1>\r\n        </header>\r\n        <main className=\"flex flex-wrap gap-4\">\r\n          <section className=\"w-full md:w-1/2 lg:w-1/3\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>실시간 메트릭</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"grid grid-cols-1 gap-4\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <h3 className=\"text-lg font-semibold\">CPU 사용률</h3>\r\n                    <Badge variant=\"outline\">75%</Badge>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <h3 className=\"text-lg font-semibold\">메모리 사용률</h3>\r\n                    <Badge variant=\"outline\">60%</Badge>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <h3 className=\"text-lg font-semibold\">디스크 사용률</h3>\r\n                    <Badge variant=\"outline\">80%</Badge>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </section>\r\n          <section className=\"w-full md:w-1/2 lg:w-1/3\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>알림</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  <Alert variant=\"destructive\">\r\n                    <AlertTitle>경고: 메모리 사용률 높음</AlertTitle>\r\n                    <AlertDescription>2023-10-01 12:00:00</AlertDescription>\r\n                  </Alert>\r\n                  <Alert variant=\"destructive\">\r\n                    <AlertTitle>경고: 디스크 사용률 높음</AlertTitle>\r\n                    <AlertDescription>2023-10-01 13:00:00</AlertDescription>\r\n                  </Alert>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </section>\r\n          <section className=\"w-full md:w-1/2 lg:w-1/3\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>로그</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-2\">\r\n                  <p>2023-10-01 12:00:00 - 시스템 시작</p>\r\n                  <p>2023-10-01 12:05:00 - 사용자 로그인</p>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </section>\r\n          <section className=\"w-full md:w-1/2 lg:w-1/3\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>상태 표시기</CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"grid grid-cols-1 gap-4\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <h3 className=\"text-lg font-semibold\">서버 상태</h3>\r\n                    <Badge variant=\"outline\">정상</Badge>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <h3 className=\"text-lg font-semibold\">네트워크 상태</h3>\r\n                    <Badge variant=\"outline\">정상</Badge>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </section>\r\n        </main>\r\n        <button onClick={handleOpenAlert} className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded\">\r\n          알림 열기\r\n        </button>\r\n        <CustomAlert\r\n          title=\"알림\"\r\n          message=\"이것은 테스트 알림입니다.\"\r\n          type=\"1\"\r\n          isOpen={isAlertOpen}\r\n          onClose={handleCloseAlert}\r\n        />\r\n      </div>\r\n    </ZoomableContent>\r\n  );\r\n};\r\n\r\nexport default IntegratedMonitoringDashboard;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 8104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8110, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/app/main/comp/SkilFilterOptionPannelForCampaignTab.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { useAuthStore } from \"@/store/authStore\";\r\nimport { Checkbox } from \"@/components/ui/checkbox\";\r\nimport { useAssignableSkills } from \"@/features/preferences/hooks/useAssignableSkills\";\r\nimport { useTreeMenuStore } from \"@/store/storeForSsideMenuCampaignTab\";\r\n\r\ninterface Skill {\r\n  skill_id: number;\r\n  skill_name: string;\r\n}\r\n\r\ninterface SkilFilterOptionPannelProps {\r\n  closePanel?: () => void;\r\n  onConfirm?: () => void;\r\n  selectedSkills?: number[];\r\n  onSelectedSkillsChange?: (skills: number[]) => void;\r\n  shouldCloseOnConfirm?: boolean;\r\n}\r\n\r\nconst SkilFilterOptionPannelForCampaignTab = ({\r\n  closePanel,\r\n  onConfirm,\r\n  selectedSkills: externalSelectedSkills,\r\n  onSelectedSkillsChange,\r\n  shouldCloseOnConfirm = false\r\n}: SkilFilterOptionPannelProps) => {\r\n  const { tenant_id } = useAuthStore();\r\n  \r\n  // 통합 스토어에서 스킬 ID 목록 가져오기\r\n  const { \r\n    skilIdsForCampaignTreeMenu, \r\n    setSkilIdsForCampaignTreeMenu, \r\n    setFilterMode \r\n  } = useTreeMenuStore();\r\n  \r\n  // 할당 가능한 스킬 목록 가져오기\r\n  const { data: skills = [] as Skill[], isLoading, isError } = useAssignableSkills();\r\n  \r\n  // 로컬 상태로 체크 박스 선택 상태 관리\r\n  const [localSelectedSkills, setLocalSelectedSkills] = useState<number[]>([]);\r\n\r\n  // 외부에서 선택된 스킬이 있으면 우선 사용, 없으면 스토어 값 사용\r\n  useEffect(() => {\r\n    if (externalSelectedSkills) {\r\n      setLocalSelectedSkills(externalSelectedSkills);\r\n    } else {\r\n      // 스토어의 문자열 배열을 숫자 배열로 변환\r\n      const numericSkillIds = skilIdsForCampaignTreeMenu.map(id => Number(id));\r\n      setLocalSelectedSkills(numericSkillIds);\r\n    }\r\n  }, [externalSelectedSkills, skilIdsForCampaignTreeMenu]);\r\n\r\n  // 체크박스 변경 핸들러\r\n  const handleSkillChange = (skill_id: number) => {\r\n    const updatedSkills = localSelectedSkills.includes(skill_id)\r\n      ? localSelectedSkills.filter((id) => id !== skill_id)\r\n      : [...localSelectedSkills, skill_id];\r\n    \r\n    setLocalSelectedSkills(updatedSkills);\r\n    \r\n    // 외부 상태 업데이트 콜백이 있으면 호출\r\n    if (onSelectedSkillsChange) {\r\n      onSelectedSkillsChange(updatedSkills);\r\n    }\r\n  };\r\n\r\n  // 확인 버튼 → 선택한 스킬 ID를 스토어에 저장하고 패널 닫기\r\n  const handleConfirm = () => {\r\n    // 외부에서 관리되는 경우 외부 콜백만 실행\r\n    if (onConfirm) {\r\n      onConfirm();\r\n    } \r\n    // 외부에서 관리되지 않는 경우 스토어 직접 업데이트\r\n    else {\r\n      // 선택된 스킬 ID 배열을 스토어에 저장\r\n      setSkilIdsForCampaignTreeMenu(localSelectedSkills);\r\n      // 선택된 스킬이 있으면 필터 모드를 'skill'로, 없으면 'all'로 설정\r\n      setFilterMode(localSelectedSkills.length > 0 ? 'skill' : 'all');\r\n      \r\n      if (shouldCloseOnConfirm && closePanel) {\r\n        closePanel();\r\n      }\r\n    }\r\n    \r\n    // 항상 패널 닫기 (외부 콜백이 처리하지 않는 경우)\r\n    if (!onConfirm && closePanel) {\r\n      closePanel();\r\n    }\r\n  };\r\n\r\n  // 취소 버튼 → 로컬 상태 초기화하고 패널 닫기\r\n  const handleCancel = () => {\r\n    if (externalSelectedSkills) {\r\n      setLocalSelectedSkills(externalSelectedSkills);\r\n    } else {\r\n      // 스토어의 문자열 배열을 숫자 배열로 변환\r\n      const numericSkillIds = skilIdsForCampaignTreeMenu.map(id => Number(id));\r\n      setLocalSelectedSkills(numericSkillIds);\r\n    }\r\n    \r\n    if (closePanel) {\r\n      closePanel();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* 로딩/에러 처리 */}\r\n      {isLoading && <p className=\"text-gray-500 text-center py-4\">로딩 중...</p>}\r\n      {isError && <p className=\"text-red-500 text-center py-4\">스킬 데이터를 불러오는 중 오류가 발생했습니다.</p>}\r\n\r\n      {!isLoading && !isError && (\r\n        <>\r\n          {/* 테이블 형태로 렌더링 */}\r\n          <div className=\"border rounded\">\r\n            {/* 테이블 헤더 */}\r\n            <div className=\"grid grid-cols-3 bg-gray-100 p-2 text-sm font-medium\">\r\n              <div className=\"text-center\">선택</div>\r\n              <div className=\"text-center\">아이디</div>\r\n              <div className=\"text-center\">이름</div>\r\n            </div>\r\n            \r\n            {/* 테이블 바디 */}\r\n            <div className=\"max-h-[300px] overflow-y-auto\">\r\n              {skills.length > 0 ? (\r\n                skills.map(({ skill_id, skill_name }) => (\r\n                  <div key={skill_id} className=\"grid grid-cols-3 p-2 border-t hover:bg-gray-50\">\r\n                    <div className=\"flex justify-center items-center\">\r\n                      <Checkbox\r\n                        id={`skill-${skill_id}`}\r\n                        checked={localSelectedSkills.includes(skill_id)}\r\n                        onCheckedChange={() => handleSkillChange(skill_id)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"text-center\">{skill_id}</div>\r\n                    <div className=\"text-center\">{skill_name}</div>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <div className=\"p-4 text-center text-gray-500\">불러올 스킬이 없습니다.</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* 확인/취소 버튼 */}\r\n          <div className=\"mt-4 flex justify-end gap-2\">\r\n            <Button onClick={handleCancel} variant=\"secondary\">\r\n              취소\r\n            </Button>\r\n            <Button onClick={handleConfirm}>\r\n              확인\r\n            </Button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SkilFilterOptionPannelForCampaignTab;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 8365, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8371, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/app/main/comp/CampaignGroupBulkUpdatePanel/CallSettingBulkUpdateFormForCampaingGroup.tsx"],"sourcesContent":["// CallSettingBulkUpdateFormForCampaingGroup.tsx\r\n\"use client\";\r\nimport React, { useState } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Tabs, TabsList, TabsTrigger, TabsContent } from \"@/components/ui/tabs\"; // shadcn/ui Tabs components\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from \"@/components/ui/select\"; // shadcn/ui Select components\r\nimport { ChevronLeft, ChevronRight, ChevronUp, ChevronDown } from \"lucide-react\"; // Icons\r\n\r\ninterface CallSettingBulkUpdateFormForCampaingGroupProps {\r\n  groupId?: string | number;\r\n}\r\n\r\nexport function CallSettingBulkUpdateFormForCampaingGroup({\r\n  groupId,\r\n}: CallSettingBulkUpdateFormForCampaingGroupProps = {}) {\r\n  // Main 탭 목록\r\n  const tabs = [\r\n    { key: \"registrationTime\", label: \"등록시간\" },\r\n    { key: \"callingOrder\", label: \"발신순서\" },\r\n    { key: \"callingStrategy\", label: \"발신전략\" },\r\n    { key: \"callingMethod\", label: \"발신방법\" },\r\n    { key: \"callLineCount\", label: \"콜라인수\" },\r\n    { key: \"lunarCalendar\", label: \"음력\" },\r\n    { key: \"assignedCounselor\", label: \"할당상담사\" },\r\n    { key: \"otherInfo\", label: \"기타정보\" },\r\n  ];\r\n\r\n  // 선택된 탭 상태 관리 (기본값 \"registrationTime\")\r\n  const [activeTab, setActiveTab] = useState(tabs[0].key);\r\n\r\n  // 전화번호 탭 목록 (발신순서 탭 내부에서 사용)\r\n  const phoneNumbers = [\r\n    { id: 1, label: \"고객 전화번호(1)\" },\r\n    { id: 2, label: \"고객 전화번호(2)\" },\r\n    { id: 3, label: \"고객 전화번호(3)\" },\r\n    { id: 4, label: \"고객 전화번호(4)\" },\r\n    { id: 5, label: \"고객 전화번호(5)\" },\r\n  ];\r\n\r\n  // 발신순서 탭 외 다른 탭의 기본 내용 (placeholder)\r\n  const tabContents: { [key: string]: string } = {\r\n    registrationTime: \"등록시간 관련 내용을 여기에 표시합니다.\",\r\n    callingStrategy: \"발신전략 관련 내용을 여기에 표시합니다.\",\r\n    callingMethod: \"발신방법 관련 내용을 여기에 표시합니다.\",\r\n    callLineCount: \"콜라인수 관련 내용을 여기에 표시합니다.\",\r\n    lunarCalendar: \"음력 관련 내용을 여기에 표시합니다.\",\r\n    assignedCounselor: \"할당상담사 관련 내용을 여기에 표시합니다.\",\r\n    otherInfo: \"기타정보 관련 내용을 여기에 표시합니다.\",\r\n  };\r\n\r\n  const [selectedPhoneId, setSelectedPhoneId] = useState<number | null>(null); // 선택된 Phone ID\r\n  const [selectedPhoneNumberTab, setSelectedPhoneNumberTab] = useState<number>(1);  //선택된 번호 탭\r\n  const [leftPhoneNumbers, setLeftPhoneNumbers] = useState(phoneNumbers); // 왼쪽 전화번호 목록\r\n  const [rightPhoneNumbers, setRightPhoneNumbers] = useState<{ id: number, label: string }[]>([]); // 오른쪽 전화번호 목록 (순서 포함)\r\n\r\n\r\n  // 오른쪽으로 전화번호 이동\r\n  const moveNumberToRight = () => {\r\n    if (selectedPhoneId) {\r\n      const selectedNumber = leftPhoneNumbers.find(num => num.id === selectedPhoneId);\r\n      if (selectedNumber) {\r\n        setRightPhoneNumbers([...rightPhoneNumbers, selectedNumber]);\r\n        setLeftPhoneNumbers(leftPhoneNumbers.filter(num => num.id !== selectedPhoneId));\r\n        setSelectedPhoneId(null); // 선택 해제\r\n      }\r\n    }\r\n  };\r\n\r\n  // 왼쪽으로 전화번호 이동\r\n  const moveNumberToLeft = () => {\r\n    if (selectedPhoneId) {\r\n      const selectedNumber = rightPhoneNumbers.find(num => num.id === selectedPhoneId);\r\n      if (selectedNumber) {\r\n        setLeftPhoneNumbers([...leftPhoneNumbers, selectedNumber]);\r\n        setRightPhoneNumbers(rightPhoneNumbers.filter(num => num.id !== selectedPhoneId));\r\n        setSelectedPhoneId(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  // 위로 이동\r\n  const moveNumberUp = () => {\r\n    if (selectedPhoneId) {\r\n      const currentIndex = rightPhoneNumbers.findIndex(num => num.id === selectedPhoneId);\r\n      if (currentIndex > 0) {\r\n        const newRightPhoneNumbers = [...rightPhoneNumbers];\r\n        const temp = newRightPhoneNumbers[currentIndex];\r\n        newRightPhoneNumbers[currentIndex] = newRightPhoneNumbers[currentIndex - 1];\r\n        newRightPhoneNumbers[currentIndex - 1] = temp;\r\n        setRightPhoneNumbers(newRightPhoneNumbers);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  // 아래로 이동\r\n  const moveNumberDown = () => {\r\n    if (selectedPhoneId) {\r\n      const currentIndex = rightPhoneNumbers.findIndex(num => num.id === selectedPhoneId);\r\n      if (currentIndex < rightPhoneNumbers.length - 1) {\r\n        const newRightNumbers = [...rightPhoneNumbers];\r\n        const temp = newRightNumbers[currentIndex];\r\n        newRightNumbers[currentIndex] = newRightNumbers[currentIndex + 1];\r\n        newRightNumbers[currentIndex + 1] = temp;\r\n        setRightPhoneNumbers(newRightNumbers);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"bg-white p-3 flex flex-col h-full\">\r\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"h-full flex flex-col\">\r\n        <TabsList className=\"mb-4\">\r\n          {tabs.map((tab) => (\r\n            <TabsTrigger key={tab.key} value={tab.key} className=\"px-4 py-2\">\r\n              {tab.label}\r\n            </TabsTrigger>\r\n          ))}\r\n        </TabsList>\r\n\r\n        {/* Tab Content */}\r\n        {tabs.map(tab => (\r\n          <TabsContent key={tab.key} value={tab.key} className=\"flex-1\">\r\n            {tab.key === \"callingOrder\" ? (\r\n              <>\r\n                {/* Phone ID 선택기와 전화번호 탭 */}\r\n                <div className=\"flex mb-2\">\r\n                  <div className=\"flex items-center mr-4\">\r\n                    <label className=\"text-sm mr-2\">Phone ID</label>\r\n                    <Select onValueChange={(value) => setSelectedPhoneId(Number(value))}>\r\n                      <SelectTrigger className=\"w-[180px]\">\r\n                        <SelectValue placeholder=\"선택\" />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        {(leftPhoneNumbers.length > 0 ? leftPhoneNumbers : rightPhoneNumbers).map(num => (\r\n                          <SelectItem key={num.id} value={num.id.toString()}>{num.label}</SelectItem>\r\n                        ))}\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n\r\n                  <div className=\"flex border border-gray-300\">\r\n                    {phoneNumbers.map((phone) => (\r\n                      <Button\r\n                        key={phone.id}\r\n                        variant={selectedPhoneNumberTab === phone.id ? \"default\" : \"ghost\"}\r\n                        className={`px-3 py-1 text-sm ${selectedPhoneNumberTab === phone.id ? \"\" : \"\"\r\n                          }`}\r\n                        onClick={() => setSelectedPhoneNumberTab(phone.id)}\r\n                      >\r\n                        {phone.label}\r\n                      </Button>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* 전화번호별 발신순서 편집 */}\r\n                <div className=\"border border-gray-300 p-2 flex-1 flex flex-col\">\r\n                  <div className=\"text-sm font-medium mb-2\">전화번호별 발신순서 편집</div>\r\n\r\n                  <div className=\"flex flex-1\">\r\n                    {/* 왼쪽 전화번호 목록 */}\r\n                    <div className=\"w-48 border border-gray-300 mr-2 overflow-auto\">\r\n                      {leftPhoneNumbers.map((phone) => (\r\n                        <div\r\n                          key={phone.id}\r\n                          className={`p-1 text-sm cursor-pointer ${selectedPhoneId === phone.id ? \"bg-blue-600 text-white\" : \"hover:bg-gray-100\"\r\n                            }`}\r\n                          onClick={() => setSelectedPhoneId(phone.id)}\r\n                        >\r\n                          {phone.label}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n\r\n                    {/* 중앙 이동 버튼 */}\r\n                    <div className=\"flex flex-col justify-center space-y-2 mr-2\">\r\n                      <Button variant=\"outline\" size=\"icon\" onClick={moveNumberToRight}>\r\n                        <ChevronRight className=\"h-4 w-4\" />\r\n                      </Button>\r\n                      <Button variant=\"outline\" size=\"icon\" onClick={moveNumberToLeft}>\r\n                        <ChevronLeft className=\"h-4 w-4\" />\r\n                      </Button>\r\n                    </div>\r\n\r\n                    {/* 오른쪽 전화번호 그룹 편집 */}\r\n                    <div className=\"flex-1 border border-gray-300 flex flex-col\">\r\n                      <div className=\"flex border-b border-gray-300\">\r\n                        <div className=\"px-2 py-1 text-sm w-24 text-center border-r border-gray-300\">순서</div>\r\n                        <div className=\"flex-1 text-center py-1 text-sm\">전화번호 그룹</div>\r\n                      </div>\r\n                      <div className=\"flex-1 overflow-auto\">\r\n                        {/* 전화번호 그룹 */}\r\n                        {rightPhoneNumbers.map((phone, index) => (\r\n                          <div\r\n                            key={phone.id}\r\n                            className={`flex items-center border-b border-gray-300 last:border-none ${selectedPhoneId === phone.id ? 'bg-blue-100' : ''}`}\r\n                            onClick={() => setSelectedPhoneId(phone.id)}\r\n\r\n                          >\r\n                            <div className=\"w-24 text-center text-sm border-r border-gray-300 p-1\">{index + 1}</div>\r\n                            <div className=\"flex-1 p-1 text-sm\">{phone.label}</div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* 오른쪽 수직 이동 버튼 */}\r\n                    <div className=\"flex flex-col justify-center space-y-2 ml-2\">\r\n                      <Button variant=\"outline\" size=\"icon\" onClick={moveNumberUp}>\r\n                        <ChevronUp className=\"h-4 w-4\" />\r\n                      </Button>\r\n                      <Button variant=\"outline\" size=\"icon\" onClick={moveNumberDown}>\r\n                        <ChevronDown className=\"h-4 w-4\" />\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div className=\"p-4\">\r\n                <p>{tabContents[tab.key]}</p>\r\n              </div>\r\n            )}\r\n          </TabsContent>\r\n        ))}\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"AAAA,gDAAgD;;;;;AAEhD;AACA;AACA,kOAAiF,4BAA4B;AAC7G,sOAMiC,8BAA8B;AAC/D,wXAAkF,QAAQ;AAA1F;AAAA;AAAA;;;AAXA;;;;;;AAiBO,SAAS,0CAA0C,EACxD,OAAO,EACwC,GAAG,CAAC,CAAC;;IACpD,YAAY;IACZ,MAAM,OAAO;QACX;YAAE,KAAK;YAAoB,OAAO;QAAO;QACzC;YAAE,KAAK;YAAgB,OAAO;QAAO;QACrC;YAAE,KAAK;YAAmB,OAAO;QAAO;QACxC;YAAE,KAAK;YAAiB,OAAO;QAAO;QACtC;YAAE,KAAK;YAAiB,OAAO;QAAO;QACtC;YAAE,KAAK;YAAiB,OAAO;QAAK;QACpC;YAAE,KAAK;YAAqB,OAAO;QAAQ;QAC3C;YAAE,KAAK;YAAa,OAAO;QAAO;KACnC;IAED,uCAAuC;IACvC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG;IAEtD,6BAA6B;IAC7B,MAAM,eAAe;QACnB;YAAE,IAAI;YAAG,OAAO;QAAa;QAC7B;YAAE,IAAI;YAAG,OAAO;QAAa;QAC7B;YAAE,IAAI;YAAG,OAAO;QAAa;QAC7B;YAAE,IAAI;YAAG,OAAO;QAAa;QAC7B;YAAE,IAAI;YAAG,OAAO;QAAa;KAC9B;IAED,qCAAqC;IACrC,MAAM,cAAyC;QAC7C,kBAAkB;QAClB,iBAAiB;QACjB,eAAe;QACf,eAAe;QACf,eAAe;QACf,mBAAmB;QACnB,WAAW;IACb;IAEA,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB,OAAO,eAAe;IAC5F,MAAM,CAAC,wBAAwB,0BAA0B,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU,IAAK,UAAU;IAC5F,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,eAAe,aAAa;IACrF,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAmC,EAAE,GAAG,sBAAsB;IAGvH,gBAAgB;IAChB,MAAM,oBAAoB;QACxB,IAAI,iBAAiB;YACnB,MAAM,iBAAiB,iBAAiB,IAAI,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK;YAC/D,IAAI,gBAAgB;gBAClB,qBAAqB;uBAAI;oBAAmB;iBAAe;gBAC3D,oBAAoB,iBAAiB,MAAM,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK;gBAC9D,mBAAmB,OAAO,QAAQ;YACpC;QACF;IACF;IAEA,eAAe;IACf,MAAM,mBAAmB;QACvB,IAAI,iBAAiB;YACnB,MAAM,iBAAiB,kBAAkB,IAAI,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK;YAChE,IAAI,gBAAgB;gBAClB,oBAAoB;uBAAI;oBAAkB;iBAAe;gBACzD,qBAAqB,kBAAkB,MAAM,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK;gBAChE,mBAAmB;YACrB;QACF;IACF;IAEA,QAAQ;IACR,MAAM,eAAe;QACnB,IAAI,iBAAiB;YACnB,MAAM,eAAe,kBAAkB,SAAS,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK;YACnE,IAAI,eAAe,GAAG;gBACpB,MAAM,uBAAuB;uBAAI;iBAAkB;gBACnD,MAAM,OAAO,oBAAoB,CAAC,aAAa;gBAC/C,oBAAoB,CAAC,aAAa,GAAG,oBAAoB,CAAC,eAAe,EAAE;gBAC3E,oBAAoB,CAAC,eAAe,EAAE,GAAG;gBACzC,qBAAqB;YACvB;QACF;IACF;IAGA,SAAS;IACT,MAAM,iBAAiB;QACrB,IAAI,iBAAiB;YACnB,MAAM,eAAe,kBAAkB,SAAS,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK;YACnE,IAAI,eAAe,kBAAkB,MAAM,GAAG,GAAG;gBAC/C,MAAM,kBAAkB;uBAAI;iBAAkB;gBAC9C,MAAM,OAAO,eAAe,CAAC,aAAa;gBAC1C,eAAe,CAAC,aAAa,GAAG,eAAe,CAAC,eAAe,EAAE;gBACjE,eAAe,CAAC,eAAe,EAAE,GAAG;gBACpC,qBAAqB;YACvB;QACF;IACF;IAIA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC,mIAAA,CAAA,OAAI;YAAC,OAAO;YAAW,eAAe;YAAc,WAAU;;8BAC7D,6LAAC,mIAAA,CAAA,WAAQ;oBAAC,WAAU;8BACjB,KAAK,GAAG,CAAC,CAAC,oBACT,6LAAC,mIAAA,CAAA,cAAW;4BAAe,OAAO,IAAI,GAAG;4BAAE,WAAU;sCAClD,IAAI,KAAK;2BADM,IAAI,GAAG;;;;;;;;;;gBAO5B,KAAK,GAAG,CAAC,CAAA,oBACR,6LAAC,mIAAA,CAAA,cAAW;wBAAe,OAAO,IAAI,GAAG;wBAAE,WAAU;kCAClD,IAAI,GAAG,KAAK,+BACX;;8CAEE,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAM,WAAU;8DAAe;;;;;;8DAChC,6LAAC,qIAAA,CAAA,SAAM;oDAAC,eAAe,CAAC,QAAU,mBAAmB,OAAO;;sEAC1D,6LAAC,qIAAA,CAAA,gBAAa;4DAAC,WAAU;sEACvB,cAAA,6LAAC,qIAAA,CAAA,cAAW;gEAAC,aAAY;;;;;;;;;;;sEAE3B,6LAAC,qIAAA,CAAA,gBAAa;sEACX,CAAC,iBAAiB,MAAM,GAAG,IAAI,mBAAmB,iBAAiB,EAAE,GAAG,CAAC,CAAA,oBACxE,6LAAC,qIAAA,CAAA,aAAU;oEAAc,OAAO,IAAI,EAAE,CAAC,QAAQ;8EAAK,IAAI,KAAK;mEAA5C,IAAI,EAAE;;;;;;;;;;;;;;;;;;;;;;sDAM/B,6LAAC;4CAAI,WAAU;sDACZ,aAAa,GAAG,CAAC,CAAC,sBACjB,6LAAC,qIAAA,CAAA,SAAM;oDAEL,SAAS,2BAA2B,MAAM,EAAE,GAAG,YAAY;oDAC3D,WAAW,CAAC,kBAAkB,EAAE,2BAA2B,MAAM,EAAE,GAAG,KAAK,IACvE;oDACJ,SAAS,IAAM,0BAA0B,MAAM,EAAE;8DAEhD,MAAM,KAAK;mDANP,MAAM,EAAE;;;;;;;;;;;;;;;;8CAarB,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;sDAA2B;;;;;;sDAE1C,6LAAC;4CAAI,WAAU;;8DAEb,6LAAC;oDAAI,WAAU;8DACZ,iBAAiB,GAAG,CAAC,CAAC,sBACrB,6LAAC;4DAEC,WAAW,CAAC,2BAA2B,EAAE,oBAAoB,MAAM,EAAE,GAAG,2BAA2B,qBAC/F;4DACJ,SAAS,IAAM,mBAAmB,MAAM,EAAE;sEAEzC,MAAM,KAAK;2DALP,MAAM,EAAE;;;;;;;;;;8DAWnB,6LAAC;oDAAI,WAAU;;sEACb,6LAAC,qIAAA,CAAA,SAAM;4DAAC,SAAQ;4DAAU,MAAK;4DAAO,SAAS;sEAC7C,cAAA,6LAAC,yNAAA,CAAA,eAAY;gEAAC,WAAU;;;;;;;;;;;sEAE1B,6LAAC,qIAAA,CAAA,SAAM;4DAAC,SAAQ;4DAAU,MAAK;4DAAO,SAAS;sEAC7C,cAAA,6LAAC,uNAAA,CAAA,cAAW;gEAAC,WAAU;;;;;;;;;;;;;;;;;8DAK3B,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAI,WAAU;;8EACb,6LAAC;oEAAI,WAAU;8EAA8D;;;;;;8EAC7E,6LAAC;oEAAI,WAAU;8EAAkC;;;;;;;;;;;;sEAEnD,6LAAC;4DAAI,WAAU;sEAEZ,kBAAkB,GAAG,CAAC,CAAC,OAAO,sBAC7B,6LAAC;oEAEC,WAAW,CAAC,4DAA4D,EAAE,oBAAoB,MAAM,EAAE,GAAG,gBAAgB,IAAI;oEAC7H,SAAS,IAAM,mBAAmB,MAAM,EAAE;;sFAG1C,6LAAC;4EAAI,WAAU;sFAAyD,QAAQ;;;;;;sFAChF,6LAAC;4EAAI,WAAU;sFAAsB,MAAM,KAAK;;;;;;;mEAN3C,MAAM,EAAE;;;;;;;;;;;;;;;;8DAarB,6LAAC;oDAAI,WAAU;;sEACb,6LAAC,qIAAA,CAAA,SAAM;4DAAC,SAAQ;4DAAU,MAAK;4DAAO,SAAS;sEAC7C,cAAA,6LAAC,mNAAA,CAAA,YAAS;gEAAC,WAAU;;;;;;;;;;;sEAEvB,6LAAC,qIAAA,CAAA,SAAM;4DAAC,SAAQ;4DAAU,MAAK;4DAAO,SAAS;sEAC7C,cAAA,6LAAC,uNAAA,CAAA,cAAW;gEAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yDAOjC,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;0CAAG,WAAW,CAAC,IAAI,GAAG,CAAC;;;;;;;;;;;uBAnGZ,IAAI,GAAG;;;;;;;;;;;;;;;;AA2GnC;GA3NgB;KAAA"}},
    {"offset": {"line": 8864, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8870, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/app/main/comp/CampaignGroupBulkUpdatePanel/CampaignInfoBulkUpdateFormForCampaingGroup.tsx"],"sourcesContent":["\"use client\";\r\nimport React from \"react\";\r\n\r\ninterface CampaignInfoBulkUpdateFormForCampaingGroupProps {\r\n  groupId?: string | number;\r\n  groupName?: string;\r\n}\r\n\r\nexport function CampaignInfoBulkUpdateFormForCampaingGroup({\r\n  groupId = \"37\",\r\n  groupName = \"037\"\r\n}: CampaignInfoBulkUpdateFormForCampaingGroupProps) {\r\n  return (\r\n    <div className=\"bg-gray-100 border-b border-gray-300\">\r\n      {/* 캠페인 정보 헤더 */}\r\n      <div className=\"bg-gray-300 px-3 py-1.5 font-medium border-b border-gray-400\">\r\n        캠페인 정보\r\n      </div>\r\n      \r\n      {/* 폼 내용 */}\r\n      <div className=\"p-4 space-y-4\">\r\n        {/* 첫 번째 행 */}\r\n        <div className=\"flex flex-wrap gap-4\">\r\n          <div className=\"flex items-center\">\r\n            <label className=\"w-24 text-sm\">그룹 아이디</label>\r\n            <input\r\n              type=\"text\"\r\n              value={groupId}\r\n              readOnly\r\n              className=\"border border-gray-300 px-2 py-1 w-32 bg-gray-100\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"flex items-center\">\r\n            <label className=\"w-16 text-sm\">테넌트</label>\r\n            <select className=\"border border-gray-300 px-2 py-1 w-32\">\r\n              <option value=\"\">-</option>\r\n            </select>\r\n          </div>\r\n          \r\n          <div className=\"flex items-center grow\">\r\n            <label className=\"w-20 text-sm\">그룹 이름</label>\r\n            <input\r\n              type=\"text\"\r\n              defaultValue={groupName}\r\n              className=\"border border-gray-300 px-2 py-1 w-full\"\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        {/* 두 번째 행 */}\r\n        <div className=\"flex flex-wrap gap-4\">\r\n          <div className=\"flex items-center\">\r\n            <label className=\"w-24 text-sm\">다이얼모드</label>\r\n            <select className=\"border border-gray-300 px-2 py-1 w-32\">\r\n              <option value=\"Power\">Power</option>\r\n              <option value=\"Preview\">Preview</option>\r\n              <option value=\"Progressive\">Progressive</option>\r\n            </select>\r\n          </div>\r\n          \r\n          <div className=\"flex items-center grow\">\r\n            <label className=\"w-16 text-sm\">스킬</label>\r\n            <div className=\"flex w-full\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"border border-gray-300 px-2 py-1 flex-1\"\r\n              />\r\n              <button className=\"border border-gray-300 px-3 bg-gray-100\">...</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* 세 번째 행 */}\r\n        <div className=\"flex items-center\">\r\n          <label className=\"w-16 text-sm\">설명</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"border border-gray-300 px-2 py-1 w-full\"\r\n          />\r\n        </div>\r\n      </div>\r\n      \r\n      {/* 작업 버튼 탭 */}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAAA;;AAQO,SAAS,2CAA2C,EACzD,UAAU,IAAI,EACd,YAAY,KAAK,EAC+B;IAChD,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;0BAA+D;;;;;;0BAK9E,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAM,WAAU;kDAAe;;;;;;kDAChC,6LAAC;wCACC,MAAK;wCACL,OAAO;wCACP,QAAQ;wCACR,WAAU;;;;;;;;;;;;0CAId,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAM,WAAU;kDAAe;;;;;;kDAChC,6LAAC;wCAAO,WAAU;kDAChB,cAAA,6LAAC;4CAAO,OAAM;sDAAG;;;;;;;;;;;;;;;;;0CAIrB,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAM,WAAU;kDAAe;;;;;;kDAChC,6LAAC;wCACC,MAAK;wCACL,cAAc;wCACd,WAAU;;;;;;;;;;;;;;;;;;kCAMhB,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAM,WAAU;kDAAe;;;;;;kDAChC,6LAAC;wCAAO,WAAU;;0DAChB,6LAAC;gDAAO,OAAM;0DAAQ;;;;;;0DACtB,6LAAC;gDAAO,OAAM;0DAAU;;;;;;0DACxB,6LAAC;gDAAO,OAAM;0DAAc;;;;;;;;;;;;;;;;;;0CAIhC,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAM,WAAU;kDAAe;;;;;;kDAChC,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDACC,MAAK;gDACL,WAAU;;;;;;0DAEZ,6LAAC;gDAAO,WAAU;0DAA0C;;;;;;;;;;;;;;;;;;;;;;;;kCAMlE,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAM,WAAU;0CAAe;;;;;;0CAChC,6LAAC;gCACC,MAAK;gCACL,WAAU;;;;;;;;;;;;;;;;;;;;;;;;AAQtB;KA9EgB"}},
    {"offset": {"line": 9130, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9136, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/app/main/comp/CampaignGroupBulkUpdatePanel/index.tsx"],"sourcesContent":["import React from 'react'\r\nimport { CallSettingBulkUpdateFormForCampaingGroup } from './CallSettingBulkUpdateFormForCampaingGroup'\r\nimport { CampaignInfoBulkUpdateFormForCampaingGroup } from './CampaignInfoBulkUpdateFormForCampaingGroup';\r\n\r\ninterface Props {\r\n  groupId?: string | number;\r\n  groupName?: string;\r\n}\r\n\r\nconst CampaignGroupBulkUpdatePanel: React.FC<Props> = ({ groupId, groupName }) => {\r\n    console.log(\"CampaignGroupBulkUpdatePanel !!!!!!!!!: \", groupId, groupName);\r\n        \r\n  return (\r\n    <div className=\"w-full h-full flex flex-col border border-gray-300 bg-gray-100\">\r\n      {/* 패널 헤더 */}\r\n      <div className=\"flex justify-between items-center bg-gray-300 px-3 py-1.5 border-b border-gray-400\">\r\n        <div className=\"font-medium\">캠페인 그룹 일괄 수정 (groupId : {groupId} , groupName: {groupName})</div>\r\n        <button className=\"px-1.5 hover:bg-gray-400 rounded\">✕</button>\r\n      </div>\r\n      \r\n      {/* 캠페인 정보 섹션 */}\r\n      <div className=\"campaign-info-section\">\r\n        <CampaignInfoBulkUpdateFormForCampaingGroup \r\n          groupId={groupId} \r\n          groupName={groupName} \r\n        />\r\n      </div>\r\n      \r\n      {/* 콜 설정 섹션 */}\r\n      <div className=\"call-setting-section flex-1\">\r\n        <CallSettingBulkUpdateFormForCampaingGroup />\r\n      </div>\r\n      \r\n      {/* 하단 버튼 */}\r\n      <div className=\"flex justify-end gap-2 p-3 border-t border-gray-300\">\r\n        <button className=\"px-8 py-1.5 bg-gray-600 text-white rounded hover:bg-gray-700\">확인</button>\r\n        <button className=\"px-8 py-1.5 bg-gray-400 text-white rounded hover:bg-gray-500\">취소</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CampaignGroupBulkUpdatePanel"],"names":[],"mappings":";;;;AACA;AACA;;;;AAOA,MAAM,+BAAgD,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE;IACzE,QAAQ,GAAG,CAAC,4CAA4C,SAAS;IAEnE,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;4BAAc;4BAAyB;4BAAQ;4BAAe;4BAAU;;;;;;;kCACvF,6LAAC;wBAAO,WAAU;kCAAmC;;;;;;;;;;;;0BAIvD,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,4MAAA,CAAA,6CAA0C;oBACzC,SAAS;oBACT,WAAW;;;;;;;;;;;0BAKf,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,2MAAA,CAAA,4CAAyC;;;;;;;;;;0BAI5C,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAO,WAAU;kCAA+D;;;;;;kCACjF,6LAAC;wBAAO,WAAU;kCAA+D;;;;;;;;;;;;;;;;;;AAIzF;KA/BM;uCAiCS"}},
    {"offset": {"line": 9247, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9253, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/app/main/comp/TabContent.tsx"],"sourcesContent":["\r\nimport React, { useState, useCallback, useRef, useEffect } from \"react\";\r\nimport { useTabStore } from \"@/store/tabStore\";\r\nimport PreferencesBoard from \"./preferences\";\r\nimport SystemPreferences from \"./SystemPreferences\";\r\nimport Campaignprogress from \"./Campaignprogress\";\r\nimport CampaignMonitorDashbord from \"./CampaignMonitorDashbord\";\r\nimport OutboundCallProgressPanel from \"./OutboundCallProgressPanel\";\r\nimport StatusCampaign from \"./StatusCampaign\";\r\nimport ChannelMonitor from \"./ChannelMonitor\";\r\nimport ListManager from \"./ListManager\";\r\nimport OperationBoard from \"./operation\";\r\nimport NewCampaignManager from \"./NewCampaignManager\";\r\nimport CampaignGroupManager from \"./CampaignGroupManager\";\r\nimport RebroadcastSettingsPanel from \"./RebroadcastSettingsPanel\";\r\nimport RebroadcastSettingsGroupPanel from \"./RebroadcastSettingsGroupPanel\";\r\nimport CampaignManager from \"./CampaignManager\";\r\nimport AgentStatusMonitoring from \"./AgentStatusMonitoring\";\r\nimport SystemMonitoring from \"./SystemMonitoring\";\r\nimport CampaignClonePanel from \"@/widgets/sidebar/pannels/CampaignClonePanel\";\r\nimport IntegratedMonitoringDashboard from \"./IntegratedMonitoringDashboard\";\r\nimport { SkillAssignmentTab } from \"@/features/campaignManager/components/treeMenus/SkillAssignmentTab\";\r\nimport BlackListCountPopup from \"@/features/campaignManager/components/popups/BlackListCountPopup\";\r\nimport { TeamSkillAssignmentTab } from \"@/features/campaignManager/components/treeMenus/TeamSkillAssignmentTab\";\r\nimport { GroupSkillAssignmentTab } from \"@/features/campaignManager/components/treeMenus/GroupSkillAssignmentTab\";\r\nimport SkilFilterOptionPannelForCampaignTab from \"./SkilFilterOptionPannelForCampaignTab\";\r\nimport CampaignDeletePanel from \"@/widgets/sidebar/pannels/CampaignDeletePanel\";\r\nimport CampaignGroupBulkUpdatePanel from \"./CampaignGroupBulkUpdatePanel\";\r\n\r\n// 탭 ID별 실제 화면을 매핑\r\nconst renderContent = (tabId: number | null, campaignId?: string, campaignName?: string, params?: any) => {\r\n\r\n  switch (tabId) {\r\n    case 1:\r\n      return <CampaignGroupManager\r\n        groupId={params?.groupId}\r\n        groupName={params?.groupName}\r\n      />;\r\n    case 2:\r\n      return <CampaignManager \r\n        campaignId={params?.campaignId}\r\n      />;\r\n    case 3:\r\n      return <IntegratedMonitoringDashboard />;\r\n    case 4:\r\n      return <Campaignprogress />;\r\n    case 5:\r\n      return <OutboundCallProgressPanel />;\r\n    case 6:\r\n      return <ChannelMonitor />;\r\n    case 7:\r\n      return <ListManager />;\r\n    case 8:\r\n      return <OperationBoard />;\r\n    case 9:\r\n      return <OperationBoard />;\r\n    case 10:\r\n      return <SystemPreferences />;\r\n    case 11:\r\n      return <OperationBoard />;\r\n    case 12:\r\n      return <PreferencesBoard />;\r\n    case 13:\r\n      // 새 캠페인 입력용 패널\r\n      return <NewCampaignManager tenantId={params?.tenantId} />;\r\n    case 14:\r\n      return <StatusCampaign />;\r\n    case 20:\r\n      return <RebroadcastSettingsPanel />;\r\n    case 21:\r\n      return <CampaignMonitorDashbord campaignId={campaignId} />;\r\n    // case 22:\r\n    //   return <AgentStatusMonitoring campaignId={params?.campainId}/>;\r\n    case 22:\r\n      // 상담원 상태 모니터 \r\n      return (\r\n        <AgentStatusMonitoring\r\n          sessionKey={params?.sessionKey}\r\n          campaignId={params?.campaignId}\r\n          tenantId={params?.tenantId}\r\n        />\r\n      );\r\n    case 23:\r\n      return <SystemMonitoring />;\r\n    case 24:\r\n      return <RebroadcastSettingsGroupPanel />;\r\n    case 100:\r\n      return <>잘못된 스킬 할당 탭입니다.</>;\r\n    case 130: // 캠페인 복사 화면 리턴\r\n      return <CampaignClonePanel />;\r\n\r\n    case 131: // 캠페인 삭제 패널\r\n      return <CampaignDeletePanel campaignId={campaignId} campaignName={campaignName} />;\r\n\r\n    case 501:\r\n      return (\r\n        <div className=\"flex justify-left w-full\">\r\n          <BlackListCountPopup />\r\n        </div>\r\n      );\r\n\r\n    case 600: // 상담사 스킬 할당 탭\r\n      return (\r\n        <div className=\"flex justify-left w-full\">\r\n          <div className=\"max-w-[500px] w-full\">\r\n            <SkillAssignmentTab />\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n    case 601: // 팀 스킬 할당 탭\r\n      return (\r\n        <div className=\"flex justify-left w-full\">\r\n          <div className=\"max-w-[530px] w-full\">\r\n            <TeamSkillAssignmentTab />\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n    case 602: // 그룹 스킬 할당 탭\r\n      return (\r\n        <div className=\"flex justify-left w-full\">\r\n          <div className=\"max-w-[500px] w-full\">\r\n            <GroupSkillAssignmentTab />\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n    case 603: // 스킬 옵션 설정 for 캠페인탭 필터\r\n      return (\r\n        <div className=\"flex justify-left w-full\">\r\n          <div className=\"max-w-[500px] w-full\">\r\n            <SkilFilterOptionPannelForCampaignTab />\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n    case 700:\r\n      return (\r\n        <div className=\"flex justify-left w-full\">\r\n          <div className=\"max-w-[1000px] w-full\">\r\n            {/* <CampaignGroupBulkUpdatePanel /> */}\r\n            <CampaignGroupBulkUpdatePanel\r\n              groupId={params?.groupId}\r\n              groupName={params?.groupName}\r\n            />\r\n          </div>\r\n        </div>\r\n      )\r\n\r\n\r\n    default:\r\n      return (\r\n        <div className=\"flex items-center justify-center h-full text-gray-500\">\r\n          탭을 선택!\r\n        </div>\r\n      );\r\n  }\r\n};\r\n\r\nconst TabContent = () => {\r\n  const { rows, activeTabId, activeTabKey, setActiveTab } = useTabStore();\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const dragRef = useRef<HTMLDivElement>(null);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const widthsRef = useRef({ left: 50, right: 50 });\r\n  const startXRef = useRef(0);\r\n  const [sections, setSections] = useState(rows[0]?.sections || []);\r\n\r\n  // Performance optimization using requestAnimationFrame\r\n  const updateWidths = useCallback((leftWidth: number) => {\r\n    const clampedLeft = Math.max(20, Math.min(80, leftWidth));\r\n    const right = 100 - clampedLeft;\r\n\r\n    requestAnimationFrame(() => {\r\n      if (sections.length === 2) {\r\n        const newSections = [...sections];\r\n        newSections[0] = { ...newSections[0], width: clampedLeft };\r\n        newSections[1] = { ...newSections[1], width: right };\r\n        setSections(newSections);\r\n        widthsRef.current = { left: clampedLeft, right };\r\n      }\r\n    });\r\n  }, [sections]);\r\n\r\n  const handleMouseDown = useCallback((e: React.MouseEvent) => {\r\n    if (!containerRef.current) return;\r\n\r\n    setIsDragging(true);\r\n    startXRef.current = e.clientX;\r\n    document.body.style.cursor = 'col-resize';\r\n    document.body.style.userSelect = 'none'; // Prevent text selection while dragging\r\n  }, []);\r\n\r\n  const handleMouseMove = useCallback((e: MouseEvent) => {\r\n    if (!isDragging || !containerRef.current) return;\r\n\r\n    const container = containerRef.current.getBoundingClientRect();\r\n    const deltaX = e.clientX - startXRef.current;\r\n    const containerWidth = container.width;\r\n\r\n    // Calculate new width based on delta movement\r\n    const deltaPercentage = (deltaX / containerWidth) * 100;\r\n    const newLeftWidth = widthsRef.current.left + deltaPercentage;\r\n\r\n    updateWidths(newLeftWidth);\r\n    startXRef.current = e.clientX;\r\n  }, [isDragging, updateWidths]);\r\n\r\n  const handleMouseUp = useCallback(() => {\r\n    setIsDragging(false);\r\n    document.body.style.cursor = 'default';\r\n    document.body.style.userSelect = 'auto';\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isDragging) {\r\n      window.addEventListener('mousemove', handleMouseMove);\r\n      window.addEventListener('mouseup', handleMouseUp);\r\n      window.addEventListener('mouseleave', handleMouseUp);\r\n    }\r\n    return () => {\r\n      window.removeEventListener('mousemove', handleMouseMove);\r\n      window.removeEventListener('mouseup', handleMouseUp);\r\n      window.removeEventListener('mouseleave', handleMouseUp);\r\n    };\r\n  }, [isDragging, handleMouseMove, handleMouseUp]);\r\n\r\n  // Update sections when rows change\r\n  useEffect(() => {\r\n    setSections(rows[0]?.sections || []);\r\n  }, [rows]);\r\n\r\n  return (\r\n    <div ref={containerRef} className=\"flex flex-col w-full h-full overflow-auto bg-white\">\r\n      {rows.map((row) => (\r\n        <div\r\n          key={row.id}\r\n          className=\"flex w-full flex-1 border-b last:border-b-0 relative h-full\"\r\n        >\r\n          {sections.map((section, index) => {\r\n            const activeKey = section.activeTabKey;\r\n            const activeTab = section.tabs.find((t) => t.uniqueKey === activeKey);\r\n            const isActiveGlobal = activeTabId === activeTab?.id && activeTabKey === activeTab?.uniqueKey;\r\n            const tabIdToRender = isActiveGlobal ? activeTabId : activeTab?.id ?? null;\r\n            // 현재 활성화된 탭에서 campaignId 가져오기\r\n            const campaignId = activeTab?.campaignId;\r\n            const campaignName = activeTab?.campaignName;\r\n            const params = activeTab?.params; // params 추출 추가\r\n\r\n            return (\r\n              <React.Fragment key={section.id}>\r\n                <div\r\n                  className={`overflow-auto transition-all duration-75 ease-out ${sections.length === 2 ? 'p-2' : ''}`}\r\n                  style={{\r\n                    width: `${section.width}%`,\r\n                    border: sections.length === 2 ? '1px solid #bbb' : 'none'\r\n                  }}\r\n                  onClick={() => {\r\n                    if (activeTab) {\r\n                      setActiveTab(activeTab.id, activeTab.uniqueKey);\r\n                    }\r\n                  }}\r\n                >\r\n                  {renderContent(tabIdToRender, campaignId, campaignName, params)}\r\n                </div>\r\n                {index === 0 && sections.length === 2 && (\r\n                  <div\r\n                    ref={dragRef}\r\n                    className=\"w-1 bg-gray-200 hover:bg-[#55BEC8] active:bg-[#55BEC8] cursor-col-resize select-none\"\r\n                    onMouseDown={handleMouseDown}\r\n                    style={{\r\n                      touchAction: 'none',\r\n                    }}\r\n                  />\r\n                )}\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabContent;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 9771, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9777, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/app/main/comp/DraggableTab.tsx"],"sourcesContent":["// src/app/main/comp/DraggableTab.tsx\r\n\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { useDraggable } from \"@dnd-kit/core\";\r\nimport { CSS } from \"@dnd-kit/utilities\";\r\nimport { X } from \"lucide-react\";\r\nimport Image from \"next/image\";\r\nimport { CommonButton } from \"@/components/shared/CommonButton\";\r\n\r\ninterface DraggableTabProps {\r\n  id: number;\r\n  uniqueKey: string;\r\n  title: string;\r\n  //icon: string;\r\n  isActive: boolean;\r\n  onRemove: () => void;\r\n  onSelect: () => void;\r\n\r\n  // DnD에서 어느 섹션으로부터 드래그되는지 판단 위해\r\n  rowId: string;\r\n  sectionId: string;\r\n}\r\n\r\nconst DraggableTab: React.FC<DraggableTabProps> = ({\r\n  id,\r\n  uniqueKey,\r\n  title,\r\n  //icon,\r\n  isActive,\r\n  onRemove,\r\n  onSelect,\r\n  rowId,\r\n  sectionId,\r\n}) => {\r\n  const { attributes, listeners, setNodeRef, transform } = useDraggable({\r\n    id: uniqueKey,\r\n    data: {\r\n      type: \"tab\",\r\n      id,\r\n      uniqueKey,\r\n      rowId,\r\n      sectionId,\r\n    },\r\n  });\r\n\r\n  const style = {\r\n    transform: CSS.Translate.toString(transform),\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={setNodeRef}\r\n      style={style}\r\n      {...attributes}\r\n      {...listeners}\r\n      className={`\r\n        flex items-center gap-2 px-3 py-1.5 h-[30px] drag-tab cursor-pointer\r\n        ${isActive ? \"bg-[#56CAD6] text-white\" : \"bg-white text-[#777]\"}\r\n      `}\r\n      onClick={onSelect}\r\n    >\r\n      {/* {icon && (\r\n        <Image\r\n          src={icon}\r\n          alt={title}\r\n          width={16}\r\n          height={16}\r\n          className=\"flex-none object-contain\"\r\n        />\r\n      )} */}\r\n      <span className=\"text-sm whitespace-nowrap\">{title}</span>\r\n      <CommonButton\r\n        variant=\"ghost\"\r\n        size=\"sm\"\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          onRemove();\r\n        }}\r\n        className={`\r\n          p-0 min-w-[8px]\r\n          ${isActive ? \"hover:bg-[transparent]\" : \"hover:bg-[transparent]\"}`}\r\n      >\r\n      <Image\r\n          src={isActive ? \"/header-menu/maintap_colse_on.png\" : \"/header-menu/maintap_colse_off.png\"}\r\n          alt=\"닫기\"\r\n          width={8}\r\n          height={8}\r\n        />\r\n      </CommonButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DraggableTab;\r\n"],"names":[],"mappings":"AAAA,qCAAqC;;;;;AAIrC;AACA;AAEA;AACA;;;AAPA;;;;;AAuBA,MAAM,eAA4C,CAAC,EACjD,EAAE,EACF,SAAS,EACT,KAAK,EACL,OAAO;AACP,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,KAAK,EACL,SAAS,EACV;;IACC,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,eAAY,AAAD,EAAE;QACpE,IAAI;QACJ,MAAM;YACJ,MAAM;YACN;YACA;YACA;YACA;QACF;IACF;IAEA,MAAM,QAAQ;QACZ,WAAW,wKAAA,CAAA,MAAG,CAAC,SAAS,CAAC,QAAQ,CAAC;IACpC;IAEA,qBACE,6LAAC;QACC,KAAK;QACL,OAAO;QACN,GAAG,UAAU;QACb,GAAG,SAAS;QACb,WAAW,CAAC;;QAEV,EAAE,WAAW,4BAA4B,uBAAuB;MAClE,CAAC;QACD,SAAS;;0BAWT,6LAAC;gBAAK,WAAU;0BAA6B;;;;;;0BAC7C,6LAAC,wJAAA,CAAA,eAAY;gBACX,SAAQ;gBACR,MAAK;gBACL,SAAS,CAAC;oBACR,EAAE,eAAe;oBACjB;gBACF;gBACA,WAAW,CAAC;;UAEV,EAAE,WAAW,2BAA2B,0BAA0B;0BAEtE,cAAA,6LAAC,gIAAA,CAAA,UAAK;oBACF,KAAK,WAAW,sCAAsC;oBACtD,KAAI;oBACJ,OAAO;oBACP,QAAQ;;;;;;;;;;;;;;;;;AAKlB;GApEM;;QAWqD,8JAAA,CAAA,eAAY;;;KAXjE;uCAsES"}},
    {"offset": {"line": 9872, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9878, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/app/main/comp/TabSection.tsx"],"sourcesContent":["// src/app/main/comp/TabSection.tsx\r\n\"use client\";\r\n\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport { useDroppable } from \"@dnd-kit/core\";\r\nimport { X, ChevronLeft, ChevronRight } from \"lucide-react\";\r\nimport { CommonButton } from \"@/components/shared/CommonButton\";\r\nimport { useTabStore } from \"@/store/tabStore\";\r\nimport DraggableTab from \"./DraggableTab\";\r\nimport Image from \"next/image\";\r\n\r\ninterface TabSectionProps {\r\n  rowId: string;\r\n  sectionId: string;\r\n  width: number;\r\n  canRemove?: boolean;\r\n  showDivider?: boolean;\r\n}\r\n\r\nconst TabSection: React.FC<TabSectionProps> = ({\r\n  rowId,\r\n  sectionId,\r\n  width,\r\n  canRemove = true,\r\n  showDivider = false,\r\n}) => {\r\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\r\n  const scrollIntervalRef = useRef<NodeJS.Timeout | null>(null);\r\n  const [isScrolling, setIsScrolling] = useState<\"left\" | \"right\" | null>(null);\r\n\r\n  const { isOver, setNodeRef } = useDroppable({\r\n    id: `section-${rowId}-${sectionId}`,\r\n    data: {\r\n      type: \"section\",\r\n      rowId,\r\n      sectionId,\r\n    },\r\n  });\r\n\r\n  const {\r\n    rows,\r\n    removeTab,\r\n    removeSection,\r\n    setSectionActiveTab, // 새로 사용할 함수\r\n  } = useTabStore();\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (scrollIntervalRef.current) {\r\n        clearInterval(scrollIntervalRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const scroll = (direction: \"left\" | \"right\") => {\r\n    if (!scrollContainerRef.current) return;\r\n    const scrollAmount = 100;\r\n    const newLeft =\r\n      direction === \"left\"\r\n        ? scrollContainerRef.current.scrollLeft - scrollAmount\r\n        : scrollContainerRef.current.scrollLeft + scrollAmount;\r\n\r\n    scrollContainerRef.current.scrollTo({\r\n      left: newLeft,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  const startScrolling = (direction: \"left\" | \"right\") => {\r\n    setIsScrolling(direction);\r\n    if (scrollIntervalRef.current) clearInterval(scrollIntervalRef.current);\r\n    scroll(direction);\r\n    scrollIntervalRef.current = setInterval(() => {\r\n      scroll(direction);\r\n    }, 150);\r\n  };\r\n\r\n  const stopScrolling = () => {\r\n    if (scrollIntervalRef.current) {\r\n      clearInterval(scrollIntervalRef.current);\r\n      scrollIntervalRef.current = null;\r\n    }\r\n    setIsScrolling(null);\r\n  };\r\n\r\n  // 현재 섹션 찾기\r\n  const row = rows.find((r) => r.id === rowId);\r\n  if (!row) return null;\r\n  const section = row.sections.find((s) => s.id === sectionId);\r\n  if (!section) return null;\r\n\r\n  return (\r\n    <div\r\n      ref={setNodeRef}\r\n      className={`\r\n        flex-none h-full relative\r\n        transition-colors duration-200\r\n        ${isOver ? \"bg-gray-100\" : \"bg-white\"}\r\n        ${showDivider ? \"border-r border-gray-200\" : \"\"}\r\n      `}\r\n      style={{ width: `${width}%` }}\r\n    >\r\n      <div className=\"flex items-center\">\r\n        <CommonButton\r\n          variant=\"tabEtc\"\r\n          size=\"sm\"\r\n          onMouseDown={() => startScrolling(\"left\")}\r\n          onMouseUp={stopScrolling}\r\n          onMouseLeave={stopScrolling}\r\n          onTouchStart={() => startScrolling(\"left\")}\r\n          onTouchEnd={stopScrolling}\r\n          className={`\r\n            ${isScrolling === \"left\" ? \"bg-gray-100\" : \"\"}\r\n          `}\r\n        >\r\n        \r\n           <Image\r\n            src=\"/header-menu/leftArrow.svg\"\r\n            alt=\"left\"\r\n            width={8}\r\n            height={8}\r\n          />\r\n        </CommonButton>\r\n\r\n        <div\r\n          ref={scrollContainerRef}\r\n          className=\"flex-1 flex scroll-smooth\"\r\n        >\r\n          {section.tabs.map((tab) => {\r\n            const isActive = section.activeTabKey === tab.uniqueKey;\r\n            return (\r\n              <DraggableTab\r\n                key={tab.uniqueKey}\r\n                id={tab.id}\r\n                uniqueKey={tab.uniqueKey}\r\n                title={tab.title}\r\n                //icon={tab.icon}\r\n                isActive={isActive}\r\n                // 탭 제거\r\n                onRemove={() => removeTab(tab.id, tab.uniqueKey)}\r\n                // 탭 선택 => 섹션 단위 활성화\r\n                onSelect={() =>\r\n                  setSectionActiveTab(rowId, sectionId, tab.uniqueKey)\r\n                }\r\n                rowId={rowId} // Draggable 시 필요\r\n                sectionId={sectionId}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <CommonButton\r\n          variant=\"tabEtc\"\r\n          size=\"sm\"\r\n          onMouseDown={() => startScrolling(\"right\")}\r\n          onMouseUp={stopScrolling}\r\n          onMouseLeave={stopScrolling}\r\n          onTouchStart={() => startScrolling(\"right\")}\r\n          onTouchEnd={stopScrolling}\r\n          className={`\r\n            ${isScrolling === \"right\" ? \"bg-gray-100\" : \"\"}\r\n          `}\r\n        >\r\n          <Image\r\n            src=\"/header-menu/rightArrow.svg\"\r\n            alt=\"right\"\r\n            width={8}\r\n            height={8}\r\n          />\r\n        </CommonButton>\r\n\r\n        {canRemove && row.sections.length > 1 && (\r\n          <CommonButton\r\n            variant=\"tabEtc\"\r\n            size=\"sm\"\r\n            onClick={() => removeSection(rowId, sectionId)}\r\n            className=\"\"\r\n          >\r\n            <Image\r\n            src=\"/header-menu/tab_minus.svg\"\r\n            alt=\"plus\"\r\n            width={8}\r\n            height={8}\r\n          />\r\n          </CommonButton>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabSection;\r\n"],"names":[],"mappings":"AAAA,mCAAmC;;;;;AAGnC;AACA;AAEA;AACA;AACA;AACA;;;AARA;;;;;;;AAkBA,MAAM,aAAwC,CAAC,EAC7C,KAAK,EACL,SAAS,EACT,KAAK,EACL,YAAY,IAAI,EAChB,cAAc,KAAK,EACpB;;IACC,MAAM,qBAAqB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAkB;IAClD,MAAM,oBAAoB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAyB;IACxD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA2B;IAExE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,8JAAA,CAAA,eAAY,AAAD,EAAE;QAC1C,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,EAAE,WAAW;QACnC,MAAM;YACJ,MAAM;YACN;YACA;QACF;IACF;IAEA,MAAM,EACJ,IAAI,EACJ,SAAS,EACT,aAAa,EACb,mBAAmB,EACpB,GAAG,CAAA,GAAA,2HAAA,CAAA,cAAW,AAAD;IAEd,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR;wCAAO;oBACL,IAAI,kBAAkB,OAAO,EAAE;wBAC7B,cAAc,kBAAkB,OAAO;oBACzC;gBACF;;QACF;+BAAG,EAAE;IAEL,MAAM,SAAS,CAAC;QACd,IAAI,CAAC,mBAAmB,OAAO,EAAE;QACjC,MAAM,eAAe;QACrB,MAAM,UACJ,cAAc,SACV,mBAAmB,OAAO,CAAC,UAAU,GAAG,eACxC,mBAAmB,OAAO,CAAC,UAAU,GAAG;QAE9C,mBAAmB,OAAO,CAAC,QAAQ,CAAC;YAClC,MAAM;YACN,UAAU;QACZ;IACF;IAEA,MAAM,iBAAiB,CAAC;QACtB,eAAe;QACf,IAAI,kBAAkB,OAAO,EAAE,cAAc,kBAAkB,OAAO;QACtE,OAAO;QACP,kBAAkB,OAAO,GAAG,YAAY;YACtC,OAAO;QACT,GAAG;IACL;IAEA,MAAM,gBAAgB;QACpB,IAAI,kBAAkB,OAAO,EAAE;YAC7B,cAAc,kBAAkB,OAAO;YACvC,kBAAkB,OAAO,GAAG;QAC9B;QACA,eAAe;IACjB;IAEA,WAAW;IACX,MAAM,MAAM,KAAK,IAAI,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;IACtC,IAAI,CAAC,KAAK,OAAO;IACjB,MAAM,UAAU,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;IAClD,IAAI,CAAC,SAAS,OAAO;IAErB,qBACE,6LAAC;QACC,KAAK;QACL,WAAW,CAAC;;;QAGV,EAAE,SAAS,gBAAgB,WAAW;QACtC,EAAE,cAAc,6BAA6B,GAAG;MAClD,CAAC;QACD,OAAO;YAAE,OAAO,GAAG,MAAM,CAAC,CAAC;QAAC;kBAE5B,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC,wJAAA,CAAA,eAAY;oBACX,SAAQ;oBACR,MAAK;oBACL,aAAa,IAAM,eAAe;oBAClC,WAAW;oBACX,cAAc;oBACd,cAAc,IAAM,eAAe;oBACnC,YAAY;oBACZ,WAAW,CAAC;YACV,EAAE,gBAAgB,SAAS,gBAAgB,GAAG;UAChD,CAAC;8BAGA,cAAA,6LAAC,gIAAA,CAAA,UAAK;wBACL,KAAI;wBACJ,KAAI;wBACJ,OAAO;wBACP,QAAQ;;;;;;;;;;;8BAIZ,6LAAC;oBACC,KAAK;oBACL,WAAU;8BAET,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC;wBACjB,MAAM,WAAW,QAAQ,YAAY,KAAK,IAAI,SAAS;wBACvD,qBACE,6LAAC,8IAAA,CAAA,UAAY;4BAEX,IAAI,IAAI,EAAE;4BACV,WAAW,IAAI,SAAS;4BACxB,OAAO,IAAI,KAAK;4BAChB,iBAAiB;4BACjB,UAAU;4BACV,OAAO;4BACP,UAAU,IAAM,UAAU,IAAI,EAAE,EAAE,IAAI,SAAS;4BAC/C,oBAAoB;4BACpB,UAAU,IACR,oBAAoB,OAAO,WAAW,IAAI,SAAS;4BAErD,OAAO;4BACP,WAAW;2BAbN,IAAI,SAAS;;;;;oBAgBxB;;;;;;8BAGF,6LAAC,wJAAA,CAAA,eAAY;oBACX,SAAQ;oBACR,MAAK;oBACL,aAAa,IAAM,eAAe;oBAClC,WAAW;oBACX,cAAc;oBACd,cAAc,IAAM,eAAe;oBACnC,YAAY;oBACZ,WAAW,CAAC;YACV,EAAE,gBAAgB,UAAU,gBAAgB,GAAG;UACjD,CAAC;8BAED,cAAA,6LAAC,gIAAA,CAAA,UAAK;wBACJ,KAAI;wBACJ,KAAI;wBACJ,OAAO;wBACP,QAAQ;;;;;;;;;;;gBAIX,aAAa,IAAI,QAAQ,CAAC,MAAM,GAAG,mBAClC,6LAAC,wJAAA,CAAA,eAAY;oBACX,SAAQ;oBACR,MAAK;oBACL,SAAS,IAAM,cAAc,OAAO;oBACpC,WAAU;8BAEV,cAAA,6LAAC,gIAAA,CAAA,UAAK;wBACN,KAAI;wBACJ,KAAI;wBACJ,OAAO;wBACP,QAAQ;;;;;;;;;;;;;;;;;;;;;;AAOpB;GA1KM;;QAW2B,8JAAA,CAAA,eAAY;QAcvC,2HAAA,CAAA,cAAW;;;KAzBX;uCA4KS"}},
    {"offset": {"line": 10091, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10097, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/app/main/comp/TabRowMenu.tsx"],"sourcesContent":["// src/app/main/comp/TabRowMenu.tsx\r\n\"use client\";\r\n\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport { useTabStore } from \"@/store/tabStore\";\r\n\r\ninterface TabRowMenuProps {\r\n  rowId: string;\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst TabRowMenu: React.FC<TabRowMenuProps> = ({ rowId, isOpen, onClose }) => {\r\n  const menuRef = useRef<HTMLDivElement>(null);\r\n  const { closeAllTabs, closeOtherTabs } = useTabStore();\r\n\r\n  // 드롭다운 외부 클릭 시 닫기\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\r\n        onClose();\r\n      }\r\n    };\r\n\r\n    if (isOpen) {\r\n      document.addEventListener(\"mousedown\", handleClickOutside);\r\n    }\r\n    \r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [isOpen, onClose]);\r\n\r\n  // 다른 탭 닫기 (현재 활성화된 탭 빼고 모두 닫기)\r\n  const handleCloseOtherTabs = () => {\r\n    const { rows } = useTabStore.getState();\r\n    const row = rows.find(r => r.id === rowId);\r\n    \r\n    if (row) {\r\n      row.sections.forEach(section => {\r\n        if (section.activeTabKey) {\r\n          closeOtherTabs(rowId, section.id, section.activeTabKey);\r\n        }\r\n      });\r\n    }\r\n    onClose();\r\n  };\r\n\r\n  // 모든 탭 닫기\r\n  const handleCloseAllTabs = () => {\r\n    const { rows } = useTabStore.getState();\r\n    const row = rows.find(r => r.id === rowId);\r\n    \r\n    if (row) {\r\n      row.sections.forEach(section => {\r\n        closeAllTabs(rowId, section.id);\r\n      });\r\n    }\r\n    onClose();\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div \r\n      ref={menuRef}\r\n      className=\"absolute p-2 right-[0px] z-20 mt-1 w-[150px] rounded-[3px] shadow-lg bg-white ring-1 ring-black ring-opacity-5\"\r\n      style={{ top: '27px' }}\r\n    >\r\n      <div className=\"\">\r\n        <button\r\n          onClick={handleCloseOtherTabs}\r\n          className=\"block px-2 py-1.5 text-sm text-[#333] hover:bg-[#F4F6F9] w-full text-left rounded-[3px]\"\r\n        >\r\n          다른 탭 닫기\r\n        </button>\r\n        <button\r\n          onClick={handleCloseAllTabs}\r\n          className=\"block px-2 py-1.5 text-sm text-[#333] hover:bg-[#F4F6F9] w-full text-left rounded-[3px]\"\r\n        >\r\n          모든 탭 닫기\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabRowMenu;"],"names":[],"mappings":"AAAA,mCAAmC;;;;;AAGnC;AACA;;;AAHA;;;AAWA,MAAM,aAAwC,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE;;IACvE,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAkB;IACvC,MAAM,EAAE,YAAY,EAAE,cAAc,EAAE,GAAG,CAAA,GAAA,2HAAA,CAAA,cAAW,AAAD;IAEnD,kBAAkB;IAClB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;gCAAE;YACR,MAAM;2DAAqB,CAAC;oBAC1B,IAAI,QAAQ,OAAO,IAAI,CAAC,QAAQ,OAAO,CAAC,QAAQ,CAAC,MAAM,MAAM,GAAW;wBACtE;oBACF;gBACF;;YAEA,IAAI,QAAQ;gBACV,SAAS,gBAAgB,CAAC,aAAa;YACzC;YAEA;wCAAO;oBACL,SAAS,mBAAmB,CAAC,aAAa;gBAC5C;;QACF;+BAAG;QAAC;QAAQ;KAAQ;IAEpB,+BAA+B;IAC/B,MAAM,uBAAuB;QAC3B,MAAM,EAAE,IAAI,EAAE,GAAG,2HAAA,CAAA,cAAW,CAAC,QAAQ;QACrC,MAAM,MAAM,KAAK,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;QAEpC,IAAI,KAAK;YACP,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAA;gBACnB,IAAI,QAAQ,YAAY,EAAE;oBACxB,eAAe,OAAO,QAAQ,EAAE,EAAE,QAAQ,YAAY;gBACxD;YACF;QACF;QACA;IACF;IAEA,UAAU;IACV,MAAM,qBAAqB;QACzB,MAAM,EAAE,IAAI,EAAE,GAAG,2HAAA,CAAA,cAAW,CAAC,QAAQ;QACrC,MAAM,MAAM,KAAK,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;QAEpC,IAAI,KAAK;YACP,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAA;gBACnB,aAAa,OAAO,QAAQ,EAAE;YAChC;QACF;QACA;IACF;IAEA,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,6LAAC;QACC,KAAK;QACL,WAAU;QACV,OAAO;YAAE,KAAK;QAAO;kBAErB,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBACC,SAAS;oBACT,WAAU;8BACX;;;;;;8BAGD,6LAAC;oBACC,SAAS;oBACT,WAAU;8BACX;;;;;;;;;;;;;;;;;AAMT;GAzEM;;QAEqC,2HAAA,CAAA,cAAW;;;KAFhD;uCA2ES"}},
    {"offset": {"line": 10212, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10218, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Temp/work/fe_pdsw/src/app/main/comp/TabRow.tsx"],"sourcesContent":["// src/app/main/comp/TabRow.tsx\r\n\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useTabStore } from \"@/store/tabStore\";\r\nimport TabSection from \"./TabSection\";\r\nimport TabRowMenu from \"./TabRowMenu\";\r\nimport { CommonButton } from \"@/components/shared/CommonButton\";\r\nimport Image from \"next/image\";\r\n\r\ninterface TabRowProps {\r\n  rowId: string;\r\n}\r\n\r\nconst TabRow: React.FC<TabRowProps> = ({ rowId }) => {\r\n  const { rows, addRow, addSection, removeRow } = useTabStore();\r\n  const [menuOpen, setMenuOpen] = useState(false); // 메뉴 열림/닫힘 상태\r\n\r\n  const row = rows.find((r) => r.id === rowId);\r\n  if (!row) return null;\r\n\r\n  // `+` 버튼 클릭 시 분할 동작\r\n  const handleSplitClick = () => {\r\n    if (row.sections.length === 1) {\r\n      // 현재 행에 새로운 섹션 추가 (최대 2개)\r\n      addSection(rowId);\r\n    } \r\n    // else if (row.sections.length === 2) {\r\n    //   // 만약 섹션이 이미 2개라면, 새 행 추가\r\n    //   addRow();\r\n    // }\r\n  };\r\n\r\n  // 행 삭제 핸들러\r\n  const handleRemoveRow = () => {\r\n    removeRow(rowId);\r\n  };\r\n\r\n  // 드롭다운 토글 처리\r\n  const handleDropdownToggle = () => {\r\n    setMenuOpen(!menuOpen);\r\n  };\r\n\r\n  const canRemove = rowId !== \"row-1\"; // 예시로 첫 번째 행은 삭제 불가능\r\n\r\n  return (\r\n    <div className=\"flex items-center min-h-[30px] w-full border-b border-[#ebebeb] relative\">\r\n      {/* 섹션들 (탭 목록 부분) */}\r\n      <div className=\"flex-1 flex w-[calc(100%-46px)]\">\r\n        {row.sections.map((section, idx) => {\r\n          // TabSection에서 탭들을 렌더링\r\n          return (\r\n            <TabSection\r\n              key={section.id}\r\n              rowId={rowId}\r\n              sectionId={section.id}\r\n              width={section.width}\r\n              canRemove={section.id !== \"default\"}\r\n              showDivider={idx < row.sections.length - 1}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* 행 우측의 +, - 버튼 */}\r\n      <div className=\"flex-none flex items-center\">\r\n        <CommonButton\r\n          variant=\"tabEtc\"\r\n          size=\"icon\"\r\n          onClick={handleSplitClick}\r\n        >\r\n          <Image\r\n              src=\"/header-menu/tab_plus.svg\"\r\n              alt=\"plus\"\r\n              width={8}\r\n              height={8}\r\n            />\r\n        </CommonButton>\r\n        <CommonButton\r\n          variant=\"tabEtc\"\r\n          size=\"icon\"\r\n          onClick={handleDropdownToggle}\r\n        >\r\n          <Image\r\n              src=\"/header-menu/dropdown-toggle.png\"\r\n              alt=\"dropdown-toggle\"\r\n              width={3}\r\n              height={10}\r\n            />\r\n        </CommonButton>\r\n\r\n        {canRemove && (\r\n          <CommonButton\r\n            variant=\"tabEtc\"\r\n            size=\"icon\"\r\n            onClick={handleRemoveRow}\r\n          >\r\n            <Image\r\n              src=\"/header-menu/tab_minus.svg\"\r\n              alt=\"minus\"\r\n              width={8}\r\n              height={8}\r\n            />\r\n          </CommonButton>\r\n        )}\r\n      </div>\r\n      {/* 드롭다운 메뉴 컴포넌트 */}\r\n      <TabRowMenu \r\n        rowId={rowId} \r\n        isOpen={menuOpen} \r\n        onClose={() => setMenuOpen(false)} \r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabRow;\r\n"],"names":[],"mappings":"AAAA,+BAA+B;;;;;AAG/B;AACA;AACA;AACA;AACA;AACA;;;AAPA;;;;;;;AAaA,MAAM,SAAgC,CAAC,EAAE,KAAK,EAAE;;IAC9C,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,2HAAA,CAAA,cAAW,AAAD;IAC1D,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,QAAQ,cAAc;IAE/D,MAAM,MAAM,KAAK,IAAI,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;IACtC,IAAI,CAAC,KAAK,OAAO;IAEjB,oBAAoB;IACpB,MAAM,mBAAmB;QACvB,IAAI,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG;YAC7B,0BAA0B;YAC1B,WAAW;QACb;IACA,wCAAwC;IACxC,8BAA8B;IAC9B,cAAc;IACd,IAAI;IACN;IAEA,WAAW;IACX,MAAM,kBAAkB;QACtB,UAAU;IACZ;IAEA,aAAa;IACb,MAAM,uBAAuB;QAC3B,YAAY,CAAC;IACf;IAEA,MAAM,YAAY,UAAU,SAAS,qBAAqB;IAE1D,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;0BACZ,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC,SAAS;oBAC1B,uBAAuB;oBACvB,qBACE,6LAAC,4IAAA,CAAA,UAAU;wBAET,OAAO;wBACP,WAAW,QAAQ,EAAE;wBACrB,OAAO,QAAQ,KAAK;wBACpB,WAAW,QAAQ,EAAE,KAAK;wBAC1B,aAAa,MAAM,IAAI,QAAQ,CAAC,MAAM,GAAG;uBALpC,QAAQ,EAAE;;;;;gBAQrB;;;;;;0BAIF,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,wJAAA,CAAA,eAAY;wBACX,SAAQ;wBACR,MAAK;wBACL,SAAS;kCAET,cAAA,6LAAC,gIAAA,CAAA,UAAK;4BACF,KAAI;4BACJ,KAAI;4BACJ,OAAO;4BACP,QAAQ;;;;;;;;;;;kCAGd,6LAAC,wJAAA,CAAA,eAAY;wBACX,SAAQ;wBACR,MAAK;wBACL,SAAS;kCAET,cAAA,6LAAC,gIAAA,CAAA,UAAK;4BACF,KAAI;4BACJ,KAAI;4BACJ,OAAO;4BACP,QAAQ;;;;;;;;;;;oBAIb,2BACC,6LAAC,wJAAA,CAAA,eAAY;wBACX,SAAQ;wBACR,MAAK;wBACL,SAAS;kCAET,cAAA,6LAAC,gIAAA,CAAA,UAAK;4BACJ,KAAI;4BACJ,KAAI;4BACJ,OAAO;4BACP,QAAQ;;;;;;;;;;;;;;;;;0BAMhB,6LAAC,4IAAA,CAAA,UAAU;gBACT,OAAO;gBACP,QAAQ;gBACR,SAAS,IAAM,YAAY;;;;;;;;;;;;AAInC;GApGM;;QAC4C,2HAAA,CAAA,cAAW;;;KADvD;uCAsGS"}},
    {"offset": {"line": 10382, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}