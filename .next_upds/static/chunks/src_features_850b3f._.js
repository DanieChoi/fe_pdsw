(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push(["static/chunks/src_features_850b3f._.js", {

"[project]/src/features/auth/api/main.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/features/auth/api/fetchCampaigns.ts
__turbopack_esm__({
    "fetchCampaigns": (()=>fetchCampaigns),
    "fetchCounselorList": (()=>fetchCounselorList)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/lib/axios.ts [app-client] (ecmascript)");
;
const fetchCampaigns = async (credentials)=>{
    const mainData = {
        filter: {
            campaign_id: {
                start: 1,
                end: 9999999
            }
        },
        sort: {
            campaign_id: 0
        },
        page: {
            index: 1,
            items: 9999999
        }
    };
    try {
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].post('/collections/campaign', mainData);
        return data;
    } catch (error) {
        if (error.response?.status === 401) {
            throw new Error('세션이 만료되었습니다. 다시 로그인해주세요.');
        }
        throw new Error(error.response?.data?.result_code + '||' + error.response?.data?.result_msg || '데이터 가져오기 실패');
    }
};
const fetchCounselorList = async (credentials)=>{
    try {
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosRedisInstance"].get(// `/api/v1/counselor/list?tenantId=${credentials.tenant_id}&roleId=${credentials.roleId}`
        `/counselor/list?tenantId=${credentials.tenant_id}&roleId=${credentials.roleId}`);
        return data;
    } catch (error) {
        if (error.response?.status === 401) {
            throw new Error('세션이 만료되었습니다. 다시 로그인해주세요.');
        }
        throw new Error(error.response?.data?.result_code + '||' + error.response?.data?.result_msg || '데이터 가져오기 실패');
    }
};
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/auth/hooks/useApiForMain.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/features/auth/hooks/useApiForLogin.tsx
__turbopack_esm__({
    "useApiForMain": (()=>useApiForMain)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$auth$2f$api$2f$main$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/auth/api/main.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/useMutation.js [app-client] (ecmascript)");
var _s = __turbopack_refresh__.signature();
;
;
function useApiForMain(options) {
    _s();
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMutation"])({
        mutationKey: [
            'main'
        ],
        mutationFn: __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$auth$2f$api$2f$main$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fetchCampaigns"],
        onSuccess: {
            "useApiForMain.useMutation": (data, variables, context)=>{
                // console.log('API Response:', {
                //   code: data.result_code,
                //   message: data.result_msg,
                //   count: data.result_count,
                //   total: data.total_count,
                //   data: data.result_data
                // });
                options?.onSuccess?.(data, variables, context);
            }
        }["useApiForMain.useMutation"],
        onError: {
            "useApiForMain.useMutation": (error, variables, context)=>{
                // console.error('API Error:', error);
                // toast.error(error.message || '데이터 로드에 실패했습니다.');
                options?.onError?.(error, variables, context);
            }
        }["useApiForMain.useMutation"]
    });
}
_s(useApiForMain, "wwwtpB20p0aLiHIvSy5P98MwIUg=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMutation"]
    ];
});
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/api/apiForTennants.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// // src\features\campaignManager\api\apiForTennants.ts
// import { TenantApiError, TenantListResponse, TenantRequestData } from "@/features/campaignManager/types/typeForTenant";
// import { axiosInstance } from "@/lib/axios";
// // todo2 전달 받은 tenant_id 가 있을 경우 start end 에 설정 없을 경우 기존 설정 그대로
// export const apiForGetTenantList = async (): Promise<TenantListResponse> => {
//   const tenantRequestData: TenantRequestData = {
//     filter: {      
//       tenant_id: {
//         start: 0,
//         end: 9999,
//       },
//     },
//     sort: {
//       tenant_id: 0,
//     },
//     page: {
//       index: 1,
//       items: 9999999,
//     },
//   };
//   try {
//     const { data } = await axiosInstance.post<TenantListResponse>(
//       '/collections/tenant', 
//       tenantRequestData
//     );
//     // 응답 데이터가 예상한 형식과 일치하는지 검증
//     if (data.result_code === 0 && data.result_msg === "Success") {
//       console.log("api for tenant data check : ", data);
//       return data;
//     } else {
//       throw new Error(`API Error: ${data.result_msg}`);
//     }
//   } catch (error) {
//     const typedError = error as TenantApiError;
//     throw new Error(
//       typedError.response?.data?.result_msg || '테넌트 데이터를 가져오는데 실패했습니다.'
//     );
//   }
// };
// // export const apiForGetTenantList = async (): Promise<TenantListResponse> => {
// src/features/campaignManager/api/apiForTennants.ts
__turbopack_esm__({
    "apiForGetTenantList": (()=>apiForGetTenantList)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$utils$2f$CustomAlertService$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/shared/layout/utils/CustomAlertService.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/lib/axios.ts [app-client] (ecmascript)");
;
;
const apiForGetTenantList = async (tenant_id)=>{
    const tenantRequestData = {
        ...tenant_id !== -1 ? {
            filter: {
                tenant_id: tenant_id === 0 ? {
                    start: 0,
                    end: 999999
                } : {
                    start: tenant_id,
                    end: tenant_id
                }
            }
        } : {},
        sort: {
            tenant_id: 0
        },
        page: {
            index: 1,
            items: 9999999
        }
    };
    try {
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].post('/collections/tenant', tenantRequestData);
        if (data.result_code === 0 && data.result_msg === "Success") {
            return data;
        } else {
            throw new Error(`API Error: ${data.result_msg}`);
        }
    } catch (error) {
        if (error.response?.data?.result_code === 5) {
            __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$utils$2f$CustomAlertService$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["customAlertService"].error('로그인 세션이 만료되었습니다. 다시 로그인 해주세요.', '세션 만료', ()=>{
                window.location.href = '/login';
            });
        }
        throw error;
    }
};
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/api/apiForCampaign.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src\features\campaignManager\api\apiForCampaign.ts
// 사이드바 메뉴에 표시할 캠페인 리스트를 가져오는 API 함수
// src/features/campaignManager/api/apiForCampaignList.ts
__turbopack_esm__({
    "apiForGetCampaignList": (()=>apiForGetCampaignList)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/lib/axios.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$utils$2f$CustomAlertService$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/shared/layout/utils/CustomAlertService.tsx [app-client] (ecmascript)");
;
;
const apiForGetCampaignList = async ()=>{
    const campaignRequestData = {
        filter: {
            campaign_id: {
                start: 1,
                end: 9999999
            }
        },
        sort: {
            campaign_id: 0
        },
        page: {
            index: 1,
            items: 9999999
        }
    };
    try {
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].post('/collections/campaign', campaignRequestData);
        if (data.result_code === 0 && data.result_msg === "Success") {
            // console.log("api for campaign data check : ", data);
            return data;
        } else {
            throw new Error(`API Error: ${data.result_msg}`);
        }
    } catch (error) {
        if (error.response.data.result_code === 5) {
            // 세션 만료 시 알럿 표시 후 로그인 페이지로 리다이렉트
            __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$utils$2f$CustomAlertService$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["customAlertService"].error('로그인 세션이 만료되었습니다. 다시 로그인 해주세요.', '세션 만료', ()=>{
                window.location.href = '/login';
            });
        }
        const typedError = error;
        throw new Error(typedError.response?.data?.result_msg || '캠페인 목록을 가져오는데 실패했습니다.');
    }
};
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/preferences/api/apiForSkill.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "DeleteAgentSkill": (()=>DeleteAgentSkill),
    "DeleteSkill": (()=>DeleteSkill),
    "UpdateSkill": (()=>UpdateSkill),
    "createSkill": (()=>createSkill),
    "fetchCampaignList": (()=>fetchCampaignList),
    "fetchCampaignSkillUpdate": (()=>fetchCampaignSkillUpdate),
    "fetchCampaignSkills": (()=>fetchCampaignSkills),
    "fetchSkillAgentList": (()=>fetchSkillAgentList),
    "fetchSkillList": (()=>fetchSkillList),
    "fetchskillCampaignList": (()=>fetchskillCampaignList)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/lib/axios.ts [app-client] (ecmascript)");
;
const fetchSkillList = async (credentials)=>{
    const SkillListRequestData = {
        filter: {
            skill_id: {
                start: 1,
                end: 9999999
            },
            tenant_id: credentials.tenant_id_array
        },
        sort: {
            skill_id: 0,
            tenant_id: 0
        },
        page: {
            index: 1,
            items: 10
        }
    };
    try {
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].post('/collections/skill', SkillListRequestData);
        return data;
    } catch (error) {
        if (error.response?.status === 401) {
            throw new Error('세션이 만료되었습니다. 다시 로그인해주세요.');
        }
        throw new Error(error.response?.data?.result_code + '||' + error.response?.data?.result_msg || '데이터 가져오기 실패');
    }
};
const createSkill = async (credentials)=>{
    const request_data = {
        request_data: {
            tenant_id: credentials.tenant_id,
            skill_name: credentials.skill_name,
            skill_description: credentials.skill_description
        }
    };
    try {
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].post('skills/' + credentials.skill_id, request_data);
        return data;
    } catch (error) {
        if (error.response?.status === 401) {
            throw new Error('세션이 만료되었습니다. 다시 로그인해주세요.');
        }
        throw new Error(error.response?.data?.result_code + '||' + error.response?.data?.result_msg || '데이터 가져오기 실패');
    }
};
const UpdateSkill = async (credentials)=>{
    const request_data = {
        request_data: {
            tenant_id: credentials.tenant_id,
            skill_name: credentials.skill_name,
            skill_description: credentials.skill_description
        }
    };
    try {
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].put('skills/' + credentials.skill_id, request_data);
        return data;
    } catch (error) {
        if (error.response?.status === 401) {
            throw new Error('세션이 만료되었습니다. 다시 로그인해주세요.');
        }
        throw new Error(error.response?.data?.result_code + '||' + error.response?.data?.result_msg || '데이터 가져오기 실패');
    }
};
_c = UpdateSkill;
const DeleteSkill = async (credentials)=>{
    try {
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].delete(`skills/${credentials.skill_id}`, {
            data: {
                request_data: {
                    skill_name: credentials.skill_name
                }
            }
        });
        return data;
    } catch (error) {
        if (error.response?.status === 401) {
            throw new Error('세션이 만료되었습니다. 다시 로그인해주세요.');
        }
        throw new Error(error.response?.data?.result_code + '||' + error.response?.data?.result_msg || '데이터 가져오기 실패');
    }
};
_c1 = DeleteSkill;
const fetchskillCampaignList = async ()=>{
    const skillCampaignListRequestData = {
        filter: {
            skill_id: {
                "start": 1,
                "end": 999999
            }
        },
        sort: {
            skill_id: 0
        },
        page: {
            index: 1,
            items: 10
        }
    };
    try {
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].post('/collections/skill-campaign', skillCampaignListRequestData);
        return data;
    } catch (error) {
        if (error.response?.status === 401) {
            throw new Error('세션이 만료되었습니다. 다시 로그인해주세요.');
        }
        throw new Error(error.response?.data?.result_code + '||' + error.response?.data?.result_msg || '데이터 가져오기 실패');
    }
};
const fetchSkillAgentList = async ()=>{
    const skillAgentListRequestData = {
        filter: {
            skill_id: {
                "start": 1,
                "end": 99
            }
        },
        sort: {
            skill_id: 0
        },
        page: {
            index: 1,
            items: 10
        }
    };
    try {
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].post('/collections/skill-agent', skillAgentListRequestData);
        return data;
    } catch (error) {
        if (error.response?.status === 401) {
            throw new Error('세션이 만료되었습니다. 다시 로그인해주세요.');
        }
        throw new Error(error.response?.data?.result_code + '||' + error.response?.data?.result_msg || '데이터 가져오기 실패');
    }
};
const fetchCampaignList = async ()=>{
    const campaignListRequestData = {
        filter: {
            campaign_id: {
                start: 1,
                end: 9999999
            }
        },
        sort: {
            campaign_id: 0
        },
        page: {
            index: 1,
            items: 9999999
        }
    };
    try {
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].post('/collections/campaign', campaignListRequestData);
        return data;
    } catch (error) {
        if (error.response?.status === 401) {
            throw new Error('세션이 만료되었습니다. 다시 로그인해주세요.');
        }
        throw new Error(error.response?.data?.result_code + '||' + error.response?.data?.result_msg || '데이터 가져오기 실패');
    }
};
const DeleteAgentSkill = async (credentials)=>{
    try {
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].delete(`skills/${credentials.skill_id}/agent-list`, {
            data: {
                request_data: {
                    agent_id: credentials.agent_id
                }
            }
        });
        return data;
    } catch (error) {
        if (error.response?.status === 401) {
            throw new Error('세션이 만료되었습니다. 다시 로그인해주세요.');
        }
        throw new Error(error.response?.data?.result_code + '||' + error.response?.data?.result_msg || '데이터 가져오기 실패');
    }
};
_c2 = DeleteAgentSkill;
const fetchCampaignSkillUpdate = async (credentials)=>{
    const campaignSkillListSearchRequestData = {
        request_data: {
            skill_id: credentials.skill_id
        }
    };
    try {
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].put('campaigns/' + credentials.campaign_id + '/skill', campaignSkillListSearchRequestData);
        return data;
    } catch (error) {
        if (error.response?.status === 401) {
            throw new Error('세션이 만료되었습니다. 다시 로그인해주세요.');
        }
        throw new Error(error.response?.data?.result_code + '||' + error.response?.data?.result_msg || '데이터 가져오기 실패');
    }
};
const fetchCampaignSkills = async ()=>{
    const campaignSkillListSearchRequestData = {
        filter: {
            campaign_id: {
                start: 1,
                end: 9999999
            }
        },
        sort: {
            campaign_id: 0
        },
        page: {
            index: 1,
            items: 9999999
        }
    };
    try {
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].post('/collections/campaign-skill', campaignSkillListSearchRequestData);
        return data;
    } catch (error) {
        if (error.response?.status === 401) {
            throw new Error('세션이 만료되었습니다. 다시 로그인해주세요.');
        }
        throw new Error(error.response?.data?.result_code + '||' + error.response?.data?.result_msg || '데이터 가져오기 실패');
    }
};
var _c, _c1, _c2;
__turbopack_refresh__.register(_c, "UpdateSkill");
__turbopack_refresh__.register(_c1, "DeleteSkill");
__turbopack_refresh__.register(_c2, "DeleteAgentSkill");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/api/apiForGetTreeMenuDataForSideMenu.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/features/campaignManager/api/apiForGetTreeMenuDataForSideMenu.ts
__turbopack_esm__({
    "apiForGetTreeMenuDataForSideMenu": (()=>apiForGetTreeMenuDataForSideMenu),
    "apiToFetchCounselorTreeData": (()=>apiToFetchCounselorTreeData)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$apiForTennants$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/api/apiForTennants.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$apiForCampaign$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/api/apiForCampaign.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$auth$2f$api$2f$main$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/auth/api/main.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$api$2f$apiForSkill$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/preferences/api/apiForSkill.ts [app-client] (ecmascript)");
;
;
;
;
function getStatusFromFlags(start_flag) {
    if (start_flag === 1) return 'started'; // 종료된 상태
    if (start_flag === 2) return 'pending'; // 대기 상태
    if (start_flag === 3) return 'stopped'; // 진행중 
    return 'stopped'; // 기타 케이스는 stopped
}
async function apiForGetTreeMenuDataForSideMenu(tenant_id, role_id) {
    const [tenantsData, campaignData, skillDataForCampaign] = await Promise.all([
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$apiForTennants$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["apiForGetTenantList"])(tenant_id),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$apiForCampaign$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["apiForGetCampaignList"])(),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$api$2f$apiForSkill$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fetchskillCampaignList"])()
    ]);
    // console.log("skillDataForCampaign", skillDataForCampaign);
    if (!tenantsData?.result_data || !campaignData?.result_data) {
        return [];
    }
    // 캠페인별 스킬 매핑 생성
    const campaignSkillsMap = {};
    skillDataForCampaign.result_data.forEach((skill)=>{
        skill.campaign_id.forEach((campaignId)=>{
            if (!campaignSkillsMap[campaignId]) {
                campaignSkillsMap[campaignId] = [];
            }
            // 중복 체크
            const exists = campaignSkillsMap[campaignId].some((s)=>s.skill_id === skill.skill_id);
            if (!exists) {
                campaignSkillsMap[campaignId].push({
                    skill_id: skill.skill_id,
                    tenant_id: skill.tenant_id
                });
            }
        });
    });
    // 중복 제거된 캠페인 목록 생성
    const uniqueCampaigns = [
        ...new Map(campaignData.result_data.map((item)=>[
                item.campaign_id,
                item
            ])).values()
    ];
    // 테넌트별 캠페인 그룹화
    const campaignsByTenant = {};
    uniqueCampaigns.forEach((campaign)=>{
        if (!campaignsByTenant[campaign.tenant_id]) {
            campaignsByTenant[campaign.tenant_id] = [];
        }
        campaignsByTenant[campaign.tenant_id].push(campaign);
    });
    // 트리 구조 생성
    const items = tenantsData.result_data.map((tenant)=>({
            id: tenant.tenant_id.toString(),
            label: tenant.tenant_name,
            type: 'folder',
            children: campaignsByTenant[tenant.tenant_id]?.map((campaign)=>{
                // 각 캠페인에 대한 스킬 children 생성
                const skills = campaignSkillsMap[campaign.campaign_id.toString()] || [];
                return {
                    id: campaign.campaign_id.toString(),
                    label: campaign.campaign_name,
                    type: 'campaign',
                    status: getStatusFromFlags(campaign.start_flag),
                    direction: 'outbound',
                    tenantId: campaign.tenant_id.toString(),
                    children: skills.map((skill)=>({
                            id: `skill-${skill.skill_id}-${campaign.campaign_id}`,
                            label: `Skill ${skill.skill_id}`,
                            type: 'skill',
                            skillId: skill.skill_id,
                            tenantId: skill.tenant_id.toString(),
                            campaignName: campaign.campaign_name,
                            visible: false
                        }))
                };
            }) || []
        }));
    const tabData = [
        {
            id: 'campaign',
            label: '캠페인',
            items: [
                {
                    id: 'nexus',
                    label: 'NEXUS',
                    type: 'folder',
                    children: items
                }
            ]
        }
    ];
    console.log("tabData !!!", tabData);
    return tabData;
}
async function apiToFetchCounselorTreeData(credentials) {
    const [tenantsData, counselorData] = await Promise.all([
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$apiForTennants$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["apiForGetTenantList"])(credentials.tenant_id),
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$auth$2f$api$2f$main$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fetchCounselorList"])(credentials)
    ]);
    if (!tenantsData?.result_data || !counselorData?.counselorList) {
        return [];
    }
    const counselorsByTenant = {};
    counselorData.counselorList.forEach((counselor)=>{
        if (!counselorsByTenant[counselor.tenantId]) {
            counselorsByTenant[counselor.tenantId] = [];
        }
        counselorsByTenant[counselor.tenantId].push(counselor);
    });
    const items = tenantsData.result_data.map((tenant)=>({
            id: tenant.tenant_id.toString(),
            label: tenant.tenant_name,
            type: 'folder',
            children: counselorsByTenant[tenant.tenant_id]?.map((counselor)=>({
                    id: counselor.counselorId,
                    label: counselor.counselorname,
                    type: 'counselor',
                    tenantId: tenant.tenant_id.toString(),
                    affiliationGroupName: counselor.affiliationGroupName,
                    affiliationTeamName: counselor.affiliationTeamName
                })) || []
        }));
    const tabData = [
        {
            id: 'agent',
            label: '상담사',
            items: [
                {
                    id: 'nexus',
                    label: 'NEXUS',
                    type: 'folder',
                    children: items
                }
            ]
        }
    ];
    return tabData;
}
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/auth/hooks/useApiForGetTreeMenuDataForSideMenu.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useApiForGetTreeMenuDataForSideMenu": (()=>useApiForGetTreeMenuDataForSideMenu)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$apiForGetTreeMenuDataForSideMenu$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/api/apiForGetTreeMenuDataForSideMenu.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$index$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/src/store/index.ts [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$authStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/authStore.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useQuery$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/useQuery.js [app-client] (ecmascript)");
var _s = __turbopack_refresh__.signature();
"use client";
;
;
;
function useApiForGetTreeMenuDataForSideMenu() {
    _s();
    const queryClient = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQueryClient"])();
    const { tenant_id, role_id } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$authStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAuthStore"])();
    const getQueryKey = ()=>[
            "treeMenuDataForSideMenu",
            tenant_id,
            role_id
        ];
    const query = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useQuery$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQuery"])({
        queryKey: getQueryKey(),
        queryFn: {
            "useApiForGetTreeMenuDataForSideMenu.useQuery[query]": ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$apiForGetTreeMenuDataForSideMenu$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["apiForGetTreeMenuDataForSideMenu"])(tenant_id, role_id?.toString())
        }["useApiForGetTreeMenuDataForSideMenu.useQuery[query]"],
        // 캐시 시간을 조절하여 불필요한 요청 감소
        staleTime: 30 * 1000
    });
    // 서버 호출 없이 로컬 캐시만 업데이트하는 함수 추가
    const updateTreeMenuData = (updater)=>{
        queryClient.setQueryData(getQueryKey(), updater);
    };
    // 필요한 경우에만 완전히 무효화하는 함수
    const invalidateTreeMenuData = ()=>{
        queryClient.invalidateQueries({
            queryKey: getQueryKey()
        });
    };
    return {
        ...query,
        updateTreeMenuData,
        invalidateTreeMenuData
    };
}
_s(useApiForGetTreeMenuDataForSideMenu, "4jaFZLt96hplXD9BB0RtXf3wIa0=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQueryClient"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$authStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAuthStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useQuery$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQuery"]
    ];
});
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/preferences/api/apiForCampaignGroup.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/features/campaignManager/api/apiForCampaignGroup.ts
__turbopack_esm__({
    "apiForAddCampaignToSpecificCampaignGroup": (()=>apiForAddCampaignToSpecificCampaignGroup),
    "apiForCampaignGroupCampaignList": (()=>apiForCampaignGroupCampaignList),
    "apiForCampaignGroupDataForCampaignGroupAdmin": (()=>apiForCampaignGroupDataForCampaignGroupAdmin),
    "apiForCampaignGroupList": (()=>apiForCampaignGroupList),
    "apiForCampaignListForCampaignGroup": (()=>apiForCampaignListForCampaignGroup),
    "apiForCombinedDataForSideMenu": (()=>apiForCombinedDataForSideMenu),
    "apiForCombinedTenantAndCampaignGroup": (()=>apiForCombinedTenantAndCampaignGroup),
    "apiForCreateCampaignGroup": (()=>apiForCreateCampaignGroup),
    "apiForDeleteCampaignGroup": (()=>apiForDeleteCampaignGroup),
    "apiForRemoveCampaignFromCampaignGroup": (()=>apiForRemoveCampaignFromCampaignGroup),
    "apiForUpdateCampaignGroupName": (()=>apiForUpdateCampaignGroupName),
    "transformToTreeData": (()=>transformToTreeData)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/lib/axios.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$apiForTennants$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/api/apiForTennants.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$utils$2f$CustomAlertService$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/shared/layout/utils/CustomAlertService.tsx [app-client] (ecmascript)");
;
;
;
const apiForCombinedTenantAndCampaignGroup = async (tenant_id)=>{
    console.log("tenant_id ??????????????????????????????????????????????????????????? ", tenant_id);
    try {
        // Promise.all을 사용하여 세 API를 병렬로 호출
        // 여기서 tenant_id를 apiForGetTenantList에 전달하여 필터링
        const [tenantData, campaignGroupData, campaignData] = await Promise.all([
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$apiForTennants$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["apiForGetTenantList"])(tenant_id),
            apiForCampaignGroupList(tenant_id),
            apiForCampaignListForCampaignGroup({
                filter: {
                    group_id: [],
                    campaign_id: {
                        start: 1,
                        end: 100
                    }
                },
                sort: {
                    campaign_id: 1
                },
                page: {
                    index: 1,
                    items: 10
                }
            })
        ]);
        console.log("Combined API for tenant data:", tenantData);
        console.log("Combined API for campaign group data:", campaignGroupData);
        console.log("Combined API for campaign data:", campaignData);
        // 데이터 유효성 검사 및 기본값 설정
        const safeData = {
            tenantData: {
                result_data: tenantData?.result_data || [],
                result_code: tenantData?.result_code || 0,
                result_msg: tenantData?.result_msg || "No tenant data",
                result_count: tenantData?.result_count || 0,
                total_count: tenantData?.total_count || 0
            },
            campaignGroupData: {
                result_data: campaignGroupData?.result_data || [],
                result_code: campaignGroupData?.result_code || 0,
                result_msg: campaignGroupData?.result_msg || "No campaign group data",
                result_count: campaignGroupData?.result_count || 0
            },
            campaignData: {
                result_data: campaignData?.result_data || [],
                result_code: campaignData?.result_code || 0,
                result_msg: campaignData?.result_msg || "No campaign data",
                result_count: campaignData?.result_count || 0
            }
        };
        return safeData;
    } catch (error) {
        if (error.response.data.result_code === 5) {
            // 세션 만료 시 알럿 표시 후 로그인 페이지로 리다이렉트
            __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$utils$2f$CustomAlertService$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["customAlertService"].error('로그인 세션이 만료되었습니다. 다시 로그인 해주세요.', '세션 만료', ()=>{
                window.location.href = '/login';
            });
        }
        // tofix for hyunsok
        console.error("Combined API call failed:", error);
        // 에러 객체에 custom 속성 추가
        const enhancedError = new Error(error.message || "테넌트, 캠페인 그룹, 캠페인 데이터를 가져오는데 실패했습니다.");
        // 원본 에러 정보 유지
        enhancedError.originalError = error;
        throw enhancedError;
    }
};
const apiForCampaignListForCampaignGroup = async (request)=>{
    try {
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].post('collections/campaign-group-list', request);
        console.log("Campaign list for campaign group response:", data);
        // Check if data exists and has the expected structure
        // if (!data || typeof data !== 'object') {
        //     console.error("Invalid API response format:", data);
        //     return {
        //         result_data: [],
        //         result_code: 0,
        //         result_msg: "Invalid response",
        //         result_count: 0
        //     };
        // }
        // Return the data as-is if it has result_data, otherwise return empty array
        return {
            result_data: Array.isArray(data.result_data) ? data.result_data : [],
            result_code: data.result_code || 0,
            result_msg: data.result_msg || "No data",
            result_count: data.result_count || 0
        };
    } catch (error) {
        console.error("Error fetching campaign group list:", error);
        if (error.response?.status === 401) {
            throw new Error("세션이 만료되었습니다. 다시 로그인해주세요.");
        }
        throw new Error(`${error.response?.data?.result_code || ''}||${error.response?.data?.result_msg || '데이터 가져오기 실패'}`);
    }
};
const transformToTreeData = (combinedData)=>{
    const { tenantData, campaignGroupData, campaignData } = combinedData;
    if (!tenantData?.result_data) {
        return [];
    }
    // 테넌트별 그룹 매핑
    const groupsByTenant = {};
    if (campaignGroupData?.result_data) {
        campaignGroupData.result_data.forEach((group)=>{
            if (!groupsByTenant[group.tenant_id]) {
                groupsByTenant[group.tenant_id] = [];
            }
            groupsByTenant[group.tenant_id].push(group);
        });
    }
    // 그룹별 캠페인 매핑
    const campaignsByGroup = {};
    if (campaignData?.result_data) {
        campaignData.result_data.forEach((campaign)=>{
            if (!campaignsByGroup[campaign.group_id]) {
                campaignsByGroup[campaign.group_id] = [];
            }
            campaignsByGroup[campaign.group_id].push(campaign);
        });
    }
    // 테넌트 노드 생성 (그룹과 캠페인 포함)
    const tenantNodes = tenantData.result_data.map((tenant)=>({
            id: `tenant-${tenant.tenant_id}`,
            name: `[${tenant.tenant_id}]${tenant.tenant_name}`,
            type: "tenant",
            tenant_id: tenant.tenant_id,
            children: (groupsByTenant[tenant.tenant_id] || []).map((group)=>({
                    id: `group-${group.group_id}-${tenant.tenant_id}-${group.group_name}`,
                    name: group.group_name,
                    type: "group",
                    tenant_id: group.tenant_id,
                    group_id: group.group_id,
                    children: (campaignsByGroup[group.group_id] || []).map((campaign)=>({
                            id: `campaign-${campaign.campaign_id}-${group.group_id}-${campaign.campaign_name}`,
                            name: campaign.campaign_name,
                            type: "campaign",
                            tenant_id: campaign.tenant_id,
                            group_id: campaign.group_id,
                            campaign_id: campaign.campaign_id,
                            start_flag: campaign.start_flag
                        }))
                }))
        }));
    // 최상위 NEXUS 노드에 테넌트 노드를 자식으로 추가
    return [
        {
            id: "nexus-root",
            name: "[1]NEXUS",
            type: "root",
            children: tenantNodes
        }
    ];
};
const apiForCombinedDataForSideMenu = (combinedData)=>{
    const treeData = transformToTreeData(combinedData);
    return {
        items: treeData
    };
};
const apiForCampaignGroupList = async (tenant_id)=>{
    const request_data = {
        request_data: {
            tenant_id: tenant_id
        }
    };
    try {
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].post(`collections/campaign-group`, request_data);
        return data;
    } catch (error) {
        if (error.response.data.result_code === 5) {
            // 세션 만료 시 알럿 표시 후 로그인 페이지로 리다이렉트
            __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$utils$2f$CustomAlertService$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["customAlertService"].error('로그인 세션이 만료되었습니다. 다시 로그인 해주세요.', '세션 만료', ()=>{
                window.location.href = '/login';
            });
        }
        if (error.response?.status === 401) {
            throw new Error("세션이 만료되었습니다. 다시 로그인해주세요.");
        }
        throw new Error(`${error.response?.data?.result_code || ''}||${error.response?.data?.result_msg || '데이터 가져오기 실패'}`);
    }
};
const apiForCreateCampaignGroup = async (credentials)=>{
    const request_data = {
        request_data: {
            tenant_id: credentials.tenant_id,
            group_name: credentials.group_name
        }
    };
    console.log("Create campaign group request data:", request_data);
    try {
        // group_id를 URL에 포함시킴
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].post(`campaign-groups/${credentials.group_id}`, request_data);
        return data;
    } catch (error) {
        if (error.response?.status === 401) {
            throw new Error("세션이 만료되었습니다. 다시 로그인해주세요.");
        }
        console.log("error ", error);
        throw error;
    }
};
const apiForCampaignGroupCampaignList = async (group_id)=>{
    const request_data = {
        request_data: {
            group_id: [
                group_id
            ]
        },
        sort: {
            campaign_id: 0
        },
        page: {
            index: 1,
            items: 99999
        }
    };
    try {
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].post(`collections/campaign-group-list`, request_data);
        return data;
    } catch (error) {
        if (error.response?.status === 401) {
            throw new Error("세션이 만료되었습니다. 다시 로그인해주세요.");
        }
        throw new Error(`${error.response?.data?.result_code || ''}||${error.response?.data?.result_msg || '데이터 가져오기 실패'}`);
    }
};
const apiForCampaignGroupDataForCampaignGroupAdmin = async (group_id)=>{
    // Create request body that matches the expected API format
    const requestBody = {
        filter: group_id ? {
            group_id: [
                group_id
            ]
        } : {},
        sort: {
            group_id: 1
        },
        page: {
            index: 1,
            items: 100
        }
    };
    try {
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].post('collections/campaign-group-list', requestBody);
        return data;
    } catch (error) {
        if (error.response?.status === 401) {
            throw new Error("세션이 만료되었습니다. 다시 로그인해주세요.");
        }
        throw new Error(`${error.response?.data?.result_code || ''}||${error.response?.data?.result_msg || '데이터 가져오기 실패'}`);
    }
};
const apiForDeleteCampaignGroup = async (group_id)=>{
    try {
        // group_id를 URL에 포함시킴
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].delete(`campaign-groups/${group_id}`);
        return data;
    } catch (error) {
        if (error.response?.status === 401) {
            throw new Error("세션이 만료되었습니다. 다시 로그인해주세요.");
        }
        console.error("캠페인 그룹 삭제 실패:", error);
        throw new Error(`${error.response?.data?.result_code || ''}||${error.response?.data?.result_msg || '캠페인 그룹 삭제 실패'}`);
    }
};
const apiForUpdateCampaignGroupName = async (group_id, group_name, tenant_id)=>{
    const request_data = {
        request_data: {
            tenant_id: tenant_id,
            group_name: group_name
        }
    };
    try {
        // group_id를 URL에 포함시키고 PUT 메서드 사용
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].put(`campaign-groups/${group_id}`, request_data);
        return data;
    } catch (error) {
        if (error.response?.status === 401) {
            throw new Error("세션이 만료되었습니다. 다시 로그인해주세요.");
        }
        console.error("캠페인 그룹 이름 업데이트 실패:", error);
        throw new Error(`${error.response?.data?.result_code || ''}||${error.response?.data?.result_msg || '캠페인 그룹 이름 업데이트 실패'}`);
    }
};
const apiForAddCampaignToSpecificCampaignGroup = async (group_id, campaign_ids, tenant_id)=>{
    const request_data = {
        request_data: {
            campaign_id: campaign_ids,
            tenant_id: tenant_id
        }
    };
    try {
        // group_id를 URL에 포함시키고 POST 메서드 사용
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].post(`campaign-group/${group_id}/list`, request_data);
        return data;
    } catch (error) {
        if (error.response?.status === 401) {
            throw new Error("세션이 만료되었습니다. 다시 로그인해주세요.");
        }
        console.error("캠페인 그룹에 캠페인 추가 실패:", error);
        throw new Error(`${error.response?.data?.result_code || ''}||${error.response?.data?.result_msg || '캠페인 그룹에 캠페인 추가 실패'}`);
    }
};
const apiForRemoveCampaignFromCampaignGroup = async (group_id, campaign_ids, tenant_id)=>{
    const request_data = {
        request_data: {
            campaign_id: campaign_ids,
            tenant_id: tenant_id
        }
    };
    try {
        // DELETE 요청으로 캠페인 제거 - URL 형식: /pds/campaign-group/{group_id}/list
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].delete(`campaign-group/${group_id}/list`, {
            data: request_data
        });
        return data;
    } catch (error) {
        if (error.response?.status === 401) {
            throw new Error("세션이 만료되었습니다. 다시 로그인해주세요.");
        }
        console.error("캠페인 그룹에서 캠페인 제거 실패:", error);
        throw new Error(`${error.response?.data?.result_code || ''}||${error.response?.data?.result_msg || '캠페인 그룹에서 캠페인 제거 실패'}`);
    }
}; // 캠페인 그룹 캠페인 추가
 // 함수 이름:
 // apiForAddCampaingToSpecificCampaignGroup
 // pds/campaign-group/{group_id}/list
 // post
 // request 예시
 // {
 //     "request_data": {
 //         "campaign_id": 14,
 //         "tenant_id": 1
 //     }
 // }
 // response 예시
 // {
 //     "result_code": 0,
 //     "result_msg": "Success"
 // }
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/hooks/useApiForGetTreeDataForCampaignGroupTab.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// import { useQuery, useQueryClient } from '@tanstack/react-query';
// import { useCallback, useEffect } from 'react';
// import { useSideMenuCampaignGroupTabStore } from '@/store/storeForSideMenuCampaignGroupTab';
// import { apiForCombinedTenantAndCampaignGroup, transformToTreeData } from '@/features/preferences/api/apiForCampaignGroup';
// /**
//  * 캠페인 그룹 트리 데이터를 가져오는 커스텀 훅 (TanStack Query 사용)
//  * API 호출 및 데이터 변환 로직은 TanStack Query로 관리하고, UI 상태는 Zustand 스토어로 관리
//  */
// export const useApiForGetTreeDataForCampaignGroupTab = (initialTenantId?: number) => {
//   const queryClient = useQueryClient();
//   // Zustand 스토어에서 필요한 기능 가져오기
//   const { 
//     setTreeData, 
//     setLoading, 
//     setError, 
//     setTenantId, 
//     setExpandedNodes,
//     setSelectedNodeId,
//     tenant_id: storeTenantId
//   } = useSideMenuCampaignGroupTabStore();
//   // tenant_id 결정 (props로 받은 값이 우선, 없으면 스토어 값 사용)
//   const tenant_id = initialTenantId !== undefined ? initialTenantId : storeTenantId;
//   // TanStack Query를 사용하여 트리 데이터 가져오기
//   const query = useQuery({
//     queryKey: ['campaignTreeDataForCampaignGroupTab', tenant_id],
//     queryFn: async () => {
//       if (tenant_id === undefined || tenant_id === null) {
//         throw new Error('테넌트 ID가 없습니다');
//       }
//       const combinedData = await apiForCombinedTenantAndCampaignGroup(tenant_id);
//       return {
//         combinedData,
//         transformedData: transformToTreeData(combinedData)
//       };
//     },
//     enabled: tenant_id !== undefined && tenant_id !== null,
//     staleTime: 5 * 60 * 1000, // 5분 동안 데이터를 "신선한" 상태로 유지
//     refetchOnWindowFocus: false // 창 포커스 시 자동 리페치 비활성화
//   });
//   // 쿼리 결과에 따라 스토어 상태 업데이트
//   useEffect(() => {
//     // tenant_id 설정
//     if (tenant_id !== undefined && tenant_id !== null) {
//       setTenantId(tenant_id);
//     }
//     // 로딩 상태 업데이트
//     setLoading(query.isLoading || query.isFetching);
//     // 에러 상태 업데이트
//     if (query.error) {
//       setError(query.error instanceof Error 
//         ? query.error 
//         : new Error('Unknown error occurred'));
//     } else {
//       setError(null);
//     }
//     // 데이터가 있으면 트리 데이터 업데이트
//     if (query.data) {
//       setTreeData(query.data.transformedData);
//       // 루트 노드와 테넌트 노드만 확장하도록 설정 (처음 로드할 때만)
//       if (query.isSuccess) {
//         const transformedData = query.data.transformedData;
//         const tenantNodes = new Set<string>();
//         if (transformedData.length > 0) {
//           transformedData.forEach(rootNode => {
//             tenantNodes.add(rootNode.id); // 루트 노드 추가
//             if (rootNode.children) {
//               rootNode.children.forEach(node => {
//                 if (node.type === 'tenant') {
//                   tenantNodes.add(node.id);
//                 }
//               });
//             }
//           });
//         }
//         setExpandedNodes(tenantNodes);
//       }
//     }
//   }, [
//     query.data, 
//     query.isLoading, 
//     query.isFetching, 
//     query.error, 
//     query.isSuccess,
//     tenant_id,
//     setTenantId,
//     setTreeData, 
//     setLoading, 
//     setError, 
//     setExpandedNodes
//   ]);
//   // 트리 데이터 수동 가져오기 (tenant_id 지정하여 재요청)
//   const fetchTreeData = useCallback(async (tenant_id: number) => {
//     setTenantId(tenant_id);
//     return queryClient.fetchQuery({
//       queryKey: ['campaignTreeData', tenant_id],
//       queryFn: async () => {
//         const combinedData = await apiForCombinedTenantAndCampaignGroup(tenant_id);
//         return {
//           combinedData,
//           transformedData: transformToTreeData(combinedData)
//         };
//       }
//     });
//   }, [queryClient, setTenantId]);
//   // 현재 상태를 유지하면서 트리 데이터 다시 가져오기
//   const refetchTreeData = useCallback(async (tenant_id?: number) => {
//     const targetTenantId = tenant_id || tenant_id;
//     if (targetTenantId === undefined || targetTenantId === null) {
//       console.error("테넌트 ID가 없습니다.");
//       return null;
//     }
//     // 현재 확장 상태와 선택 상태 저장
//     const store = useSideMenuCampaignGroupTabStore.getState();
//     const currentExpanded = store.expandedNodes;
//     const currentSelected = store.selectedNodeId;
//     try {
//       // 쿼리 데이터 리페치
//       const result = await queryClient.fetchQuery({
//         queryKey: ['campaignTreeData', targetTenantId],
//         queryFn: async () => {
//           const combinedData = await apiForCombinedTenantAndCampaignGroup(targetTenantId);
//           return {
//             combinedData,
//             transformedData: transformToTreeData(combinedData)
//           };
//         }
//       });
//       // 이전 확장/선택 상태 유지
//       setExpandedNodes(currentExpanded);
//       setSelectedNodeId(currentSelected);
//       return result;
//     } catch (error) {
//       console.error("트리 데이터 다시 가져오기 오류:", error);
//       return null;
//     }
//   }, [tenant_id, queryClient, setExpandedNodes, setSelectedNodeId]);
//   // 훅에서 필요한 상태와 함수 반환
//   return {
//     fetchTreeData,
//     refetchTreeData,
//     isLoading: query.isLoading || query.isFetching,
//     error: query.error ? 
//       (query.error instanceof Error ? query.error : new Error('Unknown error occurred')) 
//       : null,
//     data: query.data?.transformedData || [],
//     status: query.status,
//     isFetched: query.isFetched
//   };
// };
__turbopack_esm__({
    "useApiForGetTreeDataForCampaignGroupTab": (()=>useApiForGetTreeDataForCampaignGroupTab)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCampaignGroupTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/storeForSideMenuCampaignGroupTab.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$api$2f$apiForCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/preferences/api/apiForCampaignGroup.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useQuery$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/useQuery.js [app-client] (ecmascript)");
var _s = __turbopack_refresh__.signature();
;
;
;
;
const useApiForGetTreeDataForCampaignGroupTab = (initialTenantId)=>{
    _s();
    const queryClient = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQueryClient"])();
    // Zustand 스토어에서 필요한 기능 가져오기
    const { setTreeData, setLoading, setError, setTenantId, setExpandedNodes, setSelectedNodeId, tenant_id: storeTenantId } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCampaignGroupTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useSideMenuCampaignGroupTabStore"])();
    // tenant_id 결정 (props로 받은 값이 우선, 없으면 스토어 값 사용)
    // const tenant_id = initialTenantId !== undefined ? initialTenantId : storeTenantId;
    const tenant_id = initialTenantId;
    // 쿼리 키 생성 함수 추가 - 재사용 가능하도록
    const getQueryKey = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "useApiForGetTreeDataForCampaignGroupTab.useCallback[getQueryKey]": ()=>[
                'campaignTreeDataForCampaignGroupTab',
                tenant_id
            ]
    }["useApiForGetTreeDataForCampaignGroupTab.useCallback[getQueryKey]"], [
        tenant_id
    ]);
    // TanStack Query를 사용하여 트리 데이터 가져오기
    const query = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useQuery$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQuery"])({
        queryKey: getQueryKey(),
        queryFn: {
            "useApiForGetTreeDataForCampaignGroupTab.useQuery[query]": async ()=>{
                if (tenant_id === undefined || tenant_id === null) {
                    throw new Error('테넌트 ID가 없습니다');
                }
                console.log("tenant_id :::::::::::::::::::::::::: ", tenant_id);
                const combinedData = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$api$2f$apiForCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["apiForCombinedTenantAndCampaignGroup"])(tenant_id);
                return {
                    combinedData,
                    transformedData: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$api$2f$apiForCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformToTreeData"])(combinedData)
                };
            }
        }["useApiForGetTreeDataForCampaignGroupTab.useQuery[query]"],
        enabled: tenant_id !== undefined && tenant_id !== null,
        staleTime: 30 * 1000,
        refetchOnWindowFocus: false // 창 포커스 시 자동 리페치 비활성화
    });
    // 쿼리 결과에 따라 스토어 상태 업데이트
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "useApiForGetTreeDataForCampaignGroupTab.useEffect": ()=>{
            // tenant_id 설정
            if (tenant_id !== undefined && tenant_id !== null) {
                setTenantId(tenant_id);
            }
            // 로딩 상태 업데이트
            setLoading(query.isLoading || query.isFetching);
            // 에러 상태 업데이트
            if (query.error) {
                setError(query.error instanceof Error ? query.error : new Error('Unknown error occurred'));
            } else {
                setError(null);
            }
            // 데이터가 있으면 트리 데이터 업데이트
            if (query.data) {
                setTreeData(query.data.transformedData);
                // 루트 노드와 테넌트 노드만 확장하도록 설정 (처음 로드할 때만)
                if (query.isSuccess) {
                    const transformedData = query.data.transformedData;
                    const tenantNodes = new Set();
                    if (transformedData.length > 0) {
                        transformedData.forEach({
                            "useApiForGetTreeDataForCampaignGroupTab.useEffect": (rootNode)=>{
                                tenantNodes.add(rootNode.id); // 루트 노드 추가
                                if (rootNode.children) {
                                    rootNode.children.forEach({
                                        "useApiForGetTreeDataForCampaignGroupTab.useEffect": (node)=>{
                                            if (node.type === 'tenant') {
                                                tenantNodes.add(node.id);
                                            }
                                        }
                                    }["useApiForGetTreeDataForCampaignGroupTab.useEffect"]);
                                }
                            }
                        }["useApiForGetTreeDataForCampaignGroupTab.useEffect"]);
                    }
                    setExpandedNodes(tenantNodes);
                }
            }
        }
    }["useApiForGetTreeDataForCampaignGroupTab.useEffect"], [
        query.data,
        query.isLoading,
        query.isFetching,
        query.error,
        query.isSuccess,
        tenant_id,
        setTenantId,
        setTreeData,
        setLoading,
        setError,
        setExpandedNodes
    ]);
    // 트리 데이터 수동 가져오기 (tenant_id 지정하여 재요청)
    const fetchTreeData = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "useApiForGetTreeDataForCampaignGroupTab.useCallback[fetchTreeData]": async (tenant_id)=>{
            setTenantId(tenant_id);
            return queryClient.fetchQuery({
                queryKey: [
                    'campaignTreeData',
                    tenant_id
                ],
                queryFn: {
                    "useApiForGetTreeDataForCampaignGroupTab.useCallback[fetchTreeData]": async ()=>{
                        const combinedData = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$api$2f$apiForCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["apiForCombinedTenantAndCampaignGroup"])(tenant_id);
                        return {
                            combinedData,
                            transformedData: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$api$2f$apiForCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformToTreeData"])(combinedData)
                        };
                    }
                }["useApiForGetTreeDataForCampaignGroupTab.useCallback[fetchTreeData]"]
            });
        }
    }["useApiForGetTreeDataForCampaignGroupTab.useCallback[fetchTreeData]"], [
        queryClient,
        setTenantId
    ]);
    // 현재 상태를 유지하면서 트리 데이터 다시 가져오기
    const refetchTreeData = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "useApiForGetTreeDataForCampaignGroupTab.useCallback[refetchTreeData]": async (tenant_id)=>{
            const targetTenantId = tenant_id || tenant_id;
            if (targetTenantId === undefined || targetTenantId === null) {
                console.error("테넌트 ID가 없습니다.");
                return null;
            }
            // 현재 확장 상태와 선택 상태 저장
            const store = __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCampaignGroupTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useSideMenuCampaignGroupTabStore"].getState();
            const currentExpanded = store.expandedNodes;
            const currentSelected = store.selectedNodeId;
            try {
                // 쿼리 데이터 리페치
                const result = await queryClient.fetchQuery({
                    queryKey: getQueryKey(),
                    queryFn: {
                        "useApiForGetTreeDataForCampaignGroupTab.useCallback[refetchTreeData]": async ()=>{
                            const combinedData = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$api$2f$apiForCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["apiForCombinedTenantAndCampaignGroup"])(targetTenantId);
                            return {
                                combinedData,
                                transformedData: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$api$2f$apiForCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["transformToTreeData"])(combinedData)
                            };
                        }
                    }["useApiForGetTreeDataForCampaignGroupTab.useCallback[refetchTreeData]"]
                });
                // 이전 확장/선택 상태 유지
                setExpandedNodes(currentExpanded);
                setSelectedNodeId(currentSelected);
                return result;
            } catch (error) {
                console.error("트리 데이터 다시 가져오기 오류:", error);
                return null;
            }
        }
    }["useApiForGetTreeDataForCampaignGroupTab.useCallback[refetchTreeData]"], [
        tenant_id,
        queryClient,
        setExpandedNodes,
        setSelectedNodeId,
        getQueryKey
    ]);
    // 캠페인 그룹 트리 데이터 무효화 함수 추가
    const invalidateCampaignGroupTreeData = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "useApiForGetTreeDataForCampaignGroupTab.useCallback[invalidateCampaignGroupTreeData]": ()=>{
            queryClient.invalidateQueries({
                queryKey: getQueryKey()
            });
        }
    }["useApiForGetTreeDataForCampaignGroupTab.useCallback[invalidateCampaignGroupTreeData]"], [
        queryClient,
        getQueryKey
    ]);
    // 서버 호출 없이 로컬 캐시만 업데이트하는 함수 추가
    const updateCampaignGroupTreeData = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "useApiForGetTreeDataForCampaignGroupTab.useCallback[updateCampaignGroupTreeData]": (updater)=>{
            queryClient.setQueryData(getQueryKey(), updater);
        }
    }["useApiForGetTreeDataForCampaignGroupTab.useCallback[updateCampaignGroupTreeData]"], [
        queryClient,
        getQueryKey
    ]);
    // 훅에서 필요한 상태와 함수 반환
    return {
        fetchTreeData,
        refetchTreeData,
        invalidateCampaignGroupTreeData,
        updateCampaignGroupTreeData,
        isLoading: query.isLoading || query.isFetching,
        error: query.error ? query.error instanceof Error ? query.error : new Error('Unknown error occurred') : null,
        data: query.data?.transformedData || [],
        status: query.status,
        isFetched: query.isFetched
    };
};
_s(useApiForGetTreeDataForCampaignGroupTab, "kz0ZkhBHJsxFJRzG00nIOO985Pw=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQueryClient"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCampaignGroupTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useSideMenuCampaignGroupTabStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useQuery$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQuery"]
    ];
});
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/components/data/baseTabs.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/features/campaignManager/components/data/baseTabs.ts
__turbopack_esm__({
    "baseTabs": (()=>baseTabs)
});
const baseTabs = [
    {
        id: 'campaign',
        label: '캠페인',
        icon: '/tree-menu/campaign_icon_for_sidemenu.png',
        iconWidth: 13,
        iconHeight: 13
    },
    {
        id: 'agent',
        label: '상담사',
        icon: '/tree-menu/ghost_icon_for_counselor_tab.png',
        iconWidth: 14,
        iconHeight: 14
    },
    {
        id: 'campaign-group',
        label: '캠페인 그룹',
        icon: '/tree-menu/campain_group.png',
        iconWidth: 12,
        iconHeight: 12
    }
];
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/api/mainCampaignStatusUpdate.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/features/campaignManager/hooks/fetchCampaignStatusUpdate.ts
__turbopack_esm__({
    "fetchCampaignStatusUpdate": (()=>fetchCampaignStatusUpdate)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/lib/axios.ts [app-client] (ecmascript)");
;
const fetchCampaignStatusUpdate = async (credentials)=>{
    const campaignStatusUpdateRequestData = {
        request_data: {
            campaign_status: credentials.campaign_status
        }
    };
    try {
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].put('campaigns/' + credentials.campaign_id + '/status', campaignStatusUpdateRequestData);
        return data;
    } catch (error) {
        if (error.response?.status === 401) {
            throw new Error('세션이 만료되었습니다. 다시 로그인해주세요.');
        }
        throw new Error(error.response?.data?.result_code + '||' + error.response?.data?.result_msg || '데이터 가져오기 실패');
    }
};
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/hooks/useApiForCampaignStatusUpdate.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useApiForCampaignStatusUpdate": (()=>useApiForCampaignStatusUpdate)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$mainCampaignStatusUpdate$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/api/mainCampaignStatusUpdate.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$error_message$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/lib/error_message.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$utils$2f$CustomAlertService$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/shared/layout/utils/CustomAlertService.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$tabStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/tabStore.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/useMutation.js [app-client] (ecmascript)");
var _s = __turbopack_refresh__.signature();
;
;
;
;
;
function useApiForCampaignStatusUpdate(options) {
    _s();
    const queryClient = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQueryClient"])();
    // TabStore에서 필요한 함수 가져오기
    const { simulateHeaderMenuClick, addTabCurrentOnly, openedTabs, setActiveTab } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$tabStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTabStore"])();
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMutation"])({
        mutationKey: [
            'mainCampaignStatusUpdate'
        ],
        mutationFn: __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$mainCampaignStatusUpdate$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fetchCampaignStatusUpdate"],
        onSuccess: {
            "useApiForCampaignStatusUpdate.useMutation": (data, variables, context)=>{
                if (data.result_code === 0) {
                    // 성공 시 성공 메시지 표시
                    __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$utils$2f$CustomAlertService$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["customAlertService"].success('캠페인 상태가 성공적으로 변경되었습니다!', '캠페인 상태 변경 완료');
                // 성공 후 캠페인 관리 탭 열기 (탭 ID 2번이 캠페인 관리)
                // openCampaignManagerTab();
                } else {
                    // 실패 시 에러 메시지 표시
                    __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$utils$2f$CustomAlertService$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["customAlertService"].error((0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$error_message$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getCampaignErrorMessage2"])(data.reason_code || 0), "캠페인 상태 변경 오류");
                // 에러 발생 후에도 캠페인 관리 탭 열기
                // openCampaignManagerTab();
                }
                // 상태 업데이트 성공 후 관련 쿼리 무효화
                queryClient.invalidateQueries({
                    queryKey: [
                        'treeMenuDataForSideMenu'
                    ]
                });
                queryClient.invalidateQueries({
                    queryKey: [
                        'mainCampaignProgressInformation'
                    ]
                });
                // mainData 쿼리 무효화하여 캠페인 목록 새로고침
                queryClient.invalidateQueries({
                    queryKey: [
                        'mainData'
                    ]
                });
                options?.onSuccess?.(data, variables, context);
            }
        }["useApiForCampaignStatusUpdate.useMutation"],
        onError: {
            "useApiForCampaignStatusUpdate.useMutation": (error, variables, context)=>{
                console.error('API Error:', error);
                // API 오류 시 에러 메시지 표시
                __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$utils$2f$CustomAlertService$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["customAlertService"].error(error.message || '데이터 로드에 실패했습니다.', 'API 오류');
                // 오류 발생 후에도 캠페인 관리 탭 열기
                openCampaignManagerTab();
                options?.onError?.(error, variables, context);
            }
        }["useApiForCampaignStatusUpdate.useMutation"]
    });
    "TURBOPACK unreachable";
    // 캠페인 관리 탭을 여는 함수
    function openCampaignManagerTab() {
        // 1. 먼저 이미 열려있는 캠페인 관리 탭이 있는지 확인 (탭 ID 2번이 캠페인 관리)
        const existingCampaignTab = openedTabs.find((tab)=>tab.id === 2);
        if (existingCampaignTab) {
            // 이미 열려있는 탭이 있으면 해당 탭 활성화
            setActiveTab(existingCampaignTab.id, existingCampaignTab.uniqueKey);
        } else {
            // 없으면 새 탭 생성 (2번은 캠페인 관리 메뉴 ID)
            simulateHeaderMenuClick(2);
        }
    }
}
_s(useApiForCampaignStatusUpdate, "8M92hKCRzb2+53zEKVjzyxzUdKA=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQueryClient"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$tabStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTabStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMutation"]
    ];
});
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/listManager/api/mainCampaignBlacklistCount.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/features/campaignManager/api/mainCampaignHistory.ts
__turbopack_esm__({
    "fetchCampaignBlacklistCount": (()=>fetchCampaignBlacklistCount)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/lib/axios.ts [app-client] (ecmascript)");
;
const fetchCampaignBlacklistCount = async (credentials)=>{
    const campaignBlacklistCountRequestData = {
        request_data: {
            campaign_id: credentials
        }
    };
    try {
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].post('/collections/campaign-blacklist-count', campaignBlacklistCountRequestData);
        console.log("블랙 리스트 카운트 조회 api 응답 : ", data);
        return data;
    } catch (error) {
        if (error.response?.status === 401) {
            throw new Error('세션이 만료되었습니다. 다시 로그인해주세요.');
        }
        throw new Error(error.response?.data?.result_code + '||' + error.response?.data?.result_msg || '데이터 가져오기 실패');
    }
}; // 블랙 리스트 최대치 조회
 // pds/collections/campaign-blacklist-max
 // apiForGetCampaignMaximumBlacklistCount
 // request:
 // 없음
 // reponse:
 // ```
 // {
 //     "result_code": 0,
 //     "result_msg": "Success",
 //     "result_data": {
 //         "max_count": 100000
 //     }
 // }
 // ```
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/listManager/hooks/useApiForCampaignBlacklistCount.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/features/campaignManager/hooks/useApiForCampaignBlacklistCount.ts
__turbopack_esm__({
    "useApiForCampaignBlacklistCount": (()=>useApiForCampaignBlacklistCount)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$listManager$2f$api$2f$mainCampaignBlacklistCount$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/listManager/api/mainCampaignBlacklistCount.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/useMutation.js [app-client] (ecmascript)");
var _s = __turbopack_refresh__.signature();
;
;
function useApiForCampaignBlacklistCount(options) {
    _s();
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMutation"])({
        mutationKey: [
            'mainCampaignBlacklistCount'
        ],
        mutationFn: __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$listManager$2f$api$2f$mainCampaignBlacklistCount$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fetchCampaignBlacklistCount"],
        onSuccess: {
            "useApiForCampaignBlacklistCount.useMutation": (data, variables, context)=>{
                console.log('API Response:', {
                    code: data.result_code,
                    message: data.result_msg,
                    data: data.result_data
                });
                options?.onSuccess?.(data, variables, context);
            }
        }["useApiForCampaignBlacklistCount.useMutation"],
        onError: {
            "useApiForCampaignBlacklistCount.useMutation": (error, variables, context)=>{
                // console.error('API Error:', error);
                // toast.error(error.message || '데이터 로드에 실패했습니다.');
                options?.onError?.(error, variables, context);
            }
        }["useApiForCampaignBlacklistCount.useMutation"]
    });
}
_s(useApiForCampaignBlacklistCount, "wwwtpB20p0aLiHIvSy5P98MwIUg=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMutation"]
    ];
});
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/listManager/api/mainCallingListDelete.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/features/campaignManager/hooks/fetchCallingListDelete.ts
__turbopack_esm__({
    "fetchCallingListDelete": (()=>fetchCallingListDelete)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/lib/axios.ts [app-client] (ecmascript)");
;
const fetchCallingListDelete = async (campaignId)=>{
    const requestData = {
        request_data: {
            list_flag: "L"
        }
    };
    try {
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].post(`campaigns/${campaignId}/calling-list`, requestData, {
            headers: {
                'Content-Type': 'application/json'
            }
        });
        return data;
    } catch (error) {
        if (error.response?.status === 401) {
            throw new Error('세션이 만료되었습니다. 다시 로그인해주세요.');
        }
        throw new Error(error.response?.data?.result_code + '||' + error.response?.data?.result_msg || '데이터 가져오기 실패');
    }
};
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/listManager/hooks/useApiForCampaignListDelete.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// C:\nproject\fe_pdsw\src\features\listManager\hooks\useApiForCampaignListDelete.ts
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$listManager$2f$api$2f$mainCallingListDelete$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/listManager/api/mainCallingListDelete.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/react-toastify/dist/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$utils$2f$CustomAlertService$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/shared/layout/utils/CustomAlertService.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/useMutation.js [app-client] (ecmascript)");
var _s = __turbopack_refresh__.signature();
;
;
;
;
const useApiForCampaignListDelete = (options)=>{
    _s();
    const queryClient = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQueryClient"])();
    const mutation = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMutation"])({
        mutationKey: [
            'campaignListDelete'
        ],
        mutationFn: {
            "useApiForCampaignListDelete.useMutation[mutation]": async (campaignId)=>{
                // 삭제 전 확인 다이얼로그 표시
                return new Promise({
                    "useApiForCampaignListDelete.useMutation[mutation]": (resolve, reject)=>{
                        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$utils$2f$CustomAlertService$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["customAlertService"].show({
                            message: '발신리스트 삭제시 발신리스트와 캠페인 진행정보가 초기화 됩니다.\n삭제된 발신리스트와 캠페인 진행정보는 복구가 불가능합니다.\n발신리스트를 삭제하시겠습니까?',
                            title: '캠페인',
                            type: '1',
                            onClose: {
                                "useApiForCampaignListDelete.useMutation[mutation]": async ()=>{
                                    try {
                                        // 사용자가 확인을 누르면 실제 API 호출 실행
                                        const result = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$listManager$2f$api$2f$mainCallingListDelete$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fetchCallingListDelete"])(campaignId);
                                        resolve(result);
                                    } catch (error) {
                                        reject(error);
                                    }
                                }
                            }["useApiForCampaignListDelete.useMutation[mutation]"],
                            onCancle: {
                                "useApiForCampaignListDelete.useMutation[mutation]": ()=>{
                                    // 사용자가 취소를 누르면 작업 취소
                                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].info('캠페인 리스트 삭제가 취소되었습니다.', {
                                        autoClose: 3000
                                    });
                                // reject(new Error('사용자가 삭제를 취소했습니다.'));
                                }
                            }["useApiForCampaignListDelete.useMutation[mutation]"]
                        });
                    }
                }["useApiForCampaignListDelete.useMutation[mutation]"]);
            }
        }["useApiForCampaignListDelete.useMutation[mutation]"],
        onSuccess: {
            "useApiForCampaignListDelete.useMutation[mutation]": (data, deletedCampaignId, context)=>{
                console.log('API Response (Delete):', {
                    code: data.result_code,
                    message: data.result_msg
                });
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].success('캠페인 리스트 삭제 성공 check !!!!!!!!!!!');
                // --- Cache Invalidation ---
                // 1. Invalidate the side menu tree data
                queryClient.invalidateQueries({
                    queryKey: [
                        'treeMenuDataForSideMenu'
                    ]
                });
                // 2. Invalidate the specific campaign's progress information
                const tenantIdForQueryKey = 1; // Or get dynamically if needed
                queryClient.invalidateQueries({
                    queryKey: [
                        'mainCampaignProgressInformation',
                        tenantIdForQueryKey,
                        deletedCampaignId
                    ]
                });
                // 전체 진행 정보 다시 불러오기 (필요한 경우)
                queryClient.refetchQueries({
                    queryKey: [
                        'mainCampaignProgressInformation'
                    ],
                    exact: false
                });
                // Call original onSuccess if provided
                options?.onSuccess?.(data, deletedCampaignId, context);
            }
        }["useApiForCampaignListDelete.useMutation[mutation]"],
        onError: {
            "useApiForCampaignListDelete.useMutation[mutation]": (error, variables, context)=>{
                console.error('API Error (Delete):', error);
                // 사용자가 의도적으로 취소한 경우가 아니라면 에러 메시지 표시
                if (error.message !== '사용자가 삭제를 취소했습니다.') {
                    __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$utils$2f$CustomAlertService$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["customAlertService"].error(error.message || '캠페인 리스트 삭제에 실패했습니다.', '오류');
                }
                options?.onError?.(error, variables, context);
            }
        }["useApiForCampaignListDelete.useMutation[mutation]"]
    });
    return mutation;
};
_s(useApiForCampaignListDelete, "mUUakYvFQSudGRmMzZErOI9nuuc=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQueryClient"],
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMutation"]
    ];
});
const __TURBOPACK__default__export__ = useApiForCampaignListDelete;
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/components/popups/BlackListCountPopup.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$CustomAlert$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/shared/layout/CustomAlert.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$label$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/ui/label.tsx [app-client] (ecmascript)");
;
var _s = __turbopack_refresh__.signature();
;
;
;
const BlackListCountPopup = ({ campaignId, blackListCount = 0, maxBlacklistCount = 1000000, commonBlacklistCount = 0, isOpen = false, onConfirm = ()=>{}, onCancel })=>{
    _s();
    const [isLoading, setIsLoading] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "BlackListCountPopup.useEffect": ()=>{
            if (isOpen) {
                setIsLoading(true);
                // 가짜 로딩 효과
                setTimeout({
                    "BlackListCountPopup.useEffect": ()=>{
                        setIsLoading(false);
                    }
                }["BlackListCountPopup.useEffect"], 500);
            }
        }
    }["BlackListCountPopup.useEffect"], [
        isOpen
    ]);
    const content = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
        className: "space-y-4",
        onClick: (e)=>e.stopPropagation(),
        onContextMenu: (e)=>{
            e.preventDefault();
            e.stopPropagation();
        },
        children: [
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "flex items-center gap-2 justify-between",
                children: [
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$label$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Label"], {
                        className: "w-48",
                        children: "캠페인 ID"
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/popups/BlackListCountPopup.tsx",
                        lineNumber: 46,
                        columnNumber: 17
                    }, this),
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                        children: campaignId
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/popups/BlackListCountPopup.tsx",
                        lineNumber: 47,
                        columnNumber: 17
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/features/campaignManager/components/popups/BlackListCountPopup.tsx",
                lineNumber: 45,
                columnNumber: 13
            }, this),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "flex items-center gap-2 justify-between",
                children: [
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$label$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Label"], {
                        className: "w-48",
                        children: "블랙리스트 등록건수"
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/popups/BlackListCountPopup.tsx",
                        lineNumber: 50,
                        columnNumber: 17
                    }, this),
                    isLoading ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                        children: "로딩 중..."
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/popups/BlackListCountPopup.tsx",
                        lineNumber: 52,
                        columnNumber: 21
                    }, this) : /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                        children: blackListCount.toLocaleString()
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/popups/BlackListCountPopup.tsx",
                        lineNumber: 54,
                        columnNumber: 21
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/features/campaignManager/components/popups/BlackListCountPopup.tsx",
                lineNumber: 49,
                columnNumber: 13
            }, this),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "flex items-center gap-2 justify-between",
                children: [
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$label$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Label"], {
                        className: "w-48",
                        children: "블랙리스트 MAX 등록 건수"
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/popups/BlackListCountPopup.tsx",
                        lineNumber: 58,
                        columnNumber: 17
                    }, this),
                    isLoading ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                        children: "로딩 중..."
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/popups/BlackListCountPopup.tsx",
                        lineNumber: 60,
                        columnNumber: 21
                    }, this) : /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                        children: maxBlacklistCount.toLocaleString()
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/popups/BlackListCountPopup.tsx",
                        lineNumber: 62,
                        columnNumber: 21
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/features/campaignManager/components/popups/BlackListCountPopup.tsx",
                lineNumber: 57,
                columnNumber: 13
            }, this),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "flex items-center gap-2 justify-between",
                children: [
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$label$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Label"], {
                        className: "w-48",
                        children: "공통 적용된 블랙리스트 등록 건수"
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/popups/BlackListCountPopup.tsx",
                        lineNumber: 66,
                        columnNumber: 17
                    }, this),
                    isLoading ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                        children: "로딩 중..."
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/popups/BlackListCountPopup.tsx",
                        lineNumber: 68,
                        columnNumber: 21
                    }, this) : /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                        children: commonBlacklistCount.toLocaleString()
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/popups/BlackListCountPopup.tsx",
                        lineNumber: 70,
                        columnNumber: 21
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/features/campaignManager/components/popups/BlackListCountPopup.tsx",
                lineNumber: 65,
                columnNumber: 13
            }, this)
        ]
    }, void 0, true, {
        fileName: "[project]/src/features/campaignManager/components/popups/BlackListCountPopup.tsx",
        lineNumber: 37,
        columnNumber: 9
    }, this);
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$CustomAlert$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
        isOpen: isOpen,
        title: "블랙리스트 건수 조회",
        message: content,
        onClose: onConfirm,
        onCancle: onCancel,
        type: "info"
    }, void 0, false, {
        fileName: "[project]/src/features/campaignManager/components/popups/BlackListCountPopup.tsx",
        lineNumber: 78,
        columnNumber: 9
    }, this);
};
_s(BlackListCountPopup, "DlrQjwOD5XS1kcZJvMHoaf7KaZ8=");
_c = BlackListCountPopup;
const __TURBOPACK__default__export__ = BlackListCountPopup;
var _c;
__turbopack_refresh__.register(_c, "BlackListCountPopup");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/api/mainCampaignManagerDelete.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/features/campaignManager/hooks/fetchCampaignManagerUpdate.ts
__turbopack_esm__({
    "fetchCampaignManagerDelete": (()=>fetchCampaignManagerDelete)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/lib/axios.ts [app-client] (ecmascript)");
;
const fetchCampaignManagerDelete = async (credentials)=>{
    const campaignManagerDeleteRequestData = {
        request_data: {
            tenant_id: credentials.tenant_id,
            delete_dial_list: credentials.delete_dial_list
        }
    };
    try {
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].delete('campaigns/' + credentials.campaign_id, {
            headers: {
                'Content-Type': 'application/json'
            },
            data: campaignManagerDeleteRequestData
        });
        return data;
    } catch (error) {
        if (error.response?.status === 401) {
            throw new Error('세션이 만료되었습니다. 다시 로그인해주세요.');
        }
        throw new Error(error.response?.data?.result_code + '||' + error.response?.data?.result_msg || '데이터 가져오기 실패');
    }
};
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/hooks/useApiForCampaignManagerDelete.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/features/campaignManager/hooks/useApiForCampaignManagerDelete.ts
__turbopack_esm__({
    "useApiForCampaignManagerDelete": (()=>useApiForCampaignManagerDelete)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$mainCampaignManagerDelete$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/api/mainCampaignManagerDelete.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/useMutation.js [app-client] (ecmascript)");
var _s = __turbopack_refresh__.signature();
;
;
function useApiForCampaignManagerDelete(options) {
    _s();
    const queryClient = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQueryClient"])();
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMutation"])({
        mutationKey: [
            'mainCampaignManagerDelete'
        ],
        mutationFn: __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$mainCampaignManagerDelete$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fetchCampaignManagerDelete"],
        onSuccess: {
            "useApiForCampaignManagerDelete.useMutation": (data, variables, context)=>{
                console.log('API Response:', {
                    code: data.result_code,
                    message: data.result_msg
                });
                options?.onSuccess?.(data, variables, context);
                queryClient.invalidateQueries({
                    queryKey: [
                        "treeMenuDataForSideMenu"
                    ]
                });
            }
        }["useApiForCampaignManagerDelete.useMutation"],
        onError: {
            "useApiForCampaignManagerDelete.useMutation": (error, variables, context)=>{
                // console.error('API Error:', error);
                // toast.error(error.message || '데이터 로드에 실패했습니다.');
                options?.onError?.(error, variables, context);
            }
        }["useApiForCampaignManagerDelete.useMutation"]
    });
}
_s(useApiForCampaignManagerDelete, "YK0wzM21ECnncaq5SECwU+/SVdQ=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQueryClient"],
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMutation"]
    ];
});
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/api/mainCampaignScheduleDelete.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/features/campaignManager/hooks/fetchCampaignScheduleDelete.ts
__turbopack_esm__({
    "fetchCampaignScheduleDelete": (()=>fetchCampaignScheduleDelete)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/lib/axios.ts [app-client] (ecmascript)");
;
const fetchCampaignScheduleDelete = async (credentials)=>{
    console.log("tenant_id ???????????????????????????", credentials.tenant_id);
    const campaignScheduleDeleteRequestData = {
        request_data: {
            tenant_id: credentials.tenant_id
        }
    };
    try {
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].delete('campaigns/' + credentials.campaign_id + '/schedule', {
            headers: {
                'Content-Type': 'application/json'
            },
            data: campaignScheduleDeleteRequestData
        });
        return data;
    } catch (error) {
        if (error.response?.status === 401) {
            throw new Error('세션이 만료되었습니다. 다시 로그인해주세요.');
        }
        throw new Error(error.response?.data?.result_code + '||' + error.response?.data?.result_msg || '데이터 가져오기 실패');
    }
};
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/hooks/useApiForCampaignScheduleDelete.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/features/campaignManager/hooks/useApiForCampaignScheduleUpdate.ts
__turbopack_esm__({
    "useApiForCampaignScheduleDelete": (()=>useApiForCampaignScheduleDelete)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$mainCampaignScheduleDelete$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/api/mainCampaignScheduleDelete.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/useMutation.js [app-client] (ecmascript)");
var _s = __turbopack_refresh__.signature();
;
;
function useApiForCampaignScheduleDelete(options) {
    _s();
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMutation"])({
        mutationKey: [
            'mainCampaignScheduleDelete'
        ],
        mutationFn: __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$mainCampaignScheduleDelete$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fetchCampaignScheduleDelete"],
        onSuccess: {
            "useApiForCampaignScheduleDelete.useMutation": (data, variables, context)=>{
                console.log('API Response:', {
                    code: data.result_code,
                    message: data.result_msg
                });
                options?.onSuccess?.(data, variables, context);
            }
        }["useApiForCampaignScheduleDelete.useMutation"],
        onError: {
            "useApiForCampaignScheduleDelete.useMutation": (error, variables, context)=>{
                // console.error('API Error:', error);
                // toast.error(error.message || '데이터 로드에 실패했습니다.');
                options?.onError?.(error, variables, context);
            }
        }["useApiForCampaignScheduleDelete.useMutation"]
    });
}
_s(useApiForCampaignScheduleDelete, "wwwtpB20p0aLiHIvSy5P98MwIUg=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMutation"]
    ];
});
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/api/mainCampaignSkillUpdate.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/features/campaignManager/api/mainCampaignSkillUpdate.ts
__turbopack_esm__({
    "fetchCampaignSkillUpdate": (()=>fetchCampaignSkillUpdate)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/lib/axios.ts [app-client] (ecmascript)");
;
const fetchCampaignSkillUpdate = async (credentials)=>{
    const campaignSkillListSearchRequestData = {
        request_data: {
            skill_id: credentials.skill_id
        }
    };
    try {
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].put('campaigns/' + credentials.campaign_id + '/skill', campaignSkillListSearchRequestData);
        return data;
    } catch (error) {
        if (error.response?.status === 401) {
            throw new Error('세션이 만료되었습니다. 다시 로그인해주세요.');
        }
        throw new Error(error.response?.data?.result_code + '||' + error.response?.data?.result_msg || '데이터 가져오기 실패');
    }
};
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/hooks/useApiForCampaignSkillUpdate.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/features/campaignManager/hooks/useApiForCampaignSkillUpdate.ts
__turbopack_esm__({
    "useApiForCampaignSkillUpdate": (()=>useApiForCampaignSkillUpdate)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$mainCampaignSkillUpdate$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/api/mainCampaignSkillUpdate.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/useMutation.js [app-client] (ecmascript)");
var _s = __turbopack_refresh__.signature();
;
;
function useApiForCampaignSkillUpdate(options) {
    _s();
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMutation"])({
        mutationKey: [
            'mainCampaignSkillUpdate'
        ],
        mutationFn: __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$mainCampaignSkillUpdate$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fetchCampaignSkillUpdate"],
        onSuccess: {
            "useApiForCampaignSkillUpdate.useMutation": (data, variables, context)=>{
                options?.onSuccess?.(data, variables, context);
            }
        }["useApiForCampaignSkillUpdate.useMutation"],
        onError: {
            "useApiForCampaignSkillUpdate.useMutation": (error, variables, context)=>{
                // console.error('API Error:', error);
                // toast.error(error.message || '데이터 로드에 실패했습니다.');
                options?.onError?.(error, variables, context);
            }
        }["useApiForCampaignSkillUpdate.useMutation"]
    });
}
_s(useApiForCampaignSkillUpdate, "wwwtpB20p0aLiHIvSy5P98MwIUg=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMutation"]
    ];
});
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/api/mainCallingNumberDelete.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/features/campaignManager/hooks/fetchCallingNumberDelete.ts
__turbopack_esm__({
    "fetchCallingNumberDelete": (()=>fetchCallingNumberDelete)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/lib/axios.ts [app-client] (ecmascript)");
;
const fetchCallingNumberDelete = async (credentials)=>{
    const campaignScheduleUpdateRequestData = {
        request_data: {
            calling_number: credentials.calling_number
        }
    };
    try {
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].delete('campaigns/' + credentials.campaign_id + '/calling-number', {
            headers: {
                'Content-Type': 'application/json'
            },
            data: campaignScheduleUpdateRequestData
        });
        return data;
    } catch (error) {
        if (error.response?.status === 401) {
            throw new Error('세션이 만료되었습니다. 다시 로그인해주세요.');
        }
        throw new Error(error.response?.data?.result_code + '||' + error.response?.data?.result_msg || '데이터 가져오기 실패');
    }
};
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/api/mainReservedCallDelete.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/features/campaignManager/hooks/fetchReservedCallDelete.ts
__turbopack_esm__({
    "fetchReservedCallDelete": (()=>fetchReservedCallDelete)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/lib/axios.ts [app-client] (ecmascript)");
;
const fetchReservedCallDelete = async (credentials)=>{
    const campaignReservedCallDeleteRequestData = {
        request_data: {
            tenant_id: credentials.tenant_id
        }
    };
    try {
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].delete('campaigns/' + credentials.campaign_id + '/reserved-call', {
            headers: {
                'Content-Type': 'application/json'
            },
            data: campaignReservedCallDeleteRequestData
        });
        return data;
    } catch (error) {
        if (error.response?.status === 401) {
            throw new Error('세션이 만료되었습니다. 다시 로그인해주세요.');
        }
        throw new Error(error.response?.data?.result_code + '||' + error.response?.data?.result_msg || '데이터 가져오기 실패');
    }
};
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogButtonForCampaingDelete.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CommonButton$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/shared/CommonButton/index.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$CustomAlert$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/shared/layout/CustomAlert.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForCampaignManagerDelete$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/hooks/useApiForCampaignManagerDelete.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForCampaignScheduleDelete$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/hooks/useApiForCampaignScheduleDelete.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForCampaignSkillUpdate$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/hooks/useApiForCampaignSkillUpdate.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$index$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/src/store/index.ts [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$mainCallingNumberDelete$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/api/mainCallingNumberDelete.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$mainReservedCallDelete$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/api/mainReservedCallDelete.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCampaignGroupTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/storeForSideMenuCampaignGroupTab.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/react-toastify/dist/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$tabStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/tabStore.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$campainManagerStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/campainManagerStore.ts [app-client] (ecmascript)");
;
var _s = __turbopack_refresh__.signature();
"use client";
;
;
;
;
;
;
;
;
;
;
;
;
const IDialogButtonForCampaingDelete = ({ campaignId, campaignName = '캠페인', variant = 'destructive', size = 'sm', className = '', buttonText = '삭제', isDisabled = false, isOpen: externalIsOpen, onOpenChange, tenant_id })=>{
    _s();
    // 외부에서 isOpen prop을 전달하지 않으면 내부 상태로 관리
    const [internalIsOpen, setInternalIsOpen] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const isDialogOpen = externalIsOpen !== undefined ? externalIsOpen : internalIsOpen;
    const [isDeleting, setIsDeleting] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    // const { tenant_id } = useAuthStore();
    console.log('tenant_id !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!', tenant_id);
    // 스토어 및 API 훅들
    const { refetchTreeDataForCampaignGroupTab } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCampaignGroupTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useSideMenuCampaignGroupTabStore"])();
    const { callingNumbers, campaignSkills } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$campainManagerStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCampainManagerStore"])();
    const { activeTabKey, closeAllTabs, rows, removeTab } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$tabStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTabStore"])();
    const { mutate: updateCampaignSkill } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForCampaignSkillUpdate$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForCampaignSkillUpdate"])({
        onSuccess: {
            "IDialogButtonForCampaingDelete.useApiForCampaignSkillUpdate": ()=>{
                console.log('캠페인 스킬 할당 해제 성공');
            }
        }["IDialogButtonForCampaingDelete.useApiForCampaignSkillUpdate"],
        onError: {
            "IDialogButtonForCampaingDelete.useApiForCampaignSkillUpdate": (error)=>{
                console.error('캠페인 스킬 할당 해제 실패:', error);
            }
        }["IDialogButtonForCampaingDelete.useApiForCampaignSkillUpdate"]
    });
    const { mutate: deleteCampaignSchedule } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForCampaignScheduleDelete$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForCampaignScheduleDelete"])({
        onSuccess: {
            "IDialogButtonForCampaingDelete.useApiForCampaignScheduleDelete": (data)=>{
                // 스킬 해제
                const relatedSkills = campaignSkills.filter({
                    "IDialogButtonForCampaingDelete.useApiForCampaignScheduleDelete.relatedSkills": (skill)=>skill.campaign_id === Number(campaignId)
                }["IDialogButtonForCampaingDelete.useApiForCampaignScheduleDelete.relatedSkills"]).map({
                    "IDialogButtonForCampaingDelete.useApiForCampaignScheduleDelete.relatedSkills": (data)=>data.skill_id
                }["IDialogButtonForCampaingDelete.useApiForCampaignScheduleDelete.relatedSkills"]);
                if (relatedSkills.length > 0) {
                    updateCampaignSkill({
                        campaign_id: Number(campaignId),
                        skill_id: []
                    });
                }
                // 발신번호 삭제
                const relatedCallingNumbers = callingNumbers.filter({
                    "IDialogButtonForCampaingDelete.useApiForCampaignScheduleDelete.relatedCallingNumbers": (callingNumber)=>callingNumber.campaign_id === Number(campaignId)
                }["IDialogButtonForCampaingDelete.useApiForCampaignScheduleDelete.relatedCallingNumbers"]).map({
                    "IDialogButtonForCampaingDelete.useApiForCampaignScheduleDelete.relatedCallingNumbers": (data)=>data.calling_number
                }["IDialogButtonForCampaingDelete.useApiForCampaignScheduleDelete.relatedCallingNumbers"]);
                if (relatedCallingNumbers.length > 0) {
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$mainCallingNumberDelete$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fetchCallingNumberDelete"])({
                        campaign_id: Number(campaignId),
                        calling_number: relatedCallingNumbers.join(',')
                    });
                }
                // 예약콜 제한 삭제
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$mainReservedCallDelete$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fetchReservedCallDelete"])({
                    campaign_id: Number(campaignId),
                    tenant_id: Number(tenant_id),
                    delete_dial_list: 1
                });
                // 트리 데이터 리패치 및 탭 닫기
                refetchTreeDataForCampaignGroupTab();
                // closeCurrentTab();
                const { rowId, sectionId } = findCurrentTabLocation();
                removeTab(2, "2");
            }
        }["IDialogButtonForCampaingDelete.useApiForCampaignScheduleDelete"]
    });
    const { mutate: deleteCampaign, isPending } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForCampaignManagerDelete$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForCampaignManagerDelete"])({
        onSuccess: {
            "IDialogButtonForCampaingDelete.useApiForCampaignManagerDelete": (data)=>{
                console.log('캠페인 삭제 성공:', data);
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].success(`'${campaignName}' 캠페인이 삭제되었습니다.`);
                // 삭제 후 스케줄 삭제 등 처리
                deleteCampaignSchedule({
                    campaign_id: Number(campaignId),
                    tenant_id: Number(tenant_id),
                    delete_dial_list: 1
                });
                closeDialog();
                setIsDeleting(false);
            }
        }["IDialogButtonForCampaingDelete.useApiForCampaignManagerDelete"],
        onError: {
            "IDialogButtonForCampaingDelete.useApiForCampaignManagerDelete": (error)=>{
                console.error('캠페인 삭제 실패:', error);
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].error(`캠페인 삭제에 실패했습니다: ${error.message || '알 수 없는 오류'}`);
                setIsDeleting(false);
            }
        }["IDialogButtonForCampaingDelete.useApiForCampaignManagerDelete"]
    });
    const findCurrentTabLocation = ()=>{
        for (const row of rows){
            for (const section of row.sections){
                if (section.tabs.some((tab)=>tab.uniqueKey === activeTabKey)) {
                    return {
                        rowId: row.id,
                        sectionId: section.id
                    };
                }
            }
        }
        return {
            rowId: 'row-1',
            sectionId: 'default'
        };
    };
    const closeCurrentTab = ()=>{
        if (!activeTabKey) return;
        const { rowId, sectionId } = findCurrentTabLocation();
        setTimeout(()=>{
            closeAllTabs(rowId, sectionId);
        }, 100);
    };
    const handleDelete = ()=>{
        if (!campaignId) {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].error('삭제할 캠페인 정보가 없습니다.');
            return;
        }
        setIsDeleting(true);
        deleteCampaign({
            campaign_id: Number(campaignId),
            tenant_id: Number(tenant_id),
            delete_dial_list: 1
        });
        refetchTreeDataForCampaignGroupTab();
    };
    const openDialog = ()=>{
        if (onOpenChange) {
            onOpenChange(true);
        } else {
            setInternalIsOpen(true);
        }
    };
    const closeDialog = ()=>{
        if (onOpenChange) {
            onOpenChange(false);
        } else {
            setInternalIsOpen(false);
        }
    };
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "IDialogButtonForCampaingDelete.useEffect": ()=>{
            const handleEscapeKey = {
                "IDialogButtonForCampaingDelete.useEffect.handleEscapeKey": (event)=>{
                    if (event.key === 'Escape') {
                        closeDialog();
                    }
                }
            }["IDialogButtonForCampaingDelete.useEffect.handleEscapeKey"];
            window.addEventListener('keydown', handleEscapeKey);
            return ({
                "IDialogButtonForCampaingDelete.useEffect": ()=>{
                    window.removeEventListener('keydown', handleEscapeKey);
                }
            })["IDialogButtonForCampaingDelete.useEffect"];
        }
    }["IDialogButtonForCampaingDelete.useEffect"], []);
    // const alertMessage = `캠페인 아이디: ${campaignId}\n캠페인 이름: ${campaignName}\n삭제된 캠페인은 복구가 불가능합니다.\n캠페인을 삭제하시겠습니까?\n이 작업은 되돌릴 수 없습니다.`;
    const alertMessage = `캠페인 아이디: ${campaignId} 캠페인 이름: ${campaignName} 삭제된 캠페인은 복구가 불가능합니다 캠페인을 삭제하시겠습니까?`;
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Fragment"], {
        children: [
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CommonButton$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                variant: variant,
                size: size,
                className: className,
                onClick: openDialog,
                disabled: isDisabled || isPending,
                children: buttonText
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogButtonForCampaingDelete.tsx",
                lineNumber: 192,
                columnNumber: 7
            }, this),
            isDialogOpen && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$CustomAlert$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                isOpen: isDialogOpen,
                title: "캠페인 삭제",
                message: alertMessage,
                onClose: handleDelete,
                onCancle: closeDialog,
                type: "1",
                confirmDisabled: isDeleting
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogButtonForCampaingDelete.tsx",
                lineNumber: 203,
                columnNumber: 9
            }, this)
        ]
    }, void 0, true);
};
_s(IDialogButtonForCampaingDelete, "1o5UWaHc7a/FHZnajomKhVwilVY=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCampaignGroupTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useSideMenuCampaignGroupTabStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$campainManagerStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCampainManagerStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$tabStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTabStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForCampaignSkillUpdate$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForCampaignSkillUpdate"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForCampaignScheduleDelete$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForCampaignScheduleDelete"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForCampaignManagerDelete$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForCampaignManagerDelete"]
    ];
});
_c = IDialogButtonForCampaingDelete;
const __TURBOPACK__default__export__ = IDialogButtonForCampaingDelete;
var _c;
__turbopack_refresh__.register(_c, "IDialogButtonForCampaingDelete");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/components/treeMenus/ContextMenuForCampaignForCampaignTab.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "ContextMenuForCampaignForCampaignTab": (()=>ContextMenuForCampaignForCampaignTab),
    "getStatusIcon": (()=>getStatusIcon)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/ui/context-menu.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$tabStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/tabStore.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/react-toastify/dist/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/lib/utils.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/image.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$useAvailableMenuStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/useAvailableMenuStore.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$mainStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/mainStore.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$authStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/authStore.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$auth$2f$hooks$2f$useApiForMain$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/auth/hooks/useApiForMain.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForCampaignStatusUpdate$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/hooks/useApiForCampaignStatusUpdate.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$listManager$2f$hooks$2f$useApiForCampaignBlacklistCount$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/listManager/hooks/useApiForCampaignBlacklistCount.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$listManager$2f$hooks$2f$useApiForCampaignListDelete$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/listManager/hooks/useApiForCampaignListDelete.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$popups$2f$BlackListCountPopup$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/components/popups/BlackListCountPopup.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$CustomAlert$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/shared/layout/CustomAlert.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$dialog$2f$IDialogButtonForCampaingDelete$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogButtonForCampaingDelete.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$check$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Check$3e$__ = __turbopack_import__("[project]/node_modules/lucide-react/dist/esm/icons/check.js [app-client] (ecmascript) <export default as Check>");
;
var _s = __turbopack_refresh__.signature();
"use client";
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
const getStatusIcon = (status)=>{
    switch(status){
        case "started":
            return "/sidebar-menu/tree_play.svg";
        case "pending":
            return "/sidebar-menu/tree_pause.svg";
        case "stopped":
            return "/sidebar-menu/tree_stop.svg";
        default:
            return null;
    }
};
const errorMessage = {
    isOpen: false,
    message: '',
    title: '캠페인',
    type: '1',
    onClose: ()=>{},
    onCancle: ()=>{}
};
function ContextMenuForCampaignForCampaignTab({ children, item, onEdit, onMonitor, tenantIdForCampaignTab, onHandleCampaignCopy }) {
    _s();
    const isFolder = item.type === "folder";
    const { simulateHeaderMenuClick, setCampaignIdForUpdateFromSideMenu, addTab, addMultiTab } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$tabStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTabStore"])();
    const [isBlacklistPopupOpen, setIsBlacklistPopupOpen] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const [blackListCount, setBlackListCount] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(0);
    const [maxBlacklistCount, setMaxBlacklistCount] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(1000000);
    const [commonBlacklistCount, setCommonBlacklistCount] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(0);
    const preventCloseRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(false);
    const [alertState, setAlertState] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(errorMessage);
    const { availableCampaignTabCampaignContextMenuIds } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$useAvailableMenuStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAvailableMenuStore"])();
    const { tenant_id, role_id, session_key } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$authStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAuthStore"])();
    const { campaigns, setCampaigns, selectedCampaign, setSelectedCampaign } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$mainStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMainStore"])();
    // Get current status directly from the campaigns store to ensure we always have the latest status
    const currentCampaign = campaigns?.find((c)=>c.campaign_id === Number(item.id));
    const [displayStatus, setDisplayStatus] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(item.status);
    // Update the displayed status whenever the item prop or campaigns state changes
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "ContextMenuForCampaignForCampaignTab.useEffect": ()=>{
            if (currentCampaign) {
                const statusMap = {
                    1: "started",
                    2: "pending",
                    3: "stopped"
                };
                const updatedStatus = statusMap[currentCampaign.campaign_status] || item.status;
                setDisplayStatus(updatedStatus);
            } else {
                setDisplayStatus(item.status);
            }
        }
    }["ContextMenuForCampaignForCampaignTab.useEffect"], [
        currentCampaign,
        item.status,
        campaigns
    ]);
    // ====== API HOOKS ======
    const { mutate: fetchMain } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$auth$2f$hooks$2f$useApiForMain$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForMain"])({
        onSuccess: {
            "ContextMenuForCampaignForCampaignTab.useApiForMain": (data)=>{
                setCampaigns(data.result_data);
                setSelectedCampaign(data.result_data.find({
                    "ContextMenuForCampaignForCampaignTab.useApiForMain": (c)=>c.campaign_id === selectedCampaign?.campaign_id
                }["ContextMenuForCampaignForCampaignTab.useApiForMain"]) || null);
            }
        }["ContextMenuForCampaignForCampaignTab.useApiForMain"]
    });
    const updateCampaignStatusMutation = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForCampaignStatusUpdate$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForCampaignStatusUpdate"])({
        onSuccess: {
            "ContextMenuForCampaignForCampaignTab.useApiForCampaignStatusUpdate[updateCampaignStatusMutation]": ()=>{
                preventCloseRef.current = true;
                // Refresh campaigns data after status update
                fetchMain({
                    session_key,
                    tenant_id
                });
            }
        }["ContextMenuForCampaignForCampaignTab.useApiForCampaignStatusUpdate[updateCampaignStatusMutation]"],
        onError: {
            "ContextMenuForCampaignForCampaignTab.useApiForCampaignStatusUpdate[updateCampaignStatusMutation]": (error)=>{
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].error(error.message || "상태 변경 중 오류가 발생했습니다.");
            }
        }["ContextMenuForCampaignForCampaignTab.useApiForCampaignStatusUpdate[updateCampaignStatusMutation]"]
    });
    const { mutate: deleteCampaignList } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$listManager$2f$hooks$2f$useApiForCampaignListDelete$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])({});
    const { mutate: fetchCampaignBlacklistCount } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$listManager$2f$hooks$2f$useApiForCampaignBlacklistCount$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForCampaignBlacklistCount"])({
        onSuccess: {
            "ContextMenuForCampaignForCampaignTab.useApiForCampaignBlacklistCount": (data)=>{
                setBlackListCount(data.result_data.blacklist_count);
                setMaxBlacklistCount(data.result_data.max_count);
                setCommonBlacklistCount(data.result_data.common_count);
                setTimeout({
                    "ContextMenuForCampaignForCampaignTab.useApiForCampaignBlacklistCount": ()=>{
                        setIsBlacklistPopupOpen(true);
                    }
                }["ContextMenuForCampaignForCampaignTab.useApiForCampaignBlacklistCount"], 100);
            }
        }["ContextMenuForCampaignForCampaignTab.useApiForCampaignBlacklistCount"]
    });
    // ====== HELPER FUNCTIONS ======
    const statusInfo = {
        started: {
            label: "시작",
            color: "#22c55e"
        },
        pending: {
            label: "멈춤",
            color: "#eab308"
        },
        stopped: {
            label: "중지",
            color: "#ef4444"
        }
    };
    const getStatusNumber = (status)=>{
        switch(status){
            case "started":
                return 1;
            case "pending":
                return 2;
            case "stopped":
                return 3;
            default:
                return 0;
        }
    };
    const handleEditMenuClick = ()=>{
        simulateHeaderMenuClick(2);
        setCampaignIdForUpdateFromSideMenu(item.id);
    };
    const handleProgressInfoClick = (campaignId, campaignName)=>{
        const uniqueKey = `progress-info-${campaignId}-${Date.now()}`;
        addMultiTab({
            id: 21,
            uniqueKey: uniqueKey,
            title: `캠페인 진행정보 - ${campaignName}`,
            icon: '',
            href: '',
            content: null,
            campaignId: campaignId
        });
    };
    const handleRebroadcastClick = (campaignId)=>{
        setCampaignIdForUpdateFromSideMenu(campaignId);
        addTab({
            id: 20,
            uniqueKey: '20',
            title: '재발신 설정',
            icon: '',
            href: '',
            content: null
        });
    };
    const handleMonitorClick = (tenantIdForCampaignTab, campaignId, campaignName)=>{
        console.log("tenantId 확인 at 캠페인탭 : ", tenantIdForCampaignTab);
        const uniqueKey = `monitor-${Date.now()}`;
        addMultiTab({
            id: 22,
            uniqueKey: uniqueKey,
            title: `상담사 상태 모니터 - ${campaignName}`,
            icon: '',
            href: '',
            content: null,
            campaignId: campaignId,
            params: {
                sessionKey: session_key,
                campaignId: campaignId,
                tenantId: tenantIdForCampaignTab
            }
        });
    };
    const handleCampaignListDelete = (campaignId)=>{
        if (displayStatus !== "stopped") {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].error("캠페인이 중지 상태일 때만 리스트를 삭제할 수 있습니다.");
            return;
        }
        deleteCampaignList(campaignId);
    };
    const handleCampaingProgressUpdate = async (status)=>{
        if (displayStatus === status || updateCampaignStatusMutation.isPending) {
            return;
        }
        try {
            preventCloseRef.current = true;
            // Set optimistic update for better UX
            setDisplayStatus(status);
            await updateCampaignStatusMutation.mutateAsync({
                campaign_id: Number(item.id),
                campaign_status: getStatusNumber(status)
            });
        // The fetchMain will be called in onSuccess callback
        } catch (error) {
            // Revert to the actual status if there's an error
            if (currentCampaign) {
                const statusMap = {
                    1: "started",
                    2: "pending",
                    3: "stopped"
                };
                setDisplayStatus(statusMap[currentCampaign.campaign_status] || item.status);
            } else {
                setDisplayStatus(item.status);
            }
            console.error('Error changing campaign status:', {
                campaignId: item.id,
                campaignName: item.label,
                attemptedStatus: status,
                error: error
            });
        }
    };
    const handleBlacklistCountCheckClick = ()=>{
        fetchCampaignBlacklistCount(Number(item.id));
    };
    // ====== SUB MENU FOR STATUS ======
    const renderStatusSubMenu = ()=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuSub"], {
            children: [
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuSubTrigger"], {
                    className: "flex items-center text-sm",
                    onPointerDown: ()=>{
                        preventCloseRef.current = false;
                    },
                    children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                        className: "flex items-center",
                        children: [
                            "시작구분:",
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                className: "ml-1 flex items-center",
                                children: [
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                        className: "w-4 h-4 mr-1",
                                        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                                            src: getStatusIcon(displayStatus) || '',
                                            alt: displayStatus,
                                            width: 16,
                                            height: 16
                                        }, void 0, false, {
                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenuForCampaignForCampaignTab.tsx",
                                            lineNumber: 290,
                                            columnNumber: 15
                                        }, this)
                                    }, void 0, false, {
                                        fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenuForCampaignForCampaignTab.tsx",
                                        lineNumber: 289,
                                        columnNumber: 13
                                    }, this),
                                    statusInfo[displayStatus].label
                                ]
                            }, void 0, true, {
                                fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenuForCampaignForCampaignTab.tsx",
                                lineNumber: 288,
                                columnNumber: 11
                            }, this)
                        ]
                    }, void 0, true, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenuForCampaignForCampaignTab.tsx",
                        lineNumber: 286,
                        columnNumber: 9
                    }, this)
                }, void 0, false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenuForCampaignForCampaignTab.tsx",
                    lineNumber: 280,
                    columnNumber: 7
                }, this),
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuSubContent"], {
                    className: "min-w-[120px] p-1",
                    onPointerDownOutside: (e)=>{
                        if (preventCloseRef.current) {
                            e.preventDefault();
                            preventCloseRef.current = false;
                        }
                    },
                    children: Object.keys(statusInfo).map((status)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuItem"], {
                            onClick: (e)=>{
                                e.stopPropagation();
                                handleCampaingProgressUpdate(status);
                                preventCloseRef.current = true;
                            },
                            className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])("flex items-center justify-between text-sm px-2 py-1.5", displayStatus === status ? "bg-gray-50" : "", updateCampaignStatusMutation.isPending ? "opacity-70" : ""),
                            disabled: updateCampaignStatusMutation.isPending,
                            children: [
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                    className: "flex items-center",
                                    children: [
                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                            className: "w-4 h-4 mr-2",
                                            children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                                                src: getStatusIcon(status) || '',
                                                alt: status,
                                                width: 16,
                                                height: 16
                                            }, void 0, false, {
                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenuForCampaignForCampaignTab.tsx",
                                                lineNumber: 327,
                                                columnNumber: 17
                                            }, this)
                                        }, void 0, false, {
                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenuForCampaignForCampaignTab.tsx",
                                            lineNumber: 326,
                                            columnNumber: 15
                                        }, this),
                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                            children: statusInfo[status].label
                                        }, void 0, false, {
                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenuForCampaignForCampaignTab.tsx",
                                            lineNumber: 334,
                                            columnNumber: 15
                                        }, this)
                                    ]
                                }, void 0, true, {
                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenuForCampaignForCampaignTab.tsx",
                                    lineNumber: 325,
                                    columnNumber: 13
                                }, this),
                                displayStatus === status && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$check$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Check$3e$__["Check"], {
                                    className: "h-4 w-4 text-green-500"
                                }, void 0, false, {
                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenuForCampaignForCampaignTab.tsx",
                                    lineNumber: 337,
                                    columnNumber: 15
                                }, this)
                            ]
                        }, status, true, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenuForCampaignForCampaignTab.tsx",
                            lineNumber: 311,
                            columnNumber: 11
                        }, this))
                }, void 0, false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenuForCampaignForCampaignTab.tsx",
                    lineNumber: 301,
                    columnNumber: 7
                }, this)
            ]
        }, void 0, true, {
            fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenuForCampaignForCampaignTab.tsx",
            lineNumber: 279,
            columnNumber: 5
        }, this);
    // ====== MAIN MENU ======
    const mainMenuItems = [
        {
            key: "edit",
            title: "캠페인 수정",
            onClick: handleEditMenuClick,
            menuId: 19
        },
        {
            key: "status",
            render: renderStatusSubMenu,
            menuId: 20
        },
        {
            key: "progress",
            title: "캠페인 진행정보",
            onClick: ()=>handleProgressInfoClick(item.id, item.label),
            menuId: 24
        },
        {
            key: "separator1",
            type: "separator"
        },
        {
            key: "rebroadcast",
            title: "재발신",
            onClick: ()=>handleRebroadcastClick(item.id),
            menuId: 25
        },
        {
            key: "separator2",
            type: "separator"
        },
        {
            key: "copy",
            title: "캠페인 복사",
            onClick: onHandleCampaignCopy,
            menuId: 26
        },
        {
            key: "delete",
            // 캠페인 삭제를 다이얼로그 버튼으로 대체
            render: ()=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                    className: "py-1",
                    children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$dialog$2f$IDialogButtonForCampaingDelete$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                        campaignId: item.id,
                        tenant_id: tenantIdForCampaignTab,
                        campaignName: item.label,
                        variant: "ghost",
                        size: "sm",
                        className: "w-full justify-start text-left text-red-500",
                        buttonText: "캠페인 삭제",
                        isDisabled: displayStatus !== 'stopped'
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenuForCampaignForCampaignTab.tsx",
                        lineNumber: 389,
                        columnNumber: 11
                    }, this)
                }, "delete", false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenuForCampaignForCampaignTab.tsx",
                    lineNumber: 388,
                    columnNumber: 9
                }, this),
            condition: !isFolder,
            className: "",
            menuId: 27
        },
        {
            key: "separator3",
            type: "separator"
        },
        {
            key: "listDelete",
            title: "캠페인 리스트 삭제",
            onClick: ()=>handleCampaignListDelete(item.id),
            condition: displayStatus === 'stopped',
            menuId: 28
        },
        {
            key: "monitor",
            title: "상담사 상태 모니터",
            onClick: ()=>handleMonitorClick(tenantIdForCampaignTab, item.id, item.label),
            menuId: 29
        },
        {
            key: "blacklist",
            title: "블랙리스트 건수 조회",
            onClick: handleBlacklistCountCheckClick,
            menuId: 30
        }
    ];
    const filteredMenuItems = mainMenuItems.filter((menuItem)=>{
        if (menuItem.type === "separator") return true;
        if (menuItem.menuId === undefined) return true;
        return availableCampaignTabCampaignContextMenuIds.includes(menuItem.menuId);
    });
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Fragment"], {
        children: [
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenu"], {
                children: [
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuTrigger"], {
                        asChild: true,
                        children: children
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenuForCampaignForCampaignTab.tsx",
                        lineNumber: 439,
                        columnNumber: 9
                    }, this),
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuContent"], {
                        className: "w-[150px]",
                        children: filteredMenuItems.map((menuItem)=>{
                            if (menuItem.condition === false) return null;
                            if (menuItem.type === "separator") {
                                return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuSeparator"], {
                                    className: "my-1"
                                }, menuItem.key, false, {
                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenuForCampaignForCampaignTab.tsx",
                                    lineNumber: 445,
                                    columnNumber: 17
                                }, this);
                            }
                            if (menuItem.render) {
                                return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].Fragment, {
                                    children: menuItem.render()
                                }, menuItem.key, false, {
                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenuForCampaignForCampaignTab.tsx",
                                    lineNumber: 453,
                                    columnNumber: 17
                                }, this);
                            }
                            return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuItem"], {
                                onClick: menuItem.onClick,
                                className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])("flex items-center text-sm", menuItem.className),
                                children: menuItem.title
                            }, menuItem.key, false, {
                                fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenuForCampaignForCampaignTab.tsx",
                                lineNumber: 459,
                                columnNumber: 15
                            }, this);
                        })
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenuForCampaignForCampaignTab.tsx",
                        lineNumber: 440,
                        columnNumber: 9
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenuForCampaignForCampaignTab.tsx",
                lineNumber: 438,
                columnNumber: 7
            }, this),
            isBlacklistPopupOpen && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$popups$2f$BlackListCountPopup$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                campaignId: item.id,
                blackListCount: blackListCount,
                maxBlacklistCount: maxBlacklistCount,
                commonBlacklistCount: commonBlacklistCount,
                isOpen: isBlacklistPopupOpen,
                onConfirm: ()=>setIsBlacklistPopupOpen(false),
                onCancel: ()=>setIsBlacklistPopupOpen(false)
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenuForCampaignForCampaignTab.tsx",
                lineNumber: 472,
                columnNumber: 9
            }, this),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$CustomAlert$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                message: alertState.message,
                title: alertState.title,
                type: alertState.type,
                isOpen: alertState.isOpen,
                onClose: ()=>{
                    alertState.onClose();
                },
                onCancle: ()=>setAlertState((prev)=>({
                            ...prev,
                            isOpen: false
                        }))
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenuForCampaignForCampaignTab.tsx",
                lineNumber: 483,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true);
}
_s(ContextMenuForCampaignForCampaignTab, "Gh/8qLkc2yQECRdQ6EUQ03sEPcw=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$tabStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTabStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$useAvailableMenuStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAvailableMenuStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$authStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAuthStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$mainStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMainStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$auth$2f$hooks$2f$useApiForMain$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForMain"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForCampaignStatusUpdate$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForCampaignStatusUpdate"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$listManager$2f$hooks$2f$useApiForCampaignListDelete$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$listManager$2f$hooks$2f$useApiForCampaignBlacklistCount$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForCampaignBlacklistCount"]
    ];
});
_c = ContextMenuForCampaignForCampaignTab;
var _c;
__turbopack_refresh__.register(_c, "ContextMenuForCampaignForCampaignTab");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/components/treeMenus/FolderContextMenuForTreeNode.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "FolderContextMenu": (()=>FolderContextMenu)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/ui/context-menu.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$tabStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/tabStore.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSsideMenuCampaignTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/storeForSsideMenuCampaignTab.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$useAvailableMenuStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/useAvailableMenuStore.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$index$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/src/store/index.ts [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$authStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/authStore.ts [app-client] (ecmascript)");
;
var _s = __turbopack_refresh__.signature();
"use client";
;
;
;
;
;
const FolderContextMenu = ({ item })=>{
    _s();
    const { addTab, openedTabs, setActiveTab, removeExistingTabsByTabId } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$tabStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTabStore"])();
    const { selectedMenus, toggleMenu } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSsideMenuCampaignTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTreeMenuStore"])(); // 통합 스토어 사용
    const { availableCampaignTenantContextMenuIds } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$useAvailableMenuStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAvailableMenuStore"])(); // 권한 있는 메뉴 ID 가져오기
    const { tenant_id, role_id, session_key } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$authStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAuthStore"])();
    // addTab({
    //   id: 700,
    //   title: 캠페인 그룹 일괄 수정: ${node.name},
    //   uniqueKey: groupBulkUpdate_${node.id},
    //   params: {
    //     groupId: node.id,
    //     groupName: node.name
    //   }
    // });
    const menuItems = [
        {
            id: 13,
            menuId: 15,
            title: "새 캠페인",
            handler: ()=>{
                const tenantId = item.id;
                const newKey = `13-${Date.now()}`;
                // 💡 새로 추가한 메서드 사용!
                removeExistingTabsByTabId(13);
                addTab({
                    id: 13,
                    uniqueKey: newKey,
                    title: "새 캠페인",
                    icon: "",
                    href: "",
                    content: null,
                    params: {
                        tenantId
                    }
                });
                setActiveTab(13, newKey);
            }
        },
        {
            id: 22,
            menuId: 16,
            title: "상담사 상태 모니터",
            handler: ()=>{
                addTab({
                    id: 22,
                    uniqueKey: `22-${Date.now()}`,
                    title: "상담사 상태 모니터",
                    icon: "",
                    href: "",
                    content: null,
                    params: {
                        sessionKey: session_key,
                        campaignId: 0,
                        tenantId: item.id
                    }
                });
            }
        }
    ];
    // 사용자가 접근 권한이 있는 메뉴 아이템만 필터링
    const filteredMenuItems = menuItems.filter((menuItem)=>availableCampaignTenantContextMenuIds.includes(menuItem.menuId));
    // console.log("availableCampaignTenantContextMenuIds : ", availableCampaignTenantContextMenuIds);
    // console.log("filteredMenuItems : ", filteredMenuItems);  
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuContent"], {
        children: filteredMenuItems.map((menuItem)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuItem"], {
                onClick: menuItem.handler,
                className: "cursor-pointer hover:bg-[#F4F6F9] focus:bg-[#F4F6F9] flex items-center text-[#333] px-[6px] py-[4px]",
                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                    children: menuItem.title
                }, void 0, false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/FolderContextMenuForTreeNode.tsx",
                    lineNumber: 103,
                    columnNumber: 11
                }, this)
            }, menuItem.id, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/FolderContextMenuForTreeNode.tsx",
                lineNumber: 98,
                columnNumber: 9
            }, this))
    }, void 0, false, {
        fileName: "[project]/src/features/campaignManager/components/treeMenus/FolderContextMenuForTreeNode.tsx",
        lineNumber: 96,
        columnNumber: 5
    }, this);
};
_s(FolderContextMenu, "lYDKq0FPlRBJi//nGw+BNBOgbH0=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$tabStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTabStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSsideMenuCampaignTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTreeMenuStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$useAvailableMenuStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAvailableMenuStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$authStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAuthStore"]
    ];
});
_c = FolderContextMenu;
var _c;
__turbopack_refresh__.register(_c, "FolderContextMenu");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/components/treeMenus/ContextMenus/ICampaignTabRootNodeContextMenu.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "IRootNodeContextMenu": (()=>IRootNodeContextMenu)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/ui/context-menu.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$tabStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/tabStore.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$index$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/src/store/index.ts [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$authStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/authStore.ts [app-client] (ecmascript)");
;
var _s = __turbopack_refresh__.signature();
"use client";
;
;
;
;
function IRootNodeContextMenu({ item }) {
    _s();
    const { addTab } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$tabStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTabStore"])();
    const { session_key } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$authStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAuthStore"])();
    const handleExpandAll = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "IRootNodeContextMenu.useCallback[handleExpandAll]": ()=>{
            // @ts-expect-error - 전역 객체에 함수 추가 (window 타입에 정의되지 않은 속성)
            if (typeof window.expandAllNodes === 'function') {
                // @ts-expect-error - 전역 객체에 함수 추가 (window 타입에 정의되지 않은 속성)
                window.expandAllNodes();
            }
        }
    }["IRootNodeContextMenu.useCallback[handleExpandAll]"], []);
    const handleCollapseAll = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "IRootNodeContextMenu.useCallback[handleCollapseAll]": ()=>{
            // @ts-expect-error - 전역 객체에 함수 추가 (window 타입에 정의되지 않은 속성)
            if (typeof window.expandTenantsOnly === 'function') {
                // @ts-expect-error - 전역 객체에 함수 추가 (window 타입에 정의되지 않은 속성)
                window.expandTenantsOnly();
            }
        }
    }["IRootNodeContextMenu.useCallback[handleCollapseAll]"], []);
    const handleAgentStatusMonitor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "IRootNodeContextMenu.useCallback[handleAgentStatusMonitor]": ()=>{
            addTab({
                id: 22,
                uniqueKey: `22-${Date.now()}`,
                title: "상담사 상태 모니터",
                icon: "",
                href: "",
                content: null,
                params: {
                    sessionKey: session_key,
                    campaignId: 0,
                    tenantId: 0
                }
            });
        }
    }["IRootNodeContextMenu.useCallback[handleAgentStatusMonitor]"], [
        addTab,
        session_key
    ]);
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuContent"], {
        className: "w-48",
        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuItem"], {
            onSelect: handleAgentStatusMonitor,
            children: "상담사 상태 모니터"
        }, void 0, false, {
            fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/ICampaignTabRootNodeContextMenu.tsx",
            lineNumber: 55,
            columnNumber: 7
        }, this)
    }, void 0, false, {
        fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/ICampaignTabRootNodeContextMenu.tsx",
        lineNumber: 54,
        columnNumber: 5
    }, this);
}
_s(IRootNodeContextMenu, "eH/ogczdJLvNpHN6nGXAD7ure28=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$tabStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTabStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$authStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAuthStore"]
    ];
});
_c = IRootNodeContextMenu;
var _c;
__turbopack_refresh__.register(_c, "IRootNodeContextMenu");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCampaignTab.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// "use client";
// import { TreeNodeProps } from "@/components/shared/layout/SidebarPresenter";
// import { ContextMenuForCampaignForCampaignTab } from "./ContextMenuForCampaignForCampaignTab";
// import { FileText } from "lucide-react";
// import { useTabStore } from "@/store/tabStore";
// import { useCallback } from "react";
// import { ContextMenu, ContextMenuTrigger } from "@/components/ui/context-menu";
// import { FolderContextMenu } from "./FolderContextMenuForTreeNode";
// import Image from "next/image";
// import clsx from "clsx";
// import { useTreeMenuStore } from "@/store/storeForSsideMenuCampaignTab";
// import { useMainStore } from "@/store/mainStore";
// export function TreeNodeForCampaignTab({
//   item,
//   level,
//   expandedNodes,
//   selectedNodeId,
//   getStatusIcon,
//   onNodeToggle,
//   onNodeSelect,
//   compact = false, // 컴팩트 모드 기본값 추가
// }: TreeNodeProps) {
//   const { skilIdsForCampaignTreeMenu, viewMode } = useTreeMenuStore(); // 통합 스토어 사용
//   const { campaigns } = useMainStore(); // Get campaigns from MainStore for real-time status
//   const {
//     simulateHeaderMenuClick,
//     setCampaignIdForUpdateFromSideMenu,
//     setCampaignIdForCopyCampaign,
//     addTab,
//   } = useTabStore();
//   // Get the most current status from the campaigns store
//   const currentCampaign = campaigns?.find((c: any) => c.campaign_id === Number(item.id));
//   const isTenantFolder = item.type === "folder" && level === 1;
//   const currentStatus = currentCampaign ?
//     (() => {
//       switch (currentCampaign.campaign_status) {
//         case 1: return "started";
//         case 2: return "pending";
//         case 3: return "stopped";
//         default: return item.status;
//       }
//     })() :
//     item.status;
//   // Update the item with the current status to ensure it's passed to the ContextMenu
//   const updatedItem = {
//     ...item,
//     status: currentStatus
//   };
//   // 캠페인 타입이더라도 실제 자식이 있으면 hasChildren을 true로 설정
//   const hasChildren = item.children && item.children.length > 0;
//   const isExpanded = expandedNodes.has(item.id);
//   const isSelected = selectedNodeId === item.id;
//   const statusIcon = item.type === "campaign" ? getStatusIcon(currentStatus) : null;
//   const handleClick = useCallback(() => {
//     onNodeSelect(item.id);
//     if (hasChildren) {
//       onNodeToggle(item.id);
//     }
//   }, [item.id, hasChildren, onNodeSelect, onNodeToggle]);
//   // 우클릭 시 노드 선택을 처리하는 함수 추가
//   const handleContextMenu = useCallback(() => {
//     onNodeSelect(item.id);
//   }, [item.id, onNodeSelect]);
//   const handleDoubleClick = useCallback(() => {
//     if (item.type !== "campaign") return;
//     simulateHeaderMenuClick(2);
//     setCampaignIdForUpdateFromSideMenu(item.id);
//   }, [item, simulateHeaderMenuClick, setCampaignIdForUpdateFromSideMenu]);
//   const handleEdit = useCallback(() => {
//     console.log("Edit clicked:", { id: item.id, label: item.label, type: item.type });
//   }, [item.id, item.label, item.type]);
//   const handleMonitor = useCallback(() => {
//     console.log("Monitor clicked:", { id: item.id, label: item.label, type: item.type });
//   }, [item.id, item.label, item.type]);
//   const onHandleCampaignCopy = useCallback(() => {
//     console.log("Copy clicked:", { id: item.id, label: item.label, type: item.type });
//     setCampaignIdForUpdateFromSideMenu(item.id);
//     setCampaignIdForCopyCampaign(item.id);
//     addTab({
//       id: 130,
//       uniqueKey: "130",
//       title: "캠페인 복사",
//       icon: "",
//       href: "",
//       content: null,
//     });
//   }, [item, setCampaignIdForUpdateFromSideMenu, setCampaignIdForCopyCampaign, addTab]);
//   // 뷰 모드가 'tenant'이고 item.type이 'campaign'인 경우에 숨김 처리는 삭제
//   // 모든 노드 타입이 항상 표시되도록 함
//   if (item.visible === false) {
//     return null;
//   }
//   // 아이콘 크기 조정 (컴팩트 모드일 경우 더 작게)
//   const iconSize = compact ? 10 : 14;
//   const expandIconSize = compact ? 10 : 12;
//   // 노드 아이콘 가져오기
//   const getNodeIcon = () => {
//     if (item.type === "folder") {
//       return level === 0 ? (
//         <Image
//           src="/tree-menu/organization.png"
//           alt="조직"
//           width={14}
//           height={12}
//           className="flex-shrink-0"
//         />
//       ) : (
//         <Image
//           src="/tree-menu/folder.png"
//           alt="그룹"
//           width={14}
//           height={12}
//           className="flex-shrink-0"
//         />
//       );
//     }
//     if (item.type === "campaign") {
//       return statusIcon ? (
//         <Image src={statusIcon} alt="status" width={12} height={12} className="flex-shrink-0" />
//       ) : (
//         <FileText className={`${compact ? 'h-4 w-4' : 'h-4 w-4'} text-gray-400 flex-shrink-0`} />
//       );
//     }
//     return <FileText className={`${compact ? 'h-4 w-4' : 'h-4 w-4'} text-gray-400 flex-shrink-0`} />;
//   };
//   // 노드 클래스 - 컴팩트 모드일 경우 더 작은 패딩 적용
//   const nodeStyle = clsx(
//     "flex items-center hover:bg-[#FFFAEE] cursor-pointer transition-colors duration-150",
//     {
//       "bg-[#FFFAEE]": isSelected,
//       "px-2 py-0.5": !compact, // 기본 패딩
//       "px-1 py-0.5": compact,  // 컴팩트 모드 패딩
//     },
//     item.type === "folder" ? "folder-node" : "campaign-node",
//     "tree-item"
//   );
//   // 텍스트 스타일 - 컴팩트 모드일 경우 더 작은 폰트
//   const textStyle = clsx(
//     "text-555 truncate",
//     {
//       "font-medium": isSelected,
//       "text-lg": !compact,
//       "text-sm": compact
//     },
//   );
//   // 공통된 노드 내용 컴포넌트
//   // nodeContent 부분을 다음과 같이 수정합니다
//   const nodeContent = (
//     <div className="flex items-center w-full gap-1">
//       {/* 폴더 타입이고 자식이 있는 경우에만 확장 아이콘 표시 */}
//       {item.type === "folder" && hasChildren ? (
//         isExpanded ? (
//           <Image
//             src="/tree-menu/minus_for_tree.png"
//             alt="접기"
//             width={12}
//             height={12}
//             className="flex-shrink-0"
//             onClick={(e) => {
//               e.stopPropagation();
//               onNodeToggle(item.id);
//             }}
//           />
//         ) : (
//           <Image
//             src="/tree-menu/plus_icon_for_tree.png"
//             alt="펼치기"
//             width={12}
//             height={12}
//             className="flex-shrink-0"
//             onClick={(e) => {
//               e.stopPropagation();
//               onNodeToggle(item.id);
//             }}
//           />
//         )
//       ) : (
//         <span className="w-3" />
//       )}
//       {getNodeIcon()}
//       <span className={textStyle}>
//         {(isTenantFolder || item.type === "campaign") && ` [${item.id}]`}
//         {item.label}
//       </span>
//     </div>
//   );
//   // 레벨 인덴트 계산 - 컴팩트 모드일 경우 더 작은 인덴트
//   const indentSize = compact ? 12 : 16;
//   const paddingLeft = `${level * indentSize + (compact ? 6 : 8)}px`;
//   return (
//     <div className="select-none">
//       {/* todo: item.label 이 nexus 인 경우 ContextMenuForNexus */}
//       {item.type === "folder" ? (
//         <ContextMenu>
//           <ContextMenuTrigger>
//             <div
//               className={nodeStyle}
//               onClick={handleClick}
//               onContextMenu={handleContextMenu}
//               style={{ paddingLeft }}
//             >
//               {nodeContent}
//             </div>
//           </ContextMenuTrigger>
//           <FolderContextMenu item={item} />
//         </ContextMenu>
//       ) : (
//         <ContextMenuForCampaignForCampaignTab
//           item={updatedItem}
//           onEdit={handleEdit}
//           onMonitor={handleMonitor}
//           onHandleCampaignCopy={onHandleCampaignCopy}
//           // tofix 0409 tenantId 가 전달 안되고 있어 
//           tenantIdForCampaignTab={item.tenantId}
//         >
//           <div
//             className={nodeStyle}
//             onClick={handleClick}
//             onDoubleClick={handleDoubleClick}
//             onContextMenu={handleContextMenu}
//             style={{ paddingLeft }}
//           >
//             {nodeContent}
//           </div>
//         </ContextMenuForCampaignForCampaignTab>
//       )}
//       {hasChildren && isExpanded && (
//         <div className="space-y-0.5">
//           {item.children?.map((child: typeof item) => (
//             <TreeNodeForCampaignTab
//               key={child.id}
//               item={child}
//               level={level + 1}
//               expandedNodes={expandedNodes}
//               selectedNodeId={selectedNodeId}
//               getStatusIcon={getStatusIcon}
//               onNodeToggle={onNodeToggle}
//               onNodeSelect={onNodeSelect}
//               compact={compact}
//             />
//           ))}
//         </div>
//       )}
//     </div>
//   );
// }
__turbopack_esm__({
    "TreeNodeForCampaignTab": (()=>TreeNodeForCampaignTab)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$ContextMenuForCampaignForCampaignTab$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/components/treeMenus/ContextMenuForCampaignForCampaignTab.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$tabStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/tabStore.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/ui/context-menu.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$FolderContextMenuForTreeNode$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/components/treeMenus/FolderContextMenuForTreeNode.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/image.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/clsx/dist/clsx.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSsideMenuCampaignTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/storeForSsideMenuCampaignTab.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$mainStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/mainStore.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$ContextMenus$2f$ICampaignTabRootNodeContextMenu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/components/treeMenus/ContextMenus/ICampaignTabRootNodeContextMenu.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$file$2d$text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__FileText$3e$__ = __turbopack_import__("[project]/node_modules/lucide-react/dist/esm/icons/file-text.js [app-client] (ecmascript) <export default as FileText>");
;
var _s = __turbopack_refresh__.signature();
"use client";
;
;
;
;
;
;
;
;
;
;
;
function TreeNodeForCampaignTab({ item, level, expandedNodes, selectedNodeId, getStatusIcon, onNodeToggle, onNodeSelect, compact = false }) {
    _s();
    const { skilIdsForCampaignTreeMenu, viewMode } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSsideMenuCampaignTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTreeMenuStore"])(); // 통합 스토어 사용
    const { campaigns } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$mainStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMainStore"])(); // Get campaigns from MainStore for real-time status
    const { simulateHeaderMenuClick, setCampaignIdForUpdateFromSideMenu, setCampaignIdForCopyCampaign, addTab, addTabCurrentOnly } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$tabStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTabStore"])();
    // Get the most current status from the campaigns store
    const currentCampaign = campaigns?.find((c)=>c.campaign_id === Number(item.id));
    const isTenantFolder = item.type === "folder" && level === 1;
    const isRootNode = item.label.toLowerCase() === "nexus"; // Check if this is the root node
    const currentStatus = currentCampaign ? (()=>{
        switch(currentCampaign.campaign_status){
            case 1:
                return "started";
            case 2:
                return "pending";
            case 3:
                return "stopped";
            default:
                return item.status;
        }
    })() : item.status;
    // Update the item with the current status to ensure it's passed to the ContextMenu
    const updatedItem = {
        ...item,
        status: currentStatus
    };
    // 캠페인 타입이더라도 실제 자식이 있으면 hasChildren을 true로 설정
    const hasChildren = item.children && item.children.length > 0;
    const isExpanded = expandedNodes.has(item.id);
    const isSelected = selectedNodeId === item.id;
    const statusIcon = item.type === "campaign" ? getStatusIcon(currentStatus) : null;
    const handleClick = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "TreeNodeForCampaignTab.useCallback[handleClick]": ()=>{
            onNodeSelect(item.id);
            if (hasChildren) {
                onNodeToggle(item.id);
            }
        }
    }["TreeNodeForCampaignTab.useCallback[handleClick]"], [
        item.id,
        hasChildren,
        onNodeSelect,
        onNodeToggle
    ]);
    // 우클릭 시 노드 선택을 처리하는 함수 추가
    const handleContextMenu = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "TreeNodeForCampaignTab.useCallback[handleContextMenu]": ()=>{
            onNodeSelect(item.id);
        }
    }["TreeNodeForCampaignTab.useCallback[handleContextMenu]"], [
        item.id,
        onNodeSelect
    ]);
    const handleDoubleClick = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "TreeNodeForCampaignTab.useCallback[handleDoubleClick]": ()=>{
            if (item.type !== "campaign") return;
            // simulateHeaderMenuClick(2);
            addTabCurrentOnly({
                id: 2,
                uniqueKey: "2",
                title: `캠페인 관리 ${item.id}`,
                // icon: "",
                // href: "",
                content: null,
                params: {
                    campaignId: item.id,
                    campaignName: item.label,
                    campaignType: item.type
                }
            });
            setCampaignIdForUpdateFromSideMenu(item.id);
        }
    }["TreeNodeForCampaignTab.useCallback[handleDoubleClick]"], [
        item,
        simulateHeaderMenuClick,
        setCampaignIdForUpdateFromSideMenu
    ]);
    const handleEdit = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "TreeNodeForCampaignTab.useCallback[handleEdit]": ()=>{
            console.log("Edit clicked:", {
                id: item.id,
                label: item.label,
                type: item.type
            });
        }
    }["TreeNodeForCampaignTab.useCallback[handleEdit]"], [
        item.id,
        item.label,
        item.type
    ]);
    const handleMonitor = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "TreeNodeForCampaignTab.useCallback[handleMonitor]": ()=>{
            console.log("Monitor clicked:", {
                id: item.id,
                label: item.label,
                type: item.type
            });
        }
    }["TreeNodeForCampaignTab.useCallback[handleMonitor]"], [
        item.id,
        item.label,
        item.type
    ]);
    const onHandleCampaignCopy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "TreeNodeForCampaignTab.useCallback[onHandleCampaignCopy]": ()=>{
            console.log("Copy clicked:", {
                id: item.id,
                label: item.label,
                type: item.type
            });
            setCampaignIdForUpdateFromSideMenu(item.id);
            setCampaignIdForCopyCampaign(item.id);
            addTab({
                id: 130,
                uniqueKey: "130",
                title: "캠페인 복사",
                icon: "",
                href: "",
                content: null
            });
        }
    }["TreeNodeForCampaignTab.useCallback[onHandleCampaignCopy]"], [
        item,
        setCampaignIdForUpdateFromSideMenu,
        setCampaignIdForCopyCampaign,
        addTab
    ]);
    if (item.visible === false) {
        return null;
    }
    // 아이콘 크기 조정 (컴팩트 모드일 경우 더 작게)
    const iconSize = compact ? 10 : 14;
    const expandIconSize = compact ? 10 : 12;
    // 노드 아이콘 가져오기
    const getNodeIcon = ()=>{
        if (item.type === "folder") {
            return level === 0 ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                src: "/tree-menu/organization.png",
                alt: "조직",
                width: 14,
                height: 12,
                className: "flex-shrink-0"
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCampaignTab.tsx",
                lineNumber: 404,
                columnNumber: 9
            }, this) : /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                src: "/tree-menu/folder.png",
                alt: "그룹",
                width: 14,
                height: 12,
                className: "flex-shrink-0"
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCampaignTab.tsx",
                lineNumber: 412,
                columnNumber: 9
            }, this);
        }
        if (item.type === "campaign") {
            return statusIcon ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                src: statusIcon,
                alt: "status",
                width: 12,
                height: 12,
                className: "flex-shrink-0"
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCampaignTab.tsx",
                lineNumber: 424,
                columnNumber: 9
            }, this) : /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$file$2d$text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__FileText$3e$__["FileText"], {
                className: `${compact ? 'h-4 w-4' : 'h-4 w-4'} text-gray-400 flex-shrink-0`
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCampaignTab.tsx",
                lineNumber: 426,
                columnNumber: 9
            }, this);
        }
        return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$file$2d$text$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__FileText$3e$__["FileText"], {
            className: `${compact ? 'h-4 w-4' : 'h-4 w-4'} text-gray-400 flex-shrink-0`
        }, void 0, false, {
            fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCampaignTab.tsx",
            lineNumber: 430,
            columnNumber: 12
        }, this);
    };
    // 노드 클래스 - 컴팩트 모드일 경우 더 작은 패딩 적용
    const nodeStyle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])("flex items-center hover:bg-[#FFFAEE] cursor-pointer transition-colors duration-150", {
        "bg-[#FFFAEE]": isSelected,
        "px-2 py-0.5": !compact,
        "px-1 py-0.5": compact
    }, item.type === "folder" ? "folder-node" : "campaign-node", "tree-item");
    // 텍스트 스타일 - 컴팩트 모드일 경우 더 작은 폰트
    const textStyle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$clsx$2f$dist$2f$clsx$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])("text-555 truncate", {
        "font-medium": isSelected,
        "text-lg": !compact,
        "text-sm": compact
    });
    // 공통된 노드 내용 컴포넌트
    const nodeContent = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
        className: "flex items-center w-full gap-1",
        children: [
            item.type === "folder" && hasChildren ? isExpanded ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                src: "/tree-menu/minus_for_tree.png",
                alt: "접기",
                width: 12,
                height: 12,
                className: "flex-shrink-0",
                onClick: (e)=>{
                    e.stopPropagation();
                    onNodeToggle(item.id);
                }
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCampaignTab.tsx",
                lineNumber: 461,
                columnNumber: 11
            }, this) : /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                src: "/tree-menu/plus_icon_for_tree.png",
                alt: "펼치기",
                width: 12,
                height: 12,
                className: "flex-shrink-0",
                onClick: (e)=>{
                    e.stopPropagation();
                    onNodeToggle(item.id);
                }
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCampaignTab.tsx",
                lineNumber: 473,
                columnNumber: 11
            }, this) : /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                className: "w-3"
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCampaignTab.tsx",
                lineNumber: 486,
                columnNumber: 9
            }, this),
            getNodeIcon(),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                className: textStyle,
                children: [
                    (isTenantFolder || item.type === "campaign") && ` [${item.id}]`,
                    item.label
                ]
            }, void 0, true, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCampaignTab.tsx",
                lineNumber: 489,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true, {
        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCampaignTab.tsx",
        lineNumber: 457,
        columnNumber: 5
    }, this);
    // 레벨 인덴트 계산 - 컴팩트 모드일 경우 더 작은 인덴트
    const indentSize = compact ? 12 : 16;
    const paddingLeft = `${level * indentSize + (compact ? 6 : 8)}px`;
    // 각 노드 유형에 맞는 컨텍스트 메뉴 선택
    const renderContextMenu = ()=>{
        if (isRootNode) {
            return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenu"], {
                children: [
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuTrigger"], {
                        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                            className: nodeStyle,
                            onClick: handleClick,
                            onContextMenu: handleContextMenu,
                            style: {
                                paddingLeft
                            },
                            children: nodeContent
                        }, void 0, false, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCampaignTab.tsx",
                            lineNumber: 506,
                            columnNumber: 13
                        }, this)
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCampaignTab.tsx",
                        lineNumber: 505,
                        columnNumber: 11
                    }, this),
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$ContextMenus$2f$ICampaignTabRootNodeContextMenu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["IRootNodeContextMenu"], {
                        item: updatedItem
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCampaignTab.tsx",
                        lineNumber: 515,
                        columnNumber: 11
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCampaignTab.tsx",
                lineNumber: 504,
                columnNumber: 9
            }, this);
        } else if (item.type === "folder") {
            return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenu"], {
                children: [
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuTrigger"], {
                        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                            className: nodeStyle,
                            onClick: handleClick,
                            onContextMenu: handleContextMenu,
                            style: {
                                paddingLeft
                            },
                            children: nodeContent
                        }, void 0, false, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCampaignTab.tsx",
                            lineNumber: 522,
                            columnNumber: 13
                        }, this)
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCampaignTab.tsx",
                        lineNumber: 521,
                        columnNumber: 11
                    }, this),
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$FolderContextMenuForTreeNode$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FolderContextMenu"], {
                        item: updatedItem
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCampaignTab.tsx",
                        lineNumber: 531,
                        columnNumber: 11
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCampaignTab.tsx",
                lineNumber: 520,
                columnNumber: 9
            }, this);
        } else {
            return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$ContextMenuForCampaignForCampaignTab$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuForCampaignForCampaignTab"], {
                item: updatedItem,
                onEdit: handleEdit,
                onMonitor: handleMonitor,
                onHandleCampaignCopy: onHandleCampaignCopy,
                tenantIdForCampaignTab: item.tenantId,
                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                    className: nodeStyle,
                    onClick: handleClick,
                    onDoubleClick: handleDoubleClick,
                    onContextMenu: handleContextMenu,
                    style: {
                        paddingLeft
                    },
                    children: nodeContent
                }, void 0, false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCampaignTab.tsx",
                    lineNumber: 543,
                    columnNumber: 11
                }, this)
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCampaignTab.tsx",
                lineNumber: 536,
                columnNumber: 9
            }, this);
        }
    };
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
        className: "select-none",
        children: [
            renderContextMenu(),
            hasChildren && isExpanded && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "space-y-0.5",
                children: item.children?.map((child)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(TreeNodeForCampaignTab, {
                        item: child,
                        level: level + 1,
                        expandedNodes: expandedNodes,
                        selectedNodeId: selectedNodeId,
                        getStatusIcon: getStatusIcon,
                        onNodeToggle: onNodeToggle,
                        onNodeSelect: onNodeSelect,
                        compact: compact
                    }, child.id, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCampaignTab.tsx",
                        lineNumber: 564,
                        columnNumber: 13
                    }, this))
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCampaignTab.tsx",
                lineNumber: 562,
                columnNumber: 9
            }, this)
        ]
    }, void 0, true, {
        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCampaignTab.tsx",
        lineNumber: 558,
        columnNumber: 5
    }, this);
}
_s(TreeNodeForCampaignTab, "lHZTrg23QWLtcVqP3nmlHpzBdOM=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSsideMenuCampaignTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTreeMenuStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$mainStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMainStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$tabStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTabStore"]
    ];
});
_c = TreeNodeForCampaignTab;
var _c;
__turbopack_refresh__.register(_c, "TreeNodeForCampaignTab");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/components/treeMenus/TreeMenusForCampaigns.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// "use client";
// import { useEffect, useRef, useState, useMemo } from "react";
// import { create } from "zustand";
// import { TreeItem } from "@/features/campaignManager/types/typeForSidebar2";
// import { TreeNodeForCampaignTab } from "./TreeNodeForCampaignTab";
// import { useApiForGetTreeMenuDataForSideMenu } from "@/features/auth/hooks/useApiForGetTreeMenuDataForSideMenu";
// import { getStatusIcon } from "@/components/shared/layout/utils/utils";
// import { useSidebarWidthStore } from "@/store/useSidebarWidthStore";
// import { useAuthStore } from "@/store";
// import { useTreeMenuStore, ViewMode } from "@/store/storeForSsideMenuCampaignTab";
// // 트리 노드 선택/확장 상태 관리
// interface TreeState {
//   selectedNodeId: string | undefined;
//   expandedNodes: Set<string>;
//   previousExpandedState: Set<string>; // 이전 확장 상태 저장
//   setSelectedNodeId: (nodeId: string) => void;
//   toggleNode: (nodeId: string) => void;
//   expandNodes: (nodes: Set<string>) => void;
//   savePreviousState: () => void; // 현재 확장 상태를 저장
//   restorePreviousState: () => void; // 이전 확장 상태 복원
// }
// const useTreeStore = create<TreeState>((set, get) => ({
//   selectedNodeId: undefined,
//   expandedNodes: new Set<string>(),
//   previousExpandedState: new Set<string>(),
//   setSelectedNodeId: (nodeId) => set({ selectedNodeId: nodeId }),
//   toggleNode: (nodeId) =>
//     set((state) => {
//       console.log(`노드 토글: ${nodeId}`);
//       const newExpanded = new Set(state.expandedNodes);
//       if (newExpanded.has(nodeId)) {
//         newExpanded.delete(nodeId);
//       } else {
//         newExpanded.add(nodeId);
//       }
//       console.log(`확장된 노드 수: ${newExpanded.size}`);
//       return { expandedNodes: newExpanded };
//     }),
//   expandNodes: (nodes) => set({ expandedNodes: nodes }),
//   savePreviousState: () => set((state) => ({
//     previousExpandedState: new Set(state.expandedNodes)
//   })),
//   restorePreviousState: () => set((state) => ({
//     expandedNodes: new Set(state.previousExpandedState)
//   }))
// }));
// export function TreeMenusForCampaigns() {
//   // UI 강제 업데이트용 상태
//   const [forceUpdate, setForceUpdate] = useState(0);
//   const [lastViewMode, setLastViewMode] = useState<ViewMode | null>(null);
//   // 인증 스토어에서 테넌트 ID 가져오기
//   const { tenant_id } = useAuthStore();
//   // 트리 데이터 API 호출
//   const { data: treeData, isLoading, error } = useApiForGetTreeMenuDataForSideMenu();
//   // 트리 노드 선택/확장 상태 관리
//   const { 
//     selectedNodeId, 
//     expandedNodes, 
//     setSelectedNodeId, 
//     toggleNode, 
//     expandNodes,
//     savePreviousState,
//     restorePreviousState 
//   } = useTreeStore();
//   // 원본 아이템을 useMemo로 감싸서 의존성 배열 변경 방지
//   const originalItems = useMemo(() => {
//     return treeData?.[0]?.items || [];
//   }, [treeData]);
//   // expandNodes 함수와 원본 아이템을 전역으로 사용할 수 있도록 저장
//   useEffect(() => {
//     // @ts-expect-error - 전역 객체에 함수 추가 (window 타입에 정의되지 않은 속성)
//     window.treeExpandNodes = expandNodes;
//     // @ts-expect-error - 전역 객체에 원본 아이템 추가 (window 타입에 정의되지 않은 속성)
//     window.originalTreeItems = originalItems;
//     // @ts-expect-error - 전역 객체에 함수 추가 (window 타입에 정의되지 않은 속성)
//     window.treeSavePreviousState = savePreviousState;
//     // @ts-expect-error - 전역 객체에 함수 추가 (window 타입에 정의되지 않은 속성)
//     window.treeRestorePreviousState = restorePreviousState;
//   }, [expandNodes, originalItems, savePreviousState, restorePreviousState]);
//   // 통합 스토어에서 정렬 및 필터링 상태 가져오기
//   const {
//     campaignSort,
//     skilIdsForCampaignTreeMenu,
//     filterMode,
//     viewMode,
//     selectedNodeType
//   } = useTreeMenuStore();
//   // 사이드바 너비 설정
//   const setTabWidth = useSidebarWidthStore?.((state) => state.setTabWidth);
//   // 너비 측정용 ref
//   const containerRef = useRef<HTMLDivElement>(null);
//   const widthTimeoutRef = useRef<NodeJS.Timeout | null>(null);
//   // 선택된 스킬 ID 배열 변환
//   const selectedSkillIds = Array.isArray(skilIdsForCampaignTreeMenu)
//     ? skilIdsForCampaignTreeMenu.map(id => Number(id))
//     : [];
//   // 필터링 로직
//   function filterTreeItems(items: TreeItem[]): TreeItem[] {
//     // 필터 모드가 'all'이면 필터링 없이 모든 항목 반환
//     if (filterMode === "all") {
//       return items;
//     }
//     // 스킬 기반 필터링 (filterMode가 'skill' 또는 'filter'인 경우)
//     const filteredItems = items.reduce((acc: TreeItem[], node: TreeItem) => {
//       if (node.type === "campaign") {
//         const campaignSkillIds = Array.isArray(node.children)
//           ? node.children
//             .filter(child => child.type === "skill")
//             .map(child => Number(child.skillId))
//           : [];
//         const hasIntersection = selectedSkillIds.some(id => campaignSkillIds.includes(id));
//         if (hasIntersection) {
//           acc.push(node);
//         }
//       } else if (node.type === "folder") {
//         const filteredChildren = node.children ? filterTreeItems(node.children) : [];
//         if (node.id === "nexus" || filteredChildren.length > 0) {
//           acc.push({ ...node, children: filteredChildren });
//         }
//       }
//       return acc;
//     }, []);
//     return filteredItems;
//   }
//   // 수정된 트리 아이템 정렬 함수
//   function sortTreeItems(items: TreeItem[]): TreeItem[] {
//     // 정렬 파라미터 가져오기
//     const { type: sortType, direction } = campaignSort;
//     const sortFactor = direction === 'asc' ? 1 : -1;
//     const nodeType = selectedNodeType; // 'all', 'tenant', 'campaign'
//     return items.map(item => {
//       // NEXUS 루트 노드 처리
//       if (item.id === "nexus" && item.children) {
//         // 테넌트 폴더와 기타 아이템 분리
//         const tenantFolders = item.children.filter(child => child.type === "folder");
//         const otherItems = item.children.filter(child => child.type !== "folder");
//         // 테넌트 폴더 정렬 - 노드 타입이 'all' 또는 'tenant'인 경우에만 
//         let sortedTenantFolders = [...tenantFolders];
//         if (nodeType === 'all' || nodeType === 'tenant') {
//           // 테넌트 정렬 로직 적용
//           if (sortType === "name") {
//             sortedTenantFolders = sortedTenantFolders.sort((a, b) =>
//               sortFactor * a.label.localeCompare(b.label, 'ko')
//             );
//           } else if (sortType === "id") {
//             sortedTenantFolders = sortedTenantFolders.sort((a, b) => {
//               const aId = parseInt(a.id, 10) || 0;
//               const bId = parseInt(b.id, 10) || 0;
//               return sortFactor * (aId - bId);
//             });
//           }
//         }
//         // 테넌트 폴더의 자식들 처리
//         const processedTenantFolders = sortedTenantFolders.map(tenant => {
//           if (tenant.children) {
//             // 캠페인과 기타 자식 분리
//             const campaignChildren = tenant.children.filter(child => child.type === "campaign");
//             const otherChildren = tenant.children.filter(child => child.type !== "campaign");
//             // 캠페인 정렬 - 노드 타입이 'all' 또는 'campaign'인 경우에만
//             let sortedCampaigns = [...campaignChildren];
//             if (nodeType === 'all' || nodeType === 'campaign') {
//               // 캠페인 정렬 로직 적용
//               if (sortType === "name") {
//                 sortedCampaigns = sortedCampaigns.sort((a, b) =>
//                   sortFactor * a.label.localeCompare(b.label, 'ko')
//                 );
//               } else if (sortType === "id") {
//                 sortedCampaigns = sortedCampaigns.sort((a, b) => {
//                   const aId = parseInt(a.id, 10) || 0;
//                   const bId = parseInt(b.id, 10) || 0;
//                   return sortFactor * (aId - bId);
//                 });
//               }
//             }
//             // 기타 자식 정렬 (재귀적으로)
//             const sortedOtherChildren = sortTreeItems(otherChildren);
//             return {
//               ...tenant,
//               children: [...sortedCampaigns, ...sortedOtherChildren]
//             };
//           }
//           return tenant;
//         });
//         return {
//           ...item,
//           children: [...processedTenantFolders, ...otherItems]
//         };
//       }
//       // 일반 폴더 아이템 처리
//       else if (item.type === "folder" && item.children) {
//         // 폴더 내의 캠페인 항목 정렬
//         const campaignChildren = item.children.filter(child => child.type === "campaign");
//         const otherChildren = item.children.filter(child => child.type !== "campaign");
//         // 캠페인 정렬 - 노드 타입이 'all' 또는 'campaign'인 경우에만
//         let sortedCampaigns = [...campaignChildren];
//         if (nodeType === 'all' || nodeType === 'campaign') {
//           // 캠페인 정렬 로직 적용
//           if (sortType === "name") {
//             sortedCampaigns = sortedCampaigns.sort((a, b) =>
//               sortFactor * a.label.localeCompare(b.label, 'ko')
//             );
//           } else if (sortType === "id") {
//             sortedCampaigns = sortedCampaigns.sort((a, b) => {
//               const aId = parseInt(a.id, 10) || 0;
//               const bId = parseInt(b.id, 10) || 0;
//               return sortFactor * (aId - bId);
//             });
//           }
//         }
//         // 기타 자식 정렬
//         const sortedOtherChildren = sortTreeItems(otherChildren);
//         return {
//           ...item,
//           children: [...sortedCampaigns, ...sortedOtherChildren]
//         };
//       }
//       // 기타 타입은 그대로 반환
//       return item;
//     });
//   }
//   // 정렬 상태가 변경될 때마다 UI 업데이트 강제
//   useEffect(() => {
//     console.log("정렬 상태 변경 감지:", {
//       type: campaignSort.type,
//       direction: campaignSort.direction,
//       nodeType: selectedNodeType
//     });
//     setForceUpdate(prev => prev + 1);
//   }, [campaignSort.type, campaignSort.direction, selectedNodeType]);
//   // 트리 너비 측정 함수
//   const measureTreeWidth = () => {
//     if (!containerRef.current || !setTabWidth) return;
//     // 이전 타이머 정리
//     if (widthTimeoutRef.current) {
//       clearTimeout(widthTimeoutRef.current);
//     }
//     // DOM 업데이트 후 측정하도록 지연
//     widthTimeoutRef.current = setTimeout(() => {
//       if (!containerRef.current) return;
//       // 캠페인 노드의 최대 너비 측정
//       let campaignMaxWidth = 0;
//       const campaignNodes = containerRef.current.querySelectorAll('.campaign-node');
//       if (campaignNodes.length > 0) {
//         campaignNodes.forEach((node) => {
//           const nodeWidth = (node as HTMLElement).scrollWidth;
//           campaignMaxWidth = Math.max(campaignMaxWidth, nodeWidth);
//         });
//       }
//       // 폴더 노드의 최대 너비 측정
//       let folderMaxWidth = 0;
//       const folderNodes = containerRef.current.querySelectorAll('.folder-node');
//       if (folderNodes.length > 0) {
//         folderNodes.forEach((node) => {
//           const nodeWidth = (node as HTMLElement).scrollWidth;
//           folderMaxWidth = Math.max(folderMaxWidth, nodeWidth);
//         });
//       }
//       // 전체 트리 아이템의 최대 너비
//       let treeMaxWidth = 0;
//       const treeItems = containerRef.current.querySelectorAll('.tree-item');
//       if (treeItems.length > 0) {
//         treeItems.forEach((item) => {
//           const itemWidth = (item as HTMLElement).scrollWidth;
//           treeMaxWidth = Math.max(treeMaxWidth, itemWidth);
//         });
//       }
//       // 측정된 너비 중 가장 큰 값 사용
//       let maxContentWidth = Math.max(campaignMaxWidth, folderMaxWidth, treeMaxWidth);
//       // 최소값 설정
//       maxContentWidth = Math.max(maxContentWidth, 200);
//       // 여백 추가 (항상 캠페인 여백 사용)
//       const idealWidth = maxContentWidth + 25;
//       // 캠페인 탭 너비 설정
//       //setTabWidth("campaign", idealWidth);
//     }, 300);
//   };
//   // 필터링/정렬 적용
//   const filteredItems = filterTreeItems(originalItems);
//   const sortedItems = sortTreeItems(filteredItems);
//   // 데이터나 필터, 정렬 변경 시 너비 재측정
//   useEffect(() => {
//     if (!isLoading && !error && sortedItems.length > 0) {
//       const timer = setTimeout(() => {
//         measureTreeWidth();
//       }, 500);
//       return () => clearTimeout(timer);
//     }
//   }, [
//     isLoading,
//     error,
//     sortedItems.length,
//     campaignSort.type,
//     campaignSort.direction,
//     filterMode,
//     selectedSkillIds.length,
//     viewMode,
//     selectedNodeType,
//     forceUpdate,
//     measureTreeWidth
//   ]);
//   // 컴포넌트 언마운트 시 타이머 정리
//   useEffect(() => {
//     return () => {
//       if (widthTimeoutRef.current) {
//         clearTimeout(widthTimeoutRef.current);
//       }
//     };
//   }, []);
//   // 뷰 모드 변경 감지
//   useEffect(() => {
//     // 뷰 모드가 변경될 때마다 현재 확장 상태를 저장
//     if (lastViewMode !== null && lastViewMode !== viewMode) {
//       // 테넌트 모드에서 캠페인 모드로 전환하는 경우, 테넌트 모드의 상태를 저장
//       if (lastViewMode === 'tenant' && viewMode === 'campaign') {
//         savePreviousState();
//         console.log('테넌트 뷰 상태 저장됨', expandedNodes.size);
//       }
//     }
//     setLastViewMode(viewMode);
//   }, [viewMode, lastViewMode, expandedNodes, savePreviousState]);
//   // 노드 확장 헬퍼 함수들 - 전역 함수로 등록
//   useEffect(() => {
//     if (!isLoading && !error && treeData && treeData.length > 0) {
//       const items = originalItems;
//       // NEXUS와 테넌트 노드까지만 확장하는 함수
//       const expandTenantsOnly = () => {
//         // 이전에 테넌트 뷰에서 사용자가 직접 확장/축소한 상태가 있는지 확인
//         const hasCustomTenantState = useTreeStore.getState().previousExpandedState.size > 0;
//         // 사용자가 직접 조작한 테넌트 뷰 상태가 있으면 복원
//         if (hasCustomTenantState && viewMode === 'tenant') {
//           restorePreviousState();
//           console.log('테넌트 뷰의 사용자 정의 상태 복원됨', useTreeStore.getState().expandedNodes.size);
//           return;
//         }
//         // 그렇지 않으면 기본 테넌트 확장 상태 생성
//         const newExpanded = new Set<string>();
//         const expandUpToLevel = (nodes: TreeItem[], currentLevel: number, maxLevel: number) => {
//           for (const node of nodes) {
//             if (currentLevel <= maxLevel) {
//               newExpanded.add(node.id);
//             }
//             // 중요: 테넌트 모드에서도 캠페인 노드에 확장 버튼이 보이도록 
//             // 캠페인 노드의 자식들도 처리 (스킬 등)
//             if (node.children) {
//               if (currentLevel < maxLevel || node.type === 'campaign') {
//                 expandUpToLevel(node.children, currentLevel + 1, maxLevel);
//               }
//             }
//           }
//         };
//         // 루트(0)와 테넌트(1) 레벨까지만 확장 (캠페인 자식은 예외)
//         expandUpToLevel(items, 0, 1);
//         expandNodes(newExpanded);
//         console.log("테넌트만 확장: 노드 수", newExpanded.size);
//       };
//       // 모든 노드 확장 함수
//       const expandAllNodes = () => {
//         const newExpanded = new Set<string>();
//         const expandAll = (nodes: TreeItem[]) => {
//           for (const node of nodes) {
//             newExpanded.add(node.id);
//             if (node.children) {
//               expandAll(node.children);
//             }
//           }
//         };
//         expandAll(items);
//         expandNodes(newExpanded);
//         console.log("모든 노드 확장: 노드 수", newExpanded.size);
//       };
//       // 초기 확장 상태 설정
//       if (selectedNodeType === 'tenant') {
//         expandTenantsOnly();
//       } else {
//         expandAllNodes();
//       }
//       // 함수를 전역 객체에 등록
//       // @ts-expect-error - 전역 객체에 함수 추가 (window 타입에 정의되지 않은 속성)
//       window.expandTenantsOnly = expandTenantsOnly;
//       // @ts-expect-error - 전역 객체에 함수 추가 (window 타입에 정의되지 않은 속성)
//       window.expandAllNodes = expandAllNodes;
//     }
//   }, [isLoading, error, treeData, expandNodes, originalItems, selectedNodeType, viewMode, restorePreviousState]);
//   // 로딩 상태
//   if (isLoading) {
//     return <div className="p-2 flex-1 min-h-[calc(100%-148px)] text-sm">Loading...</div>;
//   }
//   // 에러 상태
//   if (error) {
//     return <div className="p-2 text-red-600 flex-1 min-h-[calc(100%-148px)] text-sm">{(error as Error).message}</div>;
//   }
//   // 트리 렌더링
//   return (
//     <div className="flex-1 overflow-auto tree-node text-sm" ref={containerRef}>
//       {sortedItems.map((item: TreeItem) => (
//         <TreeNodeForCampaignTab
//           key={`${item.id}-${forceUpdate}`}
//           item={item}
//           level={0}
//           expandedNodes={expandedNodes}
//           selectedNodeId={selectedNodeId}
//           getStatusIcon={getStatusIcon}
//           onNodeToggle={toggleNode}
//           onNodeSelect={setSelectedNodeId}
//           compact={true}
//         />
//       ))}
//     </div>
//   );
// }
__turbopack_esm__({
    "TreeMenusForCampaigns": (()=>TreeMenusForCampaigns)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$TreeNodeForCampaignTab$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCampaignTab.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$auth$2f$hooks$2f$useApiForGetTreeMenuDataForSideMenu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/auth/hooks/useApiForGetTreeMenuDataForSideMenu.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$utils$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/shared/layout/utils/utils.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$useSidebarWidthStore$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/useSidebarWidthStore.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$index$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/src/store/index.ts [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSsideMenuCampaignTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/storeForSsideMenuCampaignTab.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$authStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/authStore.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$zustand$2f$esm$2f$react$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/zustand/esm/react.mjs [app-client] (ecmascript)");
;
var _s = __turbopack_refresh__.signature();
"use client";
;
;
;
;
;
;
;
;
const useTreeStore = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$zustand$2f$esm$2f$react$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["create"])((set, get)=>({
        selectedNodeId: undefined,
        expandedNodes: new Set(),
        previousExpandedState: new Set(),
        setSelectedNodeId: (nodeId)=>set({
                selectedNodeId: nodeId
            }),
        toggleNode: (nodeId)=>set((state)=>{
                console.log(`노드 토글: ${nodeId}`);
                const newExpanded = new Set(state.expandedNodes);
                if (newExpanded.has(nodeId)) {
                    newExpanded.delete(nodeId);
                } else {
                    newExpanded.add(nodeId);
                }
                console.log(`확장된 노드 수: ${newExpanded.size}`);
                return {
                    expandedNodes: newExpanded
                };
            }),
        expandNodes: (nodes)=>set({
                expandedNodes: nodes
            }),
        savePreviousState: ()=>set((state)=>({
                    previousExpandedState: new Set(state.expandedNodes)
                })),
        restorePreviousState: ()=>set((state)=>({
                    expandedNodes: new Set(state.previousExpandedState)
                }))
    }));
function TreeMenusForCampaigns() {
    _s();
    // UI 강제 업데이트용 상태
    const [forceUpdate, setForceUpdate] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(0);
    const [lastViewMode, setLastViewMode] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(null);
    // 인증 스토어에서 테넌트 ID 가져오기
    const { tenant_id } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$authStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAuthStore"])();
    // 트리 데이터 API 호출
    const { data: treeData, isLoading, error } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$auth$2f$hooks$2f$useApiForGetTreeMenuDataForSideMenu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForGetTreeMenuDataForSideMenu"])();
    console.log("트리 데이터 at 캠페인탭:", treeData);
    // 트리 노드 선택/확장 상태 관리
    const { selectedNodeId, expandedNodes, setSelectedNodeId, toggleNode, expandNodes, savePreviousState, restorePreviousState } = useTreeStore();
    // 원본 아이템을 useMemo로 감싸서 의존성 배열 변경 방지
    const originalItems = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "TreeMenusForCampaigns.useMemo[originalItems]": ()=>{
            return treeData?.[0]?.items || [];
        }
    }["TreeMenusForCampaigns.useMemo[originalItems]"], [
        treeData
    ]);
    // expandNodes 함수와 원본 아이템을 전역으로 사용할 수 있도록 저장
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "TreeMenusForCampaigns.useEffect": ()=>{
            // @ts-expect-error - 전역 객체에 함수 추가 (window 타입에 정의되지 않은 속성)
            window.treeExpandNodes = expandNodes;
            // @ts-expect-error - 전역 객체에 원본 아이템 추가 (window 타입에 정의되지 않은 속성)
            window.originalTreeItems = originalItems;
            // @ts-expect-error - 전역 객체에 함수 추가 (window 타입에 정의되지 않은 속성)
            window.treeSavePreviousState = savePreviousState;
            // @ts-expect-error - 전역 객체에 함수 추가 (window 타입에 정의되지 않은 속성)
            window.treeRestorePreviousState = restorePreviousState;
        }
    }["TreeMenusForCampaigns.useEffect"], [
        expandNodes,
        originalItems,
        savePreviousState,
        restorePreviousState
    ]);
    // 통합 스토어에서 정렬 및 필터링 상태 가져오기
    const { campaignSort, skilIdsForCampaignTreeMenu, filterMode, viewMode, selectedNodeType } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSsideMenuCampaignTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTreeMenuStore"])();
    // 사이드바 너비 설정
    const setTabWidth = __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$useSidebarWidthStore$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useSidebarWidthStore"]?.((state)=>state.setTabWidth);
    // 너비 측정용 ref
    const containerRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    const widthTimeoutRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    // 선택된 스킬 ID 배열 변환
    const selectedSkillIds = Array.isArray(skilIdsForCampaignTreeMenu) ? skilIdsForCampaignTreeMenu.map((id)=>Number(id)) : [];
    // 필터링 로직
    function filterTreeItems(items) {
        // 필터 모드가 'all'이면 필터링 없이 모든 항목 반환
        if (filterMode === "all") {
            return items;
        }
        // 스킬 기반 필터링 (filterMode가 'skill' 또는 'filter'인 경우)
        const filteredItems = items.reduce((acc, node)=>{
            if (node.type === "campaign") {
                const campaignSkillIds = Array.isArray(node.children) ? node.children.filter((child)=>child.type === "skill").map((child)=>Number(child.skillId)) : [];
                const hasIntersection = selectedSkillIds.some((id)=>campaignSkillIds.includes(id));
                if (hasIntersection) {
                    acc.push(node);
                }
            } else if (node.type === "folder") {
                const filteredChildren = node.children ? filterTreeItems(node.children) : [];
                if (node.id === "nexus" || filteredChildren.length > 0) {
                    acc.push({
                        ...node,
                        children: filteredChildren
                    });
                }
            }
            return acc;
        }, []);
        return filteredItems;
    }
    // 수정된 트리 아이템 정렬 함수
    function sortTreeItems(items) {
        // 정렬 파라미터 가져오기
        const { type: sortType, direction } = campaignSort;
        const sortFactor = direction === 'asc' ? 1 : -1;
        const nodeType = selectedNodeType; // 'all', 'tenant', 'campaign'
        return items.map((item)=>{
            // NEXUS 루트 노드 처리
            if (item.id === "nexus" && item.children) {
                // 테넌트 폴더와 기타 아이템 분리
                const tenantFolders = item.children.filter((child)=>child.type === "folder");
                const otherItems = item.children.filter((child)=>child.type !== "folder");
                // 테넌트 폴더 정렬 - 노드 타입이 'all' 또는 'tenant'인 경우에만 
                let sortedTenantFolders = [
                    ...tenantFolders
                ];
                if (nodeType === 'all' || nodeType === 'tenant') {
                    // 테넌트 정렬 로직 적용
                    if (sortType === "name") {
                        sortedTenantFolders = sortedTenantFolders.sort((a, b)=>sortFactor * a.label.localeCompare(b.label, 'ko'));
                    } else if (sortType === "id") {
                        sortedTenantFolders = sortedTenantFolders.sort((a, b)=>{
                            const aId = parseInt(a.id, 10) || 0;
                            const bId = parseInt(b.id, 10) || 0;
                            return sortFactor * (aId - bId);
                        });
                    }
                }
                // 테넌트 폴더의 자식들 처리
                const processedTenantFolders = sortedTenantFolders.map((tenant)=>{
                    if (tenant.children) {
                        // 캠페인과 기타 자식 분리
                        const campaignChildren = tenant.children.filter((child)=>child.type === "campaign");
                        const otherChildren = tenant.children.filter((child)=>child.type !== "campaign");
                        // 캠페인 정렬 - 노드 타입이 'all' 또는 'campaign'인 경우에만
                        let sortedCampaigns = [
                            ...campaignChildren
                        ];
                        if (nodeType === 'all' || nodeType === 'campaign') {
                            // 캠페인 정렬 로직 적용
                            if (sortType === "name") {
                                sortedCampaigns = sortedCampaigns.sort((a, b)=>sortFactor * a.label.localeCompare(b.label, 'ko'));
                            } else if (sortType === "id") {
                                sortedCampaigns = sortedCampaigns.sort((a, b)=>{
                                    const aId = parseInt(a.id, 10) || 0;
                                    const bId = parseInt(b.id, 10) || 0;
                                    return sortFactor * (aId - bId);
                                });
                            }
                        }
                        // 기타 자식 정렬 (재귀적으로)
                        const sortedOtherChildren = sortTreeItems(otherChildren);
                        return {
                            ...tenant,
                            children: [
                                ...sortedCampaigns,
                                ...sortedOtherChildren
                            ]
                        };
                    }
                    return tenant;
                });
                return {
                    ...item,
                    children: [
                        ...processedTenantFolders,
                        ...otherItems
                    ]
                };
            } else if (item.type === "folder" && item.children) {
                // 폴더 내의 캠페인 항목 정렬
                const campaignChildren = item.children.filter((child)=>child.type === "campaign");
                const otherChildren = item.children.filter((child)=>child.type !== "campaign");
                // 캠페인 정렬 - 노드 타입이 'all' 또는 'campaign'인 경우에만
                let sortedCampaigns = [
                    ...campaignChildren
                ];
                if (nodeType === 'all' || nodeType === 'campaign') {
                    // 캠페인 정렬 로직 적용
                    if (sortType === "name") {
                        sortedCampaigns = sortedCampaigns.sort((a, b)=>sortFactor * a.label.localeCompare(b.label, 'ko'));
                    } else if (sortType === "id") {
                        sortedCampaigns = sortedCampaigns.sort((a, b)=>{
                            const aId = parseInt(a.id, 10) || 0;
                            const bId = parseInt(b.id, 10) || 0;
                            return sortFactor * (aId - bId);
                        });
                    }
                }
                // 기타 자식 정렬
                const sortedOtherChildren = sortTreeItems(otherChildren);
                return {
                    ...item,
                    children: [
                        ...sortedCampaigns,
                        ...sortedOtherChildren
                    ]
                };
            }
            // 기타 타입은 그대로 반환
            return item;
        });
    }
    // 정렬 상태가 변경될 때마다 UI 업데이트 강제
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "TreeMenusForCampaigns.useEffect": ()=>{
            console.log("정렬 상태 변경 감지:", {
                type: campaignSort.type,
                direction: campaignSort.direction,
                nodeType: selectedNodeType
            });
            setForceUpdate({
                "TreeMenusForCampaigns.useEffect": (prev)=>prev + 1
            }["TreeMenusForCampaigns.useEffect"]);
        }
    }["TreeMenusForCampaigns.useEffect"], [
        campaignSort.type,
        campaignSort.direction,
        selectedNodeType
    ]);
    // 트리 너비 측정 함수
    const measureTreeWidth = ()=>{
        if (!containerRef.current || !setTabWidth) return;
        // 이전 타이머 정리
        if (widthTimeoutRef.current) {
            clearTimeout(widthTimeoutRef.current);
        }
        // DOM 업데이트 후 측정하도록 지연
        widthTimeoutRef.current = setTimeout(()=>{
            if (!containerRef.current) return;
            // 캠페인 노드의 최대 너비 측정
            let campaignMaxWidth = 0;
            const campaignNodes = containerRef.current.querySelectorAll('.campaign-node');
            if (campaignNodes.length > 0) {
                campaignNodes.forEach((node)=>{
                    const nodeWidth = node.scrollWidth;
                    campaignMaxWidth = Math.max(campaignMaxWidth, nodeWidth);
                });
            }
            // 폴더 노드의 최대 너비 측정
            let folderMaxWidth = 0;
            const folderNodes = containerRef.current.querySelectorAll('.folder-node');
            if (folderNodes.length > 0) {
                folderNodes.forEach((node)=>{
                    const nodeWidth = node.scrollWidth;
                    folderMaxWidth = Math.max(folderMaxWidth, nodeWidth);
                });
            }
            // 전체 트리 아이템의 최대 너비
            let treeMaxWidth = 0;
            const treeItems = containerRef.current.querySelectorAll('.tree-item');
            if (treeItems.length > 0) {
                treeItems.forEach((item)=>{
                    const itemWidth = item.scrollWidth;
                    treeMaxWidth = Math.max(treeMaxWidth, itemWidth);
                });
            }
            // 측정된 너비 중 가장 큰 값 사용
            let maxContentWidth = Math.max(campaignMaxWidth, folderMaxWidth, treeMaxWidth);
            // 최소값 설정
            maxContentWidth = Math.max(maxContentWidth, 200);
            // 여백 추가 (항상 캠페인 여백 사용)
            const idealWidth = maxContentWidth + 25;
        // 캠페인 탭 너비 설정
        //setTabWidth("campaign", idealWidth);
        }, 300);
    };
    // 필터링/정렬 적용
    const filteredItems = filterTreeItems(originalItems);
    const sortedItems = sortTreeItems(filteredItems);
    // 데이터나 필터, 정렬 변경 시 너비 재측정
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "TreeMenusForCampaigns.useEffect": ()=>{
            if (!isLoading && !error && sortedItems.length > 0) {
                const timer = setTimeout({
                    "TreeMenusForCampaigns.useEffect.timer": ()=>{
                        measureTreeWidth();
                    }
                }["TreeMenusForCampaigns.useEffect.timer"], 500);
                return ({
                    "TreeMenusForCampaigns.useEffect": ()=>clearTimeout(timer)
                })["TreeMenusForCampaigns.useEffect"];
            }
        }
    }["TreeMenusForCampaigns.useEffect"], [
        isLoading,
        error,
        sortedItems.length,
        campaignSort.type,
        campaignSort.direction,
        filterMode,
        selectedSkillIds.length,
        viewMode,
        selectedNodeType,
        forceUpdate,
        measureTreeWidth
    ]);
    // 컴포넌트 언마운트 시 타이머 정리
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "TreeMenusForCampaigns.useEffect": ()=>{
            return ({
                "TreeMenusForCampaigns.useEffect": ()=>{
                    if (widthTimeoutRef.current) {
                        clearTimeout(widthTimeoutRef.current);
                    }
                }
            })["TreeMenusForCampaigns.useEffect"];
        }
    }["TreeMenusForCampaigns.useEffect"], []);
    // 뷰 모드 변경 감지
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "TreeMenusForCampaigns.useEffect": ()=>{
            // 뷰 모드가 변경될 때마다 현재 확장 상태를 저장
            if (lastViewMode !== null && lastViewMode !== viewMode) {
                // 테넌트 모드에서 캠페인 모드로 전환하는 경우, 테넌트 모드의 상태를 저장
                if (lastViewMode === 'tenant' && viewMode === 'campaign') {
                    savePreviousState();
                    console.log('테넌트 뷰 상태 저장됨', expandedNodes.size);
                }
            }
            setLastViewMode(viewMode);
        }
    }["TreeMenusForCampaigns.useEffect"], [
        viewMode,
        lastViewMode,
        expandedNodes,
        savePreviousState
    ]);
    // 노드 확장 헬퍼 함수들 - 전역 함수로 등록
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "TreeMenusForCampaigns.useEffect": ()=>{
            if (!isLoading && !error && treeData && treeData.length > 0) {
                const items = originalItems;
                // NEXUS와 테넌트 노드까지만 확장하는 함수
                // NEXUS와 테넌트 노드까지만 확장하는 함수
                const expandTenantsOnly = {
                    "TreeMenusForCampaigns.useEffect.expandTenantsOnly": ()=>{
                        // 이전에 테넌트 뷰에서 사용자가 직접 확장/축소한 상태가 있는지 확인
                        const hasCustomTenantState = useTreeStore.getState().previousExpandedState.size > 0;
                        // 사용자가 직접 조작한 테넌트 뷰 상태가 있으면 복원
                        if (hasCustomTenantState && viewMode === 'tenant') {
                            restorePreviousState();
                            console.log('테넌트 뷰의 사용자 정의 상태 복원됨', useTreeStore.getState().expandedNodes.size);
                            return;
                        }
                        // 그렇지 않으면 기본 테넌트 확장 상태 생성 - 루트 노드만 확장
                        const newExpanded = new Set();
                        // 루트 노드(NEXUS)만 확장
                        const rootNode = items.find({
                            "TreeMenusForCampaigns.useEffect.expandTenantsOnly.rootNode": (item)=>item.id.toLowerCase() === "nexus"
                        }["TreeMenusForCampaigns.useEffect.expandTenantsOnly.rootNode"]);
                        if (rootNode) {
                            newExpanded.add(rootNode.id);
                        // 루트 노드의 직계 자식(테넌트)은 접힌 상태로 시작
                        // 테넌트 노드의 ID를 추가하지 않음 (접힌 상태로 유지)
                        }
                        expandNodes(newExpanded);
                        console.log("테넌트 뷰: 루트만 확장, 테넌트 폴더는 접힘 상태", newExpanded.size);
                    }
                }["TreeMenusForCampaigns.useEffect.expandTenantsOnly"];
                // 모든 노드 확장 함수
                // const expandAllNodes = () => {
                //   // 루트 노드만 확장하는 초기 상태
                //   const newExpanded = new Set<string>();
                //   // 루트 노드(NEXUS)만 확장하고 나머지는 접힌 상태로 시작
                //   const rootNode = items.find(item => item.id.toLowerCase() === "nexus");
                //   if (rootNode) {
                //     newExpanded.add(rootNode.id);
                //     // 루트 노드의 직계 자식(테넌트)은 접힌 상태로 시작
                //     // 테넌트 노드의 ID를 추가하지 않음 (접힌 상태로 유지)
                //   }
                //   expandNodes(newExpanded);
                //   console.log("캠페인 뷰: 루트만 확장, 필요시 수동으로 확장 가능", newExpanded.size);
                // };
                const expandAllNodes = {
                    "TreeMenusForCampaigns.useEffect.expandAllNodes": ()=>{
                        const newExpanded = new Set();
                        const expandAll = {
                            "TreeMenusForCampaigns.useEffect.expandAllNodes.expandAll": (nodes)=>{
                                for (const node of nodes){
                                    // 자식 노드가 있는 경우에만 expanded 상태에 추가
                                    if (node.children && node.children.length > 0) {
                                        newExpanded.add(node.id);
                                        expandAll(node.children);
                                    }
                                }
                            }
                        }["TreeMenusForCampaigns.useEffect.expandAllNodes.expandAll"];
                        expandAll(items);
                        expandNodes(newExpanded);
                        console.log("캠페인 뷰: 자식이 있는 노드만 확장됨", newExpanded.size);
                    }
                }["TreeMenusForCampaigns.useEffect.expandAllNodes"];
                // 초기 확장 상태 설정
                if (selectedNodeType === 'tenant') {
                    expandTenantsOnly();
                } else {
                    expandAllNodes();
                }
                // 함수를 전역 객체에 등록
                // @ts-expect-error - 전역 객체에 함수 추가 (window 타입에 정의되지 않은 속성)
                window.expandTenantsOnly = expandTenantsOnly;
                // @ts-expect-error - 전역 객체에 함수 추가 (window 타입에 정의되지 않은 속성)
                window.expandAllNodes = expandAllNodes;
            }
        }
    }["TreeMenusForCampaigns.useEffect"], [
        isLoading,
        error,
        treeData,
        expandNodes,
        originalItems,
        selectedNodeType,
        viewMode,
        restorePreviousState
    ]);
    // 로딩 상태
    if (isLoading) {
        return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
            className: "p-2 flex-1 min-h-[calc(100%-148px)] text-sm",
            children: "Loading..."
        }, void 0, false, {
            fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeMenusForCampaigns.tsx",
            lineNumber: 934,
            columnNumber: 12
        }, this);
    }
    // 에러 상태
    if (error) {
        return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
            className: "p-2 text-red-600 flex-1 min-h-[calc(100%-148px)] text-sm",
            children: error.message
        }, void 0, false, {
            fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeMenusForCampaigns.tsx",
            lineNumber: 939,
            columnNumber: 12
        }, this);
    }
    // 트리 렌더링
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
        className: "flex-1 overflow-auto tree-node text-sm",
        ref: containerRef,
        children: sortedItems.map((item)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$TreeNodeForCampaignTab$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TreeNodeForCampaignTab"], {
                item: item,
                level: 0,
                expandedNodes: expandedNodes,
                selectedNodeId: selectedNodeId,
                getStatusIcon: __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$utils$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getStatusIcon"],
                onNodeToggle: toggleNode,
                onNodeSelect: setSelectedNodeId,
                compact: true
            }, `${item.id}-${forceUpdate}`, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeMenusForCampaigns.tsx",
                lineNumber: 946,
                columnNumber: 9
            }, this))
    }, void 0, false, {
        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeMenusForCampaigns.tsx",
        lineNumber: 944,
        columnNumber: 5
    }, this);
}
_s(TreeMenusForCampaigns, "q27ibET4ZS88eHChExTX7Pf2zgY=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$authStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAuthStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$auth$2f$hooks$2f$useApiForGetTreeMenuDataForSideMenu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForGetTreeMenuDataForSideMenu"],
        useTreeStore,
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSsideMenuCampaignTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTreeMenuStore"]
    ];
});
_c = TreeMenusForCampaigns;
var _c;
__turbopack_refresh__.register(_c, "TreeMenusForCampaigns");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/api/apiForSidebarCounselorTab.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// C:\Users\terec\fe_pdsw\src\features\campaignManager\api\apiForSidebarCounselorTab.ts
__turbopack_esm__({
    "apiToFetchCounselorListForSideBar": (()=>apiToFetchCounselorListForSideBar)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/lib/axios.ts [app-client] (ecmascript)");
;
async function apiToFetchCounselorListForSideBar({ tenant_id, roleId }) {
    const response = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosRedisInstance"].get(// `/counselor/list?tenantId=${tenant_id}&roleId=${roleId}`
    `/counselor/list?tenantId=${tenant_id}`);
    console.log("response.data at 상담사 api 함수 ! : ", response.data);
    return response.data;
}
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/hooks/useApiForGetDataForSidebarCounselorTab.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/features/campaignManager/hooks/useApiForGetDataForSidebarCounselorTab.tsx
__turbopack_esm__({
    "useApiForSidebarCounselor": (()=>useApiForSidebarCounselor)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$apiForSidebarCounselorTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/api/apiForSidebarCounselorTab.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useQuery$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/useQuery.js [app-client] (ecmascript)");
var _s = __turbopack_refresh__.signature();
;
;
function useApiForSidebarCounselor(tenant_id, role_id) {
    _s();
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useQuery$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQuery"])({
        queryKey: [
            'counselorList',
            tenant_id,
            role_id
        ],
        queryFn: {
            "useApiForSidebarCounselor.useQuery": ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$apiForSidebarCounselorTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["apiToFetchCounselorListForSideBar"])({
                    tenant_id,
                    roleId: role_id
                })
        }["useApiForSidebarCounselor.useQuery"],
        staleTime: 5 * 60 * 1000
    });
}
_s(useApiForSidebarCounselor, "4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useQuery$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQuery"]
    ];
});
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForTennantForCounselorTreeMenu.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// "use client";
// import {
//   ContextMenu,
//   ContextMenuContent,
//   ContextMenuItem,
//   ContextMenuTrigger,
//   ContextMenuSub,
//   ContextMenuSubTrigger,
//   ContextMenuSubContent,
// } from "@/components/ui/context-menu";
// import { Users, History, Check } from "lucide-react";
// import { useCounselorFilterStore } from "@/store/storeForSideMenuCounselorTab";
// import Image from "next/image";
// interface IContextMenuForTennantForCounselorTreeMenuProps {
//   children: React.ReactNode;
//   onViewHistory?: () => void;
// }
// export function IContextMenuForTennantForCounselorTreeMenu({
//   children,
//   onViewHistory,
// }: IContextMenuForTennantForCounselorTreeMenuProps) {
//   const { selectedBlendKind, setSelectedBlendKind, resetFilter } = useCounselorFilterStore();
//   return (
//     <ContextMenu>
//       <ContextMenuTrigger>{children}</ContextMenuTrigger>
//       <ContextMenuContent className="w-[150px]">
//         <ContextMenuSub>
//           <ContextMenuSubTrigger>
//             {/* <Users className="mr-2 h-4 w-4" /> */}
//             상담사 보기
//           </ContextMenuSubTrigger>
//           <ContextMenuSubContent className="w-[150px]">
//             <ContextMenuItem onClick={() => {
//               resetFilter();
//               onViewHistory?.();
//             }}>
//               <History className="mr-2 h-4 w-4" />
//               <span className="flex-1">전체 보기</span>
//               {selectedBlendKind === null && <Check className="h-4 w-4 text-green-600" />}
//             </ContextMenuItem>
//             <ContextMenuItem onClick={() => setSelectedBlendKind(1)}>
//               <Image src="/tree-menu/inbound_counselor.png" alt="인바운드" width={15} height={12} className="mr-2"/>
//               <span className="flex-1">인바운드</span>
//               {selectedBlendKind === 1 && <Check className="h-4 w-4 text-green-600" />}
//             </ContextMenuItem>
//             <ContextMenuItem onClick={() => setSelectedBlendKind(2)}>
//               <Image src="/tree-menu/outbound_counselor.png" alt="아웃바운드" width={15} height={12} className="mr-2" />
//               <span className="flex-1">아웃바운드</span>
//               {selectedBlendKind === 2 && <Check className="h-4 w-4 text-green-600" />}
//             </ContextMenuItem>
//             {/* <ContextMenuItem onClick={() => setSelectedBlendKind(3)}>
//               <Image src="/tree-menu/inbound_outbound_mix.png" alt="블렌드" width={15} height={12} className="mr-2"/>
//               <span className="flex-1">블렌드</span>
//               {selectedBlendKind === 3 && <Check className="h-4 w-4 text-green-600" />}
//             </ContextMenuItem> */}
//           </ContextMenuSubContent>
//         </ContextMenuSub>
//       </ContextMenuContent>
//     </ContextMenu>
//   );
// }
__turbopack_esm__({
    "IContextMenuForTennantForCounselorTreeMenu": (()=>IContextMenuForTennantForCounselorTreeMenu)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/ui/context-menu.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCounselorTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/storeForSideMenuCounselorTab.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/image.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$history$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__History$3e$__ = __turbopack_import__("[project]/node_modules/lucide-react/dist/esm/icons/history.js [app-client] (ecmascript) <export default as History>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$check$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Check$3e$__ = __turbopack_import__("[project]/node_modules/lucide-react/dist/esm/icons/check.js [app-client] (ecmascript) <export default as Check>");
;
var _s = __turbopack_refresh__.signature();
"use client";
;
;
;
;
function IContextMenuForTennantForCounselorTreeMenu({ children, onViewHistory }) {
    _s();
    const { selectedBlendKind, setSelectedBlendKind, resetFilter } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCounselorTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCounselorFilterStore"])();
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenu"], {
        children: [
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuTrigger"], {
                children: children
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForTennantForCounselorTreeMenu.tsx",
                lineNumber: 95,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuContent"], {
                className: "w-[150px]",
                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuSub"], {
                    children: [
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuSubTrigger"], {
                            children: "상담사 보기"
                        }, void 0, false, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForTennantForCounselorTreeMenu.tsx",
                            lineNumber: 98,
                            columnNumber: 11
                        }, this),
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuSubContent"], {
                            className: "w-[150px]",
                            children: [
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuItem"], {
                                    onClick: ()=>{
                                        resetFilter();
                                        onViewHistory?.();
                                    },
                                    children: [
                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$history$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__History$3e$__["History"], {
                                            className: "mr-2 h-4 w-4"
                                        }, void 0, false, {
                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForTennantForCounselorTreeMenu.tsx",
                                            lineNumber: 107,
                                            columnNumber: 15
                                        }, this),
                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                            className: "flex-1",
                                            children: "전체 보기"
                                        }, void 0, false, {
                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForTennantForCounselorTreeMenu.tsx",
                                            lineNumber: 108,
                                            columnNumber: 15
                                        }, this),
                                        selectedBlendKind === null && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$check$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Check$3e$__["Check"], {
                                            className: "h-4 w-4 text-green-600"
                                        }, void 0, false, {
                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForTennantForCounselorTreeMenu.tsx",
                                            lineNumber: 109,
                                            columnNumber: 46
                                        }, this)
                                    ]
                                }, void 0, true, {
                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForTennantForCounselorTreeMenu.tsx",
                                    lineNumber: 103,
                                    columnNumber: 13
                                }, this),
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuItem"], {
                                    onClick: ()=>setSelectedBlendKind(1),
                                    children: [
                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                                            src: "/tree-menu/inbound_counselor.png",
                                            alt: "인바운드",
                                            width: 15,
                                            height: 12,
                                            className: "mr-2"
                                        }, void 0, false, {
                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForTennantForCounselorTreeMenu.tsx",
                                            lineNumber: 112,
                                            columnNumber: 15
                                        }, this),
                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                            className: "flex-1",
                                            children: "인바운드"
                                        }, void 0, false, {
                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForTennantForCounselorTreeMenu.tsx",
                                            lineNumber: 113,
                                            columnNumber: 15
                                        }, this),
                                        selectedBlendKind === 1 && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$check$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Check$3e$__["Check"], {
                                            className: "h-4 w-4 text-green-600"
                                        }, void 0, false, {
                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForTennantForCounselorTreeMenu.tsx",
                                            lineNumber: 114,
                                            columnNumber: 43
                                        }, this)
                                    ]
                                }, void 0, true, {
                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForTennantForCounselorTreeMenu.tsx",
                                    lineNumber: 111,
                                    columnNumber: 13
                                }, this),
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuItem"], {
                                    onClick: ()=>setSelectedBlendKind(2),
                                    children: [
                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                                            src: "/tree-menu/outbound_counselor.png",
                                            alt: "아웃바운드",
                                            width: 15,
                                            height: 12,
                                            className: "mr-2"
                                        }, void 0, false, {
                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForTennantForCounselorTreeMenu.tsx",
                                            lineNumber: 117,
                                            columnNumber: 15
                                        }, this),
                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                            className: "flex-1",
                                            children: "아웃바운드"
                                        }, void 0, false, {
                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForTennantForCounselorTreeMenu.tsx",
                                            lineNumber: 118,
                                            columnNumber: 15
                                        }, this),
                                        selectedBlendKind === 2 && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$check$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Check$3e$__["Check"], {
                                            className: "h-4 w-4 text-green-600"
                                        }, void 0, false, {
                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForTennantForCounselorTreeMenu.tsx",
                                            lineNumber: 119,
                                            columnNumber: 43
                                        }, this)
                                    ]
                                }, void 0, true, {
                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForTennantForCounselorTreeMenu.tsx",
                                    lineNumber: 116,
                                    columnNumber: 13
                                }, this)
                            ]
                        }, void 0, true, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForTennantForCounselorTreeMenu.tsx",
                            lineNumber: 102,
                            columnNumber: 11
                        }, this)
                    ]
                }, void 0, true, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForTennantForCounselorTreeMenu.tsx",
                    lineNumber: 97,
                    columnNumber: 9
                }, this)
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForTennantForCounselorTreeMenu.tsx",
                lineNumber: 96,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true, {
        fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForTennantForCounselorTreeMenu.tsx",
        lineNumber: 94,
        columnNumber: 5
    }, this);
}
_s(IContextMenuForTennantForCounselorTreeMenu, "UCsS923/udL2FkRikUWItuyV9xM=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCounselorTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCounselorFilterStore"]
    ];
});
_c = IContextMenuForTennantForCounselorTreeMenu;
var _c;
__turbopack_refresh__.register(_c, "IContextMenuForTennantForCounselorTreeMenu");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/api/apiForCounselorSkil.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/features/campaignManager/api/apiForCounselorSkill.ts
__turbopack_esm__({
    "apiForAddCounselorsForSpecificSkill": (()=>apiForAddCounselorsForSpecificSkill),
    "apiForDeleteCounselorsForSpecificSkill": (()=>apiForDeleteCounselorsForSpecificSkill),
    "apiForGetRelatedInfoForAssignSkilToCounselor": (()=>apiForGetRelatedInfoForAssignSkilToCounselor),
    "assignSkillsToCounselor": (()=>assignSkillsToCounselor),
    "getAssignableSkillsForCounselor": (()=>getAssignableSkillsForCounselor),
    "getAssignedSkillsForCounselor": (()=>getAssignedSkillsForCounselor)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/lib/axios.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$utils$2f$CustomAlertService$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/shared/layout/utils/CustomAlertService.tsx [app-client] (ecmascript)");
;
;
async function assignSkillsToCounselor(counselorIds, selectedSkills) {
    console.log("✅ 상담사 스킬 할당 API 호출!");
    console.log("🎯 상담사 목록:", counselorIds);
    console.log("🔗 할당할 스킬 목록:", selectedSkills);
    const requests = selectedSkills.map((skillId)=>__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].put(`skills/${skillId}/agent-list`, {
            request_data: {
                agent_id: counselorIds
            }
        }).then((response)=>response.data));
    return Promise.all(requests);
}
const getAssignableSkillsForCounselor = async (tenantId)=>{
    // console.log("📌 상담사 할당 가능 스킬 목록 조회 시작:", tenantId);
    // console.log("🔗 테넌트 ID 타입:", typeof tenantId);
    // console.log("🔗 테넌트 ID for 캠페인 탭 헤더 :", tenantId);
    const skillRequestData = {
        filter: {
            skill_id: {
                start: 1,
                end: 9999
            },
            // tenant_id: [tenantId],
            tenant_id: tenantId !== 0 ? [
                tenantId
            ] : undefined
        },
        // sort: {
        //   skill_id: 0,
        //   tenant_id: 0,
        // },
        page: {
            index: 1,
            items: 10
        },
        sort: {
            skill_id: 1,
            tenant_id: 10
        }
    };
    try {
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].post("collections/skill", skillRequestData);
        // console.log("✅ 상담사 할당 가능 스킬 목록 조회 성공 ???????????????????????????? ", data);
        return data;
    // if (data.result_code === 0 && data.result_msg === "Success") {
    //   console.log("✅ 상담사 할당 가능 스킬 목록 조회 성공:", data);
    //   return data;
    // } else {
    //   throw new Error(`API Error: ${data.result_msg}`);
    // }
    } catch (error) {
        const typedError = error;
        throw new Error(typedError.response?.data?.result_msg || "상담사 스킬 목록을 가져오는 데 실패했습니다.");
    }
};
const getAssignedSkillsForCounselor = async (counselorId)=>{
    // console.log("📌 상담사 스킬 데이터 조회 시작:", counselorId);
    try {
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].post("/collections/agent-skill", {
            filter: {
                agent_id: [
                    counselorId
                ]
            },
            sort: {},
            page: {
                index: 1,
                items: 10
            }
        });
        // console.log("✅ 상담사가 보유한 스킬 목록 조회 성공:", data);
        return data;
    } catch (error) {
        const typedError = error;
        console.error("❌ 상담사 스킬 목록 조회 실패:", error);
        throw new Error(typedError.response?.data?.result_msg || "상담사의 스킬 목록을 가져오는 데 실패했습니다.");
    }
};
const apiForGetRelatedInfoForAssignSkilToCounselor = async (counselorId, tenantId)=>{
    // console.log("📌 상담사 스킬 데이터 조회 시작:", counselorId, tenantId);
    try {
        const [assignedSkills, assignableSkills] = await Promise.all([
            getAssignedSkillsForCounselor(counselorId),
            getAssignableSkillsForCounselor(tenantId)
        ]);
        // console.log("✅ 상담사가 보유한 스킬 목록:", assignedSkills);
        // console.log("✅ 상담사에게 할당 가능한 스킬 목록:", assignableSkills);
        return {
            assignedSkills,
            assignableSkills
        };
    } catch (error) {
        console.error("❌ 상담사 스킬 조회 실패:", error);
        throw new Error("스킬 데이터를 가져오는 중 오류가 발생했습니다.");
    }
};
const apiForDeleteCounselorsForSpecificSkill = async (skillId, counselorIds)=>{
    console.log("📌 스킬에서 상담사 해제 시작");
    console.log("🎯 대상 스킬 ID:", skillId);
    console.log("🔗 해제할 상담사 목록:", counselorIds);
    try {
        // API 엔드포인트가 정확하지 않을 수 있으므로 실제 API에 맞게 수정 필요
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].delete(`skills/${skillId}/agent-list`, {
            data: {
                request_data: {
                    agent_id: counselorIds
                }
            }
        });
        console.log("✅ 스킬을 가진 상담사 목록에서 특정 상담사들 해제 성공:", data);
        return data;
    } catch (error) {
        console.error("❌ 스킬에서 상담사 해제 실패:", error);
        const typedError = error;
        throw new Error(typedError.response?.data?.result_msg || "스킬에서 상담사 해제 중 오류가 발생했습니다.");
    }
};
const apiForAddCounselorsForSpecificSkill = async (skillId, counselorIds)=>{
    console.log("📌 스킬에 상담사 추가 시작");
    console.log("🎯 대상 스킬 ID:", skillId);
    console.log("🔗 추가할 상담사 목록:", counselorIds);
    try {
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].post(`skills/${skillId}/agent-list`, {
            request_data: {
                agent_id: counselorIds
            }
        });
        console.log("✅ 스킬을 가진 상담사 목록에 특정 상담사들 추가 성공:", data);
        return data;
    } catch (error) {
        if (error.response.data.result_code === 5) {
            // 세션 만료 시 알럿 표시 후 로그인 페이지로 리다이렉트
            __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$utils$2f$CustomAlertService$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["customAlertService"].error('로그인 세션이 만료되었습니다. 다시 로그인 해주세요.', '세션 만료', ()=>{
                window.location.href = '/login';
            });
        }
        console.error("❌ 스킬에 상담사 추가 실패:", error);
        const typedError = error;
        throw new Error(typedError.response?.data?.result_msg || "스킬에 상담사 추가 중 오류가 발생했습니다.");
    }
};
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/preferences/hooks/useApiForGetRelatedInfoForAssignSkilToCounselor.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/features/campaignManager/hooks/useApiForGetRelatedInfoForAssignSkilToCounselor.ts
__turbopack_esm__({
    "useApiForGetRelatedInfoForAssignSkilToCounselor": (()=>useApiForGetRelatedInfoForAssignSkilToCounselor)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$apiForCounselorSkil$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/api/apiForCounselorSkil.ts [app-client] (ecmascript)");
var _s = __turbopack_refresh__.signature();
;
;
const useApiForGetRelatedInfoForAssignSkilToCounselor = (counselorId, tenantId)=>{
    _s();
    console.log("📌 useApiForGetRelatedInfoForAssignSkilToCounselor 실행:", counselorId, tenantId);
    // 상태 관리
    const [assignedSkills, setAssignedSkills] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(null);
    const [assignableSkills, setAssignableSkills] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(null);
    const [isLoading, setIsLoading] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(true);
    const [error, setError] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(null);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "useApiForGetRelatedInfoForAssignSkilToCounselor.useEffect": ()=>{
            const fetchData = {
                "useApiForGetRelatedInfoForAssignSkilToCounselor.useEffect.fetchData": async ()=>{
                    if (!counselorId) return;
                    setIsLoading(true);
                    setError(null);
                    try {
                        const { assignedSkills, assignableSkills } = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$apiForCounselorSkil$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["apiForGetRelatedInfoForAssignSkilToCounselor"])(counselorId, tenantId);
                        // console.log("✅ 상담사가 보유한 스킬:", assignedSkills);
                        console.log("✅ 상담사에게 할당 가능한 스킬:", assignableSkills);
                        setAssignedSkills(assignedSkills);
                        setAssignableSkills(assignableSkills);
                    } catch (err) {
                        console.error("❌ 상담사 스킬 데이터 불러오기 실패:", err);
                        setError("스킬 데이터를 불러오는 중 오류가 발생했습니다.");
                    } finally{
                        setIsLoading(false);
                    }
                }
            }["useApiForGetRelatedInfoForAssignSkilToCounselor.useEffect.fetchData"];
            fetchData();
        }
    }["useApiForGetRelatedInfoForAssignSkilToCounselor.useEffect"], [
        counselorId,
        tenantId
    ]);
    return {
        assignedSkills,
        assignableSkills,
        isLoading,
        error
    };
};
_s(useApiForGetRelatedInfoForAssignSkilToCounselor, "XjRfEmQrcOepl10jIVRWlimy7oI=");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/hooks/useApiDeleteCounselorsFromSkills.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/features/campaignManager/hooks/useApiDeleteCounselorsFromSkills.ts
__turbopack_esm__({
    "useApiDeleteCounselorsFromSkills": (()=>useApiDeleteCounselorsFromSkills)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$apiForCounselorSkil$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/api/apiForCounselorSkil.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/useMutation.js [app-client] (ecmascript)");
var _s = __turbopack_refresh__.signature();
;
;
function useApiDeleteCounselorsFromSkills(tenantId) {
    _s();
    const queryClient = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQueryClient"])();
    // 배치 처리 유틸리티 함수
    const processBatchDeletion = async ({ skillIds, counselorIds, concurrentLimit = 3 })=>{
        // 결과 추적용 객체
        const result = {
            success: true,
            successCount: 0,
            failedSkills: []
        };
        try {
            // 여러 스킬을 동시에 처리하되 concurrentLimit 만큼씩 분할 처리
            for(let i = 0; i < skillIds.length; i += concurrentLimit){
                const batch = skillIds.slice(i, i + concurrentLimit);
                // 현재 배치의 요청들을 병렬로 처리
                const promises = batch.map((skillId)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$apiForCounselorSkil$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["apiForDeleteCounselorsForSpecificSkill"])(skillId, counselorIds).then(()=>{
                        result.successCount++;
                        return true;
                    }).catch((error)=>{
                        console.error(`스킬 ID ${skillId} 해제 실패:`, error);
                        result.failedSkills.push(skillId);
                        result.success = false;
                        return false;
                    }));
                // 현재 배치의 모든 요청 완료 대기
                await Promise.all(promises);
            }
            return result;
        } catch (error) {
            console.error("배치 스킬 해제 중 오류 발생:", error);
            result.success = false;
            result.error = error instanceof Error ? error : new Error(String(error));
            return result;
        }
    };
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMutation"])({
        mutationKey: [
            'deleteCounselorsFromSkills',
            tenantId
        ],
        mutationFn: {
            "useApiDeleteCounselorsFromSkills.useMutation": async (params)=>{
                return processBatchDeletion({
                    skillIds: params.skillIds,
                    counselorIds: params.counselorIds,
                    concurrentLimit: params.concurrentLimit
                });
            }
        }["useApiDeleteCounselorsFromSkills.useMutation"],
        onSuccess: {
            "useApiDeleteCounselorsFromSkills.useMutation": ()=>{
                // 스킬 관련 쿼리 캐시 무효화
                queryClient.invalidateQueries({
                    queryKey: [
                        'counselorSkills',
                        tenantId
                    ]
                });
                // 상담사 관련 쿼리 캐시 무효화
                queryClient.invalidateQueries({
                    queryKey: [
                        'counselorList',
                        tenantId
                    ]
                });
                // 할당된 스킬 목록 쿼리 캐시 무효화
                queryClient.invalidateQueries({
                    queryKey: [
                        'assignedSkills',
                        tenantId
                    ]
                });
            }
        }["useApiDeleteCounselorsFromSkills.useMutation"]
    });
}
_s(useApiDeleteCounselorsFromSkills, "YK0wzM21ECnncaq5SECwU+/SVdQ=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQueryClient"],
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMutation"]
    ];
});
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/hooks/useApiBatchSkillAssignment.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/features/campaignManager/hooks/useApiBatchSkillAssignment.ts
__turbopack_esm__({
    "useApiBatchSkillAssignment": (()=>useApiBatchSkillAssignment)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$apiForCounselorSkil$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/api/apiForCounselorSkil.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/useMutation.js [app-client] (ecmascript)");
var _s = __turbopack_refresh__.signature();
;
;
;
function useApiBatchSkillAssignment(tenantId) {
    _s();
    const queryClient = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQueryClient"])();
    // 배치 처리 유틸리티 함수
    const processBatchSkillAssignment = async ({ skillIds, counselorIds, isUnassignment, concurrentLimit = 3 })=>{
        // 결과 추적용 객체
        const result = {
            success: true,
            successCount: 0,
            failedSkills: []
        };
        try {
            // 여러 스킬을 동시에 처리하되 concurrentLimit 만큼씩 분할 처리
            for(let i = 0; i < skillIds.length; i += concurrentLimit){
                const batch = skillIds.slice(i, i + concurrentLimit);
                // 현재 배치의 요청들을 병렬로 처리
                const promises = batch.map((skillId)=>{
                    const apiCall = isUnassignment ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$apiForCounselorSkil$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["apiForDeleteCounselorsForSpecificSkill"])(skillId, counselorIds) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$apiForCounselorSkil$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["apiForAddCounselorsForSpecificSkill"])(skillId, counselorIds);
                    return apiCall.then(()=>{
                        result.successCount++;
                        return true;
                    }).catch((error)=>{
                        console.error(`스킬 ID ${skillId} ${isUnassignment ? '해제' : '할당'} 실패:`, error);
                        result.failedSkills.push(skillId);
                        result.success = false;
                        return false;
                    });
                });
                // 현재 배치의 모든 요청 완료 대기
                await Promise.all(promises);
            }
            return result;
        } catch (error) {
            console.error(`배치 스킬 ${isUnassignment ? '해제' : '할당'} 중 오류 발생:`, error);
            result.success = false;
            result.error = error instanceof Error ? error : new Error(String(error));
            return result;
        }
    };
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMutation"])({
        mutationKey: [
            'batchSkillAssignment',
            tenantId
        ],
        mutationFn: {
            "useApiBatchSkillAssignment.useMutation": async (params)=>{
                return processBatchSkillAssignment({
                    skillIds: params.skillIds,
                    counselorIds: params.counselorIds,
                    isUnassignment: params.isUnassignment,
                    concurrentLimit: params.concurrentLimit
                });
            }
        }["useApiBatchSkillAssignment.useMutation"],
        onSuccess: {
            "useApiBatchSkillAssignment.useMutation": ()=>{
                // 스킬 관련 쿼리 캐시 무효화
                queryClient.invalidateQueries({
                    queryKey: [
                        'counselorSkills',
                        tenantId
                    ]
                });
                // 상담사 관련 쿼리 캐시 무효화
                queryClient.invalidateQueries({
                    queryKey: [
                        'counselorList',
                        tenantId
                    ]
                });
            }
        }["useApiBatchSkillAssignment.useMutation"]
    });
}
_s(useApiBatchSkillAssignment, "YK0wzM21ECnncaq5SECwU+/SVdQ=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQueryClient"],
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMutation"]
    ];
});
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForSkilAssignmentForCounselor.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "IDialogForSkilAssignmentForCounselor": (()=>IDialogForSkilAssignmentForCounselor)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/ui/table.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CustomCheckbox$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/shared/CustomCheckbox/index.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/react-toastify/dist/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$hooks$2f$useApiForGetRelatedInfoForAssignSkilToCounselor$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/preferences/hooks/useApiForGetRelatedInfoForAssignSkilToCounselor.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiDeleteCounselorsFromSkills$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/hooks/useApiDeleteCounselorsFromSkills.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiBatchSkillAssignment$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/hooks/useApiBatchSkillAssignment.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$CustomAlert$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/shared/layout/CustomAlert.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CommonButton$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/shared/CommonButton/index.tsx [app-client] (ecmascript)");
;
var _s = __turbopack_refresh__.signature();
"use client";
;
;
;
;
;
;
;
;
;
function IDialogForSkilAssignmentForCounselor({ isOpen, onClose, counselorId, counselorName, tenantId, isUnassignment = false, dialogTitle }) {
    _s();
    const [selectedSkills, setSelectedSkills] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])([]);
    const [initialSkills, setInitialSkills] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])([]);
    const [isUnassignMode, setIsUnassignMode] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const [pendingChanges, setPendingChanges] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])({
        added: [],
        removed: []
    });
    // isUnassignment prop 변경 시 모드 업데이트
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "IDialogForSkilAssignmentForCounselor.useEffect": ()=>{
            setIsUnassignMode(isUnassignment);
        }
    }["IDialogForSkilAssignmentForCounselor.useEffect"], [
        isUnassignment
    ]);
    const { assignedSkills, assignableSkills, isLoading, error } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$hooks$2f$useApiForGetRelatedInfoForAssignSkilToCounselor$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForGetRelatedInfoForAssignSkilToCounselor"])(counselorId, Number(tenantId));
    // 스킬 추가/해제 처리 훅
    const addSkillsMutation = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiBatchSkillAssignment$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiBatchSkillAssignment"])(tenantId ?? "0");
    const deleteSkillsMutation = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiDeleteCounselorsFromSkills$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiDeleteCounselorsFromSkills"])(tenantId ?? "0");
    const isProcessing = addSkillsMutation.isPending || deleteSkillsMutation.isPending;
    // 다이얼로그가 열릴 때 할당된 스킬을 초기화하고 pending 변경사항을 초기화
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "IDialogForSkilAssignmentForCounselor.useEffect": ()=>{
            if ((assignedSkills?.result_data ?? []).length > 0) {
                const assignedSkillIds = assignedSkills?.result_data.flatMap({
                    "IDialogForSkilAssignmentForCounselor.useEffect": (item)=>item.skill_id
                }["IDialogForSkilAssignmentForCounselor.useEffect"]) ?? [];
                setSelectedSkills(assignedSkillIds);
                setInitialSkills(assignedSkillIds);
                setPendingChanges({
                    added: [],
                    removed: []
                });
            } else {
                setSelectedSkills([]);
                setInitialSkills([]);
                setPendingChanges({
                    added: [],
                    removed: []
                });
            }
        }
    }["IDialogForSkilAssignmentForCounselor.useEffect"], [
        assignedSkills
    ]);
    // 스킬 선택/해제 및 pending 변경사항 추적
    const handleSkillToggle = (skillId)=>{
        setSelectedSkills((prev)=>{
            const isCurrentlySelected = prev.includes(skillId);
            // 할당 모드일 때 최대 10개 체크
            if (!isCurrentlySelected && prev.length >= 10 && !isUnassignMode) {
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].error("최대 10개의 스킬만 할당할 수 있습니다.");
                return prev;
            }
            // pending 변경사항 업데이트
            setPendingChanges((current)=>{
                if (isCurrentlySelected) {
                    // 체크 해제: 원래 있던 항목은 removed에 추가
                    return {
                        added: current.added.filter((id)=>id !== skillId),
                        removed: initialSkills.includes(skillId) ? [
                            ...current.removed,
                            skillId
                        ] : current.removed
                    };
                } else {
                    // 체크: 원래 없던 항목은 added에 추가
                    return {
                        added: !initialSkills.includes(skillId) ? [
                            ...current.added,
                            skillId
                        ] : current.added,
                        removed: current.removed.filter((id)=>id !== skillId)
                    };
                }
            });
            return isCurrentlySelected ? prev.filter((id)=>id !== skillId) : [
                ...prev,
                skillId
            ];
        });
    };
    const handleCancel = ()=>{
        onClose();
    };
    const handleConfirm = async ()=>{
        const { added, removed } = pendingChanges;
        if (added.length === 0 && removed.length === 0) {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].info("변경된 사항이 없습니다.");
            onClose();
            return;
        }
        try {
            // 추가할 스킬이 있으면 배치 처리
            if (added.length > 0) {
                const addResult = await addSkillsMutation.mutateAsync({
                    skillIds: added,
                    counselorIds: [
                        counselorId
                    ],
                    tenantId,
                    isUnassignment: false
                });
                if (addResult.success) {
                // toast.success(`${added.length}개 스킬이 할당되었습니다.`);
                } else {
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].warning(`${addResult.successCount}개 스킬만 할당되었습니다. ${addResult.failedSkills.length}개 실패.`);
                }
            }
            // 제거할 스킬이 있으면 배치 처리
            if (removed.length > 0) {
                const removeResult = await deleteSkillsMutation.mutateAsync({
                    skillIds: removed,
                    counselorIds: [
                        counselorId
                    ],
                    tenantId
                });
                if (removeResult.success) {
                // toast.success(`${removed.length}개 스킬이 해제되었습니다.`);
                } else {
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].warning(`${removeResult.successCount}개 스킬만 해제되었습니다. ${removeResult.failedSkills.length}개 실패.`);
                }
            }
            onClose();
        } catch (error) {
            console.error("스킬 할당/해제 중 오류 발생:", error);
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].error("스킬 처리 중 오류가 발생했습니다.");
        }
    };
    const getConfirmButtonText = ()=>{
        const { added, removed } = pendingChanges;
        if (isUnassignMode) {
            return `스킬 해제 (${removed.length}개)`;
        } else if (added.length > 0 && removed.length > 0) {
            return `스킬 변경 (추가: ${added.length}, 해제: ${removed.length})`;
        } else if (added.length > 0) {
            return `스킬 할당 (${added.length}개)`;
        } else if (removed.length > 0) {
            return `스킬 해제 (${removed.length}개)`;
        }
        return isUnassignMode ? "스킬 해제" : "스킬 할당";
    };
    const renderContent = ()=>{
        if (error) {
            return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "text-red-500 p-4",
                children: [
                    "Error: ",
                    error
                ]
            }, void 0, true, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForSkilAssignmentForCounselor.tsx",
                lineNumber: 188,
                columnNumber: 14
            }, this);
        }
        if (isLoading) {
            return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "p-4",
                children: "데이터를 불러오는 중..."
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForSkilAssignmentForCounselor.tsx",
                lineNumber: 192,
                columnNumber: 14
            }, this);
        }
        return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
            className: "",
            children: [
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                    className: "text-sm text-[#333] mb-4",
                    children: [
                        isUnassignMode ? "할당된 스킬을 해제할 수 있습니다." : "상담사에게 스킬을 할당할 수 있습니다.",
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("br", {}, void 0, false, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForSkilAssignmentForCounselor.tsx",
                            lineNumber: 201,
                            columnNumber: 11
                        }, this),
                        "체크 후 확인 버튼을 누르시면 선택한 작업이 적용됩니다."
                    ]
                }, void 0, true, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForSkilAssignmentForCounselor.tsx",
                    lineNumber: 197,
                    columnNumber: 9
                }, this),
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                    className: "max-h-[300px] overflow-y-auto border rounded",
                    children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Table"], {
                        children: [
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableHeader"], {
                                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableRow"], {
                                    children: [
                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableHead"], {
                                            className: "w-16 text-center bg-[#F8F8F8] border-r text-[#333]",
                                            style: {
                                                height: '30px'
                                            },
                                            children: "선택"
                                        }, void 0, false, {
                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForSkilAssignmentForCounselor.tsx",
                                            lineNumber: 209,
                                            columnNumber: 17
                                        }, this),
                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableHead"], {
                                            className: "w-16 text-center bg-[#F8F8F8] border-r text-[#333]",
                                            style: {
                                                height: '30px'
                                            },
                                            children: "아이디"
                                        }, void 0, false, {
                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForSkilAssignmentForCounselor.tsx",
                                            lineNumber: 212,
                                            columnNumber: 17
                                        }, this),
                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableHead"], {
                                            className: "text-center bg-[#F8F8F8] text-[#333]",
                                            style: {
                                                height: '30px'
                                            },
                                            children: "이름"
                                        }, void 0, false, {
                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForSkilAssignmentForCounselor.tsx",
                                            lineNumber: 215,
                                            columnNumber: 17
                                        }, this)
                                    ]
                                }, void 0, true, {
                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForSkilAssignmentForCounselor.tsx",
                                    lineNumber: 208,
                                    columnNumber: 15
                                }, this)
                            }, void 0, false, {
                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForSkilAssignmentForCounselor.tsx",
                                lineNumber: 207,
                                columnNumber: 13
                            }, this),
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableBody"], {
                                children: assignableSkills?.result_data.map((skill)=>{
                                    const isInitiallySelected = initialSkills.includes(skill.skill_id);
                                    const isCurrentlySelected = selectedSkills.includes(skill.skill_id);
                                    const hasChanged = isInitiallySelected !== isCurrentlySelected;
                                    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableRow"], {
                                        className: `custom-hover ${hasChanged ? "bg-[#FFFAEE]" : ""}`,
                                        children: [
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableCell"], {
                                                className: "text-center text-[#444]",
                                                style: {
                                                    height: '30px',
                                                    padding: 0
                                                },
                                                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CustomCheckbox$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CustomCheckbox"], {
                                                    checked: selectedSkills.includes(skill.skill_id),
                                                    onCheckedChange: ()=>handleSkillToggle(skill.skill_id),
                                                    disabled: isProcessing
                                                }, void 0, false, {
                                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForSkilAssignmentForCounselor.tsx",
                                                    lineNumber: 233,
                                                    columnNumber: 23
                                                }, this)
                                            }, void 0, false, {
                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForSkilAssignmentForCounselor.tsx",
                                                lineNumber: 232,
                                                columnNumber: 21
                                            }, this),
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableCell"], {
                                                className: "text-center text-[#444]",
                                                style: {
                                                    height: '30px',
                                                    padding: 0
                                                },
                                                children: skill.skill_id
                                            }, void 0, false, {
                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForSkilAssignmentForCounselor.tsx",
                                                lineNumber: 239,
                                                columnNumber: 21
                                            }, this),
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableCell"], {
                                                className: "text-center text-[#444]",
                                                style: {
                                                    height: '30px',
                                                    padding: 0
                                                },
                                                children: [
                                                    skill.skill_name,
                                                    hasChanged && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                                        className: "ml-2 text-xs text-blue-500",
                                                        children: isCurrentlySelected ? "(추가 예정)" : "(해제 예정)"
                                                    }, void 0, false, {
                                                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForSkilAssignmentForCounselor.tsx",
                                                        lineNumber: 245,
                                                        columnNumber: 25
                                                    }, this)
                                                ]
                                            }, void 0, true, {
                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForSkilAssignmentForCounselor.tsx",
                                                lineNumber: 242,
                                                columnNumber: 21
                                            }, this)
                                        ]
                                    }, `${skill.tenant_id}-${skill.skill_id}`, true, {
                                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForSkilAssignmentForCounselor.tsx",
                                        lineNumber: 226,
                                        columnNumber: 19
                                    }, this);
                                })
                            }, void 0, false, {
                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForSkilAssignmentForCounselor.tsx",
                                lineNumber: 220,
                                columnNumber: 13
                            }, this)
                        ]
                    }, void 0, true, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForSkilAssignmentForCounselor.tsx",
                        lineNumber: 206,
                        columnNumber: 11
                    }, this)
                }, void 0, false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForSkilAssignmentForCounselor.tsx",
                    lineNumber: 205,
                    columnNumber: 9
                }, this),
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                    className: "mt-6 flex justify-end gap-1.5",
                    children: [
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CommonButton$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CommonButton"], {
                            onClick: handleConfirm,
                            disabled: isProcessing || pendingChanges.added.length === 0 && pendingChanges.removed.length === 0,
                            children: isProcessing ? "처리 중..." : getConfirmButtonText()
                        }, void 0, false, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForSkilAssignmentForCounselor.tsx",
                            lineNumber: 260,
                            columnNumber: 11
                        }, this),
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CommonButton$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CommonButton"], {
                            variant: "outline",
                            onClick: handleCancel,
                            disabled: isProcessing,
                            children: "취소"
                        }, void 0, false, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForSkilAssignmentForCounselor.tsx",
                            lineNumber: 270,
                            columnNumber: 11
                        }, this)
                    ]
                }, void 0, true, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForSkilAssignmentForCounselor.tsx",
                    lineNumber: 259,
                    columnNumber: 9
                }, this)
            ]
        }, void 0, true, {
            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForSkilAssignmentForCounselor.tsx",
            lineNumber: 196,
            columnNumber: 7
        }, this);
    };
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$CustomAlert$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
        isOpen: isOpen,
        onClose: onClose,
        title: dialogTitle || `스킬 ${isUnassignMode ? "해제" : "할당"} - ${counselorName || ""}`,
        message: renderContent(),
        type: "custom",
        showButtons: false
    }, void 0, false, {
        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForSkilAssignmentForCounselor.tsx",
        lineNumber: 283,
        columnNumber: 5
    }, this);
}
_s(IDialogForSkilAssignmentForCounselor, "ZfdbZsuiude4rP4uJxDhIfQ0CPQ=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$hooks$2f$useApiForGetRelatedInfoForAssignSkilToCounselor$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForGetRelatedInfoForAssignSkilToCounselor"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiBatchSkillAssignment$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiBatchSkillAssignment"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiDeleteCounselorsFromSkills$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiDeleteCounselorsFromSkills"]
    ];
});
_c = IDialogForSkilAssignmentForCounselor;
var _c;
__turbopack_refresh__.register(_c, "IDialogForSkilAssignmentForCounselor");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/preferences/hooks/useAssignableSkills.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useAssignableSkills": (()=>useAssignableSkills)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$apiForCounselorSkil$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/api/apiForCounselorSkil.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useQuery$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/useQuery.js [app-client] (ecmascript)");
var _s = __turbopack_refresh__.signature();
"use client";
;
;
const useAssignableSkills = (tenantId)=>{
    _s();
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useQuery$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQuery"])({
        queryKey: [
            "assignableSkills",
            tenantId
        ],
        queryFn: {
            "useAssignableSkills.useQuery": async ()=>{
                // console.log("🟢 할당 가능한 스킬 목록을 불러오는 중...");
                const response = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$api$2f$apiForCounselorSkil$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getAssignableSkillsForCounselor"])(tenantId);
                if (response.result_code === 0 && response.result_msg === "Success") {
                    // console.log("✅ 불러온 스킬 목록:", response.result_data);
                    // skill_id와 skill_name을 포함한 배열로 반환
                    return response.result_data.map({
                        "useAssignableSkills.useQuery": (skill)=>({
                                skill_id: skill.skill_id,
                                skill_name: skill.skill_name
                            })
                    }["useAssignableSkills.useQuery"]);
                } else {
                    throw new Error(`API 오류: ${response.result_msg}`);
                }
            }
        }["useAssignableSkills.useQuery"],
        enabled: tenantId !== -1
    });
};
_s(useAssignableSkills, "4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useQuery$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQuery"]
    ];
});
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "IDialogForTeamSkilAssignment": (()=>IDialogForTeamSkilAssignment)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/ui/table.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CustomCheckbox$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/shared/CustomCheckbox/index.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/react-toastify/dist/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$CustomAlert$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/shared/layout/CustomAlert.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$hooks$2f$useApiForGetRelatedInfoForAssignSkilToCounselor$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/preferences/hooks/useApiForGetRelatedInfoForAssignSkilToCounselor.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$hooks$2f$useAssignableSkills$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/preferences/hooks/useAssignableSkills.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/image.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiDeleteCounselorsFromSkills$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/hooks/useApiDeleteCounselorsFromSkills.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiBatchSkillAssignment$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/hooks/useApiBatchSkillAssignment.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CommonButton$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/shared/CommonButton/index.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$chevron$2d$down$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ChevronDown$3e$__ = __turbopack_import__("[project]/node_modules/lucide-react/dist/esm/icons/chevron-down.js [app-client] (ecmascript) <export default as ChevronDown>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$chevron$2d$up$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ChevronUp$3e$__ = __turbopack_import__("[project]/node_modules/lucide-react/dist/esm/icons/chevron-up.js [app-client] (ecmascript) <export default as ChevronUp>");
;
var _s = __turbopack_refresh__.signature();
"use client";
;
;
;
;
;
;
;
;
;
;
;
;
function IDialogForTeamSkilAssignment({ isOpen, onClose, teamId, teamName, teamMembers, tenantId, isUnassignment = false, dialogTitle }) {
    _s();
    const [selectedSkills, setSelectedSkills] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])([]);
    const [assignedSkillsInfo, setAssignedSkillsInfo] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])([]);
    const [showCounselors, setShowCounselors] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const [isUnassignMode, setIsUnassignMode] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    // isUnassignment prop이 변경될 때 isUnassignMode 상태 업데이트
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "IDialogForTeamSkilAssignment.useEffect": ()=>{
            setIsUnassignMode(isUnassignment);
            // 모드가 변경되면 선택된 스킬 초기화
            setSelectedSkills([]);
        }
    }["IDialogForTeamSkilAssignment.useEffect"], [
        isUnassignment
    ]);
    // 첫 번째 상담사을 대표로 사용하여 스킬 정보 조회
    const firstCounselor = teamMembers.length > 0 ? teamMembers[0] : null;
    const representativeCounselorId = firstCounselor?.counselorId || firstCounselor?.data?.counselorId || "";
    // 할당 가능한 스킬 목록 조회
    const { data: assignableSkills, isLoading: isSkillsLoading, error: skillsError } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$hooks$2f$useAssignableSkills$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAssignableSkills"])(Number(tenantId));
    // 기존 할당된 스킬 정보 조회
    const { assignedSkills, isLoading: isAssignedSkillsLoading, error: assignedSkillsError } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$hooks$2f$useApiForGetRelatedInfoForAssignSkilToCounselor$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForGetRelatedInfoForAssignSkilToCounselor"])(representativeCounselorId, Number(tenantId));
    // 배치 처리를 위한 커스텀 훅 사용
    const addSkillsMutation = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiBatchSkillAssignment$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiBatchSkillAssignment"])(tenantId ?? "0");
    const deleteSkillsMutation = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiDeleteCounselorsFromSkills$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiDeleteCounselorsFromSkills"])(tenantId ?? "0");
    // 로딩 상태 통합
    const isProcessing = addSkillsMutation.isPending || deleteSkillsMutation.isPending;
    // 할당된 스킬 정보 저장 (표시용)
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "IDialogForTeamSkilAssignment.useEffect": ()=>{
            if ((assignedSkills?.result_data ?? []).length > 0) {
                const assignedSkillIds = assignedSkills?.result_data.flatMap({
                    "IDialogForTeamSkilAssignment.useEffect": (item)=>item.skill_id
                }["IDialogForTeamSkilAssignment.useEffect"]) ?? [];
                // 정보 표시용으로만 사용하므로 저장
                setAssignedSkillsInfo(assignedSkillIds);
                // 초기 선택값은 빈 배열로 설정 (모두 해제 상태)
                setSelectedSkills([]);
            } else {
                setAssignedSkillsInfo([]);
                setSelectedSkills([]);
            }
        }
    }["IDialogForTeamSkilAssignment.useEffect"], [
        assignedSkills
    ]);
    // 유효한 상담사 ID 배열 생성 함수
    const getValidCounselorIds = ()=>{
        if (!teamMembers || teamMembers.length === 0) {
            console.warn("⚠️ 유효한 상담사 배열이 없습니다.");
            return [];
        }
        // 유효한 ID만 필터링
        const validIds = teamMembers.filter((counselor)=>{
            // 데이터 구조에 따라 ID 추출
            const id = counselor.data && counselor.data.counselorId || counselor.counselorId;
            return id && id !== '-';
        }).map((counselor)=>{
            // ID 추출
            return counselor.data && counselor.data.counselorId || counselor.counselorId;
        });
        return validIds;
    };
    // 스킬 선택/해제 핸들러
    const handleSkillToggle = (skillId)=>{
        setSelectedSkills((prev)=>{
            const isCurrentlySelected = prev.includes(skillId);
            // 최대 스킬 할당 개수 체크 (할당 모드일 때만)
            if (!isCurrentlySelected && prev.length >= 10 && !isUnassignMode) {
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].error("최대 10개의 스킬만 할당할 수 있습니다.");
                return prev;
            }
            // 선택 상태 토글
            return isCurrentlySelected ? prev.filter((id)=>id !== skillId) : [
                ...prev,
                skillId
            ];
        });
    };
    // 상담사 목록 토글
    const toggleCounselors = ()=>{
        setShowCounselors(!showCounselors);
    };
    // 취소 버튼 핸들러
    const handleCancel = ()=>{
        onClose();
    };
    // 할당 모드: 선택된 스킬을 추가 (이미 할당된 스킬도 포함)
    const getSkillsToAdd = ()=>{
        if (isUnassignMode) return [];
        return selectedSkills;
    };
    // 해제 모드: 선택된 스킬만 해제
    const getSkillsToRemove = ()=>{
        if (!isUnassignMode) return [];
        return selectedSkills;
    };
    // 확인 버튼 핸들러
    const handleConfirm = async ()=>{
        const counselorIds = getValidCounselorIds();
        const skillsToAdd = getSkillsToAdd();
        const skillsToRemove = getSkillsToRemove();
        if (counselorIds.length === 0) {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].error('유효한 상담사가 없습니다.');
            return;
        }
        if (skillsToAdd.length === 0 && skillsToRemove.length === 0) {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].info("변경할 사항이 없습니다.");
            onClose();
            return;
        }
        try {
            // 추가할 스킬이 있으면 배치 처리
            if (skillsToAdd.length > 0) {
                const addResult = await addSkillsMutation.mutateAsync({
                    skillIds: skillsToAdd,
                    counselorIds: counselorIds,
                    tenantId,
                    isUnassignment: false
                });
                if (addResult.success) {
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].success(`${skillsToAdd.length}개 스킬이 모든 상담사에게 할당되었습니다.`);
                } else {
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].warning(`${addResult.successCount}개 스킬만 할당되었습니다. ${addResult.failedSkills.length}개 실패.`);
                }
            }
            // 제거할 스킬이 있으면 배치 처리
            if (skillsToRemove.length > 0) {
                const removeResult = await deleteSkillsMutation.mutateAsync({
                    skillIds: skillsToRemove,
                    counselorIds: counselorIds,
                    tenantId
                });
                if (removeResult.success) {
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].success(`${skillsToRemove.length}개 스킬이 모든 상담사에게서 해제되었습니다.`);
                } else {
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].warning(`${removeResult.successCount}개 스킬만 해제되었습니다. ${removeResult.failedSkills.length}개 실패.`);
                }
            }
            onClose();
        } catch (error) {
            console.error("스킬 할당/해제 중 오류 발생:", error);
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].error("스킬 처리 중 오류가 발생했습니다.");
        }
    };
    // 확인 버튼 텍스트 계산
    const getConfirmButtonText = ()=>{
        const skillsToAdd = getSkillsToAdd();
        const skillsToRemove = getSkillsToRemove();
        if (isUnassignMode && skillsToRemove.length > 0) {
            return `스킬 해제 (${skillsToRemove.length}개)`;
        } else if (!isUnassignMode && skillsToAdd.length > 0) {
            return `스킬 할당 (${skillsToAdd.length}개)`;
        }
        return isUnassignMode ? "스킬 해제" : "스킬 할당";
    };
    // 버튼 비활성화 여부 계산
    const isButtonDisabled = ()=>{
        if (isProcessing) return true;
        const skillsToAdd = getSkillsToAdd();
        const skillsToRemove = getSkillsToRemove();
        return skillsToAdd.length === 0 && skillsToRemove.length === 0;
    };
    const isLoading = isSkillsLoading || isAssignedSkillsLoading;
    const error = skillsError || assignedSkillsError;
    const renderContent = ()=>{
        if (error) {
            return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "text-red-500 p-4",
                children: [
                    "Error: ",
                    String(error)
                ]
            }, void 0, true, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                lineNumber: 230,
                columnNumber: 14
            }, this);
        }
        if (isLoading) {
            return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "p-6 flex flex-col items-center",
                children: [
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                        className: "animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mb-4"
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                        lineNumber: 236,
                        columnNumber: 11
                    }, this),
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                        children: "데이터를 불러오는 중입니다..."
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                        lineNumber: 237,
                        columnNumber: 11
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                lineNumber: 235,
                columnNumber: 9
            }, this);
        }
        if (!teamMembers || teamMembers.length === 0) {
            return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "px-6 py-4",
                children: [
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                        className: "flex items-center",
                        children: [
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                                src: "/tree-menu/team_icon_for_tree.png",
                                alt: "팀",
                                width: 14,
                                height: 12,
                                className: "mr-2"
                            }, void 0, false, {
                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                lineNumber: 246,
                                columnNumber: 13
                            }, this),
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                className: "text-sm text-[#333]",
                                children: "상담사 정보를 찾을 수 없습니다"
                            }, void 0, false, {
                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                lineNumber: 247,
                                columnNumber: 13
                            }, this)
                        ]
                    }, void 0, true, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                        lineNumber: 245,
                        columnNumber: 11
                    }, this),
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                        className: "text-[#333] mb-4 text-sm",
                        children: [
                            "선택된 팀의 상담사 정보를 불러올 수 없습니다.",
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("br", {}, void 0, false, {
                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                lineNumber: 250,
                                columnNumber: 39
                            }, this),
                            "다시 시도하거나 관리자에게 문의하세요."
                        ]
                    }, void 0, true, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                        lineNumber: 249,
                        columnNumber: 11
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                lineNumber: 244,
                columnNumber: 9
            }, this);
        }
        const skillsToAdd = getSkillsToAdd();
        const skillsToRemove = getSkillsToRemove();
        return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
            className: "",
            children: [
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                    className: "text-sm text-[#333] mb-4",
                    children: isUnassignMode ? `팀의 모든 상담사(${teamMembers.length}명)에게서 스킬을 일괄 해제합니다. 해제할 스킬을 선택하세요.` : `팀의 모든 상담사(${teamMembers.length}명)에게 스킬을 일괄 할당합니다. 할당할 스킬을 선택하세요.`
                }, void 0, false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                    lineNumber: 262,
                    columnNumber: 9
                }, this),
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                    className: "gary-border-box ",
                    children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                        children: [
                            "테넌트 ID: ",
                            tenantId || 'N/A'
                        ]
                    }, void 0, true, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                        lineNumber: 268,
                        columnNumber: 11
                    }, this)
                }, void 0, false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                    lineNumber: 267,
                    columnNumber: 9
                }, this),
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                    className: "gap-6",
                    children: [
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                            className: "",
                            children: [
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                    className: "mb-2 font-medium text-sm",
                                    children: "팀 정보"
                                }, void 0, false, {
                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                    lineNumber: 272,
                                    columnNumber: 13
                                }, this),
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                    className: "flex justify-between items-center gary-border-box cursor-pointer",
                                    onClick: toggleCounselors,
                                    children: [
                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                            className: "flex items-center",
                                            children: [
                                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                                                    src: "/tree-menu/team_icon_for_tree.png",
                                                    alt: "팀",
                                                    width: 14,
                                                    height: 12,
                                                    className: "mr-2"
                                                }, void 0, false, {
                                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                    lineNumber: 278,
                                                    columnNumber: 17
                                                }, this),
                                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                                    className: "text-sm text-[#333]",
                                                    children: teamName
                                                }, void 0, false, {
                                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                    lineNumber: 279,
                                                    columnNumber: 17
                                                }, this)
                                            ]
                                        }, void 0, true, {
                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                            lineNumber: 277,
                                            columnNumber: 15
                                        }, this),
                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                            className: "flex items-center",
                                            children: [
                                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                                    className: "text-sm text-[#333] mr-2",
                                                    children: [
                                                        teamMembers.length,
                                                        "명"
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                    lineNumber: 282,
                                                    columnNumber: 17
                                                }, this),
                                                showCounselors ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$chevron$2d$up$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ChevronUp$3e$__["ChevronUp"], {
                                                    className: "h-4 w-4 text-gray-500"
                                                }, void 0, false, {
                                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                    lineNumber: 284,
                                                    columnNumber: 19
                                                }, this) : /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$chevron$2d$down$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ChevronDown$3e$__["ChevronDown"], {
                                                    className: "h-4 w-4 text-gray-500"
                                                }, void 0, false, {
                                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                    lineNumber: 286,
                                                    columnNumber: 19
                                                }, this)
                                            ]
                                        }, void 0, true, {
                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                            lineNumber: 281,
                                            columnNumber: 15
                                        }, this)
                                    ]
                                }, void 0, true, {
                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                    lineNumber: 273,
                                    columnNumber: 13
                                }, this),
                                showCounselors && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                    className: "border rounded mb-2",
                                    style: {
                                        maxHeight: '300px',
                                        overflow: 'auto'
                                    },
                                    children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Table"], {
                                        children: [
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableHeader"], {
                                                className: "sticky top-0 z-10",
                                                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableRow"], {
                                                    children: [
                                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableHead"], {
                                                            className: "w-16 text-center bg-[#F8F8F8] border-r text-[#333]",
                                                            style: {
                                                                height: '30px'
                                                            },
                                                            children: "ID"
                                                        }, void 0, false, {
                                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                            lineNumber: 295,
                                                            columnNumber: 23
                                                        }, this),
                                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableHead"], {
                                                            className: "w-16 text-center bg-[#F8F8F8] border-r text-[#333]",
                                                            style: {
                                                                height: '30px'
                                                            },
                                                            children: "이름"
                                                        }, void 0, false, {
                                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                            lineNumber: 296,
                                                            columnNumber: 23
                                                        }, this),
                                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableHead"], {
                                                            className: "w-16 text-center bg-[#F8F8F8] text-[#333]",
                                                            style: {
                                                                height: '30px'
                                                            },
                                                            children: "테넌트 ID"
                                                        }, void 0, false, {
                                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                            lineNumber: 297,
                                                            columnNumber: 23
                                                        }, this)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                    lineNumber: 294,
                                                    columnNumber: 21
                                                }, this)
                                            }, void 0, false, {
                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                lineNumber: 293,
                                                columnNumber: 19
                                            }, this),
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableBody"], {
                                                children: teamMembers.map((counselor, index)=>{
                                                    const id = counselor.data?.counselorId || counselor.counselorId || '-';
                                                    const name = counselor.data?.counselorname || counselor.counselorname || '-';
                                                    const currentTenantId = counselor.data?.tenantId || counselor.tenantId || '-';
                                                    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableRow"], {
                                                        className: "custom-hover",
                                                        children: [
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableCell"], {
                                                                className: "py-1 text-sm text-center text-[#444]",
                                                                children: id
                                                            }, void 0, false, {
                                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                                lineNumber: 307,
                                                                columnNumber: 27
                                                            }, this),
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableCell"], {
                                                                className: "py-1 text-sm text-center text-[#444]",
                                                                children: name
                                                            }, void 0, false, {
                                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                                lineNumber: 308,
                                                                columnNumber: 27
                                                            }, this),
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableCell"], {
                                                                className: "py-1 text-sm text-center text-[#444]",
                                                                children: currentTenantId
                                                            }, void 0, false, {
                                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                                lineNumber: 309,
                                                                columnNumber: 27
                                                            }, this)
                                                        ]
                                                    }, `counselor-${index}`, true, {
                                                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                        lineNumber: 306,
                                                        columnNumber: 25
                                                    }, this);
                                                })
                                            }, void 0, false, {
                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                lineNumber: 300,
                                                columnNumber: 19
                                            }, this)
                                        ]
                                    }, void 0, true, {
                                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                        lineNumber: 292,
                                        columnNumber: 17
                                    }, this)
                                }, void 0, false, {
                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                    lineNumber: 291,
                                    columnNumber: 15
                                }, this)
                            ]
                        }, void 0, true, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                            lineNumber: 271,
                            columnNumber: 11
                        }, this),
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                            className: "",
                            children: [
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                    className: "mb-2 font-medium text-sm",
                                    children: [
                                        isUnassignMode ? "해제할 스킬 선택" : "할당할 스킬 선택",
                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                            className: "ml-2 text-sm",
                                            children: isUnassignMode ? `(${skillsToRemove.length}개 선택됨)` : `(${skillsToAdd.length}개 선택됨)`
                                        }, void 0, false, {
                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                            lineNumber: 321,
                                            columnNumber: 15
                                        }, this)
                                    ]
                                }, void 0, true, {
                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                    lineNumber: 319,
                                    columnNumber: 13
                                }, this),
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                    className: "border rounded",
                                    style: {
                                        maxHeight: '350px',
                                        overflow: 'auto'
                                    },
                                    children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Table"], {
                                        children: [
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableHeader"], {
                                                className: "sticky top-0 z-10",
                                                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableRow"], {
                                                    children: [
                                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableHead"], {
                                                            className: "w-16 text-center bg-[#F8F8F8] border-r text-[#333]",
                                                            style: {
                                                                height: '30px'
                                                            },
                                                            children: "선택"
                                                        }, void 0, false, {
                                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                            lineNumber: 331,
                                                            columnNumber: 21
                                                        }, this),
                                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableHead"], {
                                                            className: "w-16 text-center bg-[#F8F8F8] border-r text-[#333]",
                                                            style: {
                                                                height: '30px'
                                                            },
                                                            children: "아이디"
                                                        }, void 0, false, {
                                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                            lineNumber: 332,
                                                            columnNumber: 21
                                                        }, this),
                                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableHead"], {
                                                            className: "w-16 text-center bg-[#F8F8F8] text-[#333]",
                                                            style: {
                                                                height: '30px'
                                                            },
                                                            children: "이름"
                                                        }, void 0, false, {
                                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                            lineNumber: 333,
                                                            columnNumber: 21
                                                        }, this)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                    lineNumber: 330,
                                                    columnNumber: 19
                                                }, this)
                                            }, void 0, false, {
                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                lineNumber: 329,
                                                columnNumber: 17
                                            }, this),
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableBody"], {
                                                children: assignableSkills && assignableSkills.length > 0 ? assignableSkills.map((skill)=>{
                                                    const isAlreadyAssigned = assignedSkillsInfo.includes(skill.skill_id);
                                                    const isCurrentlySelected = selectedSkills.includes(skill.skill_id);
                                                    if (isUnassignMode && !isAlreadyAssigned) {
                                                        return null;
                                                    }
                                                    const willBeAdded = !isUnassignMode && isCurrentlySelected;
                                                    const willBeRemoved = isUnassignMode && isCurrentlySelected;
                                                    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableRow"], {
                                                        className: `custom-hover ${willBeAdded || willBeRemoved ? "bg-[#FFFAEE]" : ""}`,
                                                        children: [
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableCell"], {
                                                                className: "text-center text-[#444]",
                                                                style: {
                                                                    height: '30px',
                                                                    padding: 0
                                                                },
                                                                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CustomCheckbox$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CustomCheckbox"], {
                                                                    checked: isCurrentlySelected,
                                                                    onCheckedChange: ()=>handleSkillToggle(skill.skill_id),
                                                                    disabled: isProcessing
                                                                }, void 0, false, {
                                                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                                    lineNumber: 352,
                                                                    columnNumber: 29
                                                                }, this)
                                                            }, void 0, false, {
                                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                                lineNumber: 351,
                                                                columnNumber: 27
                                                            }, this),
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableCell"], {
                                                                className: "text-center text-[#444]",
                                                                style: {
                                                                    height: '30px',
                                                                    padding: 0
                                                                },
                                                                children: skill.skill_id
                                                            }, void 0, false, {
                                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                                lineNumber: 358,
                                                                columnNumber: 27
                                                            }, this),
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableCell"], {
                                                                className: "text-center text-[#444]",
                                                                style: {
                                                                    height: '30px',
                                                                    padding: 0
                                                                },
                                                                children: [
                                                                    skill.skill_name,
                                                                    isAlreadyAssigned && !isCurrentlySelected && !isUnassignMode && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                                                        className: "ml-2 text-xs text-green-500",
                                                                        children: "(현재 할당됨)"
                                                                    }, void 0, false, {
                                                                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                                        lineNumber: 364,
                                                                        columnNumber: 31
                                                                    }, this),
                                                                    isAlreadyAssigned && isCurrentlySelected && !isUnassignMode && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                                                        className: "ml-2 text-xs text-blue-500",
                                                                        children: "(재할당 예정)"
                                                                    }, void 0, false, {
                                                                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                                        lineNumber: 367,
                                                                        columnNumber: 31
                                                                    }, this),
                                                                    !isAlreadyAssigned && willBeAdded && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                                                        className: "ml-2 text-xs text-blue-500",
                                                                        children: "(추가 예정)"
                                                                    }, void 0, false, {
                                                                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                                        lineNumber: 370,
                                                                        columnNumber: 31
                                                                    }, this),
                                                                    willBeRemoved && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                                                        className: "ml-2 text-xs text-red-500",
                                                                        children: "(해제 예정)"
                                                                    }, void 0, false, {
                                                                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                                        lineNumber: 373,
                                                                        columnNumber: 31
                                                                    }, this)
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                                lineNumber: 361,
                                                                columnNumber: 27
                                                            }, this)
                                                        ]
                                                    }, `skill-${skill.skill_id}`, true, {
                                                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                        lineNumber: 347,
                                                        columnNumber: 25
                                                    }, this);
                                                }).filter(Boolean) : /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableRow"], {
                                                    children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableCell"], {
                                                        colSpan: 3,
                                                        className: "text-center py-4",
                                                        children: isUnassignMode ? "해제할 스킬이 없습니다." : "할당 가능한 스킬이 없습니다."
                                                    }, void 0, false, {
                                                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                        lineNumber: 381,
                                                        columnNumber: 23
                                                    }, this)
                                                }, void 0, false, {
                                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                    lineNumber: 380,
                                                    columnNumber: 21
                                                }, this)
                                            }, void 0, false, {
                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                                lineNumber: 336,
                                                columnNumber: 17
                                            }, this)
                                        ]
                                    }, void 0, true, {
                                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                        lineNumber: 328,
                                        columnNumber: 15
                                    }, this)
                                }, void 0, false, {
                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                                    lineNumber: 327,
                                    columnNumber: 13
                                }, this)
                            ]
                        }, void 0, true, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                            lineNumber: 318,
                            columnNumber: 11
                        }, this)
                    ]
                }, void 0, true, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                    lineNumber: 270,
                    columnNumber: 9
                }, this),
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                    className: "mt-6 flex justify-end gap-1.5",
                    children: [
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CommonButton$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CommonButton"], {
                            onClick: handleConfirm,
                            disabled: isProcessing || isButtonDisabled(),
                            children: isProcessing ? "처리 중..." : isUnassignMode ? `스킬 해제 (${getSkillsToRemove().length}개)` : `스킬 할당 (${getSkillsToAdd().length}개)`
                        }, void 0, false, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                            lineNumber: 392,
                            columnNumber: 11
                        }, this),
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CommonButton$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CommonButton"], {
                            variant: "outline",
                            onClick: handleCancel,
                            disabled: isProcessing,
                            children: "취소"
                        }, void 0, false, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                            lineNumber: 402,
                            columnNumber: 11
                        }, this)
                    ]
                }, void 0, true, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
                    lineNumber: 391,
                    columnNumber: 9
                }, this)
            ]
        }, void 0, true, {
            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
            lineNumber: 261,
            columnNumber: 7
        }, this);
    };
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$CustomAlert$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
        isOpen: isOpen,
        title: dialogTitle || `팀 스킬 ${isUnassignMode ? "해제" : "할당"} - ${teamName || ''}`,
        message: renderContent(),
        type: "1",
        onClose: onClose,
        onCancle: onClose,
        width: "min-w-[800px]",
        showButtons: false
    }, void 0, false, {
        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx",
        lineNumber: 415,
        columnNumber: 5
    }, this);
}
_s(IDialogForTeamSkilAssignment, "iufitLaYsu+DORPL205UO3HoHfI=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$hooks$2f$useAssignableSkills$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAssignableSkills"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$hooks$2f$useApiForGetRelatedInfoForAssignSkilToCounselor$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForGetRelatedInfoForAssignSkilToCounselor"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiBatchSkillAssignment$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiBatchSkillAssignment"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiDeleteCounselorsFromSkills$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiDeleteCounselorsFromSkills"]
    ];
});
_c = IDialogForTeamSkilAssignment;
var _c;
__turbopack_refresh__.register(_c, "IDialogForTeamSkilAssignment");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// "use client";
// import React, { useEffect, useState } from "react";
// import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table";
// import { CustomCheckbox } from "@/components/shared/CustomCheckbox";
// import { Button } from "@/components/ui/button";
// import { ChevronDown, ChevronUp } from "lucide-react";
// import { toast } from "react-toastify";
// import { useApiForGetRelatedInfoForAssignSkilToCounselor } from "@/features/preferences/hooks/useApiForGetRelatedInfoForAssignSkilToCounselor";
// import { useAssignableSkills } from "@/features/preferences/hooks/useAssignableSkills";
// import { useApiBatchSkillAssignment } from "@/features/campaignManager/hooks/useApiBatchSkillAssignment";
// import { useApiDeleteCounselorsFromSkills } from "@/features/campaignManager/hooks/useApiDeleteCounselorsFromSkills";
// import Image from "next/image";
// import CommonDialogWithCustomAlertStyle from "@/components/shared/layout/CommonDialogWithCustomAlertStyle";
// interface IDialogForGroupSkilAssignmentProps {
//   isOpen: boolean;
//   onClose: () => void;
//   groupId: string;
//   groupName: string;
//   groupMembers: any[];
//   tenantId: string;
//   isUnassignment?: boolean;
//   dialogTitle?: string;
// }
// export function IDialogForGroupSkilAssignment({
//   isOpen,
//   onClose,
//   groupId,
//   groupName,
//   groupMembers,
//   tenantId,
//   isUnassignment = false,
//   dialogTitle,
// }: IDialogForGroupSkilAssignmentProps) {
//   const [selectedSkills, setSelectedSkills] = useState<number[]>([]);
//   const [assignedSkillsInfo, setAssignedSkillsInfo] = useState<number[]>([]);
//   const [showCounselors, setShowCounselors] = useState(false);
//   const [isUnassignMode, setIsUnassignMode] = useState(false);
//   // isUnassignment prop 변경 시 모드 업데이트 및 선택 스킬 초기화
//   useEffect(() => {
//     setIsUnassignMode(isUnassignment);
//     setSelectedSkills([]);
//   }, [isUnassignment]);
//   // 첫 번째 상담사을 대표로 사용하여 스킬 정보 조회
//   const firstCounselor = groupMembers.length > 0 ? groupMembers[0] : null;
//   const representativeCounselorId = firstCounselor?.counselorId || firstCounselor?.data?.counselorId || "";
//   // 할당 가능한 스킬 목록 조회
//   const { data: assignableSkills, isLoading: isSkillsLoading, error: skillsError } = useAssignableSkills(Number(tenantId));
//   // 기존 할당된 스킬 정보 조회
//   const { assignedSkills, isLoading: isAssignedSkillsLoading, error: assignedSkillsError } =
//     useApiForGetRelatedInfoForAssignSkilToCounselor(representativeCounselorId, Number(tenantId));
//   // 배치 처리용 커스텀 훅
//   const addSkillsMutation = useApiBatchSkillAssignment(tenantId ?? "0");
//   const deleteSkillsMutation = useApiDeleteCounselorsFromSkills(tenantId ?? "0");
//   const isProcessing = addSkillsMutation.isPending || deleteSkillsMutation.isPending;
//   // 할당된 스킬 정보 저장 (표시용)
//   useEffect(() => {
//     if ((assignedSkills?.result_data ?? []).length > 0) {
//       const assignedSkillIds = assignedSkills?.result_data.flatMap((item) => item.skill_id) ?? [];
//       setAssignedSkillsInfo(assignedSkillIds);
//       setSelectedSkills([]);
//     } else {
//       setAssignedSkillsInfo([]);
//       setSelectedSkills([]);
//     }
//   }, [assignedSkills]);
//   // 유효한 상담사 ID 배열 생성
//   const getValidCounselorIds = () => {
//     if (!groupMembers || groupMembers.length === 0) {
//       console.warn("⚠️ 유효한 상담사 배열이 없습니다.");
//       return [];
//     }
//     const validIds = groupMembers
//       .filter((counselor) => {
//         const id = (counselor.data && counselor.data.counselorId) || counselor.counselorId;
//         return id && id !== "-";
//       })
//       .map((counselor) => (counselor.data && counselor.data.counselorId) || counselor.counselorId);
//     return validIds;
//   };
//   // 스킬 선택/해제 핸들러
//   const handleSkillToggle = (skillId: number) => {
//     setSelectedSkills((prev) => {
//       const isCurrentlySelected = prev.includes(skillId);
//       if (!isCurrentlySelected && prev.length >= 10 && !isUnassignMode) {
//         toast.error("최대 10개의 스킬만 할당할 수 있습니다.");
//         return prev;
//       }
//       return isCurrentlySelected ? prev.filter((id) => id !== skillId) : [...prev, skillId];
//     });
//   };
//   // 상담사 목록 토글
//   const toggleCounselors = () => {
//     setShowCounselors(!showCounselors);
//   };
//   // 취소 버튼 핸들러
//   const handleCancel = () => {
//     onClose();
//   };
//   // 할당 모드: 선택된 스킬 반환
//   const getSkillsToAdd = () => {
//     if (isUnassignMode) return [];
//     return selectedSkills;
//   };
//   // 해제 모드: 선택된 스킬 반환
//   const getSkillsToRemove = () => {
//     if (!isUnassignMode) return [];
//     return selectedSkills;
//   };
//   // 확인 버튼 핸들러 (추가/해제 배치 처리)
//   const handleConfirm = async () => {
//     const counselorIds = getValidCounselorIds();
//     const skillsToAdd = getSkillsToAdd();
//     const skillsToRemove = getSkillsToRemove();
//     if (counselorIds.length === 0) {
//       toast.error("유효한 상담사가 없습니다.");
//       return;
//     }
//     if (skillsToAdd.length === 0 && skillsToRemove.length === 0) {
//       toast.info("변경할 사항이 없습니다.");
//       onClose();
//       return;
//     }
//     try {
//       if (skillsToAdd.length > 0) {
//         const addResult = await addSkillsMutation.mutateAsync({
//           skillIds: skillsToAdd,
//           counselorIds: counselorIds,
//           tenantId,
//           isUnassignment: false,
//         });
//         if (addResult.success) {
//           toast.success(`${skillsToAdd.length}개 스킬이 모든 상담사에게 할당되었습니다.`);
//         } else {
//           toast.warning(`${addResult.successCount}개 스킬만 할당되었습니다. ${addResult.failedSkills.length}개 실패.`);
//         }
//       }
//       if (skillsToRemove.length > 0) {
//         const removeResult = await deleteSkillsMutation.mutateAsync({
//           skillIds: skillsToRemove,
//           counselorIds: counselorIds,
//           tenantId,
//         });
//         if (removeResult.success) {
//           toast.success(`${skillsToRemove.length}개 스킬이 모든 상담사에게서 해제되었습니다.`);
//         } else {
//           toast.warning(`${removeResult.successCount}개 스킬만 해제되었습니다. ${removeResult.failedSkills.length}개 실패.`);
//         }
//       }
//       onClose();
//     } catch (error) {
//       console.error("스킬 할당/해제 중 오류 발생:", error);
//       toast.error("스킬 처리 중 오류가 발생했습니다.");
//     }
//   };
//   // 버튼 상태 계산
//   const getConfirmButtonText = () => {
//     const skillsToAdd = getSkillsToAdd();
//     const skillsToRemove = getSkillsToRemove();
//     if (isUnassignMode && skillsToRemove.length > 0) {
//       return `스킬 해제 (${skillsToRemove.length}개)`;
//     } else if (!isUnassignMode && skillsToAdd.length > 0) {
//       return `스킬 할당 (${skillsToAdd.length}개)`;
//     }
//     return isUnassignMode ? "스킬 해제" : "스킬 할당";
//   };
//   const isLoading = isSkillsLoading || isAssignedSkillsLoading;
//   const error = skillsError || assignedSkillsError;
//   const renderContent = () => {
//     if (error) {
//       return <div className="text-red-500 p-4">Error: {String(error)}</div>;
//     }
//     if (isLoading) {
//       return (
//         <div className="p-6 flex flex-col items-center">
//           <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mb-4"></div>
//           <div>데이터를 불러오는 중입니다...</div>
//         </div>
//       );
//     }
//     if (!groupMembers || groupMembers.length === 0) {
//       return (
//         <div className="px-6 py-4">
//           <div className="flex items-center">
//             <Image src="/tree-menu/group_icon_for_tree.png" alt="그룹" width={15} height={12} className="mr-2" />
//             <span className="text-sm text-[#333]">상담사 정보를 찾을 수 없습니다</span>
//           </div>
//           <p className="text-[#333] mb-4 text-sm">
//             선택된 그룹의 상담사 정보를 불러올 수 없습니다.<br />
//             다시 시도하거나 관리자에게 문의하세요.
//           </p>
//         </div>
//       );
//     }
//     const skillsToAdd = getSkillsToAdd();
//     const skillsToRemove = getSkillsToRemove();
//     const buttonDisabled = skillsToAdd.length === 0 && skillsToRemove.length === 0;
//     return (
//       <div className="p-4">
//         {/* 공통 설명 영역 */}
//         <div className="text-sm text-gray-600 mb-4">
//           {isUnassignMode
//             ? `그룹의 모든 상담사(${groupMembers.length}명)에게서 스킬을 일괄 해제합니다. 해제할 스킬을 선택하세요.`
//             : `그룹의 모든 상담사(${groupMembers.length}명)에게 스킬을 일괄 할당합니다. 할당할 스킬을 선택하세요.`}
//         </div>
//         {/* 테넌트 ID 정보 */}
//         <div className="p-2 bg-gray-50 border rounded text-sm text-[#333] mb-4">
//           <span>테넌트 ID: {tenantId || "N/A"}</span>
//         </div>
//         <div className="flex flex-row gap-6">
//           {/* 왼쪽: 그룹 정보 및 상담사 목록 */}
//           <div className="w-1/2">
//             <div className="mb-2 font-medium text-sm">그룹 정보</div>
//             <div
//               className="flex justify-between items-center p-2 border rounded cursor-pointer bg-gray-50 hover:bg-gray-100 mb-2"
//               onClick={toggleCounselors}
//             >
//               <div className="flex items-center">
//                 <Image src="/tree-menu/group_icon_for_tree.png" alt="그룹" width={15} height={12} className="mr-2" />
//                 <span className="text-sm text-[#333]">{groupName}</span>
//               </div>
//               <div className="flex items-center">
//                 <span className="text-sm text-[#333] mr-2">{groupMembers.length}명</span>
//                 {showCounselors ? (
//                   <ChevronUp className="h-4 w-4 text-gray-500" />
//                 ) : (
//                   <ChevronDown className="h-4 w-4 text-gray-500" />
//                 )}
//               </div>
//             </div>
//             {showCounselors && (
//               <div className="border rounded" style={{ maxHeight: "300px", overflow: "auto" }}>
//                 <Table>
//                   <TableHeader className="sticky top-0 z-10">
//                     <TableRow>
//                       <TableHead className="w-16 text-center bg-[#F8F8F8] border-r text-[#333]" style={{ height: "30px" }}>
//                         ID
//                       </TableHead>
//                       <TableHead className="w-16 text-center bg-[#F8F8F8] border-r text-[#333]" style={{ height: "30px" }}>
//                         이름
//                       </TableHead>
//                       <TableHead className="w-16 text-center bg-[#F8F8F8] text-[#333]" style={{ height: "30px" }}>
//                         테넌트 ID
//                       </TableHead>
//                     </TableRow>
//                   </TableHeader>
//                   <TableBody>
//                     {groupMembers.map((counselor, index) => {
//                       const id = counselor.data?.counselorId || counselor.counselorId || "-";
//                       const name = counselor.data?.counselorname || counselor.counselorname || "-";
//                       const currentTenantId = counselor.data?.tenantId || counselor.tenantId || "-";
//                       return (
//                         <TableRow key={`counselor-${index}`} className="custom-hover">
//                           <TableCell className="py-1 text-sm text-center text-[#444]">{id}</TableCell>
//                           <TableCell className="py-1 text-sm text-center text-[#444]">{name}</TableCell>
//                           <TableCell className="py-1 text-sm text-center text-[#444]">{currentTenantId}</TableCell>
//                         </TableRow>
//                       );
//                     })}
//                   </TableBody>
//                 </Table>
//               </div>
//             )}
//           </div>
//           {/* 오른쪽: 스킬 목록 */}
//           <div className="w-1/2">
//             <div className="mb-2 font-medium text-sm">
//               {isUnassignMode ? "해제할 스킬 선택" : "할당할 스킬 선택"}
//               <span className="ml-2 text-blue-500 text-xs">
//                 {isUnassignMode ? `(${skillsToRemove.length}개 선택됨)` : `(${skillsToAdd.length}개 선택됨)`}
//               </span>
//             </div>
//             <div className="border rounded" style={{ maxHeight: "350px", overflow: "auto" }}>
//               <Table>
//                 <TableHeader className="sticky top-0 z-10">
//                   <TableRow>
//                     <TableHead className="w-16 text-center bg-[#F8F8F8] border-r text-[#333]" style={{ height: "30px" }}>
//                       선택
//                     </TableHead>
//                     <TableHead className="w-16 text-center bg-[#F8F8F8] border-r text-[#333]" style={{ height: "30px" }}>
//                       아이디
//                     </TableHead>
//                     <TableHead className="w-16 text-center bg-[#F8F8F8] text-[#333]" style={{ height: "30px" }}>
//                       이름
//                     </TableHead>
//                   </TableRow>
//                 </TableHeader>
//                 <TableBody>
//                   {assignableSkills && assignableSkills.length > 0 ? (
//                     assignableSkills
//                       .map((skill) => {
//                         const isAlreadyAssigned = assignedSkillsInfo.includes(skill.skill_id);
//                         const isCurrentlySelected = selectedSkills.includes(skill.skill_id);
//                         // 해제 모드에서는 이미 할당된 스킬만 표시
//                         if (isUnassignMode && !isAlreadyAssigned) {
//                           return null;
//                         }
//                         const willBeAdded = !isUnassignMode && isCurrentlySelected;
//                         const willBeRemoved = isUnassignMode && isCurrentlySelected;
//                         return (
//                           <TableRow
//                             key={`skill-${skill.skill_id}`}
//                             className={`custom-hover ${willBeAdded || willBeRemoved ? "bg-blue-50" : ""}`}
//                           >
//                             <TableCell className="text-center text-[#444]" style={{ height: "30px", padding: 0 }}>
//                               <CustomCheckbox
//                                 checked={isCurrentlySelected}
//                                 onCheckedChange={() => handleSkillToggle(skill.skill_id)}
//                                 disabled={isProcessing}
//                               />
//                             </TableCell>
//                             <TableCell className="text-center text-[#444]" style={{ height: "30px", padding: 0 }}>
//                               {skill.skill_id}
//                             </TableCell>
//                             <TableCell className="text-center text-[#444]" style={{ height: "30px", padding: 0 }}>
//                               {skill.skill_name}
//                               {isAlreadyAssigned && !isCurrentlySelected && !isUnassignMode && (
//                                 <span className="ml-2 text-xs text-green-500">(현재 할당됨)</span>
//                               )}
//                               {isAlreadyAssigned && isCurrentlySelected && !isUnassignMode && (
//                                 <span className="ml-2 text-xs text-blue-500">(재할당 예정)</span>
//                               )}
//                               {!isAlreadyAssigned && willBeAdded && (
//                                 <span className="ml-2 text-xs text-blue-500">(추가 예정)</span>
//                               )}
//                               {willBeRemoved && (
//                                 <span className="ml-2 text-xs text-red-500">(해제 예정)</span>
//                               )}
//                             </TableCell>
//                           </TableRow>
//                         );
//                       })
//                       .filter(Boolean)
//                   ) : (
//                     <TableRow>
//                       <TableCell colSpan={3} className="text-center py-4">
//                         {isUnassignMode ? "해제할 스킬이 없습니다." : "할당 가능한 스킬이 없습니다."}
//                       </TableCell>
//                     </TableRow>
//                   )}
//                 </TableBody>
//               </Table>
//             </div>
//           </div>
//         </div>
//         {/* 하단 버튼 영역 */}
//         <div className="mt-6 flex justify-center gap-2">
//           <Button
//             onClick={handleConfirm}
//             className="px-6 py-1.5 bg-blue-500 hover:bg-blue-600 text-white rounded text-sm"
//             disabled={isProcessing || buttonDisabled}
//           >
//             {isProcessing
//               ? "처리 중..."
//               : isUnassignMode
//               ? `스킬 해제 (${getSkillsToRemove().length}개)`
//               : `스킬 할당 (${getSkillsToAdd().length}개)`}
//           </Button>
//           <Button
//             variant="outline"
//             onClick={handleCancel}
//             className="px-6 py-1.5 border border-gray-300 rounded text-sm"
//             disabled={isProcessing}
//           >
//             취소
//           </Button>
//         </div>
//       </div>
//     );
//   };
//   return (
//     <CommonDialogWithCustomAlertStyle
//       isOpen={isOpen}
//       onClose={onClose}
//       title={dialogTitle || `그룹 스킬 ${isUnassignMode ? "해제" : "할당"} - ${groupName || ""}`}
//       width="w-[70%] max-w-[1200px] min-w-[800px]"
//       showButtons={false}  // 내부에서 커스텀 버튼 사용
//     >
//       {renderContent()}
//     </CommonDialogWithCustomAlertStyle>
//   );
// }
__turbopack_esm__({
    "IDialogForGroupSkilAssignment": (()=>IDialogForGroupSkilAssignment)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/ui/table.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CustomCheckbox$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/shared/CustomCheckbox/index.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/react-toastify/dist/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$hooks$2f$useApiForGetRelatedInfoForAssignSkilToCounselor$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/preferences/hooks/useApiForGetRelatedInfoForAssignSkilToCounselor.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$hooks$2f$useAssignableSkills$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/preferences/hooks/useAssignableSkills.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiBatchSkillAssignment$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/hooks/useApiBatchSkillAssignment.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiDeleteCounselorsFromSkills$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/hooks/useApiDeleteCounselorsFromSkills.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/image.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$CustomAlert$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/shared/layout/CustomAlert.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CommonButton$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/shared/CommonButton/index.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$chevron$2d$down$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ChevronDown$3e$__ = __turbopack_import__("[project]/node_modules/lucide-react/dist/esm/icons/chevron-down.js [app-client] (ecmascript) <export default as ChevronDown>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$chevron$2d$up$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ChevronUp$3e$__ = __turbopack_import__("[project]/node_modules/lucide-react/dist/esm/icons/chevron-up.js [app-client] (ecmascript) <export default as ChevronUp>");
;
var _s = __turbopack_refresh__.signature();
"use client";
;
;
;
;
;
;
;
;
;
;
;
;
function IDialogForGroupSkilAssignment({ isOpen, onClose, groupId, groupName, groupMembers, tenantId, isUnassignment = false, dialogTitle }) {
    _s();
    const [selectedSkills, setSelectedSkills] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])([]);
    const [assignedSkillsInfo, setAssignedSkillsInfo] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])([]);
    const [showCounselors, setShowCounselors] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const [isUnassignMode, setIsUnassignMode] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    // isUnassignment prop 변경 시 모드 업데이트 및 선택 스킬 초기화
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "IDialogForGroupSkilAssignment.useEffect": ()=>{
            setIsUnassignMode(isUnassignment);
            setSelectedSkills([]);
        }
    }["IDialogForGroupSkilAssignment.useEffect"], [
        isUnassignment
    ]);
    // 첫 번째 상담사을 대표로 사용하여 스킬 정보 조회
    const firstCounselor = groupMembers.length > 0 ? groupMembers[0] : null;
    const representativeCounselorId = firstCounselor?.counselorId || firstCounselor?.data?.counselorId || "";
    // 할당 가능한 스킬 목록 조회
    const { data: assignableSkills, isLoading: isSkillsLoading, error: skillsError } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$hooks$2f$useAssignableSkills$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAssignableSkills"])(Number(tenantId));
    // 기존 할당된 스킬 정보 조회
    const { assignedSkills, isLoading: isAssignedSkillsLoading, error: assignedSkillsError } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$hooks$2f$useApiForGetRelatedInfoForAssignSkilToCounselor$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForGetRelatedInfoForAssignSkilToCounselor"])(representativeCounselorId, Number(tenantId));
    // 배치 처리용 커스텀 훅
    const addSkillsMutation = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiBatchSkillAssignment$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiBatchSkillAssignment"])(tenantId ?? "0");
    const deleteSkillsMutation = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiDeleteCounselorsFromSkills$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiDeleteCounselorsFromSkills"])(tenantId ?? "0");
    const isProcessing = addSkillsMutation.isPending || deleteSkillsMutation.isPending;
    // 할당된 스킬 정보 저장 (표시용)
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "IDialogForGroupSkilAssignment.useEffect": ()=>{
            if ((assignedSkills?.result_data ?? []).length > 0) {
                const assignedSkillIds = assignedSkills?.result_data.flatMap({
                    "IDialogForGroupSkilAssignment.useEffect": (item)=>item.skill_id
                }["IDialogForGroupSkilAssignment.useEffect"]) ?? [];
                setAssignedSkillsInfo(assignedSkillIds);
                setSelectedSkills([]);
            } else {
                setAssignedSkillsInfo([]);
                setSelectedSkills([]);
            }
        }
    }["IDialogForGroupSkilAssignment.useEffect"], [
        assignedSkills
    ]);
    // 유효한 상담사 ID 배열 생성
    const getValidCounselorIds = ()=>{
        if (!groupMembers || groupMembers.length === 0) {
            console.warn("⚠️ 유효한 상담사 배열이 없습니다.");
            return [];
        }
        const validIds = groupMembers.filter((counselor)=>{
            const id = counselor.data && counselor.data.counselorId || counselor.counselorId;
            return id && id !== "-";
        }).map((counselor)=>counselor.data && counselor.data.counselorId || counselor.counselorId);
        return validIds;
    };
    // 스킬 선택/해제 핸들러
    const handleSkillToggle = (skillId)=>{
        setSelectedSkills((prev)=>{
            const isCurrentlySelected = prev.includes(skillId);
            if (!isCurrentlySelected && prev.length >= 10 && !isUnassignMode) {
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].error("최대 10개의 스킬만 할당할 수 있습니다.");
                return prev;
            }
            return isCurrentlySelected ? prev.filter((id)=>id !== skillId) : [
                ...prev,
                skillId
            ];
        });
    };
    // 상담사 목록 토글
    const toggleCounselors = ()=>{
        setShowCounselors(!showCounselors);
    };
    // 취소 버튼 핸들러
    const handleCancel = ()=>{
        onClose();
    };
    // 할당 모드: 선택된 스킬 반환
    const getSkillsToAdd = ()=>{
        if (isUnassignMode) return [];
        return selectedSkills;
    };
    // 해제 모드: 선택된 스킬 반환
    const getSkillsToRemove = ()=>{
        if (!isUnassignMode) return [];
        return selectedSkills;
    };
    // 확인 버튼 핸들러 (추가/해제 배치 처리)
    const handleConfirm = async ()=>{
        const counselorIds = getValidCounselorIds();
        const skillsToAdd = getSkillsToAdd();
        const skillsToRemove = getSkillsToRemove();
        if (counselorIds.length === 0) {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].error("유효한 상담사가 없습니다.");
            return;
        }
        if (skillsToAdd.length === 0 && skillsToRemove.length === 0) {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].info("변경할 사항이 없습니다.");
            onClose();
            return;
        }
        try {
            if (skillsToAdd.length > 0) {
                const addResult = await addSkillsMutation.mutateAsync({
                    skillIds: skillsToAdd,
                    counselorIds: counselorIds,
                    tenantId,
                    isUnassignment: false
                });
                if (addResult.success) {
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].success(`${skillsToAdd.length}개 스킬이 모든 상담사에게 할당되었습니다.`);
                } else {
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].warning(`${addResult.successCount}개 스킬만 할당되었습니다. ${addResult.failedSkills.length}개 실패.`);
                }
            }
            if (skillsToRemove.length > 0) {
                const removeResult = await deleteSkillsMutation.mutateAsync({
                    skillIds: skillsToRemove,
                    counselorIds: counselorIds,
                    tenantId
                });
                if (removeResult.success) {
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].success(`${skillsToRemove.length}개 스킬이 모든 상담사에게서 해제되었습니다.`);
                } else {
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].warning(`${removeResult.successCount}개 스킬만 해제되었습니다. ${removeResult.failedSkills.length}개 실패.`);
                }
            }
            onClose();
        } catch (error) {
            console.error("스킬 할당/해제 중 오류 발생:", error);
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].error("스킬 처리 중 오류가 발생했습니다.");
        }
    };
    // 버튼 상태 계산
    const getConfirmButtonText = ()=>{
        const skillsToAdd = getSkillsToAdd();
        const skillsToRemove = getSkillsToRemove();
        if (isUnassignMode && skillsToRemove.length > 0) {
            return `스킬 해제 (${skillsToRemove.length}개)`;
        } else if (!isUnassignMode && skillsToAdd.length > 0) {
            return `스킬 할당 (${skillsToAdd.length}개)`;
        }
        return isUnassignMode ? "스킬 해제" : "스킬 할당";
    };
    const isLoading = isSkillsLoading || isAssignedSkillsLoading;
    const errorContent = skillsError || assignedSkillsError;
    const renderContent = ()=>{
        if (errorContent) {
            return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "text-red-500 p-4",
                children: [
                    "Error: ",
                    String(errorContent)
                ]
            }, void 0, true, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                lineNumber: 642,
                columnNumber: 14
            }, this);
        }
        if (isLoading) {
            return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "p-6 flex flex-col items-center",
                children: [
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                        className: "animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mb-4"
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                        lineNumber: 648,
                        columnNumber: 11
                    }, this),
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                        children: "데이터를 불러오는 중입니다..."
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                        lineNumber: 649,
                        columnNumber: 11
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                lineNumber: 647,
                columnNumber: 9
            }, this);
        }
        if (!groupMembers || groupMembers.length === 0) {
            return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "px-6 py-4",
                children: [
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                        className: "flex items-center",
                        children: [
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                                src: "/tree-menu/group_icon_for_tree.png",
                                alt: "그룹",
                                width: 15,
                                height: 12,
                                className: "mr-2"
                            }, void 0, false, {
                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                lineNumber: 658,
                                columnNumber: 13
                            }, this),
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                className: "text-sm text-[#333]",
                                children: "상담사 정보를 찾을 수 없습니다"
                            }, void 0, false, {
                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                lineNumber: 665,
                                columnNumber: 13
                            }, this)
                        ]
                    }, void 0, true, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                        lineNumber: 657,
                        columnNumber: 11
                    }, this),
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                        className: "text-[#333] mb-4 text-sm",
                        children: [
                            "선택된 그룹의 상담사 정보를 불러올 수 없습니다.",
                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("br", {}, void 0, false, {
                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                lineNumber: 669,
                                columnNumber: 13
                            }, this),
                            "다시 시도하거나 관리자에게 문의하세요."
                        ]
                    }, void 0, true, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                        lineNumber: 667,
                        columnNumber: 11
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                lineNumber: 656,
                columnNumber: 9
            }, this);
        }
        const skillsToAdd = getSkillsToAdd();
        const skillsToRemove = getSkillsToRemove();
        const buttonDisabled = skillsToAdd.length === 0 && skillsToRemove.length === 0;
        return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
            className: "",
            children: [
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                    className: "text-sm text-[#333] mb-4",
                    children: isUnassignMode ? `그룹의 모든 상담사(${groupMembers.length}명)에게서 스킬을 일괄 해제합니다. 해제할 스킬을 선택하세요.` : `그룹의 모든 상담사(${groupMembers.length}명)에게 스킬을 일괄 할당합니다. 할당할 스킬을 선택하세요.`
                }, void 0, false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                    lineNumber: 683,
                    columnNumber: 9
                }, this),
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                    className: "gary-border-box",
                    children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                        children: [
                            "테넌트 ID: ",
                            tenantId || "N/A"
                        ]
                    }, void 0, true, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                        lineNumber: 691,
                        columnNumber: 11
                    }, this)
                }, void 0, false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                    lineNumber: 690,
                    columnNumber: 9
                }, this),
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                    className: "",
                    children: [
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                            className: "",
                            children: [
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                    className: "mb-2 font-medium text-sm",
                                    children: "그룹 정보"
                                }, void 0, false, {
                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                    lineNumber: 697,
                                    columnNumber: 13
                                }, this),
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                    className: "flex justify-between items-center gary-border-box cursor-pointer",
                                    onClick: toggleCounselors,
                                    children: [
                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                            className: "flex items-center",
                                            children: [
                                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                                                    src: "/tree-menu/group_icon_for_tree.png",
                                                    alt: "그룹",
                                                    width: 15,
                                                    height: 12,
                                                    className: "mr-2"
                                                }, void 0, false, {
                                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                    lineNumber: 703,
                                                    columnNumber: 17
                                                }, this),
                                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                                    className: "text-sm text-[#333]",
                                                    children: groupName
                                                }, void 0, false, {
                                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                    lineNumber: 710,
                                                    columnNumber: 17
                                                }, this)
                                            ]
                                        }, void 0, true, {
                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                            lineNumber: 702,
                                            columnNumber: 15
                                        }, this),
                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                            className: "flex items-center",
                                            children: [
                                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                                    className: "text-sm text-[#333] mr-2",
                                                    children: [
                                                        groupMembers.length,
                                                        "명"
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                    lineNumber: 713,
                                                    columnNumber: 17
                                                }, this),
                                                showCounselors ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$chevron$2d$up$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ChevronUp$3e$__["ChevronUp"], {
                                                    className: "h-4 w-4 text-gray-500"
                                                }, void 0, false, {
                                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                    lineNumber: 717,
                                                    columnNumber: 19
                                                }, this) : /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$chevron$2d$down$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ChevronDown$3e$__["ChevronDown"], {
                                                    className: "h-4 w-4 text-gray-500"
                                                }, void 0, false, {
                                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                    lineNumber: 719,
                                                    columnNumber: 19
                                                }, this)
                                            ]
                                        }, void 0, true, {
                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                            lineNumber: 712,
                                            columnNumber: 15
                                        }, this)
                                    ]
                                }, void 0, true, {
                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                    lineNumber: 698,
                                    columnNumber: 13
                                }, this),
                                showCounselors && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                    className: "border rounded  mb-2",
                                    style: {
                                        maxHeight: "300px",
                                        overflow: "auto"
                                    },
                                    children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Table"], {
                                        children: [
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableHeader"], {
                                                className: "sticky top-0 z-10",
                                                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableRow"], {
                                                    children: [
                                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableHead"], {
                                                            className: "w-16 text-center bg-[#F8F8F8] border-r text-[#333]",
                                                            style: {
                                                                height: "30px"
                                                            },
                                                            children: "ID"
                                                        }, void 0, false, {
                                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                            lineNumber: 732,
                                                            columnNumber: 23
                                                        }, this),
                                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableHead"], {
                                                            className: "w-16 text-center bg-[#F8F8F8] border-r text-[#333]",
                                                            style: {
                                                                height: "30px"
                                                            },
                                                            children: "이름"
                                                        }, void 0, false, {
                                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                            lineNumber: 738,
                                                            columnNumber: 23
                                                        }, this),
                                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableHead"], {
                                                            className: "w-16 text-center bg-[#F8F8F8] text-[#333]",
                                                            style: {
                                                                height: "30px"
                                                            },
                                                            children: "테넌트 ID"
                                                        }, void 0, false, {
                                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                            lineNumber: 744,
                                                            columnNumber: 23
                                                        }, this)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                    lineNumber: 731,
                                                    columnNumber: 21
                                                }, this)
                                            }, void 0, false, {
                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                lineNumber: 730,
                                                columnNumber: 19
                                            }, this),
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableBody"], {
                                                children: groupMembers.map((counselor, index)=>{
                                                    const id = counselor.data?.counselorId || counselor.counselorId || "-";
                                                    const name = counselor.data?.counselorname || counselor.counselorname || "-";
                                                    const currentTenantId = counselor.data?.tenantId || counselor.tenantId || "-";
                                                    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableRow"], {
                                                        className: "custom-hover",
                                                        children: [
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableCell"], {
                                                                className: "py-1 text-sm text-center text-[#444]",
                                                                children: id
                                                            }, void 0, false, {
                                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                                lineNumber: 771,
                                                                columnNumber: 27
                                                            }, this),
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableCell"], {
                                                                className: "py-1 text-sm text-center text-[#444]",
                                                                children: name
                                                            }, void 0, false, {
                                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                                lineNumber: 774,
                                                                columnNumber: 27
                                                            }, this),
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableCell"], {
                                                                className: "py-1 text-sm text-center text-[#444]",
                                                                children: currentTenantId
                                                            }, void 0, false, {
                                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                                lineNumber: 777,
                                                                columnNumber: 27
                                                            }, this)
                                                        ]
                                                    }, `counselor-${index}`, true, {
                                                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                        lineNumber: 767,
                                                        columnNumber: 25
                                                    }, this);
                                                })
                                            }, void 0, false, {
                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                lineNumber: 752,
                                                columnNumber: 19
                                            }, this)
                                        ]
                                    }, void 0, true, {
                                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                        lineNumber: 729,
                                        columnNumber: 17
                                    }, this)
                                }, void 0, false, {
                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                    lineNumber: 725,
                                    columnNumber: 15
                                }, this)
                            ]
                        }, void 0, true, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                            lineNumber: 696,
                            columnNumber: 11
                        }, this),
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                            className: "",
                            children: [
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                    className: "mb-2 font-medium text-sm",
                                    children: [
                                        isUnassignMode ? "해제할 스킬 선택" : "할당할 스킬 선택",
                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                            className: "ml-2 text-blue-500 text-xs",
                                            children: isUnassignMode ? `(${getSkillsToRemove().length}개 선택됨)` : `(${getSkillsToAdd().length}개 선택됨)`
                                        }, void 0, false, {
                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                            lineNumber: 793,
                                            columnNumber: 15
                                        }, this)
                                    ]
                                }, void 0, true, {
                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                    lineNumber: 791,
                                    columnNumber: 13
                                }, this),
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                    className: "border rounded",
                                    style: {
                                        maxHeight: "350px",
                                        overflow: "auto"
                                    },
                                    children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Table"], {
                                        children: [
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableHeader"], {
                                                className: "sticky top-0 z-10",
                                                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableRow"], {
                                                    children: [
                                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableHead"], {
                                                            className: "w-16 text-center bg-[#F8F8F8] border-r text-[#333]",
                                                            style: {
                                                                height: "30px"
                                                            },
                                                            children: "선택"
                                                        }, void 0, false, {
                                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                            lineNumber: 807,
                                                            columnNumber: 21
                                                        }, this),
                                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableHead"], {
                                                            className: "w-16 text-center bg-[#F8F8F8] border-r text-[#333]",
                                                            style: {
                                                                height: "30px"
                                                            },
                                                            children: "아이디"
                                                        }, void 0, false, {
                                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                            lineNumber: 813,
                                                            columnNumber: 21
                                                        }, this),
                                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableHead"], {
                                                            className: "w-16 text-center bg-[#F8F8F8] text-[#333]",
                                                            style: {
                                                                height: "30px"
                                                            },
                                                            children: "이름"
                                                        }, void 0, false, {
                                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                            lineNumber: 819,
                                                            columnNumber: 21
                                                        }, this)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                    lineNumber: 806,
                                                    columnNumber: 19
                                                }, this)
                                            }, void 0, false, {
                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                lineNumber: 805,
                                                columnNumber: 17
                                            }, this),
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableBody"], {
                                                children: assignableSkills && assignableSkills.length > 0 ? assignableSkills.map((skill)=>{
                                                    const isAlreadyAssigned = assignedSkillsInfo.includes(skill.skill_id);
                                                    const isCurrentlySelected = selectedSkills.includes(skill.skill_id);
                                                    // 해제 모드에서는 이미 할당된 스킬만 표시
                                                    if (isUnassignMode && !isAlreadyAssigned) {
                                                        return null;
                                                    }
                                                    const willBeAdded = !isUnassignMode && isCurrentlySelected;
                                                    const willBeRemoved = isUnassignMode && isCurrentlySelected;
                                                    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableRow"], {
                                                        className: `custom-hover ${willBeAdded || willBeRemoved ? "bg-[#FFFAEE]" : ""}`,
                                                        children: [
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableCell"], {
                                                                className: "text-center text-[#444]",
                                                                style: {
                                                                    height: "30px",
                                                                    padding: 0
                                                                },
                                                                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CustomCheckbox$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CustomCheckbox"], {
                                                                    checked: isCurrentlySelected,
                                                                    onCheckedChange: ()=>handleSkillToggle(skill.skill_id),
                                                                    disabled: isProcessing
                                                                }, void 0, false, {
                                                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                                    lineNumber: 853,
                                                                    columnNumber: 31
                                                                }, this)
                                                            }, void 0, false, {
                                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                                lineNumber: 849,
                                                                columnNumber: 29
                                                            }, this),
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableCell"], {
                                                                className: "text-center text-[#444]",
                                                                style: {
                                                                    height: "30px",
                                                                    padding: 0
                                                                },
                                                                children: skill.skill_id
                                                            }, void 0, false, {
                                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                                lineNumber: 861,
                                                                columnNumber: 29
                                                            }, this),
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableCell"], {
                                                                className: "text-center text-[#444]",
                                                                style: {
                                                                    height: "30px",
                                                                    padding: 0
                                                                },
                                                                children: [
                                                                    skill.skill_name,
                                                                    isAlreadyAssigned && !isCurrentlySelected && !isUnassignMode && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                                                        className: "ml-2 text-xs text-green-500",
                                                                        children: "(현재 할당됨)"
                                                                    }, void 0, false, {
                                                                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                                        lineNumber: 875,
                                                                        columnNumber: 35
                                                                    }, this),
                                                                    isAlreadyAssigned && isCurrentlySelected && !isUnassignMode && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                                                        className: "ml-2 text-xs text-blue-500",
                                                                        children: "(재할당 예정)"
                                                                    }, void 0, false, {
                                                                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                                        lineNumber: 882,
                                                                        columnNumber: 35
                                                                    }, this),
                                                                    !isAlreadyAssigned && willBeAdded && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                                                        className: "ml-2 text-xs text-blue-500",
                                                                        children: "(추가 예정)"
                                                                    }, void 0, false, {
                                                                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                                        lineNumber: 888,
                                                                        columnNumber: 35
                                                                    }, this),
                                                                    willBeRemoved && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                                                        className: "ml-2 text-xs text-red-500",
                                                                        children: "(해제 예정)"
                                                                    }, void 0, false, {
                                                                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                                        lineNumber: 893,
                                                                        columnNumber: 33
                                                                    }, this)
                                                                ]
                                                            }, void 0, true, {
                                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                                lineNumber: 867,
                                                                columnNumber: 29
                                                            }, this)
                                                        ]
                                                    }, `skill-${skill.skill_id}`, true, {
                                                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                        lineNumber: 843,
                                                        columnNumber: 27
                                                    }, this);
                                                }).filter(Boolean) : /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableRow"], {
                                                    children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$table$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TableCell"], {
                                                        colSpan: 3,
                                                        className: "text-center py-4",
                                                        children: isUnassignMode ? "해제할 스킬이 없습니다." : "할당 가능한 스킬이 없습니다."
                                                    }, void 0, false, {
                                                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                        lineNumber: 904,
                                                        columnNumber: 23
                                                    }, this)
                                                }, void 0, false, {
                                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                    lineNumber: 903,
                                                    columnNumber: 21
                                                }, this)
                                            }, void 0, false, {
                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                                lineNumber: 827,
                                                columnNumber: 17
                                            }, this)
                                        ]
                                    }, void 0, true, {
                                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                        lineNumber: 804,
                                        columnNumber: 15
                                    }, this)
                                }, void 0, false, {
                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                                    lineNumber: 800,
                                    columnNumber: 13
                                }, this)
                            ]
                        }, void 0, true, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                            lineNumber: 790,
                            columnNumber: 11
                        }, this)
                    ]
                }, void 0, true, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                    lineNumber: 694,
                    columnNumber: 9
                }, this),
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                    className: "mt-6 flex justify-end gap-1.5",
                    children: [
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CommonButton$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CommonButton"], {
                            onClick: handleConfirm,
                            disabled: isProcessing || buttonDisabled,
                            children: isProcessing ? "처리 중..." : isUnassignMode ? `스킬 해제 (${getSkillsToRemove().length}개)` : `스킬 할당 (${getSkillsToAdd().length}개)`
                        }, void 0, false, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                            lineNumber: 919,
                            columnNumber: 11
                        }, this),
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CommonButton$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CommonButton"], {
                            variant: "outline",
                            onClick: handleCancel,
                            disabled: isProcessing,
                            children: "취소"
                        }, void 0, false, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                            lineNumber: 929,
                            columnNumber: 11
                        }, this)
                    ]
                }, void 0, true, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
                    lineNumber: 918,
                    columnNumber: 9
                }, this)
            ]
        }, void 0, true, {
            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
            lineNumber: 681,
            columnNumber: 7
        }, this);
    };
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$CustomAlert$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
        isOpen: isOpen,
        onClose: onClose,
        title: dialogTitle || `그룹 스킬 ${isUnassignMode ? "해제" : "할당"} - ${groupName || ""}`,
        message: renderContent(),
        type: "custom",
        width: "min-w-[800px]",
        showButtons: false
    }, void 0, false, {
        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx",
        lineNumber: 942,
        columnNumber: 5
    }, this);
}
_s(IDialogForGroupSkilAssignment, "BWp0YCwsSDat1VMf7RHKJ5qSzBE=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$hooks$2f$useAssignableSkills$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAssignableSkills"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$hooks$2f$useApiForGetRelatedInfoForAssignSkilToCounselor$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForGetRelatedInfoForAssignSkilToCounselor"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiBatchSkillAssignment$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiBatchSkillAssignment"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiDeleteCounselorsFromSkills$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiDeleteCounselorsFromSkills"]
    ];
});
_c = IDialogForGroupSkilAssignment;
var _c;
__turbopack_refresh__.register(_c, "IDialogForGroupSkilAssignment");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForGroupAndTeamAndCounselorProps.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// "use client";
// import React, { useState, useCallback } from "react";
// import { Menu, useContextMenu } from "react-contexify";
// import "react-contexify/ReactContexify.css";
// import { useCounselorFilterStore } from "@/store/storeForSideMenuCounselorTab";
// import { useTabStore } from "@/store/tabStore";
// import { IDialogForSkilAssignmentForCounselor } from "../dialog/IDialogForSkilAssignmentForCounselor";
// import { IDialogForTeamSkilAssignment } from "../dialog/IDialogForTeamSkilAssignment";
// import { toast } from "react-toastify";
// import { IDialogForGroupSkilAssignment } from "../dialog/IDialogForGroupSkilAssignment";
// interface IContextMenuForGroupAndTeamAndCounselorProps {
//   children: React.ReactNode;
//   item: {
//     id: string;
//     name: string;
//     tenantId: string;
//     type: "counselor" | "team" | "group";
//     members?: any[]; // 상담사 목록
//   };
// }
// export function IContextMenuForGroupAndTeamAndCounselor({
//   children,
//   item,
// }: IContextMenuForGroupAndTeamAndCounselorProps) {
//   const { addTab, removeTab, openedTabs } = useTabStore();
//   const { setCandidateMembersForSkilAssign } = useCounselorFilterStore();
//   // 다이얼로그 상태 관리
//   const [isSkillDialogOpen, setIsSkillDialogOpen] = useState(false);
//   const [isTeamSkillDialogOpen, setIsTeamSkillDialogOpen] = useState(false);
//   const [isGroupSkillDialogOpen, setIsGroupSkillDialogOpen] = useState(false);
//   const [isUnassignment, setIsUnassignment] = useState(false); // 할당 해제 모드 여부
//   // Contexify 메뉴 ID 생성 (unique ID)
//   const MENU_ID = `menu-for-${item.type}-${item.id}`;
//   // Contexify hook
//   const { show } = useContextMenu({
//     id: MENU_ID,
//   });
//   // 우클릭 이벤트 핸들러
//   const handleContextMenu = useCallback(
//     (event: React.MouseEvent) => {
//       event.preventDefault();
//       show({ event });
//     },
//     [show]
//   );
//   // 디버깅용 로그
//   const logDebugInfo = (actionType: string, data: any) => {
//     console.group(`🔍 [ContextMenu] ${actionType}`);
//     console.log("타입:", item.type);
//     console.log("이름:", item.name);
//     console.log("ID:", item.id);
//     console.log("테넌트 ID:", item.tenantId);
//     if (item.members) {
//       console.log("멤버 수:", item.members.length);
//       console.log("첫 번째 멤버 샘플:", item.members[0]);
//     }
//     console.log("전달 데이터:", data);
//     console.groupEnd();
//   };
//   // tenantId 유효성 검증
//   const validateTenantId = () => {
//     if (!item.tenantId) {
//       console.error("⚠️ Context Menu: tenantId가 누락되었습니다. item:", item);
//       return false;
//     }
//     return true;
//   };
//   // ====== 상담사(개인) 관련 함수 ======
//   const handleCounselorSkillAssignment = (isUnassign: boolean) => {
//     if (!validateTenantId()) return;
//     logDebugInfo(isUnassign ? "상담사 스킬 해제" : "상담사 스킬 할당", {
//       counselorId: item.id,
//       counselorName: item.name,
//       tenantId: item.tenantId,
//       isUnassignment: isUnassign
//     });
//     setIsUnassignment(isUnassign);
//     setIsSkillDialogOpen(true);
//   };
//   // ====== 팀 관련 함수 ======
//   const handleTeamSkillAssignment = (isUnassign: boolean) => {
//     if (!validateTenantId()) return;
//     if (!item.members || item.members.length === 0) {
//       toast.warn("팀에 멤버가 없습니다.");
//       return;
//     }
//     const membersWithTenantId = item.members.map((member) => ({
//       ...member,
//       tenantId: item.tenantId,
//     }));
//     logDebugInfo(isUnassign ? "팀 스킬 해제" : "팀 스킬 할당", {
//       teamId: item.id,
//       teamName: item.name,
//       memberCount: membersWithTenantId.length,
//       tenantId: item.tenantId,
//       isUnassignment: isUnassign
//     });
//     setIsUnassignment(isUnassign);
//     setCandidateMembersForSkilAssign(membersWithTenantId);
//     setIsTeamSkillDialogOpen(true);
//   };
//   // ====== 그룹 관련 함수 ======
//   const handleGroupSkillAssignment = (isUnassign: boolean) => {
//     if (!validateTenantId()) return;
//     if (!item.members || item.members.length === 0) {
//       toast.warn("그룹에 멤버가 없습니다.");
//       return;
//     }
//     const membersWithTenantId = item.members.map((member) => ({
//       ...member,
//       tenantId: item.tenantId,
//     }));
//     logDebugInfo(isUnassign ? "그룹 스킬 해제" : "그룹 스킬 할당", {
//       groupId: item.id,
//       groupName: item.name,
//       memberCount: membersWithTenantId.length,
//       tenantId: item.tenantId,
//       isUnassignment: isUnassign
//     });
//     setIsUnassignment(isUnassign);
//     setCandidateMembersForSkilAssign(membersWithTenantId);
//     setIsGroupSkillDialogOpen(true);
//   };
//   // 타입별로 할당 / 해제 분기
//   const openSkillAssignmentDialog = (isUnassign: boolean = false) => {
//     switch (item.type) {
//       case "counselor":
//         handleCounselorSkillAssignment(isUnassign);
//         break;
//       case "team":
//         handleTeamSkillAssignment(isUnassign);
//         break;
//       case "group":
//         handleGroupSkillAssignment(isUnassign);
//         break;
//       default:
//         console.warn(`⚠️ 알 수 없는 타입: ${item.type}`);
//     }
//   };
//   // 메뉴 항목 제목
//   const getMenuItemTitle = (isUnassign: boolean = false) => {
//     if (isUnassign) {
//       return "스킬 할당 해제";
//     }
//     switch (item.type) {
//       case "counselor":
//         return "상담사 스킬 할당";
//       case "team":
//         return "팀 스킬 할당";
//       case "group":
//         return "그룹 스킬 할당";
//       default:
//         return "스킬 할당";
//     }
//   };
//   // 다이얼로그 타이틀
//   const getDialogTitle = () => {
//     const actionText = isUnassignment ? "해제" : "할당";
//     switch (item.type) {
//       case "counselor":
//         return `상담사 스킬 ${actionText} - ${item.name}`;
//       case "team":
//         return `팀 스킬 ${actionText} - ${item.name}`;
//       case "group":
//         return `그룹 스킬 ${actionText} - ${item.name}`;
//       default:
//         return `스킬 ${actionText}`;
//     }
//   };
//   return (
//     <>
//       {/* 컨텍스트 메뉴를 트리거할 요소 */}
//       <div onContextMenu={handleContextMenu}>{children}</div>
//       {/* React-Contexify 메뉴 정의 */}
//       <Menu id={MENU_ID} animation="fade" className="compact-menu">
//         <div className="contexify-custom-item" onClick={() => openSkillAssignmentDialog(false)}>
//           {getMenuItemTitle(false)}
//         </div>
//         <div className="contexify-custom-item" onClick={() => openSkillAssignmentDialog(true)}>
//           {getMenuItemTitle(true)}
//         </div>
//       </Menu>
//       {/* ===== 상담사 스킬 할당 다이얼로그 ===== */}
//       {item.type === "counselor" && isSkillDialogOpen && (
//         <IDialogForSkilAssignmentForCounselor
//           isOpen={isSkillDialogOpen}
//           onClose={() => setIsSkillDialogOpen(false)}
//           counselorId={item.id}
//           counselorName={item.name}
//           tenantId={item.tenantId}
//           isUnassignment={isUnassignment}
//           dialogTitle={getDialogTitle()}
//         />
//       )}
//       {/* ===== 팀 스킬 할당 다이얼로그 ===== */}
//       {item.type === "team" && isTeamSkillDialogOpen && (
//         <IDialogForTeamSkilAssignment
//           isOpen={isTeamSkillDialogOpen}
//           onClose={() => setIsTeamSkillDialogOpen(false)}
//           teamId={item.id}
//           teamName={item.name}
//           teamMembers={item.members || []}
//           tenantId={item.tenantId}
//           isUnassignment={isUnassignment}
//           dialogTitle={getDialogTitle()}
//         />
//       )}
//       {/* ===== 그룹 스킬 할당 다이얼로그 ===== */}
//       {item.type === "group" && isGroupSkillDialogOpen && (
//         <IDialogForGroupSkilAssignment
//           isOpen={isGroupSkillDialogOpen}
//           onClose={() => setIsGroupSkillDialogOpen(false)}
//           groupId={item.id}
//           groupName={item.name}
//           groupMembers={item.members || []}
//           tenantId={item.tenantId}
//           isUnassignment={isUnassignment}
//           dialogTitle={getDialogTitle()}
//         />
//       )}
//     </>
//   );
// }
__turbopack_esm__({
    "IContextMenuForGroupAndTeamAndCounselor": (()=>IContextMenuForGroupAndTeamAndCounselor)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/ui/context-menu.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCounselorTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/storeForSideMenuCounselorTab.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$tabStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/tabStore.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$dialog$2f$IDialogForSkilAssignmentForCounselor$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForSkilAssignmentForCounselor.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$dialog$2f$IDialogForTeamSkilAssignment$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForTeamSkilAssignment.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/react-toastify/dist/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$dialog$2f$IDialogForGroupSkilAssignment$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForGroupSkilAssignment.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$useAvailableMenuStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/useAvailableMenuStore.ts [app-client] (ecmascript)");
;
var _s = __turbopack_refresh__.signature();
"use client";
;
;
;
;
;
;
;
;
;
// 메뉴 ID 상수 정의 (원래 주석 코드의 값과 동일)
const MENU_IDS = {
    GROUP_SKILL_ASSIGN: 31,
    GROUP_SKILL_UNASSIGN: 32,
    TEAM_SKILL_ASSIGN: 33,
    TEAM_SKILL_UNASSIGN: 34,
    COUNSELOR_SKILL_ASSIGN: 35,
    COUNSELOR_SKILL_UNASSIGN: 36
};
function IContextMenuForGroupAndTeamAndCounselor({ children, item }) {
    _s();
    const { addTab, removeTab, openedTabs } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$tabStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTabStore"])();
    const { setCandidateMembersForSkilAssign } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCounselorTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCounselorFilterStore"])();
    const { availableMenuIdsForSkilAssignment } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$useAvailableMenuStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAvailableMenuStore"])();
    // 다이얼로그 상태 관리
    const [isSkillDialogOpen, setIsSkillDialogOpen] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const [isTeamSkillDialogOpen, setIsTeamSkillDialogOpen] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const [isGroupSkillDialogOpen, setIsGroupSkillDialogOpen] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const [isUnassignment, setIsUnassignment] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false); // 할당 해제 모드 여부
    // 컨텍스트 메뉴 상태 관리 추가
    const [isDialogActive, setIsDialogActive] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    // 다이얼로그 닫힐 때 상태 초기화 핸들러
    const handleDialogClose = ()=>{
        setIsSkillDialogOpen(false);
        setIsTeamSkillDialogOpen(false);
        setIsGroupSkillDialogOpen(false);
        setIsDialogActive(false); // 중요: 다이얼로그가 닫힐 때 상태 초기화
    };
    // 디버깅용 로그
    const logDebugInfo = (actionType, data)=>{
        console.group(`🔍 [ContextMenu] ${actionType}`);
        console.log("타입:", item.type);
        console.log("이름:", item.name);
        console.log("ID:", item.id);
        console.log("테넌트 ID:", item.tenantId);
        if (item.members) {
            console.log("멤버 수:", item.members.length);
            console.log("첫 번째 멤버 샘플:", item.members[0]);
        }
        console.log("전달 데이터:", data);
        console.groupEnd();
    };
    // tenantId 유효성 검증
    const validateTenantId = ()=>{
        if (!item.tenantId) {
            console.error("⚠️ Context Menu: tenantId가 누락되었습니다. item:", item);
            return false;
        }
        return true;
    };
    // ====== 상담사(개인) 관련 함수 ======
    const handleCounselorSkillAssignment = (isUnassign)=>{
        if (!validateTenantId()) return;
        logDebugInfo(isUnassign ? "상담사 스킬 해제" : "상담사 스킬 할당", {
            counselorId: item.id,
            counselorName: item.name,
            tenantId: item.tenantId,
            isUnassignment: isUnassign
        });
        setIsUnassignment(isUnassign);
        setIsDialogActive(true); // 다이얼로그 활성화 상태로 설정
        setIsSkillDialogOpen(true);
    };
    // ====== 팀 관련 함수 ======
    const handleTeamSkillAssignment = (isUnassign)=>{
        if (!validateTenantId()) return;
        if (!item.members || item.members.length === 0) {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].warn("팀에 멤버가 없습니다.");
            return;
        }
        const membersWithTenantId = item.members.map((member)=>({
                ...member,
                tenantId: item.tenantId
            }));
        logDebugInfo(isUnassign ? "팀 스킬 해제" : "팀 스킬 할당", {
            teamId: item.id,
            teamName: item.name,
            memberCount: membersWithTenantId.length,
            tenantId: item.tenantId,
            isUnassignment: isUnassign
        });
        setIsUnassignment(isUnassign);
        setCandidateMembersForSkilAssign(membersWithTenantId);
        setIsDialogActive(true); // 다이얼로그 활성화 상태로 설정
        setIsTeamSkillDialogOpen(true);
    };
    // ====== 그룹 관련 함수 ======
    const handleGroupSkillAssignment = (isUnassign)=>{
        if (!validateTenantId()) return;
        if (!item.members || item.members.length === 0) {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].warn("그룹에 멤버가 없습니다.");
            return;
        }
        const membersWithTenantId = item.members.map((member)=>({
                ...member,
                tenantId: item.tenantId
            }));
        logDebugInfo(isUnassign ? "그룹 스킬 해제" : "그룹 스킬 할당", {
            groupId: item.id,
            groupName: item.name,
            memberCount: membersWithTenantId.length,
            tenantId: item.tenantId,
            isUnassignment: isUnassign
        });
        setIsUnassignment(isUnassign);
        setCandidateMembersForSkilAssign(membersWithTenantId);
        setIsDialogActive(true); // 다이얼로그 활성화 상태로 설정
        setIsGroupSkillDialogOpen(true);
    };
    // 타입별로 할당 / 해제 분기 처리
    const openSkillAssignmentDialog = (isUnassign = false)=>{
        switch(item.type){
            case "counselor":
                handleCounselorSkillAssignment(isUnassign);
                break;
            case "team":
                handleTeamSkillAssignment(isUnassign);
                break;
            case "group":
                handleGroupSkillAssignment(isUnassign);
                break;
            default:
                console.warn(`⚠️ 알 수 없는 타입: ${item.type}`);
        }
    };
    // 메뉴 항목 제목 반환
    const getMenuItemTitle = (isUnassign = false)=>{
        if (isUnassign) {
            return "스킬 할당 해제";
        }
        switch(item.type){
            case "counselor":
                return "상담사 스킬 할당";
            case "team":
                return "팀 스킬 할당";
            case "group":
                return "그룹 스킬 할당";
            default:
                return "스킬 할당";
        }
    };
    // 다이얼로그 타이틀 생성
    const getDialogTitle = ()=>{
        const actionText = isUnassignment ? "해제" : "할당";
        switch(item.type){
            case "counselor":
                return `상담사 스킬 ${actionText} - ${item.name}`;
            case "team":
                return `팀 스킬 ${actionText} - ${item.name}`;
            case "group":
                return `그룹 스킬 ${actionText} - ${item.name}`;
            default:
                return `스킬 ${actionText}`;
        }
    };
    // 각 타입별 메뉴 아이템 ID 반환
    const getMenuItemId = (type, isUnassign)=>{
        switch(type){
            case "counselor":
                return isUnassign ? MENU_IDS.COUNSELOR_SKILL_UNASSIGN : MENU_IDS.COUNSELOR_SKILL_ASSIGN;
            case "team":
                return isUnassign ? MENU_IDS.TEAM_SKILL_UNASSIGN : MENU_IDS.TEAM_SKILL_ASSIGN;
            case "group":
                return isUnassign ? MENU_IDS.GROUP_SKILL_UNASSIGN : MENU_IDS.GROUP_SKILL_ASSIGN;
            default:
                return 0;
        }
    };
    // 메뉴 권한 체크 (현재 로그인한 사용자가 해당 메뉴에 접근 권한이 있는지)
    const hasMenuPermission = (menuId)=>{
        return availableMenuIdsForSkilAssignment.includes(menuId);
    };
    // 메뉴 아이템 배열 생성
    const menuItems = [
        {
            key: "skill-assign",
            title: getMenuItemTitle(false),
            menuId: getMenuItemId(item.type, false),
            isUnassign: false
        },
        {
            key: "skill-unassign",
            title: getMenuItemTitle(true),
            menuId: getMenuItemId(item.type, true),
            isUnassign: true
        }
    ];
    // 권한이 있는 메뉴 아이템만 필터링
    const authorizedMenuItems = menuItems.filter((menuItem)=>hasMenuPermission(menuItem.menuId));
    const hasAnyMenuItems = authorizedMenuItems.length > 0;
    // 메뉴 아이템 클릭 핸들러
    const handleItemClick = (isUnassign)=>{
        openSkillAssignmentDialog(isUnassign);
    };
    // 컨텍스트 메뉴 트리거를 위한 스타일
    const triggerStyles = {
        display: "inline-block",
        width: "100%",
        height: "100%"
    };
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Fragment"], {
        children: [
            hasAnyMenuItems ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenu"], {
                modal: false,
                children: [
                    " ",
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuTrigger"], {
                        className: "w-full h-full",
                        disabled: isDialogActive,
                        children: children
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForGroupAndTeamAndCounselorProps.tsx",
                        lineNumber: 526,
                        columnNumber: 11
                    }, this),
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuContent"], {
                        className: "min-w-[150px] rounded-[3px] border border-[#333]",
                        children: authorizedMenuItems.map((menuItem)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuItem"], {
                                className: "px-[6px] py-[4px] text-sm cursor-pointer hover:bg-gray-100",
                                onClick: ()=>handleItemClick(menuItem.isUnassign),
                                children: menuItem.title
                            }, menuItem.key, false, {
                                fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForGroupAndTeamAndCounselorProps.tsx",
                                lineNumber: 534,
                                columnNumber: 15
                            }, this))
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForGroupAndTeamAndCounselorProps.tsx",
                        lineNumber: 532,
                        columnNumber: 11
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForGroupAndTeamAndCounselorProps.tsx",
                lineNumber: 525,
                columnNumber: 9
            }, this) : /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Fragment"], {
                children: children
            }, void 0, false),
            item.type === "counselor" && isSkillDialogOpen && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$dialog$2f$IDialogForSkilAssignmentForCounselor$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["IDialogForSkilAssignmentForCounselor"], {
                isOpen: isSkillDialogOpen,
                onClose: handleDialogClose,
                counselorId: item.id,
                counselorName: item.name,
                tenantId: item.tenantId,
                isUnassignment: isUnassignment,
                dialogTitle: getDialogTitle()
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForGroupAndTeamAndCounselorProps.tsx",
                lineNumber: 550,
                columnNumber: 9
            }, this),
            item.type === "team" && isTeamSkillDialogOpen && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$dialog$2f$IDialogForTeamSkilAssignment$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["IDialogForTeamSkilAssignment"], {
                isOpen: isTeamSkillDialogOpen,
                onClose: handleDialogClose,
                teamId: item.id,
                teamName: item.name,
                teamMembers: item.members || [],
                tenantId: item.tenantId,
                isUnassignment: isUnassignment,
                dialogTitle: getDialogTitle()
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForGroupAndTeamAndCounselorProps.tsx",
                lineNumber: 563,
                columnNumber: 9
            }, this),
            item.type === "group" && isGroupSkillDialogOpen && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$dialog$2f$IDialogForGroupSkilAssignment$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["IDialogForGroupSkilAssignment"], {
                isOpen: isGroupSkillDialogOpen,
                onClose: handleDialogClose,
                groupId: item.id,
                groupName: item.name,
                groupMembers: item.members || [],
                tenantId: item.tenantId,
                isUnassignment: isUnassignment,
                dialogTitle: getDialogTitle()
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForGroupAndTeamAndCounselorProps.tsx",
                lineNumber: 577,
                columnNumber: 9
            }, this)
        ]
    }, void 0, true);
}
_s(IContextMenuForGroupAndTeamAndCounselor, "V36/BDfKpbBFh/hX+LMR8fbsQOY=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$tabStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTabStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCounselorTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCounselorFilterStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$useAvailableMenuStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAvailableMenuStore"]
    ];
});
_c = IContextMenuForGroupAndTeamAndCounselor;
var _c;
__turbopack_refresh__.register(_c, "IContextMenuForGroupAndTeamAndCounselor");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCounselorListForSideBar.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// "use client";
// import React, { useCallback } from 'react';
// import { UserCircle2 } from "lucide-react";
// import { IContextMenuForTennantForCounselorTreeMenu } from "./ContextMenus/IContextMenuForTennantForCounselorTreeMenu";
// import { IContextMenuForGroupAndTeamAndCounselor } from "./ContextMenus/IContextMenuForGroupAndTeamAndCounselorProps";
// import { useCounselorFilterStore } from "@/store/storeForSideMenuCounselorTab";
// import Image from "next/image";
// interface ExpandConfig {
//   organization?: boolean;
//   tenant?: boolean;
//   group?: boolean;
//   team?: boolean;
//   counselor?: boolean;
// }
// interface ITreeNodeForCounselorListForSideBar {
//   data: any;
//   level: number;
//   expandedNodes: Set<string>;
//   selectedNodeId?: string;
//   onNodeToggle: (nodeId: string) => void;
//   onNodeSelect: (nodeId: string) => void;
//   type: 'organization' | 'tenant' | 'group' | 'team' | 'counselor';
//   defaultExpanded: ExpandConfig;
//   parentTenantId?: string; // 부모로부터 전달된 tenantId
// }
// export function TreeNodeForCounselorListForSideBar({
//   data,
//   level,
//   expandedNodes,
//   selectedNodeId,
//   onNodeToggle,
//   onNodeSelect,
//   type,
//   defaultExpanded,
//   parentTenantId
// }: ITreeNodeForCounselorListForSideBar) {
//   const { selectedBlendKind, setSelectedCounselor, sortOption } = useCounselorFilterStore();
//   // 현재 노드의 tenantId 결정 (자신의 것이 있으면 그것을 사용, 없으면 부모에서 전달)
//   const currentTenantId = type === 'tenant' ? data.tenantId : parentTenantId;
//   const getCounselorsForNode = () => {
//     switch (type) {
//       case 'counselor':
//         return [{
//           ...data,
//           tenantId: currentTenantId // 상담사 정보에 현재 tenantId 추가
//         }];
//       case 'team': {
//         let counselors = data.counselorInfo?.map((counselor: any) => ({
//           type: 'counselor',
//           data: {
//             ...counselor,
//             tenantId: currentTenantId // 상담사에 tenantId 추가
//           }
//         })) || [];
//         // blendKind 필터 적용 (필요한 경우)
//         if (selectedBlendKind !== null) {
//           counselors = counselors.filter(
//             (counselor: any) => Number(counselor.data.blendKind) === selectedBlendKind
//           );
//         }
//         // store의 sortOption에 따라 상담사 정렬 (이름 또는 아이디 기준)
//         counselors.sort((a: { data: { counselorname: string; counselorId: string } }, b: { data: { counselorname: string; counselorId: string } }) => {
//           if (sortOption.type === 'name') {
//             if (a.data.counselorname < b.data.counselorname) return sortOption.direction === 'asc' ? -1 : 1;
//             if (a.data.counselorname > b.data.counselorname) return sortOption.direction === 'asc' ? 1 : -1;
//             return 0;
//           } else {
//             if (a.data.counselorId < b.data.counselorId) return sortOption.direction === 'asc' ? -1 : 1;
//             if (a.data.counselorId > b.data.counselorId) return sortOption.direction === 'asc' ? 1 : -1;
//             return 0;
//           }
//         });
//         return counselors;
//       }
//       case 'group':
//         // 그룹 내 모든 팀의 상담사 정보에 tenantId 추가
//         return data.teamInfo?.reduce((acc: any[], team: any) => {
//           const counselors = team.counselorInfo?.map((counselor: any) => ({
//             ...counselor,
//             tenantId: currentTenantId
//           })) || [];
//           return acc.concat(counselors);
//         }, []) || [];
//       default:
//         return [];
//     }
//   };
//   const getId = () => {
//     switch (type) {
//       case 'organization': return `org-${data.centerId}`;
//       case 'tenant': return `tenant-${data.tenantId}`;
//       case 'group': return `group-${data.groupId}`;
//       case 'team': return `team-${data.teamId}`;
//       case 'counselor': return data.counselorId;
//     }
//   };
//   const getLabel = () => {
//     switch (type) {
//       case 'organization': return data.centerName;
//       case 'tenant': return data.tenantName;
//       case 'group': return data.groupName;
//       case 'team': return data.teamName;
//       case 'counselor': return data.counselorname;
//     }
//   };
//   const getChildren = () => {
//     switch (type) {
//       case 'organization': 
//         return data.tenantInfo?.map((tenant: any) => ({
//           type: 'tenant',
//           data: tenant
//         }));
//       case 'tenant': 
//         return data.groupInfo?.map((group: any) => ({
//           type: 'group',
//           data: {
//             ...group,
//             tenantId: data.tenantId // 그룹에 tenantId 추가
//           }
//         }));
//       case 'group': 
//         return data.teamInfo?.map((team: any) => ({
//           type: 'team',
//           data: {
//             ...team,
//             tenantId: currentTenantId // 팀에 tenantId 추가
//           }
//         }));
//       case 'team': {
//         let counselors = data.counselorInfo?.map((counselor: any) => ({
//           type: 'counselor',
//           data: {
//             ...counselor,
//             tenantId: currentTenantId // 상담사에 tenantId 추가
//           }
//         })) || [];
//         if (selectedBlendKind !== null) {
//           counselors = counselors.filter(
//             (counselor: any) => Number(counselor.data.blendKind) === selectedBlendKind
//           );
//         }
//         // 상담사 정렬
//         counselors.sort((a: { data: { counselorname: string; counselorId: string } }, b: { data: { counselorname: string; counselorId: string } }) => {
//           if (sortOption.type === 'name') {
//             if (a.data.counselorname < b.data.counselorname) return sortOption.direction === 'asc' ? -1 : 1;
//             if (a.data.counselorname > b.data.counselorname) return sortOption.direction === 'asc' ? 1 : -1;
//             return 0;
//           } else {
//             if (a.data.counselorId < b.data.counselorId) return sortOption.direction === 'asc' ? -1 : 1;
//             if (a.data.counselorId > b.data.counselorId) return sortOption.direction === 'asc' ? 1 : -1;
//             return 0;
//           }
//         });
//         return counselors;
//       }
//       case 'counselor': return null;
//     }
//   };
//   const id = getId();
//   const label = getLabel();
//   const children = getChildren();
//   const hasChildren = children && children.length > 0;
//   const isExpanded = expandedNodes.has(id);
//   const isSelected = selectedNodeId === id;
//   const handleNodeClick = () => {
//     onNodeSelect(id);
//     if (hasChildren) {
//       onNodeToggle(id);
//     }
//     if (type === 'counselor') {
//       // 상담사 정보에 이미 tenantId가 포함되어 있거나, parentTenantId를 사용
//       const tenantId = data.tenantId || currentTenantId;
//       if (tenantId) {
//         console.log(`상담사 선택: ${data.counselorname}, TenantID: ${tenantId}`);
//         setSelectedCounselor(
//           data.counselorId,
//           data.counselorname,
//           tenantId
//         );
//       } else {
//         console.warn(`상담사 ${data.counselorname}의 tenantId를 찾을 수 없습니다.`);
//       }
//     }
//     console.log(`${type} ${label} 클릭 - TenantID: ${currentTenantId}`);
//     const counselors = getCounselorsForNode();
//     console.log(`${type} 노드의 상담사 목록:`, counselors);
//   };
//   const handleContextMenu = useCallback(() => {
//     onNodeSelect(id);
//   }, [id, onNodeSelect]);
//   const renderIcon = () => {
//     switch (type) {
//       case 'organization':
//         return <Image src="/tree-menu/organization.png" alt="조직" width={14} height={12} />;
//       case 'tenant':
//         return <Image src="/tree-menu/tennant_office.png" alt="테넌트" width={14} height={12} />;
//       case 'group':
//         return <Image src="/tree-menu/group_icon_for_tree.png" alt="그룹" width={15} height={12} />;
//       case 'team':
//         return <Image src="/tree-menu/team_icon_for_tree.png" alt="팀" width={14} height={12} />;
//       case 'counselor':
//         const blendKind = Number(data.blendKind);
//         switch (blendKind) {
//           case 1:
//             return <Image src="/tree-menu/inbound_counselor.png" alt="인바운드" width={15} height={12} />;
//           case 2:
//             return <Image src="/tree-menu/outbound_counselor.png" alt="아웃바운드" width={15} height={12} />;
//           case 3:
//             return <Image src="/tree-menu/inbound_outbound_mix.png" alt="블렌드" width={15} height={12} />;
//           default:
//             return <UserCircle2 className="h-4 w-4 text-gray-600" />;
//         }
//     }
//   };
//   const renderNodeContent = () => (
//     <div
//       id={type === 'counselor' ? `counselor-${data.counselorId}` : undefined}
//       className={`flex items-center hover:bg-[#FFFAEE] px-2 py-0.5 cursor-pointer transition-colors duration-150 text-[#555]
//         ${isSelected ? "bg-[#FFFAEE]" : ""}`}
//       onClick={handleNodeClick}
//       onContextMenu={handleContextMenu}
//       style={{ paddingLeft: `${level * 16 + 8}px` }}
//     >
//       <div className="flex items-center w-full gap-2">
//         {hasChildren ? (
//           isExpanded ? (
//             <Image src="/tree-menu/minus_for_tree.png" alt="접기" width={12} height={12} />
//           ) : (
//             <Image src="/tree-menu/plus_icon_for_tree.png" alt="펼치기" width={12} height={12} />
//           )
//         ) : (
//           <span className="w-3" />
//         )}
//         {renderIcon()}
//         <span className={`text-sm text-555 ${isSelected ? "font-medium" : ""}`}>
//           {type === 'counselor' ? `${getId()} [${getLabel()}]` : getLabel()}
//         </span>
//       </div>
//     </div>
//   );
//   const renderWithContextMenu = (content: React.ReactNode) => {
//     // 1) organization 노드도 tenant와 동일한 컨텍스트 메뉴를 쓰고 싶다면
//     if (type === 'organization' || type === 'tenant') {
//       return (
//         <IContextMenuForTennantForCounselorTreeMenu>
//           {content}
//         </IContextMenuForTennantForCounselorTreeMenu>
//       );
//     }
//     // 2) group, team, counselor는 기존 로직 그대로
//     if (['group', 'team', 'counselor'].includes(type)) {
//       const counselors = getCounselorsForNode();
//       const contextMenuItem = {
//         id:
//           type === 'counselor'
//             ? data.counselorId
//             : type === 'team'
//             ? data.teamId
//             : data.groupId,
//         name:
//           type === 'counselor'
//             ? data.counselorname
//             : type === 'team'
//             ? data.teamName
//             : data.groupName,
//         tenantId: currentTenantId,
//         type: type as 'counselor' | 'team' | 'group',
//         members: counselors
//       };
//       return (
//         <IContextMenuForGroupAndTeamAndCounselor item={contextMenuItem}>
//           {content}
//         </IContextMenuForGroupAndTeamAndCounselor>
//       );
//     }
//     // 그 외에는 컨텍스트 메뉴를 적용하지 않음
//     return content;
//   };
//   return (
//     <div className="select-none">
//       {renderWithContextMenu(renderNodeContent())}
//       {hasChildren && isExpanded && (
//         <div className="space-y-0.5">
//           {children.map((child: any) => {
//             let childId;
//             switch (child.type) {
//               case 'tenant': childId = child.data.tenantId; break;
//               case 'group': childId = child.data.groupId; break;
//               case 'team': childId = child.data.teamId; break;
//               case 'counselor': childId = child.data.counselorId; break;
//               default: childId = child.data.centerId;
//             }
//             return (
//               <TreeNodeForCounselorListForSideBar
//                 key={`${child.type}-${childId}`}
//                 data={child.data}
//                 type={child.type}
//                 level={level + 1}
//                 expandedNodes={expandedNodes}
//                 selectedNodeId={selectedNodeId}
//                 onNodeToggle={onNodeToggle}
//                 onNodeSelect={onNodeSelect}
//                 defaultExpanded={defaultExpanded}
//                 parentTenantId={currentTenantId}
//               />
//             );
//           })}
//         </div>
//       )}
//     </div>
//   );
// }
__turbopack_esm__({
    "TreeNodeForCounselorListForSideBar": (()=>TreeNodeForCounselorListForSideBar)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$ContextMenus$2f$IContextMenuForTennantForCounselorTreeMenu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForTennantForCounselorTreeMenu.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$ContextMenus$2f$IContextMenuForGroupAndTeamAndCounselorProps$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForGroupAndTeamAndCounselorProps.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCounselorTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/storeForSideMenuCounselorTab.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/image.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$circle$2d$user$2d$round$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__UserCircle2$3e$__ = __turbopack_import__("[project]/node_modules/lucide-react/dist/esm/icons/circle-user-round.js [app-client] (ecmascript) <export default as UserCircle2>");
;
var _s = __turbopack_refresh__.signature();
"use client";
;
;
;
;
;
;
function TreeNodeForCounselorListForSideBar({ data, level, expandedNodes, selectedNodeId, onNodeToggle, onNodeSelect, type, defaultExpanded, parentTenantId }) {
    _s();
    const { selectedBlendKind, setSelectedCounselor, sortOption } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCounselorTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCounselorFilterStore"])();
    // 현재 노드의 tenantId 결정 (자신의 것이 있으면 그것을 사용, 없으면 부모에서 전달)
    const currentTenantId = type === 'tenant' ? data.tenantId : parentTenantId;
    const getCounselorsForNode = ()=>{
        switch(type){
            case 'counselor':
                return [
                    {
                        ...data,
                        tenantId: currentTenantId // 상담사 정보에 현재 tenantId 추가
                    }
                ];
            case 'team':
                {
                    let counselors = data.counselorInfo?.map((counselor)=>({
                            type: 'counselor',
                            data: {
                                ...counselor,
                                tenantId: currentTenantId // 상담사에 tenantId 추가
                            }
                        })) || [];
                    // blendKind 필터 적용 (필요한 경우)
                    if (selectedBlendKind !== null) {
                        counselors = counselors.filter((counselor)=>{
                            const blendKind = Number(counselor.data.blendKind);
                            if (selectedBlendKind === 1) {
                                // 인바운드 선택 시 인바운드(1)와 블렌드(3)도 표시
                                return blendKind === 1 || blendKind === 3;
                            } else if (selectedBlendKind === 2) {
                                // 아웃바운드 선택 시 아웃바운드(2)와 블렌드(3)도 표시
                                return blendKind === 2 || blendKind === 3;
                            } else {
                                // 그 외(블렌드 선택 시)는 정확히 일치하는 것만
                                return blendKind === selectedBlendKind;
                            }
                        });
                    }
                    // store의 sortOption에 따라 상담사 정렬 (이름 또는 아이디 기준)
                    counselors.sort((a, b)=>{
                        if (sortOption.type === 'name') {
                            if (a.data.counselorname < b.data.counselorname) return sortOption.direction === 'asc' ? -1 : 1;
                            if (a.data.counselorname > b.data.counselorname) return sortOption.direction === 'asc' ? 1 : -1;
                            return 0;
                        } else {
                            if (a.data.counselorId < b.data.counselorId) return sortOption.direction === 'asc' ? -1 : 1;
                            if (a.data.counselorId > b.data.counselorId) return sortOption.direction === 'asc' ? 1 : -1;
                            return 0;
                        }
                    });
                    return counselors;
                }
            case 'group':
                // 그룹 내 모든 팀의 상담사 정보에 tenantId 추가
                return data.teamInfo?.reduce((acc, team)=>{
                    const counselors = team.counselorInfo?.map((counselor)=>({
                            ...counselor,
                            tenantId: currentTenantId
                        })) || [];
                    return acc.concat(counselors);
                }, []) || [];
            default:
                return [];
        }
    };
    const getId = ()=>{
        switch(type){
            case 'organization':
                return `org-${data.centerId}`;
            case 'tenant':
                return `tenant-${data.tenantId}`;
            case 'group':
                return `group-${data.groupId}`;
            case 'team':
                return `team-${data.teamId}`;
            case 'counselor':
                return data.counselorId;
        }
    };
    const getLabel = ()=>{
        switch(type){
            case 'organization':
                return data.centerName;
            case 'tenant':
                return data.tenantName;
            case 'group':
                return '[' + data.groupId + ']' + data.groupName;
            case 'team':
                return '[' + data.teamId + ']' + data.teamName;
            case 'counselor':
                return data.counselorname;
        }
    };
    const getChildren = ()=>{
        switch(type){
            case 'organization':
                return data.tenantInfo?.map((tenant)=>({
                        type: 'tenant',
                        data: tenant
                    }));
            case 'tenant':
                return data.groupInfo?.map((group)=>({
                        type: 'group',
                        data: {
                            ...group,
                            tenantId: data.tenantId // 그룹에 tenantId 추가
                        }
                    }));
            case 'group':
                return data.teamInfo?.map((team)=>({
                        type: 'team',
                        data: {
                            ...team,
                            tenantId: currentTenantId // 팀에 tenantId 추가
                        }
                    }));
            case 'team':
                {
                    let counselors = data.counselorInfo?.map((counselor)=>({
                            type: 'counselor',
                            data: {
                                ...counselor,
                                tenantId: currentTenantId // 상담사에 tenantId 추가
                            }
                        })) || [];
                    if (selectedBlendKind !== null) {
                        counselors = counselors.filter((counselor)=>{
                            const blendKind = Number(counselor.data.blendKind);
                            if (selectedBlendKind === 1) {
                                // 인바운드 선택 시 인바운드(1)와 블렌드(3)도 표시
                                return blendKind === 1 || blendKind === 3;
                            } else if (selectedBlendKind === 2) {
                                // 아웃바운드 선택 시 아웃바운드(2)와 블렌드(3)도 표시
                                return blendKind === 2 || blendKind === 3;
                            } else {
                                // 그 외(블렌드 선택 시)는 정확히 일치하는 것만
                                return blendKind === selectedBlendKind;
                            }
                        });
                    }
                    // 상담사 정렬
                    counselors.sort((a, b)=>{
                        if (sortOption.type === 'name') {
                            if (a.data.counselorname < b.data.counselorname) return sortOption.direction === 'asc' ? -1 : 1;
                            if (a.data.counselorname > b.data.counselorname) return sortOption.direction === 'asc' ? 1 : -1;
                            return 0;
                        } else {
                            if (a.data.counselorId < b.data.counselorId) return sortOption.direction === 'asc' ? -1 : 1;
                            if (a.data.counselorId > b.data.counselorId) return sortOption.direction === 'asc' ? 1 : -1;
                            return 0;
                        }
                    });
                    return counselors;
                }
            case 'counselor':
                return null;
        }
    };
    const id = getId();
    const label = getLabel();
    const children = getChildren();
    const hasChildren = children && children.length > 0;
    const isExpanded = expandedNodes.has(id);
    const isSelected = selectedNodeId === id;
    const handleNodeClick = ()=>{
        onNodeSelect(id);
        if (hasChildren) {
            onNodeToggle(id);
        }
        if (type === 'counselor') {
            // 상담사 정보에 이미 tenantId가 포함되어 있거나, parentTenantId를 사용
            const tenantId = data.tenantId || currentTenantId;
            if (tenantId) {
                console.log(`상담사 선택: ${data.counselorname}, TenantID: ${tenantId}`);
                setSelectedCounselor(data.counselorId, data.counselorname, tenantId);
            } else {
                console.warn(`상담사 ${data.counselorname}의 tenantId를 찾을 수 없습니다.`);
            }
        }
        console.log(`${type} ${label} 클릭 - TenantID: ${currentTenantId}`);
        const counselors = getCounselorsForNode();
        console.log(`${type} 노드의 상담사 목록:`, counselors);
    };
    const handleContextMenu = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "TreeNodeForCounselorListForSideBar.useCallback[handleContextMenu]": ()=>{
            onNodeSelect(id);
        }
    }["TreeNodeForCounselorListForSideBar.useCallback[handleContextMenu]"], [
        id,
        onNodeSelect
    ]);
    const renderIcon = ()=>{
        switch(type){
            case 'organization':
                return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                    src: "/tree-menu/organization.png",
                    alt: "조직",
                    width: 14,
                    height: 12
                }, void 0, false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCounselorListForSideBar.tsx",
                    lineNumber: 575,
                    columnNumber: 16
                }, this);
            case 'tenant':
                return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                    src: "/tree-menu/tennant_office.png",
                    alt: "테넌트",
                    width: 14,
                    height: 12
                }, void 0, false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCounselorListForSideBar.tsx",
                    lineNumber: 577,
                    columnNumber: 16
                }, this);
            case 'group':
                return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                    src: "/tree-menu/group_icon_for_tree.png",
                    alt: "그룹",
                    width: 15,
                    height: 12
                }, void 0, false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCounselorListForSideBar.tsx",
                    lineNumber: 579,
                    columnNumber: 16
                }, this);
            case 'team':
                return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                    src: "/tree-menu/team_icon_for_tree.png",
                    alt: "팀",
                    width: 14,
                    height: 12
                }, void 0, false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCounselorListForSideBar.tsx",
                    lineNumber: 581,
                    columnNumber: 16
                }, this);
            case 'counselor':
                const blendKind = Number(data.blendKind);
                switch(blendKind){
                    case 1:
                        return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                            src: "/tree-menu/inbound_counselor.png",
                            alt: "인바운드",
                            width: 15,
                            height: 12
                        }, void 0, false, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCounselorListForSideBar.tsx",
                            lineNumber: 586,
                            columnNumber: 20
                        }, this);
                    case 2:
                        return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                            src: "/tree-menu/outbound_counselor.png",
                            alt: "아웃바운드",
                            width: 15,
                            height: 12
                        }, void 0, false, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCounselorListForSideBar.tsx",
                            lineNumber: 588,
                            columnNumber: 20
                        }, this);
                    case 3:
                        return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                            src: "/tree-menu/inbound_outbound_mix.png",
                            alt: "블렌드",
                            width: 15,
                            height: 12
                        }, void 0, false, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCounselorListForSideBar.tsx",
                            lineNumber: 590,
                            columnNumber: 20
                        }, this);
                    default:
                        return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$circle$2d$user$2d$round$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__UserCircle2$3e$__["UserCircle2"], {
                            className: "h-4 w-4 text-gray-600"
                        }, void 0, false, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCounselorListForSideBar.tsx",
                            lineNumber: 592,
                            columnNumber: 20
                        }, this);
                }
        }
    };
    const renderNodeContent = ()=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
            id: type === 'counselor' ? `counselor-${data.counselorId}` : undefined,
            className: `flex items-center hover:bg-[#FFFAEE] px-2 py-0.5 cursor-pointer transition-colors duration-150 text-[#555]
        ${isSelected ? "bg-[#FFFAEE]" : ""}`,
            onClick: handleNodeClick,
            onContextMenu: handleContextMenu,
            style: {
                paddingLeft: `${level * 16 + 8}px`
            },
            children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "flex items-center w-full gap-2",
                children: [
                    hasChildren ? isExpanded ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                        src: "/tree-menu/minus_for_tree.png",
                        alt: "접기",
                        width: 12,
                        height: 12
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCounselorListForSideBar.tsx",
                        lineNumber: 609,
                        columnNumber: 13
                    }, this) : /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                        src: "/tree-menu/plus_icon_for_tree.png",
                        alt: "펼치기",
                        width: 12,
                        height: 12
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCounselorListForSideBar.tsx",
                        lineNumber: 611,
                        columnNumber: 13
                    }, this) : /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                        className: "w-3"
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCounselorListForSideBar.tsx",
                        lineNumber: 614,
                        columnNumber: 11
                    }, this),
                    renderIcon(),
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                        className: `text-sm text-555 ${isSelected ? "font-medium" : ""}`,
                        children: type === 'counselor' ? `${getId()} [${getLabel()}]` : getLabel()
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCounselorListForSideBar.tsx",
                        lineNumber: 617,
                        columnNumber: 9
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCounselorListForSideBar.tsx",
                lineNumber: 606,
                columnNumber: 7
            }, this)
        }, void 0, false, {
            fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCounselorListForSideBar.tsx",
            lineNumber: 598,
            columnNumber: 5
        }, this);
    const renderWithContextMenu = (content)=>{
        // 1) organization 노드도 tenant와 동일한 컨텍스트 메뉴를 쓰고 싶다면
        if (type === 'organization' || type === 'tenant') {
            return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$ContextMenus$2f$IContextMenuForTennantForCounselorTreeMenu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["IContextMenuForTennantForCounselorTreeMenu"], {
                children: content
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCounselorListForSideBar.tsx",
                lineNumber: 628,
                columnNumber: 9
            }, this);
        }
        // 2) group, team, counselor는 기존 로직 그대로
        if ([
            'group',
            'team',
            'counselor'
        ].includes(type)) {
            const counselors = getCounselorsForNode();
            const contextMenuItem = {
                id: type === 'counselor' ? data.counselorId : type === 'team' ? data.teamId : data.groupId,
                name: type === 'counselor' ? data.counselorname : type === 'team' ? data.teamName : data.groupName,
                tenantId: currentTenantId,
                type: type,
                members: counselors
            };
            return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$ContextMenus$2f$IContextMenuForGroupAndTeamAndCounselorProps$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["IContextMenuForGroupAndTeamAndCounselor"], {
                item: contextMenuItem,
                children: content
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCounselorListForSideBar.tsx",
                lineNumber: 657,
                columnNumber: 9
            }, this);
        }
        // 그 외에는 컨텍스트 메뉴를 적용하지 않음
        return content;
    };
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
        className: "select-none",
        children: [
            renderWithContextMenu(renderNodeContent()),
            hasChildren && isExpanded && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "space-y-0.5",
                children: children.map((child)=>{
                    let childId;
                    switch(child.type){
                        case 'tenant':
                            childId = child.data.tenantId;
                            break;
                        case 'group':
                            childId = child.data.groupId;
                            break;
                        case 'team':
                            childId = child.data.teamId;
                            break;
                        case 'counselor':
                            childId = child.data.counselorId;
                            break;
                        default:
                            childId = child.data.centerId;
                    }
                    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(TreeNodeForCounselorListForSideBar, {
                        data: child.data,
                        type: child.type,
                        level: level + 1,
                        expandedNodes: expandedNodes,
                        selectedNodeId: selectedNodeId,
                        onNodeToggle: onNodeToggle,
                        onNodeSelect: onNodeSelect,
                        defaultExpanded: defaultExpanded,
                        parentTenantId: currentTenantId
                    }, `${child.type}-${childId}`, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCounselorListForSideBar.tsx",
                        lineNumber: 682,
                        columnNumber: 15
                    }, this);
                })
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCounselorListForSideBar.tsx",
                lineNumber: 671,
                columnNumber: 9
            }, this)
        ]
    }, void 0, true, {
        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCounselorListForSideBar.tsx",
        lineNumber: 668,
        columnNumber: 5
    }, this);
}
_s(TreeNodeForCounselorListForSideBar, "GvWbdLH96Kk/7N9FsDdlyKPlx0U=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCounselorTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCounselorFilterStore"]
    ];
});
_c = TreeNodeForCounselorListForSideBar;
var _c;
__turbopack_refresh__.register(_c, "TreeNodeForCounselorListForSideBar");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/components/treeMenus/searchbar/SearchBarForSideMenuForCounselorTab.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// "use client";
// import { Search } from 'lucide-react';
// import { KeyboardEvent, useState, useEffect, useRef, MouseEvent as ReactMouseEvent } from 'react';
// interface Counselor {
//   counselorId: string;
//   counselorName: string;
//   tenantId: string;
// }
// interface SearchBarProps {
//   value: string;
//   onChange: (value: string) => void;
//   onSearch: () => void;
//   placeholder?: string;
//   counselors?: Counselor[]; // 전체 상담사 목록 받기
//   onSelectCounselor?: (counselorId: string, counselorName: string, tenantId: string) => void;
// }
// export function SearchBarForSideMenuForCounselorTab({ 
//   value, 
//   onChange, 
//   onSearch,
//   placeholder = "상담사",
//   counselors = [],
//   onSelectCounselor
// }: SearchBarProps) {
//   const [suggestions, setSuggestions] = useState<Counselor[]>([]);
//   const [showSuggestions, setShowSuggestions] = useState(false);
//   const suggestionRef = useRef<HTMLDivElement>(null);
//   const inputRef = useRef<HTMLInputElement>(null);
//   // 검색 완료 또는 항목 선택 완료 후 상태를 추적하는 변수 추가
//   const [recentlySelected, setRecentlySelected] = useState(false);
//   const handleKeyDown = (e: KeyboardEvent<HTMLInputElement>) => {
//     if (e.key === 'Enter') {
//       e.preventDefault();
//       e.stopPropagation();
//       onSearch();
//       setShowSuggestions(false);
//       setRecentlySelected(true);
//       // 검색 후 포커스를 제거하여 제안이 다시 나타나지 않도록 함
//       if (inputRef.current) {
//         inputRef.current.blur();
//       }
//     } else if (e.key === 'Escape') {
//       setShowSuggestions(false);
//     }
//   };
//   // 입력값이 변경될 때마다 자동완성 목록 업데이트
//   useEffect(() => {
//     // 최근에 선택했으면 제안 표시 안함
//     if (recentlySelected) {
//       setRecentlySelected(false);
//       return;
//     }
//     if (value.length >= 2 && counselors.length > 0) {
//       const filtered = counselors.filter(counselor => 
//         counselor.counselorName.toLowerCase().includes(value.toLowerCase()) && 
//         counselor.counselorName.toLowerCase() !== value.toLowerCase() // 정확히 일치하는 항목은 제외
//       );
//       setSuggestions(filtered);
//       setShowSuggestions(filtered.length > 0);
//     } else {
//       setSuggestions([]);
//       setShowSuggestions(false);
//     }
//   }, [value, counselors, recentlySelected]);
//   // 외부 클릭 시 자동완성 닫기
//   useEffect(() => {
//     const handleClickOutside = (event: globalThis.MouseEvent) => {
//       if (
//         suggestionRef.current && 
//         !suggestionRef.current.contains(event.target as Node) &&
//         inputRef.current && 
//         !inputRef.current.contains(event.target as Node)
//       ) {
//         setShowSuggestions(false);
//       }
//     };
//     document.addEventListener('mousedown', handleClickOutside);
//     return () => {
//       document.removeEventListener('mousedown', handleClickOutside);
//     };
//   }, []);
//   const handleSuggestionClick = (counselor: Counselor) => {
//     onChange(counselor.counselorName);
//     setShowSuggestions(false);
//     setRecentlySelected(true);
//     if (onSelectCounselor) {
//       onSelectCounselor(counselor.counselorId, counselor.counselorName, counselor.tenantId);
//     }
//     // 선택 후 포커스를 제거하여 제안이 다시 나타나지 않도록 함
//     if (inputRef.current) {
//       inputRef.current.blur();
//     }
//   };
//   return (
//     <div className="w-full py-1 px-1">
//       <div className="relative w-full">
//         <input
//           ref={inputRef}
//           type="text"
//           value={value}
//           onChange={(e) => onChange(e.target.value)}
//           onKeyDown={handleKeyDown}
//           onFocus={() => {
//             // 최근에 선택한 경우가 아닐 때만 제안 표시
//             if (!recentlySelected && value.length >= 2 && suggestions.length > 0) {
//               setShowSuggestions(true);
//             }
//           }}
//           placeholder={placeholder}
//           className="w-full pl-2 pr-7 py-1 text-xs border rounded focus:outline-none focus:border-[#5BC2C1]"
//         />
//         <button 
//           onClick={() => {
//             onSearch();
//             setShowSuggestions(false);
//             setRecentlySelected(true);
//             // 검색 후 포커스를 제거
//             if (inputRef.current) {
//               inputRef.current.blur();
//             }
//           }}
//           className="absolute right-2 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600"
//         >
//           <Search size={14} />
//         </button>
//         {/* 자동완성 드롭다운 */}
//         {showSuggestions && (
//           <div 
//             ref={suggestionRef}
//             className="absolute z-10 w-full mt-1 bg-white border rounded shadow-lg max-h-40 overflow-y-auto"
//           >
//             {suggestions.map((counselor) => (
//               <div
//                 key={counselor.counselorId}
//                 className="px-2 py-1 text-xs hover:bg-gray-100 cursor-pointer"
//                 onClick={() => handleSuggestionClick(counselor)}
//               >
//                 {counselor.counselorName}
//               </div>
//             ))}
//           </div>
//         )}
//       </div>
//     </div>
//   );
// }
__turbopack_esm__({
    "SearchBarForSideMenuForCounselorTab": (()=>SearchBarForSideMenuForCounselorTab)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$search$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Search$3e$__ = __turbopack_import__("[project]/node_modules/lucide-react/dist/esm/icons/search.js [app-client] (ecmascript) <export default as Search>");
;
var _s = __turbopack_refresh__.signature();
"use client";
;
;
function SearchBarForSideMenuForCounselorTab({ value, onChange, onSearch, placeholder = "상담사", counselors = [], onSelectCounselor }) {
    _s();
    const [suggestions, setSuggestions] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])([]);
    const [showSuggestions, setShowSuggestions] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const [highlightedIndex, setHighlightedIndex] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(-1);
    const suggestionRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    const inputRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(null);
    // 검색 완료 또는 항목 선택 완료 후 상태를 추적하는 변수 추가
    const [recentlySelected, setRecentlySelected] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const handleKeyDown = (e)=>{
        if (e.key === 'ArrowDown') {
            e.preventDefault();
            if (!showSuggestions && suggestions.length > 0) {
                setShowSuggestions(true);
                setHighlightedIndex(0);
            } else {
                setHighlightedIndex((prev)=>{
                    const nextIndex = prev + 1 >= suggestions.length ? 0 : prev + 1;
                    return nextIndex;
                });
            }
        } else if (e.key === 'ArrowUp') {
            e.preventDefault();
            setHighlightedIndex((prev)=>{
                const nextIndex = prev - 1 < 0 ? suggestions.length - 1 : prev - 1;
                return nextIndex;
            });
        } else if (e.key === 'Enter') {
            if (showSuggestions && highlightedIndex >= 0 && highlightedIndex < suggestions.length) {
                e.preventDefault();
                e.stopPropagation();
                handleSuggestionClick(suggestions[highlightedIndex]);
            } else {
                e.preventDefault();
                e.stopPropagation();
                onSearch();
                setShowSuggestions(false);
                setRecentlySelected(true);
                if (inputRef.current) {
                    inputRef.current.blur();
                }
            }
        } else if (e.key === 'Escape') {
            setShowSuggestions(false);
        }
    };
    // 입력값이 변경될 때마다 자동완성 목록 업데이트
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "SearchBarForSideMenuForCounselorTab.useEffect": ()=>{
            if (recentlySelected) {
                setRecentlySelected(false);
                return;
            }
            if (value.length >= 2 && counselors.length > 0) {
                const filtered = counselors.filter({
                    "SearchBarForSideMenuForCounselorTab.useEffect.filtered": (counselor)=>counselor.counselorName.toLowerCase().includes(value.toLowerCase()) && counselor.counselorName.toLowerCase() !== value.toLowerCase() // 정확히 일치하는 항목은 제외
                }["SearchBarForSideMenuForCounselorTab.useEffect.filtered"]);
                setSuggestions(filtered);
                setShowSuggestions(filtered.length > 0);
                setHighlightedIndex(filtered.length > 0 ? 0 : -1);
            } else {
                setSuggestions([]);
                setShowSuggestions(false);
                setHighlightedIndex(-1);
            }
        }
    }["SearchBarForSideMenuForCounselorTab.useEffect"], [
        value,
        counselors,
        recentlySelected
    ]);
    // 외부 클릭 시 자동완성 닫기
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "SearchBarForSideMenuForCounselorTab.useEffect": ()=>{
            const handleClickOutside = {
                "SearchBarForSideMenuForCounselorTab.useEffect.handleClickOutside": (event)=>{
                    if (suggestionRef.current && !suggestionRef.current.contains(event.target) && inputRef.current && !inputRef.current.contains(event.target)) {
                        setShowSuggestions(false);
                    }
                }
            }["SearchBarForSideMenuForCounselorTab.useEffect.handleClickOutside"];
            document.addEventListener('mousedown', handleClickOutside);
            return ({
                "SearchBarForSideMenuForCounselorTab.useEffect": ()=>{
                    document.removeEventListener('mousedown', handleClickOutside);
                }
            })["SearchBarForSideMenuForCounselorTab.useEffect"];
        }
    }["SearchBarForSideMenuForCounselorTab.useEffect"], []);
    const handleSuggestionClick = (counselor)=>{
        onChange(counselor.counselorName);
        setShowSuggestions(false);
        setRecentlySelected(true);
        if (onSelectCounselor) {
            onSelectCounselor(counselor.counselorId, counselor.counselorName, counselor.tenantId);
        }
        if (inputRef.current) {
            inputRef.current.blur();
        }
    };
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
        className: "w-full py-1 px-1",
        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
            className: "relative w-full",
            children: [
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("input", {
                    ref: inputRef,
                    type: "text",
                    value: value,
                    onChange: (e)=>onChange(e.target.value),
                    onKeyDown: handleKeyDown,
                    onFocus: ()=>{
                        if (!recentlySelected && value.length >= 2 && suggestions.length > 0) {
                            setShowSuggestions(true);
                        }
                    },
                    placeholder: placeholder,
                    className: "w-full pl-2 pr-7 py-1 text-sm border rounded focus:outline-none focus:border-[#5BC2C1]"
                }, void 0, false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/searchbar/SearchBarForSideMenuForCounselorTab.tsx",
                    lineNumber: 290,
                    columnNumber: 9
                }, this),
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("button", {
                    onClick: ()=>{
                        onSearch();
                        setShowSuggestions(false);
                        setRecentlySelected(true);
                        if (inputRef.current) {
                            inputRef.current.blur();
                        }
                    },
                    className: "absolute right-2 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600",
                    children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$search$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Search$3e$__["Search"], {
                        size: 14
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/searchbar/SearchBarForSideMenuForCounselorTab.tsx",
                        lineNumber: 315,
                        columnNumber: 11
                    }, this)
                }, void 0, false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/searchbar/SearchBarForSideMenuForCounselorTab.tsx",
                    lineNumber: 304,
                    columnNumber: 9
                }, this),
                showSuggestions && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                    ref: suggestionRef,
                    className: "absolute z-10 w-full mt-1 bg-white border rounded shadow-lg max-h-40 overflow-y-auto",
                    children: suggestions.map((counselor, index)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                            className: `px-2 py-1 text-xs cursor-pointer ${index === highlightedIndex ? "bg-gray-200" : "hover:bg-gray-100"}`,
                            onClick: ()=>handleSuggestionClick(counselor),
                            children: counselor.counselorName
                        }, counselor.counselorId, false, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/searchbar/SearchBarForSideMenuForCounselorTab.tsx",
                            lineNumber: 325,
                            columnNumber: 15
                        }, this))
                }, void 0, false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/searchbar/SearchBarForSideMenuForCounselorTab.tsx",
                    lineNumber: 320,
                    columnNumber: 11
                }, this)
            ]
        }, void 0, true, {
            fileName: "[project]/src/features/campaignManager/components/treeMenus/searchbar/SearchBarForSideMenuForCounselorTab.tsx",
            lineNumber: 289,
            columnNumber: 7
        }, this)
    }, void 0, false, {
        fileName: "[project]/src/features/campaignManager/components/treeMenus/searchbar/SearchBarForSideMenuForCounselorTab.tsx",
        lineNumber: 288,
        columnNumber: 5
    }, this);
}
_s(SearchBarForSideMenuForCounselorTab, "vP8hqewCooiqCzzL8G+C7oDw4fc=");
_c = SearchBarForSideMenuForCounselorTab;
var _c;
__turbopack_refresh__.register(_c, "SearchBarForSideMenuForCounselorTab");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/components/treeMenus/option/CounselorTreeLevelSelector.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "CounselorTreeLevelSelector": (()=>CounselorTreeLevelSelector)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/image.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$button$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/ui/button.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$popover$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/ui/popover.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$chevron$2d$down$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ChevronDown$3e$__ = __turbopack_import__("[project]/node_modules/lucide-react/dist/esm/icons/chevron-down.js [app-client] (ecmascript) <export default as ChevronDown>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$layers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Layers$3e$__ = __turbopack_import__("[project]/node_modules/lucide-react/dist/esm/icons/layers.js [app-client] (ecmascript) <export default as Layers>");
"use client";
;
;
;
;
;
function CounselorTreeLevelSelector({ onExpandToLevel, onToggleAllNodes, onApplyDefaultExpansion }) {
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$popover$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Popover"], {
        children: [
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$popover$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PopoverTrigger"], {
                asChild: true,
                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$button$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Button"], {
                    variant: "ghost",
                    size: "sm",
                    className: "text-xs py-1 !px-2 flex items-center gap-1 border-[#ebebeb] border rounded-[3px] text-[#888] h-[26px] ",
                    children: [
                        "lev",
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$chevron$2d$down$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ChevronDown$3e$__["ChevronDown"], {
                            size: 14
                        }, void 0, false, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/option/CounselorTreeLevelSelector.tsx",
                            lineNumber: 34,
                            columnNumber: 11
                        }, this)
                    ]
                }, void 0, true, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/option/CounselorTreeLevelSelector.tsx",
                    lineNumber: 27,
                    columnNumber: 9
                }, this)
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/option/CounselorTreeLevelSelector.tsx",
                lineNumber: 26,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$popover$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PopoverContent"], {
                className: "w-auto min-w-[150px] p-0 py-[10px] px-[12px] rounded-[3px] border border-[#333]",
                align: "end",
                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                    className: "flex flex-col space-y-[2px]",
                    children: [
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$button$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Button"], {
                            variant: "ghost",
                            size: "sm",
                            onClick: ()=>onExpandToLevel(1),
                            className: "text-sm rounded-[3px] px-[6px] py-[4px] justify-start h-[26px]",
                            children: [
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                                    src: "/tree-menu/organization.png",
                                    alt: "조직",
                                    width: 14,
                                    height: 12,
                                    className: "mr-1"
                                }, void 0, false, {
                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/option/CounselorTreeLevelSelector.tsx",
                                    lineNumber: 45,
                                    columnNumber: 13
                                }, this),
                                "1. 조직"
                            ]
                        }, void 0, true, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/option/CounselorTreeLevelSelector.tsx",
                            lineNumber: 39,
                            columnNumber: 11
                        }, this),
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$button$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Button"], {
                            variant: "ghost",
                            size: "sm",
                            onClick: ()=>onExpandToLevel(2),
                            className: "text-sm rounded-[3px] px-[6px] py-[4px] justify-start h-[26px]",
                            children: [
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                                    src: "/tree-menu/tennant_office.png",
                                    alt: "테넌트",
                                    width: 14,
                                    height: 12,
                                    className: "mr-1"
                                }, void 0, false, {
                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/option/CounselorTreeLevelSelector.tsx",
                                    lineNumber: 54,
                                    columnNumber: 13
                                }, this),
                                "2. 테넌트"
                            ]
                        }, void 0, true, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/option/CounselorTreeLevelSelector.tsx",
                            lineNumber: 48,
                            columnNumber: 11
                        }, this),
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$button$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Button"], {
                            variant: "ghost",
                            size: "sm",
                            onClick: ()=>onExpandToLevel(3),
                            className: "text-sm rounded-[3px] px-[6px] py-[4px] justify-start h-[26px]",
                            children: [
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                                    src: "/tree-menu/group_icon_for_tree.png",
                                    alt: "그룹",
                                    width: 15,
                                    height: 12,
                                    className: "mr-1"
                                }, void 0, false, {
                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/option/CounselorTreeLevelSelector.tsx",
                                    lineNumber: 63,
                                    columnNumber: 13
                                }, this),
                                "3. 그룹"
                            ]
                        }, void 0, true, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/option/CounselorTreeLevelSelector.tsx",
                            lineNumber: 57,
                            columnNumber: 11
                        }, this),
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$button$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Button"], {
                            variant: "ghost",
                            size: "sm",
                            onClick: ()=>onExpandToLevel(4),
                            className: "text-sm rounded-[3px] px-[6px] py-[4px] justify-start h-[26px]",
                            children: [
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                                    src: "/tree-menu/team_icon_for_tree.png",
                                    alt: "팀",
                                    width: 14,
                                    height: 12,
                                    className: "mr-1"
                                }, void 0, false, {
                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/option/CounselorTreeLevelSelector.tsx",
                                    lineNumber: 72,
                                    columnNumber: 13
                                }, this),
                                "4. 팀"
                            ]
                        }, void 0, true, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/option/CounselorTreeLevelSelector.tsx",
                            lineNumber: 66,
                            columnNumber: 11
                        }, this),
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("hr", {
                            className: "my-1"
                        }, void 0, false, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/option/CounselorTreeLevelSelector.tsx",
                            lineNumber: 75,
                            columnNumber: 11
                        }, this),
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$button$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Button"], {
                            variant: "ghost",
                            size: "sm",
                            onClick: ()=>onToggleAllNodes(true),
                            className: "text-sm rounded-[3px] px-[6px] py-[4px] justify-start h-[26px]",
                            children: [
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$layers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Layers$3e$__["Layers"], {
                                    size: 14,
                                    className: "mr-1"
                                }, void 0, false, {
                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/option/CounselorTreeLevelSelector.tsx",
                                    lineNumber: 82,
                                    columnNumber: 13
                                }, this),
                                "전체"
                            ]
                        }, void 0, true, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/option/CounselorTreeLevelSelector.tsx",
                            lineNumber: 76,
                            columnNumber: 11
                        }, this),
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$button$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Button"], {
                            variant: "ghost",
                            size: "sm",
                            onClick: ()=>onToggleAllNodes(false),
                            className: "text-sm rounded-[3px] px-[6px] py-[4px] justify-start h-[26px]",
                            children: [
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$layers$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Layers$3e$__["Layers"], {
                                    size: 14,
                                    className: "mr-1"
                                }, void 0, false, {
                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/option/CounselorTreeLevelSelector.tsx",
                                    lineNumber: 91,
                                    columnNumber: 13
                                }, this),
                                "닫기"
                            ]
                        }, void 0, true, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/option/CounselorTreeLevelSelector.tsx",
                            lineNumber: 85,
                            columnNumber: 11
                        }, this)
                    ]
                }, void 0, true, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/option/CounselorTreeLevelSelector.tsx",
                    lineNumber: 38,
                    columnNumber: 9
                }, this)
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/option/CounselorTreeLevelSelector.tsx",
                lineNumber: 37,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true, {
        fileName: "[project]/src/features/campaignManager/components/treeMenus/option/CounselorTreeLevelSelector.tsx",
        lineNumber: 25,
        columnNumber: 5
    }, this);
}
_c = CounselorTreeLevelSelector;
var _c;
__turbopack_refresh__.register(_c, "CounselorTreeLevelSelector");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/components/treeMenus/TreeMenusForAgentTab.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "TreeMenusForAgentTab": (()=>TreeMenusForAgentTab)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$authStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/authStore.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForGetDataForSidebarCounselorTab$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/hooks/useApiForGetDataForSidebarCounselorTab.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$TreeNodeForCounselorListForSideBar$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/components/treeMenus/TreeNodeForCounselorListForSideBar.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$searchbar$2f$SearchBarForSideMenuForCounselorTab$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/components/treeMenus/searchbar/SearchBarForSideMenuForCounselorTab.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCounselorTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/storeForSideMenuCounselorTab.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/react-toastify/dist/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$option$2f$CounselorTreeLevelSelector$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/components/treeMenus/option/CounselorTreeLevelSelector.tsx [app-client] (ecmascript)");
;
var _s = __turbopack_refresh__.signature();
"use client";
;
;
;
;
;
;
;
;
function TreeMenusForAgentTab() {
    _s();
    const { tenant_id, role_id } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$authStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAuthStore"])();
    const { data, isLoading } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForGetDataForSidebarCounselorTab$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForSidebarCounselor"])(tenant_id.toString(), role_id.toString());
    const [searchTerm, setSearchTerm] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])("");
    const { setSelectedCounselor, sortOption, currentExpansionLevel, expandToLevel: storeExpandToLevel } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCounselorTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCounselorFilterStore"])();
    const [allCounselors, setAllCounselors] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])([]);
    const defaultExpanded = {
        organization: true,
        tenant: true,
        group: true,
        team: true,
        counselor: false
    };
    const [expandedNodes, setExpandedNodes] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(new Set());
    const [selectedNodeId, setSelectedNodeId] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])();
    const [sortedData, setSortedData] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])([]);
    // 데이터 로드 시 초기화 작업
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "TreeMenusForAgentTab.useEffect": ()=>{
            if (data?.organizationList) {
                // 기본 확장 상태 적용
                applyDefaultExpansion();
                // 필터링 및 정렬 적용한 데이터
                const sorted = applySorting([
                    ...data.organizationList
                ]);
                // 모든 상담사 정보 추출 (필터링된 데이터에서 추출하기 위해 이 위치로 이동)
                const counselors = getAllCounselorsFromFilteredData(sorted);
                setAllCounselors(counselors);
                setSortedData(sorted);
            }
        }
    }["TreeMenusForAgentTab.useEffect"], [
        data,
        tenant_id
    ]);
    // 필터링된 데이터에서 상담사 목록 추출
    const getAllCounselorsFromFilteredData = (filteredData)=>{
        const counselors = [];
        filteredData.forEach((org)=>{
            org.tenantInfo?.forEach((tenant)=>{
                tenant.groupInfo?.forEach((group)=>{
                    group.teamInfo?.forEach((team)=>{
                        team.counselorInfo?.forEach((counselor)=>{
                            counselors.push({
                                counselorId: counselor.counselorId,
                                counselorName: counselor.counselorname,
                                tenantId: tenant.tenantId
                            });
                        });
                    });
                });
            });
        });
        return counselors;
    };
    // 정렬 옵션 변경 시 데이터 재정렬
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "TreeMenusForAgentTab.useEffect": ()=>{
            if (data?.organizationList) {
                const sorted = applySorting([
                    ...data.organizationList
                ]);
                setSortedData(sorted);
            }
        }
    }["TreeMenusForAgentTab.useEffect"], [
        sortOption,
        data,
        tenant_id
    ]);
    // 확장 레벨 변경 시 노드 확장 상태 업데이트
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "TreeMenusForAgentTab.useEffect": ()=>{
            if (data?.organizationList && currentExpansionLevel > 0) {
                expandToLevel(currentExpansionLevel);
            }
        }
    }["TreeMenusForAgentTab.useEffect"], [
        currentExpansionLevel,
        data,
        tenant_id
    ]);
    // 정렬 로직 구현 (tenant_id 필터링 적용)
    const applySorting = (dataArray)=>{
        if (!dataArray || dataArray.length === 0) return [];
        const { type, direction, nodeType } = sortOption;
        // 깊은 복사를 통해 원본 데이터 보존
        const clonedData = JSON.parse(JSON.stringify(dataArray));
        // tenant_id가 0이 아닌 경우에만 필터링 적용
        if (tenant_id !== 0 && tenant_id !== 0) {
            // 테넌트 필터링 적용 (tenant_id에 해당하는 것만 표시)
            clonedData.forEach((org)=>{
                if (org.tenantInfo && org.tenantInfo.length > 0) {
                    // tenant_id에 해당하는 테넌트만 필터링
                    org.tenantInfo = org.tenantInfo.filter((tenant)=>tenant.tenantId === tenant_id.toString());
                }
            });
        }
        // 조직 레벨 정렬 (최상위 레벨)
        if (nodeType === 'all' || nodeType === 'organization') {
            clonedData.sort((a, b)=>{
                if (type === 'id') {
                    const valueA = parseInt(a.centerId) || 0;
                    const valueB = parseInt(b.centerId) || 0;
                    return direction === 'asc' ? valueA - valueB : valueB - valueA;
                } else {
                    return direction === 'asc' ? a.centerName.localeCompare(b.centerName) : b.centerName.localeCompare(a.centerName);
                }
            });
        }
        // 각 조직 내의 테넌트 정렬
        clonedData.forEach((org)=>{
            if (org.tenantInfo && org.tenantInfo.length > 0) {
                // 테넌트 레벨 정렬
                if (nodeType === 'all' || nodeType === 'tenant') {
                    org.tenantInfo.sort((a, b)=>{
                        if (type === 'id') {
                            const valueA = parseInt(a.tenantId) || 0;
                            const valueB = parseInt(b.tenantId) || 0;
                            return direction === 'asc' ? valueA - valueB : valueB - valueA;
                        } else {
                            return direction === 'asc' ? a.tenantName.localeCompare(b.tenantName) : b.tenantName.localeCompare(a.tenantName);
                        }
                    });
                }
                // 각 테넌트 내의 그룹 정렬
                org.tenantInfo.forEach((tenant)=>{
                    if (tenant.groupInfo && tenant.groupInfo.length > 0) {
                        // 그룹 레벨 정렬
                        if (nodeType === 'all' || nodeType === 'group') {
                            tenant.groupInfo.sort((a, b)=>{
                                if (type === 'id') {
                                    const valueA = parseInt(a.groupId) || 0;
                                    const valueB = parseInt(b.groupId) || 0;
                                    return direction === 'asc' ? valueA - valueB : valueB - valueA;
                                } else {
                                    return direction === 'asc' ? a.groupName.localeCompare(b.groupName) : b.groupName.localeCompare(a.groupName);
                                }
                            });
                        }
                        // 각 그룹 내의 팀 정렬
                        tenant.groupInfo.forEach((group)=>{
                            if (group.teamInfo && group.teamInfo.length > 0) {
                                // 팀 레벨 정렬
                                if (nodeType === 'all' || nodeType === 'team') {
                                    group.teamInfo.sort((a, b)=>{
                                        if (type === 'id') {
                                            const valueA = parseInt(a.teamId) || 0;
                                            const valueB = parseInt(b.teamId) || 0;
                                            return direction === 'asc' ? valueA - valueB : valueB - valueA;
                                        } else {
                                            return direction === 'asc' ? a.teamName.localeCompare(b.teamName) : b.teamName.localeCompare(a.teamName);
                                        }
                                    });
                                }
                                // 각 팀 내의 상담사 정렬
                                group.teamInfo.forEach((team)=>{
                                    if (team.counselorInfo && team.counselorInfo.length > 0) {
                                        // 상담사 레벨 정렬
                                        if (nodeType === 'all' || nodeType === 'counselor') {
                                            team.counselorInfo.sort((a, b)=>{
                                                if (type === 'id') {
                                                    const valueA = parseInt(a.counselorId) || 0;
                                                    const valueB = parseInt(b.counselorId) || 0;
                                                    return direction === 'asc' ? valueA - valueB : valueB - valueA;
                                                } else {
                                                    return direction === 'asc' ? (a.counselorname || '').localeCompare(b.counselorname || '') : (b.counselorname || '').localeCompare(a.counselorname || '');
                                                }
                                            });
                                        }
                                    }
                                });
                            }
                        });
                    }
                });
            }
        });
        return clonedData;
    };
    // 기본 확장 상태를 적용하는 함수
    const applyDefaultExpansion = ()=>{
        if (!data?.organizationList) return;
        const initialExpanded = new Set();
        data.organizationList.forEach((org)=>{
            if (defaultExpanded.organization) {
                initialExpanded.add(`org-${org.centerId}`);
            }
            org.tenantInfo?.forEach((tenant)=>{
                // tenant_id가 0이거나 tenant_id와 일치하는 테넌트만 처리
                if ((tenant_id === 0 || tenant_id === 0 || tenant.tenantId === tenant_id.toString()) && defaultExpanded.tenant) {
                    initialExpanded.add(`tenant-${tenant.tenantId}`);
                    tenant.groupInfo?.forEach((group)=>{
                        if (defaultExpanded.group) {
                            initialExpanded.add(`group-${group.groupId}`);
                        }
                        group.teamInfo?.forEach((team)=>{
                            if (defaultExpanded.team) {
                                initialExpanded.add(`team-${team.teamId}`);
                            }
                        });
                    });
                }
            });
        });
        setExpandedNodes(initialExpanded);
        // 스토어에도 기본 확장 레벨 적용
        storeExpandToLevel(4); // 팀 레벨까지 기본 확장
    };
    // 특정 레벨까지만 노드 열기 함수
    const expandToLevel = (level)=>{
        if (!data?.organizationList) return;
        const newExpanded = new Set();
        // 레벨에 따라 다르게 처리
        data.organizationList.forEach((org)=>{
            // 레벨 1: 조직
            const orgId = `org-${org.centerId}`;
            if (level >= 1) newExpanded.add(orgId);
            if (level >= 2 && org.tenantInfo) {
                // 레벨 2: 테넌트 (tenant_id가 0이거나 tenant_id에 해당하는 것만)
                org.tenantInfo.forEach((tenant)=>{
                    if (tenant_id === 0 || tenant_id === 0 || tenant.tenantId === tenant_id.toString()) {
                        const tenantId = `tenant-${tenant.tenantId}`;
                        newExpanded.add(tenantId);
                        if (level >= 3 && tenant.groupInfo) {
                            // 레벨 3: 그룹
                            tenant.groupInfo.forEach((group)=>{
                                const groupId = `group-${group.groupId}`;
                                newExpanded.add(groupId);
                                if (level >= 4 && group.teamInfo) {
                                    // 레벨 4: 팀
                                    group.teamInfo.forEach((team)=>{
                                        const teamId = `team-${team.teamId}`;
                                        newExpanded.add(teamId);
                                        if (level >= 5 && team.counselorInfo) {
                                            // 레벨 5: 상담사
                                            team.counselorInfo.forEach((counselor)=>{
                                                const counselorId = `counselor-${counselor.counselorId}`;
                                                newExpanded.add(counselorId);
                                            });
                                        }
                                    });
                                }
                            });
                        }
                    }
                });
            }
        });
        setExpandedNodes(newExpanded);
    };
    // 전체 열기/닫기 함수
    const toggleAllNodes = (isExpanded)=>{
        if (!data?.organizationList) return;
        if (isExpanded) {
            // 모든 레벨 열기 (레벨 5까지)
            expandToLevel(5);
            storeExpandToLevel(5);
        } else {
            // 모든 노드 닫기
            setExpandedNodes(new Set());
            storeExpandToLevel(1);
        }
    };
    const handleNodeToggle = (nodeId)=>{
        setExpandedNodes((prev)=>{
            const next = new Set(prev);
            if (next.has(nodeId)) {
                next.delete(nodeId);
            } else {
                next.add(nodeId);
            }
            return next;
        });
    };
    const handleSearch = ()=>{
        // 검색어가 비어있으면 전체 목록 표시
        if (!searchTerm.trim()) {
            selectCounselor('', '', '');
            return;
        }
        if (!data?.organizationList) return;
        // 필터링된 데이터에서 검색
        const filteredData = applySorting([
            ...data.organizationList
        ]);
        const counselorInfo = findCounselorInfoInFilteredData(filteredData, searchTerm);
        if (counselorInfo) {
            selectCounselor(counselorInfo.counselorId, counselorInfo.counselorName, counselorInfo.tenantId);
        } else {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].error("상담사를 찾을 수 없습니다.");
        }
    };
    // 필터링된 데이터에서 상담사 검색
    const findCounselorInfoInFilteredData = (filteredData, searchTerm)=>{
        for (const org of filteredData){
            for (const tenant of org.tenantInfo || []){
                for (const group of tenant.groupInfo || []){
                    for (const team of group.teamInfo || []){
                        for (const counselor of team.counselorInfo || []){
                            if (counselor.counselorId.toLowerCase().includes(searchTerm.toLowerCase()) || counselor.counselorname.toLowerCase().includes(searchTerm.toLowerCase())) {
                                return {
                                    counselorId: counselor.counselorId,
                                    counselorName: counselor.counselorname,
                                    tenantId: tenant.tenantId,
                                    paths: [
                                        `org-${org.centerId}`,
                                        `tenant-${tenant.tenantId}`,
                                        `group-${group.groupId}`,
                                        `team-${team.teamId}`
                                    ]
                                };
                            }
                        }
                    }
                }
            }
        }
        return null;
    };
    const selectCounselor = (counselorId, counselorName, tenantId)=>{
        // 빈 ID가 전달되면 전체 목록 표시 모드로 설정
        if (!counselorId) {
            // 선택된 노드 초기화
            setSelectedNodeId(undefined);
            // 스토어에도 선택 해제 상태 설정
            setSelectedCounselor('', '', '');
            // 기본 확장 상태로 복원
            applyDefaultExpansion();
            return;
        }
        // 상담사 선택 상태 업데이트
        setSelectedNodeId(counselorId);
        setSelectedCounselor(counselorId, counselorName, tenantId);
        if (data?.organizationList) {
            // 필터링된 데이터에서 경로 찾기
            const filteredData = applySorting([
                ...data.organizationList
            ]);
            const counselorInfo = findCounselorInfoInFilteredData(filteredData, counselorName);
            if (counselorInfo) {
                // 경로상의 모든 노드 확장
                const newExpanded = new Set(expandedNodes);
                counselorInfo.paths.forEach((path)=>newExpanded.add(path));
                setExpandedNodes(newExpanded);
                // DOM 업데이트를 위한 짧은 지연 후 스크롤 실행
                setTimeout(()=>{
                    const scrollContainer = document.querySelector('.tree-node');
                    const targetElement = document.getElementById(`counselor-${counselorId}`);
                    if (scrollContainer && targetElement) {
                        scrollContainer.scrollTop = targetElement.offsetTop - scrollContainer.offsetTop - scrollContainer.clientHeight / 2 + targetElement.clientHeight / 2;
                    }
                }, 100);
            }
        }
    };
    if (isLoading) {
        return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
            className: "h-full p-4",
            children: "Loading..."
        }, void 0, false, {
            fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeMenusForAgentTab.tsx",
            lineNumber: 440,
            columnNumber: 12
        }, this);
    }
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
        className: "flex flex-col h-full",
        children: [
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "flex items-center border-b",
                children: [
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                        className: "flex-grow",
                        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$searchbar$2f$SearchBarForSideMenuForCounselorTab$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["SearchBarForSideMenuForCounselorTab"], {
                            value: searchTerm,
                            onChange: setSearchTerm,
                            onSearch: handleSearch,
                            placeholder: "상담사",
                            counselors: allCounselors,
                            onSelectCounselor: selectCounselor
                        }, void 0, false, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeMenusForAgentTab.tsx",
                            lineNumber: 447,
                            columnNumber: 11
                        }, this)
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeMenusForAgentTab.tsx",
                        lineNumber: 446,
                        columnNumber: 9
                    }, this),
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                        className: "py-1 px-1",
                        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$option$2f$CounselorTreeLevelSelector$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CounselorTreeLevelSelector"], {
                            onExpandToLevel: (level)=>{
                                expandToLevel(level);
                                storeExpandToLevel(level);
                            },
                            onToggleAllNodes: toggleAllNodes,
                            onApplyDefaultExpansion: applyDefaultExpansion
                        }, void 0, false, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeMenusForAgentTab.tsx",
                            lineNumber: 457,
                            columnNumber: 11
                        }, this)
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeMenusForAgentTab.tsx",
                        lineNumber: 456,
                        columnNumber: 9
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeMenusForAgentTab.tsx",
                lineNumber: 445,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "flex flex-grow overflow-y-auto min-h-0 tree-node",
                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                    className: "w-full",
                    children: sortedData.map((org)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$TreeNodeForCounselorListForSideBar$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TreeNodeForCounselorListForSideBar"], {
                            data: org,
                            type: "organization",
                            level: 0,
                            expandedNodes: expandedNodes,
                            selectedNodeId: selectedNodeId,
                            onNodeToggle: handleNodeToggle,
                            onNodeSelect: setSelectedNodeId,
                            defaultExpanded: defaultExpanded
                        }, `org-${org.centerId}`, false, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeMenusForAgentTab.tsx",
                            lineNumber: 471,
                            columnNumber: 13
                        }, this))
                }, void 0, false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeMenusForAgentTab.tsx",
                    lineNumber: 469,
                    columnNumber: 9
                }, this)
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeMenusForAgentTab.tsx",
                lineNumber: 468,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true, {
        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeMenusForAgentTab.tsx",
        lineNumber: 444,
        columnNumber: 5
    }, this);
}
_s(TreeMenusForAgentTab, "DEpp3Al+Wlq+aZodX7N0w1cAiRI=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$authStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAuthStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForGetDataForSidebarCounselorTab$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForSidebarCounselor"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCounselorTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCounselorFilterStore"]
    ];
});
_c = TreeMenusForAgentTab;
var _c;
__turbopack_refresh__.register(_c, "TreeMenusForAgentTab");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/preferences/hooks/useApiForCreateCampaignGroup.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "useApiForCreateCampaignGroup": (()=>useApiForCreateCampaignGroup)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$api$2f$apiForCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/preferences/api/apiForCampaignGroup.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/react-toastify/dist/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/useMutation.js [app-client] (ecmascript)");
var _s = __turbopack_refresh__.signature();
;
;
;
function useApiForCreateCampaignGroup(options) {
    _s();
    const queryClient = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQueryClient"])();
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMutation"])({
        mutationKey: [
            'createCampaignGroup'
        ],
        mutationFn: {
            "useApiForCreateCampaignGroup.useMutation": (credentials)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$api$2f$apiForCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["apiForCreateCampaignGroup"])(credentials)
        }["useApiForCreateCampaignGroup.useMutation"],
        onSuccess: {
            "useApiForCreateCampaignGroup.useMutation": (data, variables, context)=>{
                console.log("data:", data);
                console.log("variables:", variables);
                // sideMenuTreeData 쿼리 캐시 무효화 - 이것만 무효화해도 데이터가 갱신됨
                queryClient.invalidateQueries({
                    queryKey: [
                        'sideMenuTreeData'
                    ]
                });
                console.log('✅ 캠페인 그룹 생성 성공:', data);
                options?.onSuccess?.(data, variables, context);
            }
        }["useApiForCreateCampaignGroup.useMutation"],
        onError: {
            "useApiForCreateCampaignGroup.useMutation": (error, variables, context)=>{
                // console.log("error :", error);
                if (error.response.data.result_code === 501) {
                    alert("이미 존재하는 그룹 ID입니다.");
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].error("이미 존재하는 그룹 ID입니다.");
                    return;
                }
                console.error('❌ 캠페인 그룹 생성 실패:', error);
                options?.onError?.(error, variables, context);
            }
        }["useApiForCreateCampaignGroup.useMutation"]
    });
}
_s(useApiForCreateCampaignGroup, "YK0wzM21ECnncaq5SECwU+/SVdQ=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQueryClient"],
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMutation"]
    ];
});
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/components/treeMenus/dialog/GroupIdDuplicateModal.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/features/campaignManager/components/modals/GroupIdDuplicateModal.tsx
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$CustomAlert$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/shared/layout/CustomAlert.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$input$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/ui/input.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$button$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/ui/button.tsx [app-client] (ecmascript)");
;
var _s = __turbopack_refresh__.signature();
;
;
;
;
const GroupIdDuplicateModal = ({ isOpen, onClose, groupId, tenantName, groupIdList, onNewIdSubmit })=>{
    _s();
    const [newGroupId, setNewGroupId] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])('');
    // 중복 체크
    const isDuplicate = newGroupId.trim() ? groupIdList.includes(newGroupId) : false;
    const handleSubmit = ()=>{
        if (newGroupId && !isDuplicate) {
            onNewIdSubmit(newGroupId);
            onClose();
        }
    };
    const handleKeyDown = (e)=>{
        if (e.key === 'Enter' && newGroupId && !isDuplicate) {
            e.preventDefault();
            handleSubmit();
        }
    };
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$CustomAlert$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
        isOpen: isOpen,
        onClose: onClose,
        title: "그룹 아이디 중복",
        type: "1",
        message: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
            children: [
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                    className: "mb-2 font-medium text-red-500",
                    children: [
                        "입력하신 그룹 아이디 '",
                        groupId,
                        "'는 이미 사용 중입니다."
                    ]
                }, void 0, true, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/GroupIdDuplicateModal.tsx",
                    lineNumber: 52,
                    columnNumber: 11
                }, void 0),
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                    className: "mb-2",
                    children: [
                        "현재 테넌트(",
                        tenantName,
                        ")의 그룹 아이디 목록:"
                    ]
                }, void 0, true, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/GroupIdDuplicateModal.tsx",
                    lineNumber: 55,
                    columnNumber: 11
                }, void 0),
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                    className: "max-h-40 overflow-y-auto bg-gray-50 p-2 border rounded text-xs mb-4",
                    children: groupIdList.length > 0 ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("ul", {
                        className: "list-disc pl-4",
                        children: groupIdList.map((id, index)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("li", {
                                className: "py-0.5",
                                children: id
                            }, index, false, {
                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/GroupIdDuplicateModal.tsx",
                                lineNumber: 60,
                                columnNumber: 19
                            }, void 0))
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/GroupIdDuplicateModal.tsx",
                        lineNumber: 58,
                        columnNumber: 15
                    }, void 0) : /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                        children: "등록된 그룹이 없습니다."
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/GroupIdDuplicateModal.tsx",
                        lineNumber: 64,
                        columnNumber: 15
                    }, void 0)
                }, void 0, false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/GroupIdDuplicateModal.tsx",
                    lineNumber: 56,
                    columnNumber: 11
                }, void 0),
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                    className: "mt-4",
                    children: [
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                            className: "text-sm mb-2",
                            children: "새 그룹 아이디를 입력해주세요:"
                        }, void 0, false, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/GroupIdDuplicateModal.tsx",
                            lineNumber: 69,
                            columnNumber: 13
                        }, void 0),
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                            className: "flex space-x-2",
                            children: [
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$input$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Input"], {
                                    value: newGroupId,
                                    onChange: (e)=>setNewGroupId(e.target.value),
                                    onKeyDown: handleKeyDown,
                                    placeholder: "새 그룹 아이디",
                                    className: "flex-1",
                                    autoFocus: true
                                }, void 0, false, {
                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/GroupIdDuplicateModal.tsx",
                                    lineNumber: 71,
                                    columnNumber: 15
                                }, void 0),
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$button$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Button"], {
                                    onClick: handleSubmit,
                                    disabled: !newGroupId || isDuplicate,
                                    children: "적용"
                                }, void 0, false, {
                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/GroupIdDuplicateModal.tsx",
                                    lineNumber: 79,
                                    columnNumber: 15
                                }, void 0)
                            ]
                        }, void 0, true, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/GroupIdDuplicateModal.tsx",
                            lineNumber: 70,
                            columnNumber: 13
                        }, void 0),
                        newGroupId && isDuplicate && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                            className: "text-xs text-red-500 mt-1",
                            children: "이 아이디도 이미 사용 중입니다."
                        }, void 0, false, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/GroupIdDuplicateModal.tsx",
                            lineNumber: 87,
                            columnNumber: 15
                        }, void 0)
                    ]
                }, void 0, true, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/GroupIdDuplicateModal.tsx",
                    lineNumber: 68,
                    columnNumber: 11
                }, void 0)
            ]
        }, void 0, true, {
            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/GroupIdDuplicateModal.tsx",
            lineNumber: 51,
            columnNumber: 9
        }, void 0),
        width: "max-w-md",
        showButtons: false
    }, void 0, false, {
        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/GroupIdDuplicateModal.tsx",
        lineNumber: 45,
        columnNumber: 5
    }, this);
};
_s(GroupIdDuplicateModal, "wQ0mVPAnH8Y7IG3Xj2BEwVcr9tk=");
_c = GroupIdDuplicateModal;
const __TURBOPACK__default__export__ = GroupIdDuplicateModal;
var _c;
__turbopack_refresh__.register(_c, "GroupIdDuplicateModal");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/components/treeMenus/dialog/AddCampaignGroupDialog.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "AddCampaignGroupDialog": (()=>AddCampaignGroupDialog),
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$label$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/ui/label.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$input$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/ui/input.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$button$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/ui/button.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/react-toastify/dist/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$hooks$2f$useApiForCreateCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/preferences/hooks/useApiForCreateCampaignGroup.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCampaignGroupTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/storeForSideMenuCampaignGroupTab.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$dialog$2f$GroupIdDuplicateModal$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/components/treeMenus/dialog/GroupIdDuplicateModal.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$CommonDialogWithCustomAlertStyle$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/shared/layout/CommonDialogWithCustomAlertStyle.tsx [app-client] (ecmascript)");
;
var _s = __turbopack_refresh__.signature();
"use client";
;
;
;
;
;
;
;
;
;
function AddCampaignGroupDialog({ isOpen, onClose, tenantId, tenantName, onAddGroup }) {
    _s();
    const [groupName, setGroupName] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])("");
    const [groupId, setGroupId] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])("");
    const [isDuplicateModalOpen, setIsDuplicateModalOpen] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const [groupIdList, setGroupIdList] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])([]);
    const [isValidated, setIsValidated] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const [isCheckingDuplicate, setIsCheckingDuplicate] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const { refetchTreeDataForCampaignGroupTab } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCampaignGroupTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useSideMenuCampaignGroupTabStore"])();
    // 다이얼로그가 열릴 때마다 폼 초기화
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "AddCampaignGroupDialog.useEffect": ()=>{
            if (isOpen) {
                setGroupName("");
                setGroupId("");
                setIsValidated(false);
            }
        }
    }["AddCampaignGroupDialog.useEffect"], [
        isOpen
    ]);
    // 중복 검사에 필요한 store에서 treeData 가져오기
    const { treeData } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCampaignGroupTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useSideMenuCampaignGroupTabStore"])();
    // 현재 테넌트에 속한 그룹 아이디 목록 가져오기
    const getGroupIdsInTenant = (tenantId)=>{
        const groupIds = [];
        // treeData를 탐색하여 현재 tenant_id에 속한 그룹들의 group_id를 수집
        const findGroupsInTenant = (nodes)=>{
            nodes.forEach((node)=>{
                if (node.type === 'tenant' && node.tenant_id === tenantId) {
                    if (node.children) {
                        node.children.forEach((child)=>{
                            if (child.type === 'group' && child.group_id) {
                                groupIds.push(child.group_id.toString());
                            }
                        });
                    }
                } else if (node.children) {
                    findGroupsInTenant(node.children);
                }
            });
        };
        findGroupsInTenant(treeData);
        return groupIds;
    };
    // 그룹 아이디 중복 체크 함수
    const checkDuplicateGroupId = (groupId)=>{
        const groupIds = getGroupIdsInTenant(tenantId);
        return groupIds.includes(groupId);
    };
    // 중복 체크 및 중복 다이얼로그 열기
    const handleCheckDuplicate = ()=>{
        if (!groupId.trim()) return false;
        setIsCheckingDuplicate(true);
        const groupIds = getGroupIdsInTenant(tenantId);
        console.log(`테넌트 ${tenantId}의 그룹 ID 목록:`, groupIds);
        setGroupIdList(groupIds);
        const isDuplicate = checkDuplicateGroupId(groupId);
        if (isDuplicate) {
            console.log(`그룹 ID '${groupId}' 중복 확인됨`);
            setIsDuplicateModalOpen(true);
            setIsValidated(false);
            setIsCheckingDuplicate(false);
            return true;
        }
        // 중복이 없다면 유효함을 표시
        setIsValidated(true);
        setIsCheckingDuplicate(false);
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].success("사용 가능한 그룹 ID입니다.");
        return false;
    };
    // 새로운 그룹 아이디 적용
    const handleNewGroupId = (newId)=>{
        setGroupId(newId);
        setIsDuplicateModalOpen(false);
        setIsValidated(true);
    };
    // 그룹 아이디 변경
    const handleGroupIdChange = (e)=>{
        const newValue = e.target.value;
        setGroupId(newValue);
        setIsValidated(false);
    };
    // 캠페인 그룹 생성 API 호출 훅 사용
    const { mutate, isPending } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$hooks$2f$useApiForCreateCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForCreateCampaignGroup"])({
        onSuccess: {
            "AddCampaignGroupDialog.useApiForCreateCampaignGroup": (data, variables, context)=>{
                console.log("캠페인 그룹 생성 성공:", data);
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].success("캠페인 그룹이 추가되었습니다.");
                if (onAddGroup) {
                    onAddGroup(groupName, groupId);
                }
                refetchTreeDataForCampaignGroupTab();
                handleClose();
            }
        }["AddCampaignGroupDialog.useApiForCreateCampaignGroup"],
        onError: {
            "AddCampaignGroupDialog.useApiForCreateCampaignGroup": (error, variables, context)=>{
                console.error("캠페인 그룹 생성 실패:", error);
                alert(error.message || "캠페인 그룹 생성에 실패하였습니다.");
            }
        }["AddCampaignGroupDialog.useApiForCreateCampaignGroup"]
    });
    const handleSubmit = (e)=>{
        e.preventDefault();
        e.stopPropagation();
        if (groupName.trim() && groupId.trim()) {
            if (!isValidated) {
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].warning("먼저 그룹 ID 중복 확인을 해주세요.");
                return;
            }
            mutate({
                group_id: groupId,
                tenant_id: tenantId,
                group_name: groupName
            });
        }
    };
    const handleClose = (e)=>{
        if (e) {
            e.preventDefault();
            e.stopPropagation();
        }
        onClose(e);
    };
    // 모든 인풋에 이벤트 전파 방지 적용
    const stopPropagation = (e)=>{
        e.stopPropagation();
    };
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Fragment"], {
        children: [
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$CommonDialogWithCustomAlertStyle$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                isOpen: isOpen,
                onClose: handleClose,
                title: "그룹 추가",
                showButtons: false,
                width: "max-w-sm",
                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                    children: [
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                            className: "mb-4",
                            children: "새로운 캠페인 그룹을 등록합니다."
                        }, void 0, false, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/AddCampaignGroupDialog.tsx",
                            lineNumber: 180,
                            columnNumber: 11
                        }, this),
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("form", {
                            onSubmit: handleSubmit,
                            onClick: stopPropagation,
                            onPointerDown: stopPropagation,
                            children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                className: "space-y-4",
                                children: [
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                        className: "flex flex-col space-y-1",
                                        children: [
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$label$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Label"], {
                                                htmlFor: "groupId",
                                                children: "캠페인 그룹 아이디"
                                            }, void 0, false, {
                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/AddCampaignGroupDialog.tsx",
                                                lineNumber: 185,
                                                columnNumber: 17
                                            }, this),
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                                className: "flex gap-2",
                                                children: [
                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$input$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Input"], {
                                                        id: "groupId",
                                                        value: groupId,
                                                        onChange: handleGroupIdChange,
                                                        placeholder: "그룹 아이디를 입력하세요",
                                                        onClick: stopPropagation,
                                                        onPointerDown: stopPropagation,
                                                        className: "rounded-r-none"
                                                    }, void 0, false, {
                                                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/AddCampaignGroupDialog.tsx",
                                                        lineNumber: 187,
                                                        columnNumber: 19
                                                    }, this),
                                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$button$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Button"], {
                                                        type: "button",
                                                        onClick: handleCheckDuplicate,
                                                        disabled: !groupId.trim() || isCheckingDuplicate,
                                                        className: "rounded-l-none",
                                                        onPointerDown: stopPropagation,
                                                        children: isCheckingDuplicate ? "확인중..." : isValidated ? "✓ 확인됨" : "중복 확인"
                                                    }, void 0, false, {
                                                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/AddCampaignGroupDialog.tsx",
                                                        lineNumber: 196,
                                                        columnNumber: 19
                                                    }, this)
                                                ]
                                            }, void 0, true, {
                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/AddCampaignGroupDialog.tsx",
                                                lineNumber: 186,
                                                columnNumber: 17
                                            }, this),
                                            isValidated && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                                                className: "text-xs text-green-500 mt-1",
                                                children: "사용 가능한 그룹 아이디입니다."
                                            }, void 0, false, {
                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/AddCampaignGroupDialog.tsx",
                                                lineNumber: 207,
                                                columnNumber: 19
                                            }, this)
                                        ]
                                    }, void 0, true, {
                                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/AddCampaignGroupDialog.tsx",
                                        lineNumber: 184,
                                        columnNumber: 15
                                    }, this),
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                        className: "flex flex-col space-y-1",
                                        children: [
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$label$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Label"], {
                                                htmlFor: "groupName",
                                                children: "캠페인 그룹명"
                                            }, void 0, false, {
                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/AddCampaignGroupDialog.tsx",
                                                lineNumber: 213,
                                                columnNumber: 17
                                            }, this),
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$input$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Input"], {
                                                id: "groupName",
                                                value: groupName,
                                                onChange: (e)=>setGroupName(e.target.value),
                                                placeholder: "그룹명을 입력하세요",
                                                onClick: stopPropagation,
                                                onPointerDown: stopPropagation
                                            }, void 0, false, {
                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/AddCampaignGroupDialog.tsx",
                                                lineNumber: 214,
                                                columnNumber: 17
                                            }, this)
                                        ]
                                    }, void 0, true, {
                                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/AddCampaignGroupDialog.tsx",
                                        lineNumber: 212,
                                        columnNumber: 15
                                    }, this),
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                        className: "flex justify-end space-x-2 pt-2",
                                        children: [
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$button$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Button"], {
                                                type: "button",
                                                variant: "outline",
                                                onClick: handleClose,
                                                onPointerDown: stopPropagation,
                                                disabled: isPending,
                                                children: "취소"
                                            }, void 0, false, {
                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/AddCampaignGroupDialog.tsx",
                                                lineNumber: 226,
                                                columnNumber: 17
                                            }, this),
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$button$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Button"], {
                                                type: "submit",
                                                disabled: isPending || !groupName.trim() || !groupId.trim() || !isValidated,
                                                onPointerDown: stopPropagation,
                                                children: isPending ? "생성 중..." : "그룹 추가"
                                            }, void 0, false, {
                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/AddCampaignGroupDialog.tsx",
                                                lineNumber: 235,
                                                columnNumber: 17
                                            }, this)
                                        ]
                                    }, void 0, true, {
                                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/AddCampaignGroupDialog.tsx",
                                        lineNumber: 225,
                                        columnNumber: 15
                                    }, this)
                                ]
                            }, void 0, true, {
                                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/AddCampaignGroupDialog.tsx",
                                lineNumber: 182,
                                columnNumber: 13
                            }, this)
                        }, void 0, false, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/AddCampaignGroupDialog.tsx",
                            lineNumber: 181,
                            columnNumber: 11
                        }, this)
                    ]
                }, void 0, true, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/AddCampaignGroupDialog.tsx",
                    lineNumber: 179,
                    columnNumber: 9
                }, this)
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/AddCampaignGroupDialog.tsx",
                lineNumber: 172,
                columnNumber: 7
            }, this),
            isDuplicateModalOpen && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$dialog$2f$GroupIdDuplicateModal$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                isOpen: isDuplicateModalOpen,
                onClose: ()=>setIsDuplicateModalOpen(false),
                groupId: groupId,
                tenantName: tenantName,
                groupIdList: groupIdList,
                onNewIdSubmit: handleNewGroupId
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/AddCampaignGroupDialog.tsx",
                lineNumber: 250,
                columnNumber: 9
            }, this)
        ]
    }, void 0, true);
}
_s(AddCampaignGroupDialog, "YRx6ZI5yP6Lg3n3v3ka1b2p/IZM=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCampaignGroupTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useSideMenuCampaignGroupTabStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCampaignGroupTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useSideMenuCampaignGroupTabStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$hooks$2f$useApiForCreateCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForCreateCampaignGroup"]
    ];
});
_c = AddCampaignGroupDialog;
const __TURBOPACK__default__export__ = AddCampaignGroupDialog;
var _c;
__turbopack_refresh__.register(_c, "AddCampaignGroupDialog");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/components/popups/GroupCampaignList.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CommonCheckBox2$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/shared/CommonCheckBox2/index.tsx [app-client] (ecmascript)");
;
var _s = __turbopack_refresh__.signature();
"use client";
;
;
const GroupCampaignList = ({ isLoading, groupCampaigns = [], toggleAllGroupCampaigns })=>{
    _s();
    const [selectedRows, setSelectedRows] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])([]);
    // 초기에 모든 캠페인 선택 상태 제거 (새로 선택 가능하도록)
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "GroupCampaignList.useEffect": ()=>{
            if (groupCampaigns.length > 0) {
                setSelectedRows([]);
                // 부모 컴포넌트에 선택 상태 초기화 알림
                toggleAllGroupCampaigns(false, []);
            } else {
                setSelectedRows([]);
            }
        }
    }["GroupCampaignList.useEffect"], [
        groupCampaigns
    ]);
    // 전체 선택 상태 계산
    const allSelected = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "GroupCampaignList.useMemo[allSelected]": ()=>{
            return groupCampaigns.length > 0 && selectedRows.length === groupCampaigns.length;
        }
    }["GroupCampaignList.useMemo[allSelected]"], [
        groupCampaigns,
        selectedRows
    ]);
    // 부분 선택 상태 계산
    const hasPartialSelection = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "GroupCampaignList.useMemo[hasPartialSelection]": ()=>{
            return selectedRows.length > 0 && selectedRows.length < groupCampaigns.length;
        }
    }["GroupCampaignList.useMemo[hasPartialSelection]"], [
        groupCampaigns,
        selectedRows
    ]);
    // 개별 행 토글
    const toggleRow = (campaignId)=>{
        const isSelected = selectedRows.includes(campaignId);
        const newSelection = isSelected ? selectedRows.filter((id)=>id !== campaignId) : [
            ...selectedRows,
            campaignId
        ];
        setSelectedRows(newSelection);
        // 부모 컴포넌트에 알림 - 선택된 ID 목록 전달
        toggleAllGroupCampaigns(newSelection.length > 0, newSelection);
    };
    // 모든 행 토글
    const toggleAllRows = (checked)=>{
        const newSelection = checked ? groupCampaigns.map((item)=>item.campaign_id) : [];
        setSelectedRows(newSelection);
        // 부모 컴포넌트에 알림 - 선택된 ID 목록 전달
        toggleAllGroupCampaigns(checked, newSelection);
    };
    if (isLoading) {
        return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
            className: "flex items-center justify-center h-full text-sm",
            children: "로딩 중..."
        }, void 0, false, {
            fileName: "[project]/src/features/campaignManager/components/popups/GroupCampaignList.tsx",
            lineNumber: 68,
            columnNumber: 12
        }, this);
    }
    if (groupCampaigns.length === 0) {
        return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
            className: "flex items-center justify-center h-full text-gray-500 text-sm",
            children: "그룹에 속한 캠페인이 없습니다."
        }, void 0, false, {
            fileName: "[project]/src/features/campaignManager/components/popups/GroupCampaignList.tsx",
            lineNumber: 73,
            columnNumber: 7
        }, this);
    }
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
        className: "overflow-y-auto",
        style: {
            height: '340px'
        },
        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
            className: "flex-1 overflow-auto",
            style: {
                paddingBottom: '20px'
            },
            children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("table", {
                className: "w-full border-collapse table-fixed text-xs",
                children: [
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("thead", {
                        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("tr", {
                            className: "bg-gray-50 border-b sticky top-0 z-10",
                            children: [
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("th", {
                                    className: "w-12  px-2 text-center border-r align-bottom",
                                    style: {
                                        height: '30px'
                                    },
                                    children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CommonCheckBox2$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                                        checked: allSelected,
                                        indeterminate: hasPartialSelection,
                                        onChange: toggleAllRows,
                                        title: "전체 선택"
                                    }, void 0, false, {
                                        fileName: "[project]/src/features/campaignManager/components/popups/GroupCampaignList.tsx",
                                        lineNumber: 86,
                                        columnNumber: 17
                                    }, this)
                                }, void 0, false, {
                                    fileName: "[project]/src/features/campaignManager/components/popups/GroupCampaignList.tsx",
                                    lineNumber: 85,
                                    columnNumber: 15
                                }, this),
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("th", {
                                    className: "text-left px-2 font-medium text-[#333] border-r",
                                    style: {
                                        height: '30px'
                                    },
                                    children: "캠페인ID"
                                }, void 0, false, {
                                    fileName: "[project]/src/features/campaignManager/components/popups/GroupCampaignList.tsx",
                                    lineNumber: 93,
                                    columnNumber: 15
                                }, this),
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("th", {
                                    className: "text-left px-2 font-medium text-[#333] border-r",
                                    style: {
                                        height: '30px'
                                    },
                                    children: "캠페인 이름"
                                }, void 0, false, {
                                    fileName: "[project]/src/features/campaignManager/components/popups/GroupCampaignList.tsx",
                                    lineNumber: 94,
                                    columnNumber: 15
                                }, this),
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("th", {
                                    className: "text-left px-2 font-medium text-[#333] border-r",
                                    style: {
                                        height: '30px'
                                    },
                                    children: "스킬ID"
                                }, void 0, false, {
                                    fileName: "[project]/src/features/campaignManager/components/popups/GroupCampaignList.tsx",
                                    lineNumber: 95,
                                    columnNumber: 15
                                }, this),
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("th", {
                                    className: "text-left px-2 font-medium text-[#333]",
                                    style: {
                                        height: '30px'
                                    },
                                    children: "스킬명"
                                }, void 0, false, {
                                    fileName: "[project]/src/features/campaignManager/components/popups/GroupCampaignList.tsx",
                                    lineNumber: 96,
                                    columnNumber: 15
                                }, this)
                            ]
                        }, void 0, true, {
                            fileName: "[project]/src/features/campaignManager/components/popups/GroupCampaignList.tsx",
                            lineNumber: 84,
                            columnNumber: 13
                        }, this)
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/popups/GroupCampaignList.tsx",
                        lineNumber: 83,
                        columnNumber: 11
                    }, this),
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("tbody", {
                        children: groupCampaigns.map((campaign)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("tr", {
                                className: "border-b bg-white hover:bg-[#FFFAEE]",
                                children: [
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("td", {
                                        className: "px-2 align-middle text-center",
                                        style: {
                                            height: '30px'
                                        },
                                        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CommonCheckBox2$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                                            checked: selectedRows.includes(campaign.campaign_id),
                                            onChange: ()=>toggleRow(campaign.campaign_id)
                                        }, void 0, false, {
                                            fileName: "[project]/src/features/campaignManager/components/popups/GroupCampaignList.tsx",
                                            lineNumber: 106,
                                            columnNumber: 19
                                        }, this)
                                    }, void 0, false, {
                                        fileName: "[project]/src/features/campaignManager/components/popups/GroupCampaignList.tsx",
                                        lineNumber: 105,
                                        columnNumber: 17
                                    }, this),
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("td", {
                                        className: "px-2 align-middle font-medium",
                                        style: {
                                            height: '30px'
                                        },
                                        children: campaign.campaign_id
                                    }, void 0, false, {
                                        fileName: "[project]/src/features/campaignManager/components/popups/GroupCampaignList.tsx",
                                        lineNumber: 111,
                                        columnNumber: 17
                                    }, this),
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("td", {
                                        className: "px-2 align-middle text-blue-700",
                                        style: {
                                            height: '30px'
                                        },
                                        children: `캠페인 ${campaign.campaign_id}`
                                    }, void 0, false, {
                                        fileName: "[project]/src/features/campaignManager/components/popups/GroupCampaignList.tsx",
                                        lineNumber: 112,
                                        columnNumber: 17
                                    }, this),
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("td", {
                                        className: "px-2 align-middle",
                                        style: {
                                            height: '30px'
                                        },
                                        children: "14"
                                    }, void 0, false, {
                                        fileName: "[project]/src/features/campaignManager/components/popups/GroupCampaignList.tsx",
                                        lineNumber: 113,
                                        columnNumber: 17
                                    }, this),
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("td", {
                                        className: "px-2 align-middle",
                                        style: {
                                            height: '30px'
                                        },
                                        children: "스킬1"
                                    }, void 0, false, {
                                        fileName: "[project]/src/features/campaignManager/components/popups/GroupCampaignList.tsx",
                                        lineNumber: 114,
                                        columnNumber: 17
                                    }, this)
                                ]
                            }, `campaign-${campaign.campaign_id}`, true, {
                                fileName: "[project]/src/features/campaignManager/components/popups/GroupCampaignList.tsx",
                                lineNumber: 101,
                                columnNumber: 15
                            }, this))
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/popups/GroupCampaignList.tsx",
                        lineNumber: 99,
                        columnNumber: 11
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/features/campaignManager/components/popups/GroupCampaignList.tsx",
                lineNumber: 82,
                columnNumber: 9
            }, this)
        }, void 0, false, {
            fileName: "[project]/src/features/campaignManager/components/popups/GroupCampaignList.tsx",
            lineNumber: 81,
            columnNumber: 7
        }, this)
    }, void 0, false, {
        fileName: "[project]/src/features/campaignManager/components/popups/GroupCampaignList.tsx",
        lineNumber: 80,
        columnNumber: 5
    }, this);
};
_s(GroupCampaignList, "NPmRjPrngQxuvFgS07BHQU54FRM=");
_c = GroupCampaignList;
const __TURBOPACK__default__export__ = GroupCampaignList;
var _c;
__turbopack_refresh__.register(_c, "GroupCampaignList");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// "use client";
// import React from "react";
// import { ChevronDown, ChevronRight } from "lucide-react";
// import CommonCheckBox2 from "@/components/shared/CommonCheckBox2";
// interface SkillWithCampaigns {
//   skillId: number;
//   campaigns: { campaignId: number; tenantId: number }[];
// }
// interface Props {
//   filteredSkills: SkillWithCampaigns[];
//   expandedSkills: number[];
//   selectedLeftCampaigns: number[];
//   isLoading: boolean;
//   hasError: boolean;
//   toggleSkill: (skillId: number) => void;
//   toggleLeftCampaignSelection: (campaignId: number) => void;
//   toggleAllCampaigns: (checked: boolean) => void;
//   getCampaignName: (campaignId: number) => string;
//   getSkillName: (skillId: number) => string;
// }
// const ITableForSkillListWithCampaign: React.FC<Props> = ({
//   filteredSkills = [],
//   expandedSkills = [],
//   selectedLeftCampaigns = [],
//   isLoading,
//   hasError,
//   toggleSkill,
//   toggleLeftCampaignSelection,
//   toggleAllCampaigns,
//   getCampaignName,
//   getSkillName,
// }) => {
//   // Calculate if all visible campaigns are selected
//   const allCampaignsCount = filteredSkills.reduce(
//     (count, skill) => count + skill.campaigns.length,
//     0
//   );
//   const allVisibleCampaignIds = filteredSkills.flatMap(skill => 
//     skill.campaigns.map(campaign => campaign.campaignId)
//   );
//   const allSelected = allCampaignsCount > 0 && 
//     allVisibleCampaignIds.every(id => selectedLeftCampaigns.includes(id));
//   return (
//     <div className="flex flex-col h-full">
//       {isLoading ? (
//         <div className="flex items-center justify-center h-full text-sm">로딩 중...</div>
//       ) : hasError ? (
//         <div className="flex items-center justify-center h-full text-red-500 text-sm">
//           데이터 로드 중 오류 발생
//         </div>
//       ) : filteredSkills.length === 0 ? (
//         <div className="flex items-center justify-center h-full text-gray-500 text-sm">
//           검색 결과가 없습니다.
//         </div>
//       ) : (
//         <div className="flex-1 overflow-auto" style={{ paddingBottom: '20px' }}>
//           <table className="w-full border-collapse table-fixed text-xs">
//             <thead>
//               <tr className="bg-white border-b sticky top-0 z-10">
//                 <th className="w-8 py-1 px-2 text-center">
//                   <CommonCheckBox2
//                     checked={allSelected}
//                     onChange={toggleAllCampaigns}
//                     title="전체 선택"
//                   />
//                 </th>
//                 <th className="text-left py-1 px-2 font-medium">스킬</th>
//                 <th className="text-left py-1 px-2 font-medium w-1/4">캠페인ID</th>
//                 <th className="text-left py-1 px-2 font-medium w-1/2">캠페인 이름</th>
//               </tr>
//             </thead>
//             <tbody>
//               {filteredSkills.map((skill) => {
//                 const isExpanded = expandedSkills.includes(skill.skillId);
//                 return (
//                   <React.Fragment key={`skill-${skill.skillId}`}>
//                     {/* 스킬 행 */}
//                     <tr className={`border-b ${isExpanded ? "bg-blue-100" : "bg-blue-50"}`}>
//                       <td className="py-1 px-2 align-middle text-center">
//                         {/* 스킬 레벨에는 체크박스 없음 */}
//                       </td>
//                       <td className="py-1 px-2 align-middle cursor-pointer" onClick={() => toggleSkill(skill.skillId)}>
//                         <div className="flex items-center">
//                           {isExpanded ? (
//                             <ChevronDown size={14} className="mr-1 flex-shrink-0" />
//                           ) : (
//                             <ChevronRight size={14} className="mr-1 flex-shrink-0" />
//                           )}
//                           <span className="font-medium">{getSkillName(skill.skillId)}</span>
//                         </div>
//                       </td>
//                       <td className="py-1 px-2 align-middle"></td>
//                       <td className="py-1 px-2 align-middle"></td>
//                     </tr>
//                     {/* 캠페인 목록 (확장 시 표시) */}
//                     {isExpanded &&
//                       (skill.campaigns ?? []).map((campaign) => (
//                         <tr
//                           key={`campaign-${skill.skillId}-${campaign.campaignId}`}
//                           className="border-b bg-white hover:bg-gray-50"
//                         >
//                           <td className="py-1 px-2 align-middle text-center">
//                             <CommonCheckBox2
//                               checked={selectedLeftCampaigns.includes(campaign.campaignId)}
//                               onChange={() => toggleLeftCampaignSelection(campaign.campaignId)}
//                             />
//                           </td>
//                           <td className="py-1 px-2 align-middle text-gray-600">
//                             <div className="pl-5">{getSkillName(skill.skillId)}</div>
//                           </td>
//                           <td className="py-1 px-2 align-middle">{campaign.campaignId}</td>
//                           <td className="py-1 px-2 align-middle text-blue-600">
//                             {getCampaignName(campaign.campaignId)}
//                           </td>
//                         </tr>
//                       ))}
//                   </React.Fragment>
//                 );
//               })}
//               {/* 마지막 행 이후 추가 여백을 위한 빈 행 */}
//               <tr>
//                 <td colSpan={4} className="h-16"></td>
//               </tr>
//             </tbody>
//           </table>
//         </div>
//       )}
//     </div>
//   );
// };
// export default ITableForSkillListWithCampaign;
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CommonCheckBox2$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/shared/CommonCheckBox2/index.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$chevron$2d$right$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ChevronRight$3e$__ = __turbopack_import__("[project]/node_modules/lucide-react/dist/esm/icons/chevron-right.js [app-client] (ecmascript) <export default as ChevronRight>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$chevron$2d$down$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ChevronDown$3e$__ = __turbopack_import__("[project]/node_modules/lucide-react/dist/esm/icons/chevron-down.js [app-client] (ecmascript) <export default as ChevronDown>");
;
var _s = __turbopack_refresh__.signature();
"use client";
;
;
;
const ITableForSkillListWithCampaign = ({ filteredSkills = [], expandedSkills = [], selectedLeftCampaigns = [], isLoading, hasError, toggleSkill, toggleLeftCampaignSelection, toggleAllCampaigns, getCampaignName, getSkillName, setExpandedSkills })=>{
    _s();
    // Calculate if all visible campaigns are selected
    const allCampaignsIds = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "ITableForSkillListWithCampaign.useMemo[allCampaignsIds]": ()=>{
            return filteredSkills.flatMap({
                "ITableForSkillListWithCampaign.useMemo[allCampaignsIds]": (skill)=>skill.campaigns.map({
                        "ITableForSkillListWithCampaign.useMemo[allCampaignsIds]": (campaign)=>`${skill.skillId}-${campaign.campaignId}`
                    }["ITableForSkillListWithCampaign.useMemo[allCampaignsIds]"])
            }["ITableForSkillListWithCampaign.useMemo[allCampaignsIds]"]);
        }
    }["ITableForSkillListWithCampaign.useMemo[allCampaignsIds]"], [
        filteredSkills
    ]);
    const allSelected = allCampaignsIds.length > 0 && allCampaignsIds.every((id)=>selectedLeftCampaigns.includes(id));
    const hasPartialSelection = !allSelected && allCampaignsIds.some((id)=>selectedLeftCampaigns.includes(id));
    // Toggle all campaigns for a specific skill
    const toggleSkillCampaigns = (skillId, checked)=>{
        const skill = filteredSkills.find((s)=>s.skillId === skillId);
        if (!skill) return;
        const skillCampaignIds = skill.campaigns.map((campaign)=>`${skillId}-${campaign.campaignId}`);
        if (checked) {
            // 체크 시 자동으로 스킬을 펼치기
            if (!expandedSkills.includes(skillId)) {
                setExpandedSkills([
                    ...expandedSkills,
                    skillId
                ]);
            }
            // Add all campaigns that are not already selected
            const idsToAdd = skillCampaignIds.filter((id)=>!selectedLeftCampaigns.includes(id));
            if (idsToAdd.length > 0) {
                // Toggle each campaign selection individually
                idsToAdd.forEach((id)=>toggleLeftCampaignSelection(id));
            }
        } else {
            // 체크 해제 시 자동으로 스킬을 접기
            setExpandedSkills(expandedSkills.filter((id)=>id !== skillId));
            // Remove all campaigns for this skill that are currently selected
            const idsToRemove = skillCampaignIds.filter((id)=>selectedLeftCampaigns.includes(id));
            if (idsToRemove.length > 0) {
                // Toggle each campaign selection individually
                idsToRemove.forEach((id)=>toggleLeftCampaignSelection(id));
            }
        }
    };
    // 개별 캠페인 선택/해제 처리 함수
    const handleToggleCampaign = (compositeId)=>{
        // 원래 토글 함수 호출
        toggleLeftCampaignSelection(compositeId);
        // 이 캠페인을 선택 해제하는 경우 (현재 선택된 상태)
        if (selectedLeftCampaigns.includes(compositeId)) {
            // 해당 스킬의 모든 캠페인이 선택 해제되었는지 확인
            const [skillIdStr] = compositeId.split('-');
            const skillId = parseInt(skillIdStr);
            const skill = filteredSkills.find((s)=>s.skillId === skillId);
            if (skill) {
                const skillCampaignIds = skill.campaigns.map((campaign)=>`${skillId}-${campaign.campaignId}`);
                // 현재 선택 해제하는 캠페인을 제외한 나머지 선택된 캠페인 수
                const remainingSelectedCount = skillCampaignIds.filter((id)=>id !== compositeId && selectedLeftCampaigns.includes(id)).length;
                // 선택된 캠페인이 이제 없다면 스킬을 접기
                if (remainingSelectedCount === 0) {
                    setExpandedSkills(expandedSkills.filter((id)=>id !== skillId));
                }
            }
        }
    };
    // 전체 선택/해제 처리 함수
    const handleToggleAllCampaigns = (checked)=>{
        // 전체 선택 해제할 때는 모든 스킬 접기
        if (!checked) {
            setExpandedSkills([]);
        } else {
            // 전체 선택할 때는 모든 스킬 펼치기
            const allSkillIds = filteredSkills.map((skill)=>skill.skillId);
            setExpandedSkills(allSkillIds);
        }
        // 기존 전체 선택/해제 로직 호출
        toggleAllCampaigns(checked);
    };
    // Calculate selection state for each skill
    const getSkillSelectionState = (skillId)=>{
        const skill = filteredSkills.find((s)=>s.skillId === skillId);
        if (!skill || skill.campaigns.length === 0) return {
            checked: false,
            indeterminate: false
        };
        const skillCampaignIds = skill.campaigns.map((campaign)=>`${skillId}-${campaign.campaignId}`);
        const selectedCount = skillCampaignIds.filter((id)=>selectedLeftCampaigns.includes(id)).length;
        return {
            checked: selectedCount === skillCampaignIds.length && skillCampaignIds.length > 0,
            indeterminate: selectedCount > 0 && selectedCount < skillCampaignIds.length
        };
    };
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
        className: "flex flex-col",
        children: isLoading ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
            className: "flex items-center justify-center h-full text-sm",
            children: "로딩 중..."
        }, void 0, false, {
            fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
            lineNumber: 284,
            columnNumber: 9
        }, this) : hasError ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
            className: "flex items-center justify-center h-full text-red-500 text-sm",
            children: "데이터 로드 중 오류 발생"
        }, void 0, false, {
            fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
            lineNumber: 286,
            columnNumber: 9
        }, this) : filteredSkills.length === 0 ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
            className: "flex items-center justify-center h-full text-gray-500 text-sm",
            children: "검색 결과가 없습니다."
        }, void 0, false, {
            fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
            lineNumber: 290,
            columnNumber: 9
        }, this) : /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
            className: "overflow-y-auto",
            style: {
                height: '340px'
            },
            children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("table", {
                className: "w-full border-collapse table-fixed text-xs",
                children: [
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("thead", {
                        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("tr", {
                            className: "bg-[#F8F8F8] border-b sticky top-0 z-10",
                            children: [
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("th", {
                                    className: "w-12 px-2 text-center border-r align-bottom",
                                    style: {
                                        height: '30px'
                                    },
                                    children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CommonCheckBox2$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                                        checked: allSelected,
                                        indeterminate: hasPartialSelection,
                                        onChange: ()=>handleToggleAllCampaigns(!allSelected),
                                        title: "전체 선택"
                                    }, void 0, false, {
                                        fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
                                        lineNumber: 299,
                                        columnNumber: 19
                                    }, this)
                                }, void 0, false, {
                                    fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
                                    lineNumber: 298,
                                    columnNumber: 17
                                }, this),
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("th", {
                                    className: "text-left px-2 font-medium text-[#333] border-r",
                                    style: {
                                        height: '30px'
                                    },
                                    children: "스킬"
                                }, void 0, false, {
                                    fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
                                    lineNumber: 306,
                                    columnNumber: 17
                                }, this),
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("th", {
                                    className: "text-left px-2 font-medium text-[#333] w-1/4 border-r",
                                    style: {
                                        height: '30px'
                                    },
                                    children: "캠페인ID"
                                }, void 0, false, {
                                    fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
                                    lineNumber: 307,
                                    columnNumber: 17
                                }, this),
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("th", {
                                    className: "text-left px-2 font-medium text-[#333] w-1/2",
                                    style: {
                                        height: '30px'
                                    },
                                    children: "캠페인 이름"
                                }, void 0, false, {
                                    fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
                                    lineNumber: 308,
                                    columnNumber: 17
                                }, this)
                            ]
                        }, void 0, true, {
                            fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
                            lineNumber: 297,
                            columnNumber: 15
                        }, this)
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
                        lineNumber: 296,
                        columnNumber: 13
                    }, this),
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("tbody", {
                        children: filteredSkills.map((skill)=>{
                            const isExpanded = expandedSkills.includes(skill.skillId);
                            const { checked, indeterminate } = getSkillSelectionState(skill.skillId);
                            return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].Fragment, {
                                children: [
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("tr", {
                                        className: `border-b ${isExpanded ? "bg-[#edf7fd]" : "bg-[#f5faff]"}`,
                                        children: [
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("td", {
                                                className: "px-2 align-bottom text-center",
                                                style: {
                                                    height: '30px'
                                                },
                                                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CommonCheckBox2$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                                                    checked: checked,
                                                    indeterminate: indeterminate,
                                                    onChange: ()=>toggleSkillCampaigns(skill.skillId, !checked)
                                                }, void 0, false, {
                                                    fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
                                                    lineNumber: 322,
                                                    columnNumber: 25
                                                }, this)
                                            }, void 0, false, {
                                                fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
                                                lineNumber: 320,
                                                columnNumber: 23
                                            }, this),
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("td", {
                                                className: "px-2 align-middle cursor-pointer text-[#444]",
                                                onClick: ()=>toggleSkill(skill.skillId),
                                                style: {
                                                    height: '30px'
                                                },
                                                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                                    className: "flex items-center",
                                                    children: [
                                                        isExpanded ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$chevron$2d$down$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ChevronDown$3e$__["ChevronDown"], {
                                                            size: 16,
                                                            className: "mr-2 flex-shrink-0 text-[#444]"
                                                        }, void 0, false, {
                                                            fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
                                                            lineNumber: 331,
                                                            columnNumber: 29
                                                        }, this) : /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$chevron$2d$right$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__ChevronRight$3e$__["ChevronRight"], {
                                                            size: 16,
                                                            className: "mr-2 flex-shrink-0 text-[#444]"
                                                        }, void 0, false, {
                                                            fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
                                                            lineNumber: 333,
                                                            columnNumber: 29
                                                        }, this),
                                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                                            className: "font-medium",
                                                            children: getSkillName(skill.skillId)
                                                        }, void 0, false, {
                                                            fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
                                                            lineNumber: 335,
                                                            columnNumber: 27
                                                        }, this)
                                                    ]
                                                }, void 0, true, {
                                                    fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
                                                    lineNumber: 329,
                                                    columnNumber: 25
                                                }, this)
                                            }, void 0, false, {
                                                fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
                                                lineNumber: 328,
                                                columnNumber: 23
                                            }, this),
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("td", {
                                                className: "px-2 align-middle text-[#444]",
                                                style: {
                                                    height: '30px'
                                                }
                                            }, void 0, false, {
                                                fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
                                                lineNumber: 338,
                                                columnNumber: 23
                                            }, this),
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("td", {
                                                className: "px-2 align-middle text-[#444]",
                                                style: {
                                                    height: '30px'
                                                }
                                            }, void 0, false, {
                                                fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
                                                lineNumber: 339,
                                                columnNumber: 23
                                            }, this)
                                        ]
                                    }, void 0, true, {
                                        fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
                                        lineNumber: 319,
                                        columnNumber: 21
                                    }, this),
                                    isExpanded && (skill.campaigns ?? []).map((campaign)=>{
                                        const compositeId = `${skill.skillId}-${campaign.campaignId}`;
                                        return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("tr", {
                                            className: "border-b bg-white hover:bg-[#FFFAEE]",
                                            children: [
                                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("td", {
                                                    className: "px-2 align-middle text-center",
                                                    style: {
                                                        height: '30px'
                                                    },
                                                    children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CommonCheckBox2$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                                                        checked: selectedLeftCampaigns.includes(compositeId),
                                                        onChange: ()=>handleToggleCampaign(compositeId)
                                                    }, void 0, false, {
                                                        fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
                                                        lineNumber: 352,
                                                        columnNumber: 31
                                                    }, this)
                                                }, void 0, false, {
                                                    fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
                                                    lineNumber: 351,
                                                    columnNumber: 29
                                                }, this),
                                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("td", {
                                                    className: "px-2 align-middle text-gray-600",
                                                    style: {
                                                        height: '30px'
                                                    },
                                                    children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                                        className: "flex items-center",
                                                        children: [
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                                                className: "w-5 mr-2"
                                                            }, void 0, false, {
                                                                fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
                                                                lineNumber: 359,
                                                                columnNumber: 33
                                                            }, this),
                                                            " ",
                                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                                                className: "pl-2",
                                                                children: getSkillName(skill.skillId)
                                                            }, void 0, false, {
                                                                fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
                                                                lineNumber: 360,
                                                                columnNumber: 33
                                                            }, this),
                                                            " "
                                                        ]
                                                    }, void 0, true, {
                                                        fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
                                                        lineNumber: 358,
                                                        columnNumber: 31
                                                    }, this)
                                                }, void 0, false, {
                                                    fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
                                                    lineNumber: 357,
                                                    columnNumber: 29
                                                }, this),
                                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("td", {
                                                    className: "px-2 align-middle font-medium",
                                                    style: {
                                                        height: '30px'
                                                    },
                                                    children: campaign.campaignId
                                                }, void 0, false, {
                                                    fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
                                                    lineNumber: 363,
                                                    columnNumber: 29
                                                }, this),
                                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("td", {
                                                    className: "px-2 align-middle text-blue-700",
                                                    style: {
                                                        height: '30px'
                                                    },
                                                    children: getCampaignName(campaign.campaignId)
                                                }, void 0, false, {
                                                    fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
                                                    lineNumber: 364,
                                                    columnNumber: 29
                                                }, this)
                                            ]
                                        }, `campaign-${compositeId}`, true, {
                                            fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
                                            lineNumber: 347,
                                            columnNumber: 27
                                        }, this);
                                    })
                                ]
                            }, `skill-${skill.skillId}`, true, {
                                fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
                                lineNumber: 317,
                                columnNumber: 19
                            }, this);
                        })
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
                        lineNumber: 311,
                        columnNumber: 13
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
                lineNumber: 295,
                columnNumber: 11
            }, this)
        }, void 0, false, {
            fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
            lineNumber: 294,
            columnNumber: 9
        }, this)
    }, void 0, false, {
        fileName: "[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx",
        lineNumber: 282,
        columnNumber: 5
    }, this);
};
_s(ITableForSkillListWithCampaign, "a+HgET9YixBjynaYsV4z4kOmtsA=");
_c = ITableForSkillListWithCampaign;
const __TURBOPACK__default__export__ = ITableForSkillListWithCampaign;
var _c;
__turbopack_refresh__.register(_c, "ITableForSkillListWithCampaign");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/hooks/useApiForAddCampaignToSpecificCampaignGroup.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/widgets/sidebar/hooks/useApiForAddCampaignToSpecificCampaignGroup.ts
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$api$2f$apiForCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/preferences/api/apiForCampaignGroup.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/useMutation.js [app-client] (ecmascript)");
var _s = __turbopack_refresh__.signature();
;
;
/**
 * 특정 캠페인 그룹에 캠페인을 추가하기 위한 커스텀 훅
 * @param options 뮤테이션 옵션
 * @returns 뮤테이션 결과 및 관련 함수
 */ const useApiForAddCampaignToSpecificCampaignGroup = (options)=>{
    _s();
    const queryClient = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQueryClient"])();
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMutation"])({
        mutationKey: [
            'addCampaignToGroup'
        ],
        mutationFn: {
            "useApiForAddCampaignToSpecificCampaignGroup.useMutation": ({ group_id, campaign_ids, tenant_id })=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$api$2f$apiForCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["apiForAddCampaignToSpecificCampaignGroup"])(group_id, campaign_ids, tenant_id)
        }["useApiForAddCampaignToSpecificCampaignGroup.useMutation"],
        onSuccess: {
            "useApiForAddCampaignToSpecificCampaignGroup.useMutation": (data, variables, context)=>{
                // 캠페인 그룹 관련 캐시 무효화
                queryClient.invalidateQueries({
                    queryKey: [
                        'campaignGroupSkills',
                        variables.group_id
                    ]
                });
                // 캠페인 그룹 리스트 캐시 무효화
                queryClient.invalidateQueries({
                    queryKey: [
                        'campaignGroupList'
                    ]
                });
                // 사이드메뉴 데이터 캐시 무효화
                queryClient.invalidateQueries({
                    queryKey: [
                        'sideMenuData'
                    ]
                });
                console.log('✅ 캠페인 그룹에 캠페인 추가 성공:', data);
                options?.onSuccess?.(data, variables, context);
            }
        }["useApiForAddCampaignToSpecificCampaignGroup.useMutation"],
        onError: {
            "useApiForAddCampaignToSpecificCampaignGroup.useMutation": (error, variables, context)=>{
                console.error('❌ 캠페인 그룹에 캠페인 추가 실패:', error);
                options?.onError?.(error, variables, context);
            }
        }["useApiForAddCampaignToSpecificCampaignGroup.useMutation"]
    });
};
_s(useApiForAddCampaignToSpecificCampaignGroup, "YK0wzM21ECnncaq5SECwU+/SVdQ=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQueryClient"],
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMutation"]
    ];
});
const __TURBOPACK__default__export__ = useApiForAddCampaignToSpecificCampaignGroup;
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/hooks/useApiForRemoveCampaignFromCampaignGroup.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/widgets/sidebar/hooks/useApiForRemoveCampaignFromCampaignGroup.ts
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$api$2f$apiForCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/preferences/api/apiForCampaignGroup.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/useMutation.js [app-client] (ecmascript)");
var _s = __turbopack_refresh__.signature();
;
;
/**
 * 특정 캠페인 그룹에서 캠페인을 제거하기 위한 커스텀 훅
 * @param options 뮤테이션 옵션
 * @returns 뮤테이션 결과 및 관련 함수
 */ const useApiForRemoveCampaignFromCampaignGroup = (options)=>{
    _s();
    const queryClient = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQueryClient"])();
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMutation"])({
        mutationKey: [
            'removeCampaignFromGroup'
        ],
        mutationFn: {
            "useApiForRemoveCampaignFromCampaignGroup.useMutation": ({ group_id, campaign_ids, tenant_id })=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$api$2f$apiForCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["apiForRemoveCampaignFromCampaignGroup"])(group_id, campaign_ids, tenant_id)
        }["useApiForRemoveCampaignFromCampaignGroup.useMutation"],
        onSuccess: {
            "useApiForRemoveCampaignFromCampaignGroup.useMutation": (data, variables, context)=>{
                // 캠페인 그룹 관련 캐시 무효화
                queryClient.invalidateQueries({
                    queryKey: [
                        'campaignGroupSkills',
                        variables.group_id
                    ]
                });
                // 캠페인 그룹 리스트 캐시 무효화
                queryClient.invalidateQueries({
                    queryKey: [
                        'campaignGroupList'
                    ]
                });
                // 사이드메뉴 데이터 캐시 무효화
                queryClient.invalidateQueries({
                    queryKey: [
                        'sideMenuData'
                    ]
                });
                console.log('✅ 캠페인 그룹에서 캠페인 제거 성공:', data);
                options?.onSuccess?.(data, variables, context);
            }
        }["useApiForRemoveCampaignFromCampaignGroup.useMutation"],
        onError: {
            "useApiForRemoveCampaignFromCampaignGroup.useMutation": (error, variables, context)=>{
                console.error('❌ 캠페인 그룹에서 캠페인 제거 실패:', error);
                options?.onError?.(error, variables, context);
            }
        }["useApiForRemoveCampaignFromCampaignGroup.useMutation"]
    });
};
_s(useApiForRemoveCampaignFromCampaignGroup, "YK0wzM21ECnncaq5SECwU+/SVdQ=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQueryClient"],
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMutation"]
    ];
});
const __TURBOPACK__default__export__ = useApiForRemoveCampaignFromCampaignGroup;
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$widgets$2f$sidebar$2f$hooks$2f$useApiForGetSkillsWithCampaigns$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/widgets/sidebar/hooks/useApiForGetSkillsWithCampaigns.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$widgets$2f$sidebar$2f$hooks$2f$useTotalCampaignListForAddCampaignToCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/widgets/sidebar/hooks/useTotalCampaignListForAddCampaignToCampaignGroup.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$widgets$2f$sidebar$2f$hooks$2f$useTotalSkillListForAddCampaignToCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/widgets/sidebar/hooks/useTotalSkillListForAddCampaignToCampaignGroup.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$widgets$2f$sidebar$2f$hooks$2f$useApiForGetCampaignListForCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/widgets/sidebar/hooks/useApiForGetCampaignListForCampaignGroup.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$popups$2f$GroupCampaignList$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/components/popups/GroupCampaignList.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$popups$2f$ITableForSkillListWithCampaign$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/components/popups/ITableForSkillListWithCampaign.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$authStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/authStore.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/react-toastify/dist/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForAddCampaignToSpecificCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/hooks/useApiForAddCampaignToSpecificCampaignGroup.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForRemoveCampaignFromCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/hooks/useApiForRemoveCampaignFromCampaignGroup.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$CustomAlert$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/shared/layout/CustomAlert.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCampaignGroupTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/storeForSideMenuCampaignGroupTab.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$TitleWrap$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/shared/TitleWrap/index.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CommonButton$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/shared/CommonButton/index.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CustomInput$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/shared/CustomInput/index.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$campainManagerStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/campainManagerStore.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js [app-client] (ecmascript)");
;
var _s = __turbopack_refresh__.signature();
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
const CampaignAddPopup = ({ isOpen = true, onClose, onSelect, groupId, groupName })=>{
    _s();
    // ----------------------------
    //  State
    // ----------------------------
    const [skillsWithCampaigns, setSkillsWithCampaigns] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])([]);
    const [expandedSkills, setExpandedSkills] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])([
        1
    ]);
    const [selectedLeftCampaigns, setSelectedLeftCampaigns] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])([]);
    const [selectedRightCampaigns, setSelectedRightCampaigns] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])([]);
    const [campaignIdsForPopup, setCampaignIdsForPopup] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])([]);
    const [searchTerm, setSearchTerm] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])('');
    const [showAlert, setShowAlert] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const [alertMessage, setAlertMessage] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])('');
    const [confirmRemove, setConfirmRemove] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const [processingCampaigns, setProcessingCampaigns] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const [removingCampaigns, setRemovingCampaigns] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const [campaignLookup, setCampaignLookup] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])({});
    const [skillLookup, setSkillLookup] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])({});
    const { refetchTreeDataForCampaignGroupTab } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCampaignGroupTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useSideMenuCampaignGroupTabStore"])();
    const { setCampaignGroupManagerInit } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$campainManagerStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCampainManagerStore"])();
    // ----------------------------
    //  Hooks
    // ----------------------------
    const tenant_id = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$authStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAuthStore"])({
        "CampaignAddPopup.useAuthStore[tenant_id]": (state)=>state.tenant_id
    }["CampaignAddPopup.useAuthStore[tenant_id]"]);
    const queryClient = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQueryClient"])();
    // ----------------------------
    //  Query
    // ----------------------------
    const { data, isLoading, error } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$widgets$2f$sidebar$2f$hooks$2f$useApiForGetSkillsWithCampaigns$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(undefined, isOpen);
    const { data: campaignListData, isLoading: isLoadingCampaigns, error: campaignError } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$widgets$2f$sidebar$2f$hooks$2f$useTotalCampaignListForAddCampaignToCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTotalCampaignListForAddCampaignToCampaignGroup"])(undefined, isOpen);
    const { data: skillListData, isLoading: isLoadingSkills, error: skillError } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$widgets$2f$sidebar$2f$hooks$2f$useTotalSkillListForAddCampaignToCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTotalSkillListForAddCampaignToCampaignGroup"])(undefined, isOpen);
    const { data: groupData, isLoading: isLoadingGroup, error: groupError } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$widgets$2f$sidebar$2f$hooks$2f$useApiForGetCampaignListForCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(groupId, undefined, undefined, isOpen);
    // ----------------------------
    //  Mutation
    // ----------------------------
    const { mutate: addCampaignToGroup, isPending: isAddingCampaign } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForAddCampaignToSpecificCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])({
        onSuccess: {
            "CampaignAddPopup.useApiForAddCampaignToSpecificCampaignGroup": ()=>{
                queryClient.invalidateQueries({
                    queryKey: [
                        'campaignGroupSkills',
                        groupId
                    ]
                });
            }
        }["CampaignAddPopup.useApiForAddCampaignToSpecificCampaignGroup"],
        onError: {
            "CampaignAddPopup.useApiForAddCampaignToSpecificCampaignGroup": (error)=>{
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].error(`캠페인 추가 실패: ${error.message}`);
            }
        }["CampaignAddPopup.useApiForAddCampaignToSpecificCampaignGroup"]
    });
    const { mutate: removeCampaignFromGroup, isPending: isRemovingCampaign } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForRemoveCampaignFromCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])({
        onSuccess: {
            "CampaignAddPopup.useApiForRemoveCampaignFromCampaignGroup": ()=>{
                queryClient.invalidateQueries({
                    queryKey: [
                        'campaignGroupSkills',
                        groupId
                    ]
                });
            }
        }["CampaignAddPopup.useApiForRemoveCampaignFromCampaignGroup"],
        onError: {
            "CampaignAddPopup.useApiForRemoveCampaignFromCampaignGroup": (error)=>{
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].error(`캠페인 제거 실패: ${error.message}`);
            }
        }["CampaignAddPopup.useApiForRemoveCampaignFromCampaignGroup"]
    });
    // ----------------------------
    //  Effects
    // ----------------------------
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "CampaignAddPopup.useEffect": ()=>{
            if (campaignListData?.result_data) {
                const lookup = {};
                campaignListData.result_data.forEach({
                    "CampaignAddPopup.useEffect": (campaign)=>{
                        lookup[campaign.campaign_id] = campaign;
                    }
                }["CampaignAddPopup.useEffect"]);
                setCampaignLookup(lookup);
            }
        }
    }["CampaignAddPopup.useEffect"], [
        campaignListData
    ]);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "CampaignAddPopup.useEffect": ()=>{
            if (skillListData?.result_data) {
                const lookup = {};
                skillListData.result_data.forEach({
                    "CampaignAddPopup.useEffect": (skill)=>{
                        lookup[skill.skill_id] = skill;
                    }
                }["CampaignAddPopup.useEffect"]);
                setSkillLookup(lookup);
            }
        }
    }["CampaignAddPopup.useEffect"], [
        skillListData
    ]);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "CampaignAddPopup.useEffect": ()=>{
            if (data?.result_data) {
                const skillMap = {};
                data.result_data.forEach({
                    "CampaignAddPopup.useEffect": (campaign)=>{
                        if (Array.isArray(campaign.skill_id)) {
                            campaign.skill_id.forEach({
                                "CampaignAddPopup.useEffect": (skillId)=>{
                                    if (!skillMap[skillId]) {
                                        skillMap[skillId] = {
                                            skillId,
                                            campaigns: []
                                        };
                                    }
                                    if (!skillMap[skillId].campaigns.some({
                                        "CampaignAddPopup.useEffect": (c)=>c.campaignId === campaign.campaign_id
                                    }["CampaignAddPopup.useEffect"])) {
                                        skillMap[skillId].campaigns.push({
                                            campaignId: campaign.campaign_id,
                                            tenantId: campaign.tenant_id
                                        });
                                    }
                                }
                            }["CampaignAddPopup.useEffect"]);
                        }
                    }
                }["CampaignAddPopup.useEffect"]);
                const skillArray = Object.values(skillMap).sort({
                    "CampaignAddPopup.useEffect.skillArray": (a, b)=>a.skillId - b.skillId
                }["CampaignAddPopup.useEffect.skillArray"]);
                setSkillsWithCampaigns(skillArray);
            }
        }
    }["CampaignAddPopup.useEffect"], [
        data
    ]);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "CampaignAddPopup.useEffect": ()=>{
            if (isOpen) {
                setSelectedLeftCampaigns([]);
                setSelectedRightCampaigns([]);
                setExpandedSkills([
                    1
                ]);
                setSearchTerm('');
                setShowAlert(false);
                setConfirmRemove(false);
                setCampaignIdsForPopup([]);
            }
        }
    }["CampaignAddPopup.useEffect"], [
        isOpen
    ]);
    // ----------------------------
    //  Derived data & Helpers
    // ----------------------------
    const isLoadingAny = isLoading || isLoadingCampaigns || isLoadingSkills;
    const hasError = Boolean(error || campaignError || skillError || groupError);
    const groupCampaignsData = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "CampaignAddPopup.useMemo[groupCampaignsData]": ()=>{
            return (groupData?.result_data || []).filter({
                "CampaignAddPopup.useMemo[groupCampaignsData]": (item)=>item.group_id === groupId
            }["CampaignAddPopup.useMemo[groupCampaignsData]"]);
        }
    }["CampaignAddPopup.useMemo[groupCampaignsData]"], [
        groupData,
        groupId
    ]);
    // 현재 그룹에 이미 존재하는 캠페인 ID들의 Set
    const existingCampaignIds = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "CampaignAddPopup.useMemo[existingCampaignIds]": ()=>{
            return new Set(groupCampaignsData.map({
                "CampaignAddPopup.useMemo[existingCampaignIds]": (item)=>item.campaign_id
            }["CampaignAddPopup.useMemo[existingCampaignIds]"]));
        }
    }["CampaignAddPopup.useMemo[existingCampaignIds]"], [
        groupCampaignsData
    ]);
    // 선택한 캠페인 중 중복되지 않은 항목이 있는지 확인
    const hasUniqueSelections = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "CampaignAddPopup.useMemo[hasUniqueSelections]": ()=>{
            return campaignIdsForPopup.some({
                "CampaignAddPopup.useMemo[hasUniqueSelections]": (id)=>!existingCampaignIds.has(id)
            }["CampaignAddPopup.useMemo[hasUniqueSelections]"]);
        }
    }["CampaignAddPopup.useMemo[hasUniqueSelections]"], [
        campaignIdsForPopup,
        existingCampaignIds
    ]);
    const getCampaignName = (campaignId)=>campaignLookup[campaignId]?.campaign_name || `캠페인 ${campaignId}`;
    const getSkillName = (skillId)=>skillLookup[skillId]?.skill_name || `스킬 ${skillId}`;
    const filteredSkills = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "CampaignAddPopup.useMemo[filteredSkills]": ()=>{
            if (!searchTerm) return skillsWithCampaigns;
            const term = searchTerm.toLowerCase();
            return skillsWithCampaigns.map({
                "CampaignAddPopup.useMemo[filteredSkills]": (skill)=>{
                    const skillMatches = String(skill.skillId).includes(term) || getSkillName(skill.skillId).toLowerCase().includes(term);
                    const filteredCampaigns = skill.campaigns.filter({
                        "CampaignAddPopup.useMemo[filteredSkills].filteredCampaigns": (c)=>String(c.campaignId).includes(term) || getCampaignName(c.campaignId).toLowerCase().includes(term)
                    }["CampaignAddPopup.useMemo[filteredSkills].filteredCampaigns"]);
                    return {
                        skillId: skill.skillId,
                        campaigns: skillMatches ? skill.campaigns : filteredCampaigns
                    };
                }
            }["CampaignAddPopup.useMemo[filteredSkills]"]).filter({
                "CampaignAddPopup.useMemo[filteredSkills]": (skill)=>skill.campaigns.length > 0
            }["CampaignAddPopup.useMemo[filteredSkills]"]);
        }
    }["CampaignAddPopup.useMemo[filteredSkills]"], [
        skillsWithCampaigns,
        searchTerm
    ]);
    const totalCampaigns = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMemo"])({
        "CampaignAddPopup.useMemo[totalCampaigns]": ()=>filteredSkills.reduce({
                "CampaignAddPopup.useMemo[totalCampaigns]": (acc, skill)=>acc + skill.campaigns.length
            }["CampaignAddPopup.useMemo[totalCampaigns]"], 0)
    }["CampaignAddPopup.useMemo[totalCampaigns]"], [
        filteredSkills
    ]);
    const toggleSkill = (skillId)=>{
        setExpandedSkills((prev)=>prev.includes(skillId) ? prev.filter((id)=>id !== skillId) : [
                ...prev,
                skillId
            ]);
    };
    const toggleAllSkills = (expand)=>{
        if (expand) {
            const allSkillIds = filteredSkills.map((skill)=>skill.skillId);
            setExpandedSkills(allSkillIds);
        } else {
            setExpandedSkills([]);
        }
    };
    const toggleLeftCampaignSelection = (id)=>{
        setSelectedLeftCampaigns((prev)=>prev.includes(id) ? prev.filter((itemId)=>itemId !== id) : [
                ...prev,
                id
            ]);
    };
    const toggleAllCampaigns = (checked)=>{
        if (checked) {
            toggleAllSkills(true);
            const allCampaignIds = filteredSkills.flatMap((skill)=>skill.campaigns.map((c)=>`${skill.skillId}-${c.campaignId}`));
            setSelectedLeftCampaigns(allCampaignIds);
        } else {
            setSelectedLeftCampaigns([]);
        }
    };
    const toggleAllGroupCampaigns = (checked, selectedIds = [])=>{
        setSelectedRightCampaigns(selectedIds);
    };
    const getSelectedCampaignIds = ()=>{
        return selectedLeftCampaigns.map((compositeId)=>{
            const parts = compositeId.split('-');
            return parts.length === 2 ? parseInt(parts[1]) : null;
        }).filter((id)=>id !== null);
    };
    // ----------------------------
    //  Confirm Popup Table
    // ----------------------------
    const createCampaignListTable = (campaignIds)=>{
        const groupCampaignIds = new Set(groupCampaignsData.map((item)=>item.campaign_id));
        return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
            className: "max-h-40 overflow-auto border rounded border-[#ebebeb] mb-4",
            children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("table", {
                className: "w-full border-collapse text-sm",
                children: [
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("thead", {
                        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("tr", {
                            className: "bg-[#F8F8F8] border-b",
                            children: [
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("th", {
                                    className: "border-r border-[#ebebeb] px-2 font-normal text-[#333]",
                                    style: {
                                        height: '30px'
                                    },
                                    children: "캠페인 ID"
                                }, void 0, false, {
                                    fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                                    lineNumber: 276,
                                    columnNumber: 15
                                }, this),
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("th", {
                                    className: "border-r border-[#ebebeb] px-2 font-normal text-[#333]",
                                    style: {
                                        height: '30px'
                                    },
                                    children: "캠페인 이름"
                                }, void 0, false, {
                                    fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                                    lineNumber: 277,
                                    columnNumber: 15
                                }, this),
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("th", {
                                    className: "px-2 font-normal text-[#333]",
                                    style: {
                                        height: '30px'
                                    },
                                    children: "중복"
                                }, void 0, false, {
                                    fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                                    lineNumber: 278,
                                    columnNumber: 15
                                }, this)
                            ]
                        }, void 0, true, {
                            fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                            lineNumber: 275,
                            columnNumber: 13
                        }, this)
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                        lineNumber: 274,
                        columnNumber: 11
                    }, this),
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("tbody", {
                        children: campaignIds.map((id, index)=>{
                            const isDuplicate = groupCampaignIds.has(id);
                            return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("tr", {
                                className: isDuplicate ? 'bg-orange-100' : index % 2 === 0 ? 'bg-white' : 'bg-gray-50',
                                children: [
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("td", {
                                        className: "px-2 text-center",
                                        style: {
                                            height: '30px'
                                        },
                                        children: id
                                    }, void 0, false, {
                                        fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                                        lineNumber: 289,
                                        columnNumber: 19
                                    }, this),
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("td", {
                                        className: "px-2 text-center",
                                        style: {
                                            height: '30px'
                                        },
                                        children: getCampaignName(id)
                                    }, void 0, false, {
                                        fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                                        lineNumber: 290,
                                        columnNumber: 19
                                    }, this),
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("td", {
                                        className: "px-2 text-center",
                                        style: {
                                            height: '30px'
                                        },
                                        children: isDuplicate && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("button", {
                                            onClick: ()=>handleRemoveFromPopup(id),
                                            className: "text-red-500",
                                            children: "x"
                                        }, void 0, false, {
                                            fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                                            lineNumber: 293,
                                            columnNumber: 23
                                        }, this)
                                    }, void 0, false, {
                                        fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                                        lineNumber: 291,
                                        columnNumber: 19
                                    }, this)
                                ]
                            }, id, true, {
                                fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                                lineNumber: 285,
                                columnNumber: 17
                            }, this);
                        })
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                        lineNumber: 281,
                        columnNumber: 11
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                lineNumber: 273,
                columnNumber: 9
            }, this)
        }, void 0, false, {
            fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
            lineNumber: 272,
            columnNumber: 7
        }, this);
    };
    const createGroupCampaignListTable = (campaignIds)=>{
        const selectedCampaigns = groupCampaignsData.filter((item)=>campaignIds.includes(item.campaign_id));
        return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
            className: "max-h-40 overflow-auto border rounded mb-4 border-[#ebebeb]",
            children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("table", {
                className: "w-full border-collapse text-sm ",
                children: [
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("thead", {
                        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("tr", {
                            className: "bg-[#F8F8F8] border-b",
                            children: [
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("th", {
                                    className: "border-r border-[#ebebeb] px-2 font-normal text-[#333]",
                                    style: {
                                        height: '30px'
                                    },
                                    children: "캠페인 ID"
                                }, void 0, false, {
                                    fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                                    lineNumber: 316,
                                    columnNumber: 15
                                }, this),
                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("th", {
                                    className: "px-2 font-normal text-[#333]",
                                    style: {
                                        height: '30px'
                                    },
                                    children: "캠페인 이름"
                                }, void 0, false, {
                                    fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                                    lineNumber: 317,
                                    columnNumber: 15
                                }, this)
                            ]
                        }, void 0, true, {
                            fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                            lineNumber: 315,
                            columnNumber: 13
                        }, this)
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                        lineNumber: 314,
                        columnNumber: 11
                    }, this),
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("tbody", {
                        children: selectedCampaigns.map((campaign, index)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("tr", {
                                className: index % 2 === 0 ? 'bg-white' : 'bg-gray-50',
                                children: [
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("td", {
                                        className: "border-r border-[#ebebeb] px-2 text-center",
                                        style: {
                                            height: '30px'
                                        },
                                        children: campaign.campaign_id
                                    }, void 0, false, {
                                        fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                                        lineNumber: 323,
                                        columnNumber: 17
                                    }, this),
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("td", {
                                        className: "px-2 text-center",
                                        style: {
                                            height: '30px'
                                        },
                                        children: getCampaignName(campaign.campaign_id)
                                    }, void 0, false, {
                                        fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                                        lineNumber: 324,
                                        columnNumber: 17
                                    }, this)
                                ]
                            }, campaign.campaign_id, true, {
                                fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                                lineNumber: 322,
                                columnNumber: 15
                            }, this))
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                        lineNumber: 320,
                        columnNumber: 11
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                lineNumber: 313,
                columnNumber: 9
            }, this)
        }, void 0, false, {
            fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
            lineNumber: 312,
            columnNumber: 7
        }, this);
    };
    // ----------------------------
    //  Popup Actions
    // ----------------------------
    const handleRemoveFromPopup = (campaignId)=>{
        setSelectedLeftCampaigns((prev)=>prev.filter((item)=>{
                const parts = item.split('-');
                return parseInt(parts[1]) !== campaignId;
            }));
        setCampaignIdsForPopup((prev)=>prev.filter((id)=>id !== campaignId));
    };
    const moveToGroup = ()=>{
        const campaignIds = getSelectedCampaignIds();
        if (campaignIds.length === 0) return;
        setCampaignIdsForPopup(campaignIds);
        const alertContent = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
            children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                className: "mb-2",
                children: [
                    groupName,
                    " 에 아래의 ",
                    campaignIds.length,
                    " 개의 캠페인을 추가하시겠습니까?"
                ]
            }, void 0, true, {
                fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                lineNumber: 352,
                columnNumber: 9
            }, this)
        }, void 0, false, {
            fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
            lineNumber: 351,
            columnNumber: 7
        }, this);
        setAlertMessage(alertContent);
        setConfirmRemove(false);
        setShowAlert(true);
    };
    const confirmAddToGroup = async ()=>{
        if (campaignIdsForPopup.length === 0) {
            setShowAlert(false);
            return;
        }
        // 중복 캠페인 ID 필터링
        const filteredCampaignIds = campaignIdsForPopup.filter((id)=>!existingCampaignIds.has(id));
        // 모든 캠페인이 이미 그룹에 존재하는 경우에도 계속 진행하고 알림만 표시
        const duplicateCount = campaignIdsForPopup.length - filteredCampaignIds.length;
        setProcessingCampaigns(true);
        try {
            // 새로 추가할 캠페인이 있는 경우에만 API 호출
            if (filteredCampaignIds.length > 0) {
                addCampaignToGroup({
                    group_id: groupId,
                    campaign_ids: filteredCampaignIds,
                    tenant_id: Number(tenant_id)
                }, {
                    onSuccess: (data)=>{
                        if (Number(data.result_code) === 0) {
                            if (duplicateCount > 0) {
                                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].success(`${filteredCampaignIds.length}개의 캠페인이 "${groupName}" 그룹에 추가되었습니다. ${duplicateCount}개는 이미 존재하는 항목입니다.`);
                            } else {
                                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].success(`${filteredCampaignIds.length}개의 캠페인이 "${groupName}" 그룹에 추가되었습니다.`);
                            }
                        } else {
                            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].error('캠페인 추가에 실패했습니다.');
                        }
                        refetchTreeDataForCampaignGroupTab();
                        setCampaignGroupManagerInit(true);
                        setSelectedLeftCampaigns([]);
                        setCampaignIdsForPopup([]);
                        setProcessingCampaigns(false);
                        setShowAlert(false);
                    },
                    onError: (error)=>{
                        console.error('캠페인 추가 중 오류 발생:', error);
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].error('캠페인 추가 과정에서 오류가 발생했습니다.');
                        setProcessingCampaigns(false);
                        setShowAlert(false);
                    }
                });
            } else {
                // 모든 캠페인이 이미 존재하는 경우
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].info("추가할 모든 캠페인이 이미 그룹에 존재합니다.");
                setSelectedLeftCampaigns([]);
                setCampaignIdsForPopup([]);
                setProcessingCampaigns(false);
                setShowAlert(false);
            }
        } catch (error) {
            console.error('캠페인 추가 중 오류 발생:', error);
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].error('캠페인 추가 과정에서 오류가 발생했습니다.');
            setProcessingCampaigns(false);
            setShowAlert(false);
        }
    };
    const moveToAll = ()=>{
        if (selectedRightCampaigns.length === 0) {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].warn('제거할 캠페인을 선택해주세요.');
            return;
        }
        const tableContent = createGroupCampaignListTable(selectedRightCampaigns);
        const alertContent = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
            children: [
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                    className: "mb-2",
                    children: [
                        groupName,
                        " 에서 아래의 ",
                        selectedRightCampaigns.length,
                        " 개의 캠페인을 제거하시겠습니까?"
                    ]
                }, void 0, true, {
                    fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                    lineNumber: 435,
                    columnNumber: 9
                }, this),
                tableContent
            ]
        }, void 0, true, {
            fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
            lineNumber: 434,
            columnNumber: 7
        }, this);
        setAlertMessage(alertContent);
        setConfirmRemove(true);
        setShowAlert(true);
    };
    const confirmRemoveFromGroup = async ()=>{
        if (selectedRightCampaigns.length === 0) {
            setShowAlert(false);
            return;
        }
        setRemovingCampaigns(true);
        try {
            removeCampaignFromGroup({
                group_id: groupId,
                campaign_ids: selectedRightCampaigns,
                tenant_id: Number(tenant_id)
            }, {
                onSuccess: (data)=>{
                    if (Number(data.result_code) === 0) {
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].success(`${selectedRightCampaigns.length}개의 캠페인이 "${groupName}" 그룹에서 제거되었습니다.`);
                    } else {
                        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].error('캠페인 제거에 실패했습니다.');
                    }
                    setRemovingCampaigns(false);
                    setShowAlert(false);
                    setConfirmRemove(false);
                    setSelectedRightCampaigns([]);
                    refetchTreeDataForCampaignGroupTab();
                    setCampaignGroupManagerInit(true);
                },
                onError: (error)=>{
                    console.error('캠페인 제거 중 오류 발생:', error);
                    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].error('캠페인 제거 과정에서 오류가 발생했습니다.');
                    setRemovingCampaigns(false);
                    setShowAlert(false);
                    setConfirmRemove(false);
                    setSelectedRightCampaigns([]);
                }
            });
        } catch (error) {
            console.error('캠페인 제거 중 오류 발생:', error);
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].error('캠페인 제거 과정에서 오류가 발생했습니다.');
            setRemovingCampaigns(false);
            setShowAlert(false);
            setConfirmRemove(false);
            setSelectedRightCampaigns([]);
        }
    };
    const handleAlertConfirm = ()=>{
        if (confirmRemove) {
            confirmRemoveFromGroup();
        } else {
            confirmAddToGroup();
        }
    };
    const handleConfirm = ()=>{
        const campaignIds = groupCampaignsData.map((item)=>item.campaign_id);
        if (onSelect) onSelect(campaignIds);
        if (onClose) onClose();
    };
    if (!isOpen) return null;
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Fragment"], {
        children: [
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$CustomAlert$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                title: `${groupName} 에 대해 캠페인 추가`,
                isOpen: isOpen,
                onClose: ()=>onClose?.(),
                message: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                    className: "",
                    children: [
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CustomInput$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CustomInput"], {
                            type: "text",
                            placeholder: "검색",
                            value: searchTerm,
                            onChange: (e)=>setSearchTerm(e.target.value)
                        }, void 0, false, {
                            fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                            lineNumber: 515,
                            columnNumber: 15
                        }, void 0),
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                            className: "",
                            children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                className: "flex gap-[15px] mt-[20px]",
                                children: [
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                        className: "flex-1 ",
                                        children: [
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$TitleWrap$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                                                title: "전체 캠페인 목록",
                                                totalCount: totalCampaigns
                                            }, void 0, false, {
                                                fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                                                lineNumber: 527,
                                                columnNumber: 19
                                            }, void 0),
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                                className: "border rounded  overflow-hidden",
                                                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$popups$2f$ITableForSkillListWithCampaign$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                                                    filteredSkills: filteredSkills,
                                                    expandedSkills: expandedSkills,
                                                    selectedLeftCampaigns: selectedLeftCampaigns,
                                                    isLoading: isLoadingAny,
                                                    hasError: hasError,
                                                    toggleSkill: toggleSkill,
                                                    toggleLeftCampaignSelection: toggleLeftCampaignSelection,
                                                    toggleAllCampaigns: toggleAllCampaigns,
                                                    getCampaignName: getCampaignName,
                                                    getSkillName: getSkillName,
                                                    setExpandedSkills: setExpandedSkills
                                                }, void 0, false, {
                                                    fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                                                    lineNumber: 529,
                                                    columnNumber: 21
                                                }, void 0)
                                            }, void 0, false, {
                                                fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                                                lineNumber: 528,
                                                columnNumber: 19
                                            }, void 0)
                                        ]
                                    }, void 0, true, {
                                        fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                                        lineNumber: 526,
                                        columnNumber: 17
                                    }, void 0),
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                        className: "flex flex-col items-center gap-2 min-w-[22px] justify-center px-2",
                                        children: [
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("button", {
                                                className: "w-[22px] h-[22px] bg-[#60C3CD] text-white rounded-full flex items-center justify-center disabled:opacity-50",
                                                onClick: moveToGroup,
                                                disabled: selectedLeftCampaigns.length === 0 || processingCampaigns || isAddingCampaign || removingCampaigns || isRemovingCampaign,
                                                title: "선택한 캠페인 추가",
                                                children: processingCampaigns || isAddingCampaign ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                                    className: "w-3 h-3 border-2 border-white border-t-transparent rounded-full animate-spin"
                                                }, void 0, false, {
                                                    fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                                                    lineNumber: 558,
                                                    columnNumber: 23
                                                }, void 0) : /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                                    children: "→"
                                                }, void 0, false, {
                                                    fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                                                    lineNumber: 560,
                                                    columnNumber: 23
                                                }, void 0)
                                            }, void 0, false, {
                                                fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                                                lineNumber: 545,
                                                columnNumber: 19
                                            }, void 0),
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("button", {
                                                className: "w-[22px] h-[22px] bg-[#60C3CD] text-white rounded-full flex items-center justify-center disabled:opacity-50",
                                                onClick: moveToAll,
                                                disabled: selectedRightCampaigns.length === 0 || processingCampaigns || isAddingCampaign || removingCampaigns || isRemovingCampaign,
                                                title: "선택한 캠페인 제거",
                                                children: removingCampaigns || isRemovingCampaign ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                                    className: "w-3 h-3 border-2 border-white border-t-transparent rounded-full animate-spin"
                                                }, void 0, false, {
                                                    fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                                                    lineNumber: 576,
                                                    columnNumber: 23
                                                }, void 0) : /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                                    children: "←"
                                                }, void 0, false, {
                                                    fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                                                    lineNumber: 578,
                                                    columnNumber: 23
                                                }, void 0)
                                            }, void 0, false, {
                                                fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                                                lineNumber: 563,
                                                columnNumber: 19
                                            }, void 0)
                                        ]
                                    }, void 0, true, {
                                        fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                                        lineNumber: 544,
                                        columnNumber: 17
                                    }, void 0),
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                        className: "flex-1",
                                        children: [
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$TitleWrap$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                                                title: "그룹 소속 캠페인목록",
                                                totalCount: groupCampaignsData.length
                                            }, void 0, false, {
                                                fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                                                lineNumber: 583,
                                                columnNumber: 17
                                            }, void 0),
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                                className: "border rounded overflow-hidden",
                                                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$popups$2f$GroupCampaignList$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                                                    isLoading: isLoadingGroup,
                                                    groupCampaigns: groupCampaignsData,
                                                    toggleAllGroupCampaigns: toggleAllGroupCampaigns
                                                }, void 0, false, {
                                                    fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                                                    lineNumber: 585,
                                                    columnNumber: 21
                                                }, void 0)
                                            }, void 0, false, {
                                                fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                                                lineNumber: 584,
                                                columnNumber: 19
                                            }, void 0)
                                        ]
                                    }, void 0, true, {
                                        fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                                        lineNumber: 582,
                                        columnNumber: 17
                                    }, void 0)
                                ]
                            }, void 0, true, {
                                fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                                lineNumber: 525,
                                columnNumber: 15
                            }, void 0)
                        }, void 0, false, {
                            fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                            lineNumber: 522,
                            columnNumber: 13
                        }, void 0),
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                            className: "flex justify-end space-x-2 mt-6",
                            children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CommonButton$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CommonButton"], {
                                onClick: onClose,
                                children: "닫기"
                            }, void 0, false, {
                                fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                                lineNumber: 596,
                                columnNumber: 17
                            }, void 0)
                        }, void 0, false, {
                            fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                            lineNumber: 594,
                            columnNumber: 13
                        }, void 0)
                    ]
                }, void 0, true, {
                    fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                    lineNumber: 513,
                    columnNumber: 11
                }, void 0),
                type: "custom",
                width: "max-w-[1000px]",
                showButtons: false
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                lineNumber: 508,
                columnNumber: 7
            }, this),
            showAlert && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$CustomAlert$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                title: confirmRemove ? '캠페인 제거 확인' : '캠페인 추가 확인',
                isOpen: showAlert,
                onClose: handleAlertConfirm,
                onCancle: ()=>setShowAlert(false),
                message: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                    children: [
                        alertMessage,
                        !confirmRemove && createCampaignListTable(campaignIdsForPopup)
                    ]
                }, void 0, true, {
                    fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                    lineNumber: 616,
                    columnNumber: 13
                }, void 0),
                type: "custom",
                width: "max-w-md",
                confirmDisabled: false
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx",
                lineNumber: 610,
                columnNumber: 9
            }, this)
        ]
    }, void 0, true);
};
_s(CampaignAddPopup, "f81WElYGjLTnUSiEcLT4z+9A9pM=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCampaignGroupTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useSideMenuCampaignGroupTabStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$campainManagerStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCampainManagerStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$authStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAuthStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQueryClient"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$widgets$2f$sidebar$2f$hooks$2f$useApiForGetSkillsWithCampaigns$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$widgets$2f$sidebar$2f$hooks$2f$useTotalCampaignListForAddCampaignToCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTotalCampaignListForAddCampaignToCampaignGroup"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$widgets$2f$sidebar$2f$hooks$2f$useTotalSkillListForAddCampaignToCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTotalSkillListForAddCampaignToCampaignGroup"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$widgets$2f$sidebar$2f$hooks$2f$useApiForGetCampaignListForCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForAddCampaignToSpecificCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForRemoveCampaignFromCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"]
    ];
});
_c = CampaignAddPopup;
const __TURBOPACK__default__export__ = CampaignAddPopup;
var _c;
__turbopack_refresh__.register(_c, "CampaignAddPopup");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/hooks/useApiForCampaignGroupNameUpdate.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/features/campaignManager/hooks/useApiForCampaignGroupNameUpdate.ts
__turbopack_esm__({
    "useApiForCampaignGroupNameUpdate": (()=>useApiForCampaignGroupNameUpdate)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$api$2f$apiForCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/preferences/api/apiForCampaignGroup.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/useMutation.js [app-client] (ecmascript)");
var _s = __turbopack_refresh__.signature();
;
;
function useApiForCampaignGroupNameUpdate(options) {
    _s();
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMutation"])({
        mutationKey: [
            'campaignGroupNameUpdate'
        ],
        mutationFn: {
            "useApiForCampaignGroupNameUpdate.useMutation": ({ group_id, group_name, tenant_id })=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$api$2f$apiForCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["apiForUpdateCampaignGroupName"])(group_id, group_name, tenant_id)
        }["useApiForCampaignGroupNameUpdate.useMutation"],
        onSuccess: {
            "useApiForCampaignGroupNameUpdate.useMutation": (data, variables, context)=>{
                console.log('캠페인 그룹 이름 업데이트 성공:', {
                    code: data.result_code,
                    message: data.result_msg
                });
                options?.onSuccess?.(data, variables, context);
            }
        }["useApiForCampaignGroupNameUpdate.useMutation"],
        onError: {
            "useApiForCampaignGroupNameUpdate.useMutation": (error, variables, context)=>{
                console.error('캠페인 그룹 이름 업데이트 실패:', error);
                // 필요한 경우 여기에 toast 메시지 추가
                options?.onError?.(error, variables, context);
            }
        }["useApiForCampaignGroupNameUpdate.useMutation"]
    });
}
_s(useApiForCampaignGroupNameUpdate, "wwwtpB20p0aLiHIvSy5P98MwIUg=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMutation"]
    ];
});
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForUpdateCampaignGroupName.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$input$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/ui/input.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$label$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/ui/label.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForCampaignGroupNameUpdate$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/hooks/useApiForCampaignGroupNameUpdate.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/react-toastify/dist/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$CustomAlert$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/shared/layout/CustomAlert.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CommonButton$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/shared/CommonButton/index.tsx [app-client] (ecmascript)");
;
var _s = __turbopack_refresh__.signature();
"use client";
;
;
;
;
;
;
;
const IDialogForUpdateCampaignGroupName = ({ isOpen, onClose, groupId, tenantId, currentGroupName, onSuccess })=>{
    _s();
    const [groupName, setGroupName] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])("");
    const [error, setError] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])("");
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "IDialogForUpdateCampaignGroupName.useEffect": ()=>{
            if (isOpen) {
                setGroupName(currentGroupName);
                setError("");
            }
        }
    }["IDialogForUpdateCampaignGroupName.useEffect"], [
        isOpen,
        currentGroupName
    ]);
    const { mutate: updateGroupName, isPending } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForCampaignGroupNameUpdate$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForCampaignGroupNameUpdate"])({
        onSuccess: {
            "IDialogForUpdateCampaignGroupName.useApiForCampaignGroupNameUpdate": ()=>{
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].success("캠페인 그룹 이름이 변경되었습니다.");
                onClose();
                onSuccess?.();
            }
        }["IDialogForUpdateCampaignGroupName.useApiForCampaignGroupNameUpdate"],
        onError: {
            "IDialogForUpdateCampaignGroupName.useApiForCampaignGroupNameUpdate": (error)=>{
                console.error("캠페인 그룹 이름 변경 실패:", error);
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].error("캠페인 그룹 이름 변경에 실패했습니다.");
            }
        }["IDialogForUpdateCampaignGroupName.useApiForCampaignGroupNameUpdate"]
    });
    const handleSubmit = (e)=>{
        e.preventDefault();
        // 유효성 검사
        if (!groupName.trim()) {
            setError("그룹 이름을 입력해주세요.");
            return;
        }
        // 이름이 변경되지 않은 경우
        if (groupName === currentGroupName) {
            onClose();
            return;
        }
        // API 호출
        updateGroupName({
            group_id: groupId,
            group_name: groupName,
            tenant_id: tenantId
        });
    };
    const content = /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("form", {
        onSubmit: handleSubmit,
        className: "space-y-4",
        children: [
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                className: "text-sm text-gray-600 mb-4",
                children: "새로운 캠페인 그룹 이름을 입력해주세요."
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForUpdateCampaignGroupName.tsx",
                lineNumber: 75,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "space-y-2",
                children: [
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$label$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Label"], {
                        htmlFor: "groupName",
                        children: "그룹 이름"
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForUpdateCampaignGroupName.tsx",
                        lineNumber: 79,
                        columnNumber: 9
                    }, this),
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$input$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Input"], {
                        id: "groupName",
                        value: groupName,
                        onChange: (e)=>{
                            setGroupName(e.target.value);
                            setError("");
                        },
                        placeholder: "그룹 이름을 입력하세요",
                        className: error ? "border-red-500" : "",
                        disabled: isPending
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForUpdateCampaignGroupName.tsx",
                        lineNumber: 80,
                        columnNumber: 9
                    }, this),
                    error && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("p", {
                        className: "text-sm text-red-500",
                        children: error
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForUpdateCampaignGroupName.tsx",
                        lineNumber: 91,
                        columnNumber: 19
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForUpdateCampaignGroupName.tsx",
                lineNumber: 78,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "flex justify-end space-x-2 mt-6",
                children: [
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CommonButton$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CommonButton"], {
                        type: "button",
                        variant: "outline",
                        onClick: onClose,
                        disabled: isPending,
                        children: "취소"
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForUpdateCampaignGroupName.tsx",
                        lineNumber: 94,
                        columnNumber: 9
                    }, this),
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$CommonButton$2f$index$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CommonButton"], {
                        type: "submit",
                        disabled: isPending,
                        children: isPending ? "저장 중..." : "저장"
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForUpdateCampaignGroupName.tsx",
                        lineNumber: 102,
                        columnNumber: 9
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForUpdateCampaignGroupName.tsx",
                lineNumber: 93,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true, {
        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForUpdateCampaignGroupName.tsx",
        lineNumber: 74,
        columnNumber: 5
    }, this);
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$shared$2f$layout$2f$CustomAlert$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
        isOpen: isOpen,
        title: "캠페인 그룹 이름 변경",
        message: content,
        onClose: onClose,
        onCancle: onClose,
        type: "1",
        showButtons: false
    }, void 0, false, {
        fileName: "[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForUpdateCampaignGroupName.tsx",
        lineNumber: 110,
        columnNumber: 5
    }, this);
};
_s(IDialogForUpdateCampaignGroupName, "ef1wnRU1CNh9szCvZODQ4VZQhKE=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForCampaignGroupNameUpdate$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForCampaignGroupNameUpdate"]
    ];
});
_c = IDialogForUpdateCampaignGroupName;
const __TURBOPACK__default__export__ = IDialogForUpdateCampaignGroupName;
var _c;
__turbopack_refresh__.register(_c, "IDialogForUpdateCampaignGroupName");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/hooks/useApiForDeleteCampaignGroup.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/features/campaignManager/hooks/useApiForDeleteCampaignGroup.ts
__turbopack_esm__({
    "useApiForDeleteCampaignGroup": (()=>useApiForDeleteCampaignGroup)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$api$2f$apiForCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/preferences/api/apiForCampaignGroup.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/useMutation.js [app-client] (ecmascript)");
var _s = __turbopack_refresh__.signature();
;
;
function useApiForDeleteCampaignGroup(options) {
    _s();
    const queryClient = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQueryClient"])();
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMutation"])({
        mutationKey: [
            'deleteCampaignGroup'
        ],
        mutationFn: {
            "useApiForDeleteCampaignGroup.useMutation": (group_id)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$preferences$2f$api$2f$apiForCampaignGroup$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["apiForDeleteCampaignGroup"])(group_id)
        }["useApiForDeleteCampaignGroup.useMutation"],
        onSuccess: {
            "useApiForDeleteCampaignGroup.useMutation": (data, variables, context)=>{
                // 캐시 무효화 - 캠페인 그룹 관련 쿼리 모두 무효화
                queryClient.invalidateQueries({
                    queryKey: [
                        'sideMenuTreeData'
                    ]
                });
                console.log('✅ 캠페인 그룹 삭제 성공:', data);
                options?.onSuccess?.(data, variables, context);
            }
        }["useApiForDeleteCampaignGroup.useMutation"],
        onError: {
            "useApiForDeleteCampaignGroup.useMutation": (error, variables, context)=>{
                console.error('❌ 캠페인 그룹 삭제 실패:', error);
                options?.onError?.(error, variables, context);
            }
        }["useApiForDeleteCampaignGroup.useMutation"]
    });
}
_s(useApiForDeleteCampaignGroup, "YK0wzM21ECnncaq5SECwU+/SVdQ=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$QueryClientProvider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQueryClient"],
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMutation"]
    ];
});
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignForCampaignGroup.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "IContextMenuForCampaignForCampaignGroup": (()=>IContextMenuForCampaignForCampaignGroup),
    "getStatusFromFlag": (()=>getStatusFromFlag),
    "getStatusIcon": (()=>getStatusIcon)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/components/ui/context-menu.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$tabStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/tabStore.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCampaignGroupTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/storeForSideMenuCampaignGroupTab.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$useAvailableMenuStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/useAvailableMenuStore.ts [app-client] (ecmascript)"); // 권한 관리 스토어 추가
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$popups$2f$BlackListCountPopup$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/components/popups/BlackListCountPopup.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/react-toastify/dist/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$listManager$2f$hooks$2f$useApiForCampaignBlacklistCount$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/listManager/hooks/useApiForCampaignBlacklistCount.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/lib/utils.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/image.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$listManager$2f$hooks$2f$useApiForCampaignListDelete$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/listManager/hooks/useApiForCampaignListDelete.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForCampaignStatusUpdate$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/hooks/useApiForCampaignStatusUpdate.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$dialog$2f$IDialogButtonForCampaingDelete$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogButtonForCampaingDelete.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$auth$2f$hooks$2f$useApiForMain$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/auth/hooks/useApiForMain.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$mainStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/mainStore.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$authStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/authStore.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$check$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Check$3e$__ = __turbopack_import__("[project]/node_modules/lucide-react/dist/esm/icons/check.js [app-client] (ecmascript) <export default as Check>");
;
var _s = __turbopack_refresh__.signature();
"use client";
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
const getStatusIcon = (status)=>{
    switch(status){
        case 'started':
            return '/sidebar-menu/tree_play.svg';
        case 'pending':
            return '/sidebar-menu/tree_pause.svg';
        case 'stopped':
            return '/sidebar-menu/tree_stop.svg';
        default:
            return null;
    }
};
const getStatusFromFlag = (flag)=>{
    switch(flag){
        case 1:
            return 'started';
        case 2:
            return 'pending';
        case 3:
            return 'stopped';
        default:
            return 'stopped';
    }
};
function IContextMenuForCampaignForCampaignGroup({ children, item, onEdit, onMonitor, onHandleCampaignCopy, tenantIdForCampaignTab }) {
    _s();
    const isFolder = item.type === "folder";
    const { simulateHeaderMenuClick, setCampaignIdForUpdateFromSideMenu, setCampaignIdForCopyCampaign, addTab, addMultiTab } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$tabStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTabStore"])();
    // Zustand 스토어에서 updateCampaignStatus 함수 가져오기
    const { updateCampaignStatus, refetchTreeDataForCampaignGroupTab } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCampaignGroupTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useSideMenuCampaignGroupTabStore"])();
    // 권한 관리 스토어에서 사용 가능한 메뉴 ID 가져오기
    const availableMenuIds = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$useAvailableMenuStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAvailableMenuStore"])({
        "IContextMenuForCampaignForCampaignGroup.useAvailableMenuStore[availableMenuIds]": (state)=>state.availableMenuIdsForCampaignGroupTabCampaign
    }["IContextMenuForCampaignForCampaignGroup.useAvailableMenuStore[availableMenuIds]"]);
    const [isBlacklistPopupOpen, setIsBlacklistPopupOpen] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const [isDeleteDialogOpen, setIsDeleteDialogOpen] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const [currentStatus, setCurrentStatus] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(item.status);
    const [blackListCount, setBlackListCount] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(0);
    const preventCloseRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(false);
    const { tenant_id, role_id, session_key } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$authStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAuthStore"])();
    const { tenants, setCampaigns, selectedCampaign, setSelectedCampaign } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$mainStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMainStore"])();
    const { mutate: fetchMain } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$auth$2f$hooks$2f$useApiForMain$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForMain"])({
        onSuccess: {
            "IContextMenuForCampaignForCampaignGroup.useApiForMain": (data)=>{
                setCampaigns(data.result_data);
                // if( tenant_id === 0){
                //   setCampaigns(data.result_data);
                // }else{
                //   setCampaigns(data.result_data.filter(data=>data.tenant_id === tenant_id));
                // }
                setSelectedCampaign(data.result_data.filter({
                    "IContextMenuForCampaignForCampaignGroup.useApiForMain": (campaign)=>campaign.campaign_id === selectedCampaign?.campaign_id
                }["IContextMenuForCampaignForCampaignGroup.useApiForMain"])[0]);
            }
        }["IContextMenuForCampaignForCampaignGroup.useApiForMain"]
    });
    // 상태 관련 정보
    const statusInfo = {
        started: {
            label: "시작",
            color: "#22c55e"
        },
        pending: {
            label: "멈춤",
            color: "#eab308"
        },
        stopped: {
            label: "중지",
            color: "#ef4444"
        }
    };
    const updateCampaignStatusMutation = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForCampaignStatusUpdate$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForCampaignStatusUpdate"])({
        onSuccess: {
            "IContextMenuForCampaignForCampaignGroup.useApiForCampaignStatusUpdate[updateCampaignStatusMutation]": (data)=>{
                // toast.success("캠페인 상태가 변경되었습니다22.");
                preventCloseRef.current = true;
                console.log("캠페인 상태 업데이트");
                fetchMain({
                    session_key: session_key,
                    tenant_id: tenant_id
                });
            }
        }["IContextMenuForCampaignForCampaignGroup.useApiForCampaignStatusUpdate[updateCampaignStatusMutation]"],
        onError: {
            "IContextMenuForCampaignForCampaignGroup.useApiForCampaignStatusUpdate[updateCampaignStatusMutation]": (error)=>{
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].error(error.message || "상태 변경 중 오류가 발생했습니다.");
            }
        }["IContextMenuForCampaignForCampaignGroup.useApiForCampaignStatusUpdate[updateCampaignStatusMutation]"]
    });
    const { mutate: deleteCampaignList } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$listManager$2f$hooks$2f$useApiForCampaignListDelete$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])({
    });
    const handleCampaignListDelete = (campaignId)=>{
        if (currentStatus !== 'stopped') {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].error("캠페인이 중지 상태일 때만 리스트를 삭제할 수 있습니다.");
            return;
        }
        deleteCampaignList(campaignId);
    };
    const handleEditMenuClick = ()=>{
        if (onEdit) {
            onEdit();
            return;
        }
        simulateHeaderMenuClick(2);
        setCampaignIdForUpdateFromSideMenu(item.id);
    };
    const handleProgressInfoClick = (campaignId, campaignName)=>{
        const uniqueKey = `progress-info-${campaignId}-${Date.now()}`;
        addMultiTab({
            id: 21,
            uniqueKey: uniqueKey,
            title: `캠페인 진행정보 - ${campaignName}`,
            icon: '',
            href: '',
            content: null,
            campaignId: campaignId
        });
    };
    const handleRebroadcastClick = (campaignId)=>{
        setCampaignIdForUpdateFromSideMenu(campaignId);
        addTab({
            id: 20,
            uniqueKey: '20',
            title: '재발신 설정',
            icon: '',
            href: '',
            content: null
        });
    };
    const handleMonitorClick = (tenantIdForCampaignTab, campaignId, campaignName)=>{
        // if (onMonitor) {
        //   onMonitor();
        //   return;
        // }
        console.log("캠페인 그룹에서 상담원 상태 모니터 클릭 했을때 tenantId : ", tenantIdForCampaignTab);
        const uniqueKey = `monitor-${Date.now()}`;
        addMultiTab({
            id: 22,
            uniqueKey: uniqueKey,
            title: `상담사 상태 모니터 - ${campaignName}`,
            icon: '',
            href: '',
            content: null,
            campaignId: campaignId,
            params: {
                campaignId: campaignId,
                campaignName: campaignName,
                tenantId: tenantIdForCampaignTab
            }
        });
    };
    const handleCampaignCopy = ()=>{
        if (onHandleCampaignCopy) {
            onHandleCampaignCopy();
            return;
        }
        console.log(`캠페인 복사: ${item.label} (ID: ${item.id})`);
        setCampaignIdForUpdateFromSideMenu(item.id);
        setCampaignIdForCopyCampaign(item.id);
        addTab({
            id: 130,
            uniqueKey: "130",
            title: "캠페인 복사",
            icon: "",
            href: "",
            content: null
        });
    };
    const onCampaignDelete = (status)=>{
        if (status !== 'stopped') {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].error("캠페인이 중지 상태일 때만 삭제할 수 있습니다.");
            return;
        }
        // 다이얼로그 열기
        setIsDeleteDialogOpen(true);
    };
    const getStatusNumber = (status)=>{
        switch(status){
            case 'started':
                return 1;
            case 'pending':
                return 2;
            case 'stopped':
                return 3;
            default:
                return 0;
        }
    };
    const handleStartClick = async (status)=>{
        if (currentStatus === status || updateCampaignStatusMutation.isPending) {
            return;
        }
        try {
            preventCloseRef.current = true;
            // 상태 번호 얻기
            const statusNumber = getStatusNumber(status);
            // API 호출
            await updateCampaignStatusMutation.mutateAsync({
                campaign_id: Number(item.id),
                campaign_status: statusNumber
            });
            // 로컬 상태 업데이트
            setCurrentStatus(status);
            // 트리 데이터의 상태도 업데이트 (API 호출이 성공한 후)
            updateCampaignStatus(item.id, statusNumber);
            // 전체 트리 데이터 다시 가져오기 (렌더링 강제)
            await refetchTreeDataForCampaignGroupTab();
        } catch (error) {
            console.error('Error changing campaign status:', error);
        }
    };
    // 캠페인 블랙리스트 건수 조회 API 호출
    const { mutate: fetchCampaignBlacklistCount } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$listManager$2f$hooks$2f$useApiForCampaignBlacklistCount$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForCampaignBlacklistCount"])({
        onSuccess: {
            "IContextMenuForCampaignForCampaignGroup.useApiForCampaignBlacklistCount": (data)=>{
                setBlackListCount(data.result_data.blacklist_count);
                setTimeout({
                    "IContextMenuForCampaignForCampaignGroup.useApiForCampaignBlacklistCount": ()=>{
                        setIsBlacklistPopupOpen(true);
                    }
                }["IContextMenuForCampaignForCampaignGroup.useApiForCampaignBlacklistCount"], 100);
            }
        }["IContextMenuForCampaignForCampaignGroup.useApiForCampaignBlacklistCount"]
    });
    // 캠페인 블랙리스트 건수 조회 클릭 이벤트
    const handleBlacklistCountCheckClick = ()=>{
        fetchCampaignBlacklistCount(Number(item.id));
    };
    // 메뉴 아이템 정의 (JSON의 SGC 값 기준)
    const menuItems = [
        // 첫 번째 그룹
        {
            id: 46,
            group: 1,
            key: "edit-campaign",
            label: "캠페인 수정",
            action: handleEditMenuClick
        },
        {
            id: 47,
            group: 1,
            key: "start-division",
            label: "시작구분",
            isSubmenu: true,
            subItems: [
                {
                    id: 48,
                    key: "start",
                    label: "시작",
                    status: "started"
                },
                {
                    id: 49,
                    key: "pause",
                    label: "멈춤",
                    status: "pending"
                },
                {
                    id: 50,
                    key: "stop",
                    label: "중지",
                    status: "stopped"
                }
            ],
            render: ()=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuSub"], {
                    children: [
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuSubTrigger"], {
                            onPointerDown: ()=>{
                                preventCloseRef.current = false;
                            },
                            children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                className: "flex items-center",
                                children: [
                                    "시작구분:",
                                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                        className: "ml-1 flex items-center",
                                        children: [
                                            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                                className: "w-4 h-4 mr-1",
                                                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                                                    src: getStatusIcon(currentStatus) || '',
                                                    alt: currentStatus,
                                                    width: 16,
                                                    height: 16
                                                }, void 0, false, {
                                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignForCampaignGroup.tsx",
                                                    lineNumber: 333,
                                                    columnNumber: 19
                                                }, this)
                                            }, void 0, false, {
                                                fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignForCampaignGroup.tsx",
                                                lineNumber: 332,
                                                columnNumber: 17
                                            }, this),
                                            statusInfo[currentStatus].label
                                        ]
                                    }, void 0, true, {
                                        fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignForCampaignGroup.tsx",
                                        lineNumber: 331,
                                        columnNumber: 15
                                    }, this)
                                ]
                            }, void 0, true, {
                                fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignForCampaignGroup.tsx",
                                lineNumber: 329,
                                columnNumber: 13
                            }, this)
                        }, void 0, false, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignForCampaignGroup.tsx",
                            lineNumber: 328,
                            columnNumber: 11
                        }, this),
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuSubContent"], {
                            className: "min-w-[110px] p-1",
                            onPointerDownOutside: (e)=>{
                                if (preventCloseRef.current) {
                                    e.preventDefault();
                                    preventCloseRef.current = false;
                                }
                            },
                            children: Object.keys(statusInfo).map((status)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuItem"], {
                                    onClick: (e)=>{
                                        e.stopPropagation();
                                        handleStartClick(status);
                                        preventCloseRef.current = true;
                                    },
                                    className: (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$utils$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["cn"])("flex items-center justify-between text-sm px-2 py-1.5", currentStatus === status ? "bg-gray-50" : "", updateCampaignStatusMutation.isPending ? "opacity-70" : ""),
                                    disabled: updateCampaignStatusMutation.isPending,
                                    children: [
                                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                            className: "flex items-center",
                                            children: [
                                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                                                    className: "w-4 h-4 mr-2",
                                                    children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                                                        src: getStatusIcon(status) || '',
                                                        alt: status,
                                                        width: 16,
                                                        height: 16
                                                    }, void 0, false, {
                                                        fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignForCampaignGroup.tsx",
                                                        lineNumber: 371,
                                                        columnNumber: 21
                                                    }, this)
                                                }, void 0, false, {
                                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignForCampaignGroup.tsx",
                                                    lineNumber: 370,
                                                    columnNumber: 19
                                                }, this),
                                                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                                                    children: statusInfo[status].label
                                                }, void 0, false, {
                                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignForCampaignGroup.tsx",
                                                    lineNumber: 378,
                                                    columnNumber: 19
                                                }, this)
                                            ]
                                        }, void 0, true, {
                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignForCampaignGroup.tsx",
                                            lineNumber: 369,
                                            columnNumber: 17
                                        }, this),
                                        currentStatus === status && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$check$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Check$3e$__["Check"], {
                                            className: "h-3 w-3 text-green-500"
                                        }, void 0, false, {
                                            fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignForCampaignGroup.tsx",
                                            lineNumber: 382,
                                            columnNumber: 19
                                        }, this)
                                    ]
                                }, status, true, {
                                    fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignForCampaignGroup.tsx",
                                    lineNumber: 355,
                                    columnNumber: 15
                                }, this))
                        }, void 0, false, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignForCampaignGroup.tsx",
                            lineNumber: 345,
                            columnNumber: 11
                        }, this)
                    ]
                }, void 0, true, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignForCampaignGroup.tsx",
                    lineNumber: 327,
                    columnNumber: 9
                }, this)
        },
        {
            id: 51,
            group: 1,
            key: "progress-info",
            label: "캠페인 진행정보",
            action: ()=>handleProgressInfoClick(item.id, item.label)
        },
        // 두 번째 그룹
        {
            id: 52,
            group: 2,
            key: "rebroadcast",
            label: "재발신",
            action: ()=>handleRebroadcastClick(item.id)
        },
        // 세 번째 그룹
        {
            id: 53,
            group: 3,
            key: "copy-campaign",
            label: "캠페인 복사",
            action: handleCampaignCopy
        },
        {
            id: 54,
            group: 3,
            key: "delete-campaign",
            label: "캠페인 삭제",
            action: ()=>onCampaignDelete(currentStatus),
            className: "text-red-500",
            condition: !isFolder
        },
        // 네 번째 그룹
        {
            id: 55,
            group: 4,
            key: "delete-campaign-list",
            label: "캠페인 리스트 삭제",
            action: ()=>handleCampaignListDelete(item.id),
            condition: currentStatus === 'stopped'
        },
        {
            id: 56,
            group: 4,
            key: "monitor",
            label: "상담사 상태 모니터22",
            action: ()=>handleMonitorClick(tenantIdForCampaignTab, item.id, item.label)
        },
        {
            id: 57,
            group: 4,
            key: "blacklist-count",
            label: "블랙리스트 건수 조회",
            action: handleBlacklistCountCheckClick
        }
    ];
    // 권한에 따라 메뉴 항목 필터링
    const visibleMenuItems = availableMenuIds?.length > 0 ? menuItems.filter((item)=>availableMenuIds.includes(item.id) && (item.condition === undefined || item.condition)) : [];
    // 표시할 메뉴 항목이 없으면 기본 컨텍스트 메뉴만 표시
    if (visibleMenuItems.length === 0) {
        return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenu"], {
            children: [
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuTrigger"], {
                    asChild: true,
                    children: children
                }, void 0, false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignForCampaignGroup.tsx",
                    lineNumber: 462,
                    columnNumber: 9
                }, this),
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuContent"], {
                    className: "w-[150px]",
                    children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuItem"], {
                        disabled: true,
                        children: "권한이 없습니다"
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignForCampaignGroup.tsx",
                        lineNumber: 464,
                        columnNumber: 11
                    }, this)
                }, void 0, false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignForCampaignGroup.tsx",
                    lineNumber: 463,
                    columnNumber: 9
                }, this)
            ]
        }, void 0, true, {
            fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignForCampaignGroup.tsx",
            lineNumber: 461,
            columnNumber: 7
        }, this);
    }
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Fragment"], {
        children: [
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenu"], {
                children: [
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuTrigger"], {
                        asChild: true,
                        children: children
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignForCampaignGroup.tsx",
                        lineNumber: 475,
                        columnNumber: 9
                    }, this),
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuContent"], {
                        className: "w-[150px]",
                        children: visibleMenuItems.map((item, index, arr)=>{
                            // 현재 아이템과 이전 아이템이 다른 그룹인 경우 구분선 추가
                            const prevItem = index > 0 ? arr[index - 1] : null;
                            const showSeparator = prevItem && prevItem.group !== item.group;
                            return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].Fragment, {
                                children: [
                                    showSeparator && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuSeparator"], {
                                        className: "my-1"
                                    }, void 0, false, {
                                        fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignForCampaignGroup.tsx",
                                        lineNumber: 484,
                                        columnNumber: 35
                                    }, this),
                                    item.isSubmenu ? item.render() : /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$components$2f$ui$2f$context$2d$menu$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ContextMenuItem"], {
                                        onClick: item.action,
                                        className: item.className,
                                        children: item.label
                                    }, void 0, false, {
                                        fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignForCampaignGroup.tsx",
                                        lineNumber: 489,
                                        columnNumber: 19
                                    }, this)
                                ]
                            }, item.key, true, {
                                fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignForCampaignGroup.tsx",
                                lineNumber: 483,
                                columnNumber: 15
                            }, this);
                        })
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignForCampaignGroup.tsx",
                        lineNumber: 476,
                        columnNumber: 9
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignForCampaignGroup.tsx",
                lineNumber: 474,
                columnNumber: 7
            }, this),
            isBlacklistPopupOpen && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$popups$2f$BlackListCountPopup$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                campaignId: item.id,
                blackListCount: blackListCount,
                isOpen: isBlacklistPopupOpen,
                onConfirm: ()=>setIsBlacklistPopupOpen(false),
                onCancel: ()=>setIsBlacklistPopupOpen(false)
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignForCampaignGroup.tsx",
                lineNumber: 504,
                columnNumber: 9
            }, this),
            isDeleteDialogOpen && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$dialog$2f$IDialogButtonForCampaingDelete$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                isOpen: isDeleteDialogOpen,
                onOpenChange: (open)=>setIsDeleteDialogOpen(open),
                campaignId: item.id,
                campaignName: item.label
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignForCampaignGroup.tsx",
                lineNumber: 515,
                columnNumber: 9
            }, this)
        ]
    }, void 0, true);
}
_s(IContextMenuForCampaignForCampaignGroup, "e6ros0ObZ0YCWeFFFNAxr+jpq9Q=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$tabStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTabStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCampaignGroupTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useSideMenuCampaignGroupTabStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$useAvailableMenuStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAvailableMenuStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$authStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAuthStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$mainStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMainStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$auth$2f$hooks$2f$useApiForMain$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForMain"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForCampaignStatusUpdate$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForCampaignStatusUpdate"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$listManager$2f$hooks$2f$useApiForCampaignListDelete$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$listManager$2f$hooks$2f$useApiForCampaignBlacklistCount$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForCampaignBlacklistCount"]
    ];
});
_c = IContextMenuForCampaignForCampaignGroup;
var _c;
__turbopack_refresh__.register(_c, "IContextMenuForCampaignForCampaignGroup");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignGroupAtCampaignGroup.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// // src/features/campaignManager/components/ContextMenus/IContextMenuForCampaignGroupAtCampaignGroup.tsx
// import React from "react";
// import { useTabStore } from "@/store/tabStore";
// import { Item, Separator } from "react-contexify";
// interface IContextMenuForCampaignGroupAtCampaignGroupProps {
//   node: any;
//   setIsCampaignAddPopupOpen: (open: boolean) => void;
//   setIsDeleteDialogOpen: (open: boolean) => void;
//   setIsRenameDialogOpen: (open: boolean) => void;
// }
// // 공통 스타일 설정
// const itemStyle: React.CSSProperties = {
//   fontSize: "13px",       // 글씨 크기
//   padding: "4px 6px",     // 아이템 여백
//   borderRadius: "3px",
// };
// const IContextMenuForCampaignGroupAtCampaignGroup: React.FC<IContextMenuForCampaignGroupAtCampaignGroupProps> = ({
//   node,
//   setIsCampaignAddPopupOpen,
//   setIsDeleteDialogOpen,
//   setIsRenameDialogOpen,
// }) => {
//   const { addTabCurrentOnly } = useTabStore.getState();
//   return (
//     <>
//       <div
//         key="bulk-update"
//         style={itemStyle}
//         className="contexify-custom-item"
//         onClick={() => {
//           console.log(`캠페인 그룹 일괄 수정: ${node.name}`);
//           addTabCurrentOnly({
//             id: 1,
//             title: `캠페인 그룹 관리: ${node.name}`,
//             uniqueKey: `groupBulkUpdate_${node.group_id}_${Date.now()}`,
//             params: {
//               groupId: node.group_id,
//               groupName: node.name,
//             },
//           });
//         }}
//       >
//         캠페인 그룹 일괄 수정
//       </div>
//       <div
//         key="bulk-start"
//         style={itemStyle}
//         className="contexify-custom-item"
//         onClick={() => console.log(`캠페인 그룹 일괄 시작: ${node.name}`)}
//       >
//         캠페인 그룹 일괄 시작
//       </div>
//       <div
//         key="bulk-complete"
//         style={itemStyle}
//         className="contexify-custom-item"
//         onClick={() => console.log(`캠페인 그룹 일괄 완료: ${node.name}`)}
//       >
//         캠페인 그룹 일괄 완료
//       </div>
//       <div
//         key="bulk-stop"
//         style={itemStyle}
//         className="contexify-custom-item"
//         onClick={() => console.log(`캠페인 그룹 일괄 중지: ${node.name}`)}
//       >
//         캠페인 그룹 일괄 중지
//       </div>
//       <Separator key="separator-1" />
//       <div
//         key="rename"
//         style={itemStyle}
//         className="contexify-custom-item"
//         onClick={() => {
//           console.log("캠페인 그룹 이름 변경:", node);
//           setIsRenameDialogOpen(true);
//         }}
//       >
//         캠페인 그룹 이름 변경
//       </div>
//       <div
//         key="delete"
//         style={itemStyle}
//         className="contexify-custom-item"
//         onClick={() => {
//           console.log(`캠페인 그룹 삭제: ${node.name}`);
//           setIsDeleteDialogOpen(true);
//         }}
//       >
//         캠페인 그룹 삭제
//       </div>
//       <Separator key="separator-2" />
//       <div
//         key="add-campaign"
//         style={itemStyle}
//         className="contexify-custom-item"
//         onClick={() => {
//           console.log(`캠페인 추가/제외: ${node.name}`);
//           setIsCampaignAddPopupOpen(true);
//         }}
//       >
//         캠페인 그룹에 캠페인 추가
//       </div>
//       <div
//         key="resend"
//         style={itemStyle}
//         className="contexify-custom-item"
//         onClick={() => console.log(`캠페인 그룹 실시간 재발신: ${node.name}`)}
//       >
//         캠페인 그룹 실시간 재발신
//       </div>
//     </>
//   );
// };
// export default IContextMenuForCampaignGroupAtCampaignGroup;
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$tabStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/tabStore.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$useAvailableMenuStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/useAvailableMenuStore.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$contexify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/react-contexify/dist/index.mjs [app-client] (ecmascript)");
;
var _s = __turbopack_refresh__.signature();
;
;
;
// 공통 스타일 설정
const itemStyle = {
    fontSize: "13px",
    padding: "4px 6px",
    borderRadius: "3px"
};
const IContextMenuForCampaignGroupAtCampaignGroup = ({ node, setIsCampaignAddPopupOpen, setIsDeleteDialogOpen, setIsRenameDialogOpen })=>{
    _s();
    const { addTabCurrentOnly } = __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$tabStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTabStore"].getState();
    // Get available menu IDs from the store
    const availableMenuIds = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$useAvailableMenuStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAvailableMenuStore"])({
        "IContextMenuForCampaignGroupAtCampaignGroup.useAvailableMenuStore[availableMenuIds]": (state)=>state.availableMenuIdsForCampaignGroupTabCampaignGroup
    }["IContextMenuForCampaignGroupAtCampaignGroup.useAvailableMenuStore[availableMenuIds]"]);
    // 메뉴 아이템 정의 (메뉴 ID, 그룹, 레이블, 동작 함수)
    const menuItems = [
        // 첫 번째 그룹 (일괄 작업)
        {
            id: 38,
            group: 1,
            key: "bulk-update",
            label: "캠페인 그룹 일괄 수정",
            action: ()=>{
                console.log(`캠페인 그룹 일괄 수정: ${node.name}`);
                addTabCurrentOnly({
                    id: 1,
                    title: `캠페인 그룹 관리: ${node.name}`,
                    uniqueKey: `groupBulkUpdate_${node.group_id}_${Date.now()}`,
                    params: {
                        groupId: node.group_id,
                        groupName: node.name
                    }
                });
            }
        },
        {
            id: 39,
            group: 1,
            key: "bulk-start",
            label: "캠페인 그룹 일괄 시작",
            action: ()=>console.log(`캠페인 그룹 일괄 시작: ${node.name}`)
        },
        {
            id: 40,
            group: 1,
            key: "bulk-complete",
            label: "캠페인 그룹 일괄 멈춤",
            action: ()=>console.log(`캠페인 그룹 일괄 멈춤: ${node.name}`)
        },
        {
            id: 41,
            group: 1,
            key: "bulk-stop",
            label: "캠페인 그룹 일괄 중지",
            action: ()=>console.log(`캠페인 그룹 일괄 중지: ${node.name}`)
        },
        // 두 번째 그룹 (이름 변경, 삭제)
        {
            id: 42,
            group: 2,
            key: "rename",
            label: "캠페인 그룹 이름 변경",
            action: ()=>{
                console.log("캠페인 그룹 이름 변경:", node);
                setIsRenameDialogOpen(true);
            }
        },
        {
            id: 43,
            group: 2,
            key: "delete",
            label: "캠페인 그룹 삭제",
            action: ()=>{
                console.log(`캠페인 그룹 삭제: ${node.name}`);
                setIsDeleteDialogOpen(true);
            }
        },
        // 세 번째 그룹 (캠페인 추가, 재발신)
        {
            id: 44,
            group: 3,
            key: "add-campaign",
            label: "캠페인 그룹에 캠페인 추가",
            action: ()=>{
                console.log(`캠페인 추가/제외: ${node.name}`);
                setIsCampaignAddPopupOpen(true);
            }
        },
        {
            id: 45,
            group: 3,
            key: "resend",
            label: "캠페인 그룹 실시간 재발신",
            action: ()=>{
                console.log(`캠페인 그룹 실시간 재발신: ${node.name}`);
                addTabCurrentOnly({
                    id: 24,
                    title: `재발신: ${node.name}`,
                    campaignId: node.group_id,
                    campaignName: node.name,
                    uniqueKey: `groupBulkUpdate_${node.group_id}_${Date.now()}`,
                    params: {
                        groupId: node.group_id,
                        groupName: node.name
                    }
                });
            }
        }
    ];
    // 허용된 메뉴 ID에 따라 메뉴 아이템 필터링
    const visibleMenuItems = availableMenuIds?.length > 0 ? menuItems.filter((item)=>availableMenuIds.includes(item.id)) : [];
    // 표시할 메뉴 아이템이 없으면 null 반환
    if (visibleMenuItems.length === 0) {
        return null;
    }
    // 메뉴 렌더링 함수 (구분선 처리 포함)
    const renderMenuItems = ()=>{
        const elements = [];
        let currentGroup = -1;
        visibleMenuItems.forEach((item)=>{
            // 그룹이 변경되면 구분선 추가 (첫 그룹 제외)
            if (currentGroup !== -1 && item.group !== currentGroup) {
                elements.push(/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$contexify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Separator"], {}, `separator-${item.group}`, false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignGroupAtCampaignGroup.tsx",
                    lineNumber: 279,
                    columnNumber: 23
                }, this));
            }
            // 메뉴 아이템 추가
            elements.push(/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                style: itemStyle,
                className: "contexify-custom-item",
                onClick: item.action,
                children: item.label
            }, item.key, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignGroupAtCampaignGroup.tsx",
                lineNumber: 284,
                columnNumber: 9
            }, this));
            // 현재 그룹 업데이트
            currentGroup = item.group;
        });
        return elements;
    };
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Fragment"], {
        children: renderMenuItems()
    }, void 0, false);
};
_s(IContextMenuForCampaignGroupAtCampaignGroup, "44fb3EnKtbSUsf+Kb1io/QLwuNo=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$useAvailableMenuStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAvailableMenuStore"]
    ];
});
_c = IContextMenuForCampaignGroupAtCampaignGroup;
const __TURBOPACK__default__export__ = IContextMenuForCampaignGroupAtCampaignGroup;
var _c;
__turbopack_refresh__.register(_c, "IContextMenuForCampaignGroupAtCampaignGroup");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForTenantAtCampaignGroup.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$useAvailableMenuStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/useAvailableMenuStore.ts [app-client] (ecmascript)"); // Adjust path if needed
;
var _s = __turbopack_refresh__.signature();
;
// Menu items configuration with ID
const MENU_ITEMS = [
    {
        id: 37,
        label: "캠페인 그룹 추가",
        action: (nodeName, callback)=>{
            console.log(`캠페인 그룹 추가: ${nodeName}`);
            callback();
        }
    }
];
const IContextMenuForTenantAtCampaignGroup = ({ nodeName, onAddGroup })=>{
    _s();
    // Get the allowed menu IDs from the Zustand store
    const availableMenuIds = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$useAvailableMenuStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAvailableMenuStore"])({
        "IContextMenuForTenantAtCampaignGroup.useAvailableMenuStore[availableMenuIds]": (state)=>state.availableMenuIdsForCampaignGroupTabTenant
    }["IContextMenuForTenantAtCampaignGroup.useAvailableMenuStore[availableMenuIds]"]);
    // Filter menu items based on whether they exist in the allowed menu IDs
    const visibleMenuItems = MENU_ITEMS.filter((item)=>availableMenuIds.includes(item.id));
    // If no menu items are visible, return null
    if (visibleMenuItems.length === 0) {
        return null;
    }
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Fragment"], {
        children: visibleMenuItems.map((item)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "contexify-custom-item",
                onClick: ()=>item.action(nodeName, onAddGroup),
                children: item.label
            }, item.id, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForTenantAtCampaignGroup.tsx",
                lineNumber: 43,
                columnNumber: 9
            }, this))
    }, void 0, false);
};
_s(IContextMenuForTenantAtCampaignGroup, "44fb3EnKtbSUsf+Kb1io/QLwuNo=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$useAvailableMenuStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAvailableMenuStore"]
    ];
});
_c = IContextMenuForTenantAtCampaignGroup;
const __TURBOPACK__default__export__ = IContextMenuForTenantAtCampaignGroup;
var _c;
__turbopack_refresh__.register(_c, "IContextMenuForTenantAtCampaignGroup");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/components/treeMenus/TreeNodeForSideBarCampaignGroupTab.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "TreeNodeForSideBarCampaignGroupTab": (()=>TreeNodeForSideBarCampaignGroupTab)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$jsx$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/styled-jsx/style.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/image.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$contexify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/react-contexify/dist/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$dialog$2f$AddCampaignGroupDialog$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/components/treeMenus/dialog/AddCampaignGroupDialog.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$tabStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/tabStore.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$campainManagerStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/campainManagerStore.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$popups$2f$CampaignAddPopup$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/components/popups/CampaignAddPopup.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2d$dom$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react-dom/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$dialog$2f$IDialogForUpdateCampaignGroupName$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/components/treeMenus/dialog/IDialogForUpdateCampaignGroupName.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/react-toastify/dist/index.mjs [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForDeleteCampaignGroup$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/hooks/useApiForDeleteCampaignGroup.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$ContextMenus$2f$IContextMenuForCampaignForCampaignGroup$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignForCampaignGroup.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$ContextMenus$2f$IContextMenuForCampaignGroupAtCampaignGroup$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForCampaignGroupAtCampaignGroup.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$ContextMenus$2f$IContextMenuForTenantAtCampaignGroup$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/components/treeMenus/ContextMenus/IContextMenuForTenantAtCampaignGroup.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCampaignGroupTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/storeForSideMenuCampaignGroupTab.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$widgets$2f$sidebar$2f$dialogs$2f$IDialogButtonForDeleteCampaignGroup$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/widgets/sidebar/dialogs/IDialogButtonForDeleteCampaignGroup.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$building$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Building$3e$__ = __turbopack_import__("[project]/node_modules/lucide-react/dist/esm/icons/building.js [app-client] (ecmascript) <export default as Building>");
;
var _s = __turbopack_refresh__.signature();
"use client";
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
const getStatusIcon = (status)=>{
    switch(status){
        case 1:
            return '/sidebar-menu/tree_play.svg';
        case 2:
            return '/sidebar-menu/tree_pause.svg';
        case 3:
            return '/sidebar-menu/tree_stop.svg';
        default:
            return null;
    }
};
const getStatusFromFlag = (flag)=>{
    switch(flag){
        case 1:
            return 'started';
        case 2:
            return 'pending';
        case 3:
            return 'stopped';
        default:
            return 'stopped';
    }
};
function TreeNodeForSideBarCampaignGroupTab({ node, level, expandedNodes, selectedNodeId, onNodeToggle, onNodeSelect }) {
    _s();
    const [isAddGroupDialogOpen, setIsAddGroupDialogOpen] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const [isCampaignAddPopupOpen, setIsCampaignAddPopupOpen] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const [isDeleteDialogOpen, setIsDeleteDialogOpen] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const [isRenameDialogOpen, setIsRenameDialogOpen] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    const recentlyClosedDialogRef = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(false);
    const { refetchTreeDataForCampaignGroupTab } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCampaignGroupTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useSideMenuCampaignGroupTabStore"])();
    const { setCampaignGroupManagerInit } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$campainManagerStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCampainManagerStore"])();
    const [isBrowser, setIsBrowser] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])(false);
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "TreeNodeForSideBarCampaignGroupTab.useEffect": ()=>{
            setIsBrowser(true);
        }
    }["TreeNodeForSideBarCampaignGroupTab.useEffect"], []);
    const { mutate: deleteCampaignGroup, isPending: isDeleting } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForDeleteCampaignGroup$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForDeleteCampaignGroup"])({
        onSuccess: {
            "TreeNodeForSideBarCampaignGroupTab.useApiForDeleteCampaignGroup": ()=>{
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].success("캠페인 그룹이 삭제되었습니다.");
                setIsDeleteDialogOpen(false);
                refetchTreeDataForCampaignGroupTab();
                setCampaignGroupManagerInit(true);
            }
        }["TreeNodeForSideBarCampaignGroupTab.useApiForDeleteCampaignGroup"],
        onError: {
            "TreeNodeForSideBarCampaignGroupTab.useApiForDeleteCampaignGroup": (error)=>{
                alert(`캠페인 그룹 삭제 실패: ${error.message}`);
            }
        }["TreeNodeForSideBarCampaignGroupTab.useApiForDeleteCampaignGroup"]
    });
    const tenantMenuId = `tenant-menu-${node.id}`;
    const groupMenuId = `group-menu-${node.id}`;
    const { show: showTenantMenu } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$contexify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useContextMenu"])({
        id: tenantMenuId
    });
    const { show: showGroupMenu } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$contexify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useContextMenu"])({
        id: groupMenuId
    });
    const hasChildren = node.children && node.children.length > 0;
    const isExpanded = expandedNodes.has(node.id);
    const isSelected = selectedNodeId === node.id;
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "TreeNodeForSideBarCampaignGroupTab.useEffect": ()=>{
            if (node.type === "group" && hasChildren) {
                console.log(`그룹 노드 ${node.name}에 캠페인 ${node.children?.length}개 있음, 확장 상태: ${isExpanded}`);
            }
        }
    }["TreeNodeForSideBarCampaignGroupTab.useEffect"], [
        node,
        hasChildren,
        isExpanded
    ]);
    const handleClick = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "TreeNodeForSideBarCampaignGroupTab.useCallback[handleClick]": ()=>{
            onNodeSelect(node.id);
            if (hasChildren) {
                console.log(`노드 클릭 (타입: ${node.type}, ID: ${node.id}), 자식 수: ${node.children?.length}`);
                onNodeToggle(node.id);
            }
        }
    }["TreeNodeForSideBarCampaignGroupTab.useCallback[handleClick]"], [
        node.id,
        node.type,
        hasChildren,
        node.children?.length,
        onNodeSelect,
        onNodeToggle
    ]);
    const handleContextMenuEvent = (e)=>{
        e.preventDefault();
        onNodeSelect(node.id);
        if (node.type === "tenant") {
            showTenantMenu({
                event: e
            });
        } else if (node.type === "group") {
            showGroupMenu({
                event: e
            });
        }
    };
    const handleCloseAddGroupDialog = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "TreeNodeForSideBarCampaignGroupTab.useCallback[handleCloseAddGroupDialog]": ()=>{
            setIsAddGroupDialogOpen(false);
            recentlyClosedDialogRef.current = true;
            setTimeout({
                "TreeNodeForSideBarCampaignGroupTab.useCallback[handleCloseAddGroupDialog]": ()=>{
                    recentlyClosedDialogRef.current = false;
                    setCampaignGroupManagerInit(true);
                }
            }["TreeNodeForSideBarCampaignGroupTab.useCallback[handleCloseAddGroupDialog]"], 300);
        }
    }["TreeNodeForSideBarCampaignGroupTab.useCallback[handleCloseAddGroupDialog]"], []);
    // 캠페인 이름 수정 후 리패치 처리
    const handleCloseRenameDialog = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "TreeNodeForSideBarCampaignGroupTab.useCallback[handleCloseRenameDialog]": async ()=>{
            setIsRenameDialogOpen(false);
            recentlyClosedDialogRef.current = true;
            setTimeout({
                "TreeNodeForSideBarCampaignGroupTab.useCallback[handleCloseRenameDialog]": ()=>{
                    recentlyClosedDialogRef.current = false;
                }
            }["TreeNodeForSideBarCampaignGroupTab.useCallback[handleCloseRenameDialog]"], 300);
            setCampaignGroupManagerInit(true);
            await refetchTreeDataForCampaignGroupTab();
        }
    }["TreeNodeForSideBarCampaignGroupTab.useCallback[handleCloseRenameDialog]"], []);
    const handleRenameSuccess = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "TreeNodeForSideBarCampaignGroupTab.useCallback[handleRenameSuccess]": ()=>{
        // 필요한 경우 리렌더링이나 데이터 갱신 로직 추가
        }
    }["TreeNodeForSideBarCampaignGroupTab.useCallback[handleRenameSuccess]"], []);
    const handleCloseDeleteDialog = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "TreeNodeForSideBarCampaignGroupTab.useCallback[handleCloseDeleteDialog]": ()=>{
            setIsDeleteDialogOpen(false);
            recentlyClosedDialogRef.current = true;
            setTimeout({
                "TreeNodeForSideBarCampaignGroupTab.useCallback[handleCloseDeleteDialog]": ()=>{
                    recentlyClosedDialogRef.current = false;
                }
            }["TreeNodeForSideBarCampaignGroupTab.useCallback[handleCloseDeleteDialog]"], 300);
        }
    }["TreeNodeForSideBarCampaignGroupTab.useCallback[handleCloseDeleteDialog]"], []);
    const confirmDelete = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "TreeNodeForSideBarCampaignGroupTab.useCallback[confirmDelete]": ()=>{
            if (node && node.group_id) {
                deleteCampaignGroup(node.group_id);
            }
        }
    }["TreeNodeForSideBarCampaignGroupTab.useCallback[confirmDelete]"], [
        node,
        deleteCampaignGroup
    ]);
    const handleAddGroup = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "TreeNodeForSideBarCampaignGroupTab.useCallback[handleAddGroup]": (groupName, groupCode)=>{
            console.log("새 그룹 추가:", {
                tenantId: node.tenant_id,
                tenantName: node.name,
                groupName,
                groupCode
            });
        }
    }["TreeNodeForSideBarCampaignGroupTab.useCallback[handleAddGroup]"], [
        node.tenant_id,
        node.name
    ]);
    const getNodeStyle = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "TreeNodeForSideBarCampaignGroupTab.useCallback[getNodeStyle]": ()=>{
            let baseStyle = `flex items-center hover:bg-[#FFFAEE] px-2 py-0.5 cursor-pointer transition-colors duration-150`;
            if (isSelected) {
                baseStyle += " bg-[#FFFAEE] text-555";
            }
            if (node.type === "campaign") {
                baseStyle += isSelected ? "" : " text-green-600";
            }
            return baseStyle;
        }
    }["TreeNodeForSideBarCampaignGroupTab.useCallback[getNodeStyle]"], [
        isSelected,
        node.type
    ]);
    const renderIcon = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "TreeNodeForSideBarCampaignGroupTab.useCallback[renderIcon]": ()=>{
            switch(node.type?.toLowerCase()){
                case "root":
                    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                        src: "/tree-menu/organization.png",
                        alt: "조직",
                        width: 14,
                        height: 12
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForSideBarCampaignGroupTab.tsx",
                        lineNumber: 182,
                        columnNumber: 16
                    }, this);
                case "tenant":
                    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                        src: "/tree-menu/folder.png",
                        alt: "폴더",
                        width: 14,
                        height: 12
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForSideBarCampaignGroupTab.tsx",
                        lineNumber: 184,
                        columnNumber: 16
                    }, this);
                case "group":
                    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                        src: "/tree-menu/folder2.png",
                        alt: "폴더2",
                        width: 15,
                        height: 12
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForSideBarCampaignGroupTab.tsx",
                        lineNumber: 186,
                        columnNumber: 16
                    }, this);
                case "campaign":
                    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {}, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForSideBarCampaignGroupTab.tsx",
                        lineNumber: 188,
                        columnNumber: 16
                    }, this);
                default:
                    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$building$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Building$3e$__["Building"], {
                        className: "h-4 w-4 text-gray-500"
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForSideBarCampaignGroupTab.tsx",
                        lineNumber: 190,
                        columnNumber: 16
                    }, this);
            }
        }
    }["TreeNodeForSideBarCampaignGroupTab.useCallback[renderIcon]"], [
        node.type
    ]);
    const renderAllDialogs = ()=>{
        if (!isBrowser) return null;
        return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Fragment"], {
            children: [
                isAddGroupDialogOpen && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2d$dom$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createPortal"])(/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$dialog$2f$AddCampaignGroupDialog$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                    isOpen: isAddGroupDialogOpen,
                    onClose: handleCloseAddGroupDialog,
                    tenantId: node.tenant_id ? node.tenant_id : 0,
                    tenantName: node.name,
                    onAddGroup: handleAddGroup
                }, void 0, false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForSideBarCampaignGroupTab.tsx",
                    lineNumber: 200,
                    columnNumber: 11
                }, this), document.body),
                isCampaignAddPopupOpen && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2d$dom$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createPortal"])(/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$popups$2f$CampaignAddPopup$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                    isOpen: isCampaignAddPopupOpen,
                    groupId: node.group_id || 0,
                    groupName: node.name || '',
                    onClose: ()=>setIsCampaignAddPopupOpen(false)
                }, void 0, false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForSideBarCampaignGroupTab.tsx",
                    lineNumber: 211,
                    columnNumber: 11
                }, this), document.body),
                isDeleteDialogOpen && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2d$dom$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createPortal"])(/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$widgets$2f$sidebar$2f$dialogs$2f$IDialogButtonForDeleteCampaignGroup$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                    isOpen: isDeleteDialogOpen,
                    groupName: node.name,
                    onCancel: handleCloseDeleteDialog,
                    onDelete: confirmDelete,
                    isDeleting: isDeleting
                }, void 0, false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForSideBarCampaignGroupTab.tsx",
                    lineNumber: 221,
                    columnNumber: 11
                }, this), document.body),
                isRenameDialogOpen && node.group_id !== undefined && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2d$dom$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createPortal"])(/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$dialog$2f$IDialogForUpdateCampaignGroupName$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                    isOpen: isRenameDialogOpen,
                    onClose: handleCloseRenameDialog,
                    groupId: node.group_id,
                    tenantId: node?.tenant_id || 0,
                    currentGroupName: node?.name || '',
                    onSuccess: handleRenameSuccess
                }, void 0, false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForSideBarCampaignGroupTab.tsx",
                    lineNumber: 232,
                    columnNumber: 11
                }, this), document.body)
            ]
        }, void 0, true);
    };
    const renderNodeUI = ()=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
            className: getNodeStyle(),
            onClick: handleClick,
            onContextMenu: node.type === "campaign" ? undefined : handleContextMenuEvent,
            style: {
                paddingLeft: `${level * 16 + 8}px`
            },
            children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "flex items-center w-full gap-2",
                children: [
                    hasChildren ? isExpanded ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                        src: "/tree-menu/minus_for_tree.png",
                        alt: "접기",
                        width: 12,
                        height: 12
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForSideBarCampaignGroupTab.tsx",
                        lineNumber: 256,
                        columnNumber: 13
                    }, this) : /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                        src: "/tree-menu/plus_icon_for_tree.png",
                        alt: "펼치기",
                        width: 12,
                        height: 12
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForSideBarCampaignGroupTab.tsx",
                        lineNumber: 258,
                        columnNumber: 13
                    }, this) : /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                        className: "w-3"
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForSideBarCampaignGroupTab.tsx",
                        lineNumber: 261,
                        columnNumber: 11
                    }, this),
                    renderIcon(),
                    /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("span", {
                        className: `flex text-sm ${isSelected ? "font-medium text-555" : "text-555"}`,
                        children: [
                            getStatusIcon(node.start_flag) && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$image$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                                src: getStatusIcon(node.start_flag) || '',
                                alt: "상태",
                                width: 12,
                                height: 12,
                                className: "mr-1"
                            }, void 0, false, {
                                fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForSideBarCampaignGroupTab.tsx",
                                lineNumber: 265,
                                columnNumber: 46
                            }, this),
                            node.name
                        ]
                    }, void 0, true, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForSideBarCampaignGroupTab.tsx",
                        lineNumber: 264,
                        columnNumber: 9
                    }, this)
                ]
            }, void 0, true, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForSideBarCampaignGroupTab.tsx",
                lineNumber: 253,
                columnNumber: 7
            }, this)
        }, void 0, false, {
            fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForSideBarCampaignGroupTab.tsx",
            lineNumber: 247,
            columnNumber: 5
        }, this);
    const handleEditCampaign = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "TreeNodeForSideBarCampaignGroupTab.useCallback[handleEditCampaign]": ()=>{
            const { simulateHeaderMenuClick, setCampaignIdForUpdateFromSideMenu } = __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$tabStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTabStore"].getState();
            simulateHeaderMenuClick(2);
            setCampaignIdForUpdateFromSideMenu(node.campaign_id?.toString() || "");
        }
    }["TreeNodeForSideBarCampaignGroupTab.useCallback[handleEditCampaign]"], [
        node.campaign_id
    ]);
    const handleMonitorCampaign = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "TreeNodeForSideBarCampaignGroupTab.useCallback[handleMonitorCampaign]": ()=>{
            const { addMultiTab } = __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$tabStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useTabStore"].getState();
            const uniqueKey = `monitor-${Date.now()}`;
            addMultiTab({
                id: 22,
                uniqueKey: uniqueKey,
                title: `상담사 상태 모니터 - ${node.name}`,
                icon: '',
                href: '',
                content: null,
                campaignId: node.campaign_id?.toString()
            });
        }
    }["TreeNodeForSideBarCampaignGroupTab.useCallback[handleMonitorCampaign]"], [
        node.name,
        node.campaign_id
    ]);
    const handleCopyCampaign = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCallback"])({
        "TreeNodeForSideBarCampaignGroupTab.useCallback[handleCopyCampaign]": ()=>{
            console.log(`캠페인 복사: ${node.name} (ID: ${node.campaign_id})`);
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$toastify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toast"].info("캠페인 복사 기능이 준비 중입니다.");
        }
    }["TreeNodeForSideBarCampaignGroupTab.useCallback[handleCopyCampaign]"], [
        node.name,
        node.campaign_id
    ]);
    const renderNodeWithProperContextMenu = ()=>{
        if (node.type === "campaign") {
            const campaignItem = {
                id: node.campaign_id,
                label: node.name,
                type: node.type,
                status: getStatusFromFlag(node.start_flag)
            };
            return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$ContextMenus$2f$IContextMenuForCampaignForCampaignGroup$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["IContextMenuForCampaignForCampaignGroup"], {
                item: campaignItem,
                onEdit: handleEditCampaign,
                onMonitor: handleMonitorCampaign,
                onHandleCampaignCopy: handleCopyCampaign,
                // tofix 0409 tenantId 전달 해야함 캠페인의 tenantId
                tenantIdForCampaignTab: node.tenant_id,
                children: renderNodeUI()
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForSideBarCampaignGroupTab.tsx",
                lineNumber: 308,
                columnNumber: 9
            }, this);
        }
        return renderNodeUI();
    };
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
        "data-node-type": node.type,
        "data-node-id": node.id,
        className: "jsx-ade299c9f7fc942" + " " + "select-none",
        children: [
            renderNodeWithProperContextMenu(),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$contexify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Menu"], {
                id: tenantMenuId,
                className: "compact-menu",
                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$ContextMenus$2f$IContextMenuForTenantAtCampaignGroup$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                    nodeName: node.name,
                    onAddGroup: ()=>setIsAddGroupDialogOpen(true)
                }, void 0, false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForSideBarCampaignGroupTab.tsx",
                    lineNumber: 330,
                    columnNumber: 9
                }, this)
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForSideBarCampaignGroupTab.tsx",
                lineNumber: 329,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$contexify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Menu"], {
                id: groupMenuId,
                className: "compact-menu",
                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$ContextMenus$2f$IContextMenuForCampaignGroupAtCampaignGroup$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                    node: node,
                    setIsCampaignAddPopupOpen: setIsCampaignAddPopupOpen,
                    setIsDeleteDialogOpen: setIsDeleteDialogOpen,
                    setIsRenameDialogOpen: setIsRenameDialogOpen
                }, void 0, false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForSideBarCampaignGroupTab.tsx",
                    lineNumber: 338,
                    columnNumber: 9
                }, this)
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForSideBarCampaignGroupTab.tsx",
                lineNumber: 337,
                columnNumber: 7
            }, this),
            hasChildren && isExpanded && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "jsx-ade299c9f7fc942" + " " + "children-container",
                children: node.children?.map((child)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(TreeNodeForSideBarCampaignGroupTab, {
                        node: child,
                        level: level + 1,
                        expandedNodes: expandedNodes,
                        selectedNodeId: selectedNodeId,
                        onNodeToggle: onNodeToggle,
                        onNodeSelect: onNodeSelect
                    }, child.id, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForSideBarCampaignGroupTab.tsx",
                        lineNumber: 349,
                        columnNumber: 13
                    }, this))
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForSideBarCampaignGroupTab.tsx",
                lineNumber: 347,
                columnNumber: 9
            }, this),
            renderAllDialogs(),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$styled$2d$jsx$2f$style$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {
                id: "ade299c9f7fc942",
                children: ".compact-menu.jsx-ade299c9f7fc942{border-radius:4px;padding:4px;font-size:20px;box-shadow:0 2px 8px #0000001a}.compact-menu.jsx-ade299c9f7fc942 .react-contexify__item.jsx-ade299c9f7fc942{min-height:auto;padding:4px 8px;transition:background-color .2s}.compact-menu.jsx-ade299c9f7fc942 .react-contexify__item.jsx-ade299c9f7fc942:hover{background-color:#f3f3f3}"
            }, void 0, false, void 0, this)
        ]
    }, void 0, true, {
        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeNodeForSideBarCampaignGroupTab.tsx",
        lineNumber: 325,
        columnNumber: 5
    }, this);
}
_s(TreeNodeForSideBarCampaignGroupTab, "YmN/7WcTAR6OGSNebMKuifhs/uk=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCampaignGroupTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useSideMenuCampaignGroupTabStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$campainManagerStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useCampainManagerStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForDeleteCampaignGroup$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForDeleteCampaignGroup"],
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$contexify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useContextMenu"],
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$react$2d$contexify$2f$dist$2f$index$2e$mjs__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useContextMenu"]
    ];
});
_c = TreeNodeForSideBarCampaignGroupTab;
var _c;
__turbopack_refresh__.register(_c, "TreeNodeForSideBarCampaignGroupTab");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/components/treeMenus/searchbar/SearchBarForSideMenuForCampaignGroupTab.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "SearchBarForSideMenuForCampaignGroupTab": (()=>SearchBarForSideMenuForCampaignGroupTab),
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCampaignGroupTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/storeForSideMenuCampaignGroupTab.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$search$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Search$3e$__ = __turbopack_import__("[project]/node_modules/lucide-react/dist/esm/icons/search.js [app-client] (ecmascript) <export default as Search>");
;
var _s = __turbopack_refresh__.signature();
;
;
;
const SearchBarForSideMenuForCampaignGroupTab = ({ placeholder = "캠페인 또는 그룹 검색..." })=>{
    _s();
    const [searchTerm, setSearchTerm] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])("");
    const [searchFeedback, setSearchFeedback] = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useState"])({
        message: "",
        type: "idle"
    });
    // Get searchNode function directly from the store
    const searchNode = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCampaignGroupTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useSideMenuCampaignGroupTabStore"])({
        "SearchBarForSideMenuForCampaignGroupTab.useSideMenuCampaignGroupTabStore[searchNode]": (state)=>state.searchNode
    }["SearchBarForSideMenuForCampaignGroupTab.useSideMenuCampaignGroupTabStore[searchNode]"]);
    // 피드백 메시지가 표시된 후 일정 시간 후에 자동으로 사라지게 처리
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "SearchBarForSideMenuForCampaignGroupTab.useEffect": ()=>{
            if (searchFeedback.type !== "idle") {
                const timer = setTimeout({
                    "SearchBarForSideMenuForCampaignGroupTab.useEffect.timer": ()=>{
                        setSearchFeedback({
                            message: "",
                            type: "idle"
                        });
                    }
                }["SearchBarForSideMenuForCampaignGroupTab.useEffect.timer"], 3000);
                return ({
                    "SearchBarForSideMenuForCampaignGroupTab.useEffect": ()=>clearTimeout(timer)
                })["SearchBarForSideMenuForCampaignGroupTab.useEffect"];
            }
        }
    }["SearchBarForSideMenuForCampaignGroupTab.useEffect"], [
        searchFeedback
    ]);
    const handleSearch = ()=>{
        if (searchTerm.trim()) {
            // Use the store's searchNode function
            const foundNodeId = searchNode(searchTerm);
            if (foundNodeId) {
                setSearchFeedback({
                    message: "항목을 찾았습니다.",
                    type: "success"
                });
            } else {
                setSearchFeedback({
                    message: "검색 결과가 없습니다.",
                    type: "error"
                });
            }
        }
    };
    const handleKeyDown = (e)=>{
        if (e.key === "Enter") {
            handleSearch();
        }
    };
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
        className: "w-full px-2 py-1",
        children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
            className: "relative",
            children: [
                /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                    className: "flex items-center border rounded w-full relative",
                    children: [
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("input", {
                            type: "text",
                            value: searchTerm,
                            onChange: (e)=>setSearchTerm(e.target.value),
                            onKeyDown: handleKeyDown,
                            className: "border-none rounded outline-none pl-2 pr-7 py-1 text-sm w-full",
                            placeholder: placeholder
                        }, void 0, false, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/searchbar/SearchBarForSideMenuForCampaignGroupTab.tsx",
                            lineNumber: 65,
                            columnNumber: 11
                        }, this),
                        /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("button", {
                            onClick: handleSearch,
                            className: "absolute right-2 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600",
                            "aria-label": "검색",
                            children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$lucide$2d$react$2f$dist$2f$esm$2f$icons$2f$search$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$export__default__as__Search$3e$__["Search"], {
                                size: 14
                            }, void 0, false, {
                                fileName: "[project]/src/features/campaignManager/components/treeMenus/searchbar/SearchBarForSideMenuForCampaignGroupTab.tsx",
                                lineNumber: 78,
                                columnNumber: 13
                            }, this)
                        }, void 0, false, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/searchbar/SearchBarForSideMenuForCampaignGroupTab.tsx",
                            lineNumber: 73,
                            columnNumber: 11
                        }, this)
                    ]
                }, void 0, true, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/searchbar/SearchBarForSideMenuForCampaignGroupTab.tsx",
                    lineNumber: 64,
                    columnNumber: 9
                }, this),
                searchFeedback.message && /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                    className: `text-xs mt-1 px-2 py-1 rounded ${searchFeedback.type === "success" ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800"}`,
                    children: searchFeedback.message
                }, void 0, false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/searchbar/SearchBarForSideMenuForCampaignGroupTab.tsx",
                    lineNumber: 84,
                    columnNumber: 11
                }, this)
            ]
        }, void 0, true, {
            fileName: "[project]/src/features/campaignManager/components/treeMenus/searchbar/SearchBarForSideMenuForCampaignGroupTab.tsx",
            lineNumber: 62,
            columnNumber: 7
        }, this)
    }, void 0, false, {
        fileName: "[project]/src/features/campaignManager/components/treeMenus/searchbar/SearchBarForSideMenuForCampaignGroupTab.tsx",
        lineNumber: 61,
        columnNumber: 5
    }, this);
};
_s(SearchBarForSideMenuForCampaignGroupTab, "eAsjyNYmmjGz0ugThyy/tR8J6aQ=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCampaignGroupTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useSideMenuCampaignGroupTabStore"]
    ];
});
_c = SearchBarForSideMenuForCampaignGroupTab;
const __TURBOPACK__default__export__ = SearchBarForSideMenuForCampaignGroupTab;
var _c;
__turbopack_refresh__.register(_c, "SearchBarForSideMenuForCampaignGroupTab");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/components/treeMenus/TreeMenusForCampaignGroupTab.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
__turbopack_esm__({
    "TreeMenusForCampaignGroupTab": (()=>TreeMenusForCampaignGroupTab)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$TreeNodeForSideBarCampaignGroupTab$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/components/treeMenus/TreeNodeForSideBarCampaignGroupTab.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$authStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/authStore.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCampaignGroupTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/store/storeForSideMenuCampaignGroupTab.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$searchbar$2f$SearchBarForSideMenuForCampaignGroupTab$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/components/treeMenus/searchbar/SearchBarForSideMenuForCampaignGroupTab.tsx [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForGetTreeDataForCampaignGroupTab$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/campaignManager/hooks/useApiForGetTreeDataForCampaignGroupTab.tsx [app-client] (ecmascript)");
;
var _s = __turbopack_refresh__.signature();
"use client";
;
;
;
;
;
;
function TreeMenusForCampaignGroupTab() {
    _s();
    const { tenant_id } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$authStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAuthStore"])();
    console.log("tenant_id :!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! ", tenant_id);
    // TanStack Query 커스텀 훅 사용 (tenant_id 자동 적용)
    const { isLoading, error, data } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForGetTreeDataForCampaignGroupTab$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForGetTreeDataForCampaignGroupTab"])(tenant_id);
    // Zustand 스토어에서 UI 상태 가져오기
    const { treeData, expandedNodes, selectedNodeId, toggleNode, selectNode, expandTenantAndGroup } = (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCampaignGroupTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useSideMenuCampaignGroupTabStore"])();
    console.log("treeData 메뉴 캠페인 탭: ", treeData);
    // 데이터가 로드된 후 테넌트와 그룹 레벨 확장
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useEffect"])({
        "TreeMenusForCampaignGroupTab.useEffect": ()=>{
            if (treeData.length > 0) {
                // 테넌트와 그룹 레벨까지만 확장
                __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCampaignGroupTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useSideMenuCampaignGroupTabStore"].getState().expandTenantAndGroup();
            }
        }
    }["TreeMenusForCampaignGroupTab.useEffect"], [
        treeData
    ]);
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
        className: "flex flex-col h-full",
        children: [
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "flex items-center border-b",
                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$searchbar$2f$SearchBarForSideMenuForCampaignGroupTab$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"], {}, void 0, false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeMenusForCampaignGroupTab.tsx",
                    lineNumber: 42,
                    columnNumber: 9
                }, this)
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeMenusForCampaignGroupTab.tsx",
                lineNumber: 41,
                columnNumber: 7
            }, this),
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                className: "flex flex-grow overflow-y-auto min-h-0 tree-node",
                children: /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                    className: "w-full",
                    children: isLoading ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                        className: "p-4 text-center text-gray-500",
                        children: "데이터를 불러오는 중..."
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeMenusForCampaignGroupTab.tsx",
                        lineNumber: 47,
                        columnNumber: 13
                    }, this) : error ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                        className: "p-4 text-center text-red-500",
                        children: [
                            "오류 발생: ",
                            error.message
                        ]
                    }, void 0, true, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeMenusForCampaignGroupTab.tsx",
                        lineNumber: 49,
                        columnNumber: 13
                    }, this) : treeData.length === 0 ? /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])("div", {
                        className: "p-4 text-center text-gray-500",
                        children: "표시할 데이터가 없습니다"
                    }, void 0, false, {
                        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeMenusForCampaignGroupTab.tsx",
                        lineNumber: 51,
                        columnNumber: 13
                    }, this) : treeData.map((node)=>/*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$jsx$2d$dev$2d$runtime$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["jsxDEV"])(__TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$components$2f$treeMenus$2f$TreeNodeForSideBarCampaignGroupTab$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TreeNodeForSideBarCampaignGroupTab"], {
                            node: node,
                            level: 0,
                            expandedNodes: expandedNodes,
                            selectedNodeId: selectedNodeId,
                            onNodeToggle: toggleNode,
                            onNodeSelect: selectNode
                        }, node.id, false, {
                            fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeMenusForCampaignGroupTab.tsx",
                            lineNumber: 54,
                            columnNumber: 15
                        }, this))
                }, void 0, false, {
                    fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeMenusForCampaignGroupTab.tsx",
                    lineNumber: 45,
                    columnNumber: 9
                }, this)
            }, void 0, false, {
                fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeMenusForCampaignGroupTab.tsx",
                lineNumber: 44,
                columnNumber: 7
            }, this)
        ]
    }, void 0, true, {
        fileName: "[project]/src/features/campaignManager/components/treeMenus/TreeMenusForCampaignGroupTab.tsx",
        lineNumber: 40,
        columnNumber: 5
    }, this);
}
_s(TreeMenusForCampaignGroupTab, "XoSpOmjdr/886oUQtkbwzAuokbE=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$authStore$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useAuthStore"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$campaignManager$2f$hooks$2f$useApiForGetTreeDataForCampaignGroupTab$2e$tsx__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useApiForGetTreeDataForCampaignGroupTab"],
        __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$store$2f$storeForSideMenuCampaignGroupTab$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useSideMenuCampaignGroupTabStore"]
    ];
});
_c = TreeMenusForCampaignGroupTab;
var _c;
__turbopack_refresh__.register(_c, "TreeMenusForCampaignGroupTab");
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/auth/api/mainTenants.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/features/auth/api/fetchCampaigns.ts
__turbopack_esm__({
    "fetchTenants": (()=>fetchTenants)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/lib/axios.ts [app-client] (ecmascript)");
;
const fetchTenants = async (credentials)=>{
    const tenantRequestData = {
        filter: {
            tenant_id: {
                start: credentials.tenant_id > 0 ? credentials.tenant_id : 0,
                end: credentials.tenant_id > 0 ? credentials.tenant_id : 9999999
            }
        },
        sort: {
            tenant_id: 0
        },
        page: {
            index: 1,
            items: 10
        }
    };
    try {
        const { data } = await __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$lib$2f$axios$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["axiosInstance"].post('/collections/tenant', tenantRequestData);
        return data;
    } catch (error) {
        if (error.response?.status === 401) {
            throw new Error('세션이 만료되었습니다. 다시 로그인해주세요.');
        }
        // throw new Error(error.response?.data?.result_code + '||' + error.response?.data?.result_msg || '데이터 가져오기 실패');
        throw error;
    }
};
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/auth/hooks/useApiForTenants.ts [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// src/features/auth/hooks/useApiForLogin.tsx
__turbopack_esm__({
    "useApiForTenants": (()=>useApiForTenants)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$auth$2f$api$2f$mainTenants$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/auth/api/mainTenants.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/useMutation.js [app-client] (ecmascript)");
var _s = __turbopack_refresh__.signature();
;
;
;
function useApiForTenants(options) {
    _s();
    const isFetching = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$react$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useRef"])(false); // 요청 중인지 확인하는 상태
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMutation"])({
        mutationKey: [
            'mainTenants'
        ],
        mutationFn: {
            "useApiForTenants.useMutation": async (variables)=>{
                // if (isFetching.current) {
                //   throw new Error('이미 요청이 진행 중입니다.'); // 요청 중일 때는 에러를 던짐
                // }
                isFetching.current = true; // 요청 시작
                try {
                    const response = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$auth$2f$api$2f$mainTenants$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fetchTenants"])(variables);
                    return response;
                } finally{
                    isFetching.current = false; // 요청 완료 후 상태 초기화
                }
            }
        }["useApiForTenants.useMutation"],
        gcTime: 10 * 60 * 1000,
        onSuccess: {
            "useApiForTenants.useMutation": (data, variables, context)=>{
                options?.onSuccess?.(data, variables, context);
            }
        }["useApiForTenants.useMutation"],
        onError: {
            "useApiForTenants.useMutation": (error, variables, context)=>{
                console.error('API Error:', error);
                if (error.response?.data?.result_code === 5) {
                    console.log('세션 만료, 로그인으로 이동');
                    window.location.href = '/login';
                } else {
                    console.log('다른 에러:', error.response?.data?.result_code);
                }
                options?.onError?.(error, variables, context);
            }
        }["useApiForTenants.useMutation"]
    });
}
_s(useApiForTenants, "PARNS7Qdu/w/pAWGmeN7hfFM4CM=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useMutation$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useMutation"]
    ];
});
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
"[project]/src/features/campaignManager/hooks/useApiForFetchCounselorList.tsx [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, k: __turbopack_refresh__, m: module, z: __turbopack_require_stub__ } = __turbopack_context__;
{
// import { useMutation } from '@tanstack/react-query';
// import { MainCredentials, MainResponse } from '@/features/auth/types/mainIndex';
// import { fetchCounselorList } from '@/features/auth/api/main';
// interface Props {
//   onSuccess?: (data: any) => void;
//   onError?: (error: Error) => void;
// }
// const useApiForFetchCounselorList = (props: Props) => {
//   return useMutation({
//     mutationFn: (credentials: MainCredentials) => fetchCounselorList(credentials),
//     onSuccess: (data) => {
//       props.onSuccess?.(data);
//     },
//     onError: (error: Error) => {
//       props.onError?.(error);
//     },
//   });
// };
// export default useApiForFetchCounselorList;
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$auth$2f$api$2f$main$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/src/features/auth/api/main.ts [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useQuery$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@tanstack/react-query/build/modern/useQuery.js [app-client] (ecmascript)");
var _s = __turbopack_refresh__.signature();
;
;
const useApiForFetchCounselorList = ({ credentials, enabled })=>{
    _s();
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useQuery$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQuery"])({
        queryKey: [
            'counselorList',
            credentials
        ],
        queryFn: {
            "useApiForFetchCounselorList.useQuery": ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$src$2f$features$2f$auth$2f$api$2f$main$2e$ts__$5b$app$2d$client$5d$__$28$ecmascript$29$__["fetchCounselorList"])(credentials)
        }["useApiForFetchCounselorList.useQuery"],
        enabled
    });
};
_s(useApiForFetchCounselorList, "4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=", false, function() {
    return [
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$tanstack$2f$react$2d$query$2f$build$2f$modern$2f$useQuery$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["useQuery"]
    ];
});
const __TURBOPACK__default__export__ = useApiForFetchCounselorList;
if (typeof globalThis.$RefreshHelpers$ === 'object' && globalThis.$RefreshHelpers !== null) {
    __turbopack_refresh__.registerExports(module, globalThis.$RefreshHelpers$);
}
}}),
}]);

//# sourceMappingURL=src_features_850b3f._.js.map